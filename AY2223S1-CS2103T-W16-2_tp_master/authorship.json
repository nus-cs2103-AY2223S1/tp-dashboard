[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W16-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W16-2/tp/actions)","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W16-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S1-CS2103T-W16-2/tp)","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"## FoodRem","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Eugenetanwl3881"},"content":"FoodRem is an application that enables you to efficiently keep track of inventory in your daily restaurants operations. It is a convenient and efficient administrative tool to ensure less food wastage and a constant supply of fresh food to increase revenue and improve the quality of food. With a few quick commands, you can have complete control of your perishable goods.","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"## Acknowledgements","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Eugenetanwl3881"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Eugenetanwl3881":3,"yixiann":4,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"Ferusel"},"content":"### Mai Ting Kai","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Ferusel"},"content":"\u003cimg src\u003d\"images/ferusel.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Ferusel"},"content":"[[github](https://github.com/ferusel)]","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Ferusel"},"content":"[[portfolio](team/ferusel.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Ferusel"},"content":"- Role: Team Lead","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"### Bryan Lim Jing Xiang","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"\u003cimg src\u003d\"images/bryanljx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"[[github](https://github.com/bryanljx)]","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"[[portfolio](team/bryanljx.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"- Role: Tech Lead","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"### Richard Dominick","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"\u003cimg src\u003d\"images/richdom2185.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"[[github](https://github.com/RichDom2185)]","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"[[portfolio](team/richdom2185.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"- Role: Tech Lead","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"Eugenetanwl3881"},"content":"### Tan Wei Lie Eugene","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Eugenetanwl3881"},"content":"\u003cimg src\u003d\"images/eugenetanwl3881.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Eugenetanwl3881"},"content":"[[github](https://github.com/eugenetanwl3881)]","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"Eugenetanwl3881"},"content":"[[portfolio](team/eugenetanwl3881.md)]","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"- Role: Documentation","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"### Tan Yi Xian","lastModifiedDate":"2022-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"\u003cimg src\u003d\"images/yixiann.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"[[github](https://github.com/yixiann)]","lastModifiedDate":"2022-09-27"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"[[portfolio](team/yixiann.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"- Role: Secretary","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Eugenetanwl3881":4,"Ferusel":5,"bryanljx":3,"RichDom2185":5,"yixiann":8,"-":30}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"- Table of Contents","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"- **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"- **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, _if the current file is outdated_.\u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"- **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"RichDom2185"},"content":"- **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"- **`test`**: Runs all tests.\u003c","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"  - `./gradlew test` — Runs all tests","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"  - `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your testes. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your org (that contains the fork) to CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Wait for the next run of CI in your fork (or push a dummy commit to it to trigger CI) to confirm CI is able to upload generated coverage data to CodeCov. If CodeCov is not set up correctly, the CI run will fail with an error message that mentions CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3) in that page reflects the coverage of your project.","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"RichDom2185"},"content":"- Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"RichDom2185"},"content":"- Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"RichDom2185"},"content":"  - SEVERITY is either ERROR or WARN.","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"RichDom2185"},"content":"  - FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"RichDom2185"},"content":"  - LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"RichDom2185"},"content":"- Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"RichDom2185":18,"-":61}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"- Table of Contents","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"- {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"- At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"- At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"RichDom2185"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"RichDom2185"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"RichDom2185"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"RichDom2185"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"RichDom2185"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"RichDom2185"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"RichDom2185"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"RichDom2185"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"RichDom2185"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"RichDom2185"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"RichDom2185"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"RichDom2185"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"RichDom2185"},"content":"- stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"RichDom2185"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"RichDom2185"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"RichDom2185"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"RichDom2185"},"content":"- can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"RichDom2185"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"RichDom2185"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"RichDom2185"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"RichDom2185"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2022-09-30"},{"lineNumber":169,"author":{"gitId":"RichDom2185"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"RichDom2185"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":231,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":232,"author":{"gitId":"RichDom2185"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2022-09-30"},{"lineNumber":233,"author":{"gitId":"RichDom2185"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2022-09-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"RichDom2185"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2022-09-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"RichDom2185"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2022-09-30"},{"lineNumber":238,"author":{"gitId":"RichDom2185"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2022-09-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"RichDom2185"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2022-09-30"},{"lineNumber":251,"author":{"gitId":"RichDom2185"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2022-09-30"},{"lineNumber":252,"author":{"gitId":"RichDom2185"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2022-09-30"},{"lineNumber":253,"author":{"gitId":"RichDom2185"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2022-09-30"},{"lineNumber":254,"author":{"gitId":"RichDom2185"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2022-09-30"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"**Target user profile**:  ","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"bryanljx"},"content":"Purchasing managers who are proficient with typing for small F\u0026B businesses","lastModifiedDate":"2022-10-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"Eugenetanwl3881"},"content":"**Value proposition**:  ","lastModifiedDate":"2022-09-29"},{"lineNumber":267,"author":{"gitId":"yixiann"},"content":"This application will help small businesses to manage perishable goods within a single inventory","lastModifiedDate":"2022-10-05"},{"lineNumber":268,"author":{"gitId":"yixiann"},"content":"(no support for multiple inventories).","lastModifiedDate":"2022-10-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2022-09-29"},{"lineNumber":272,"author":{"gitId":"Eugenetanwl3881"},"content":"Add Inventory Item:","lastModifiedDate":"2022-10-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"Eugenetanwl3881"},"content":"Delete Inventory Item:","lastModifiedDate":"2022-10-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":276,"author":{"gitId":"Eugenetanwl3881"},"content":"Update inventory items:","lastModifiedDate":"2022-10-05"},{"lineNumber":277,"author":{"gitId":"yixiann"},"content":"1. As a purchasing manager, I can rename my inventory items, so that I can update items with an incorrect name.","lastModifiedDate":"2022-10-03"},{"lineNumber":278,"author":{"gitId":"yixiann"},"content":"2. As a purchasing manager, I can set the inventory quantity of my items.","lastModifiedDate":"2022-10-03"},{"lineNumber":279,"author":{"gitId":"Eugenetanwl3881"},"content":"3. As a purchasing manager, I can set the date I bought my inventory, so that I know how long I have been keeping certain items.","lastModifiedDate":"2022-10-05"},{"lineNumber":280,"author":{"gitId":"yixiann"},"content":"4. As a purchasing manager, I can set the date my inventory will expire, so that I know when certain items need to be consumed or used. ","lastModifiedDate":"2022-10-03"},{"lineNumber":281,"author":{"gitId":"Eugenetanwl3881"},"content":"5. As a purchasing manager, I can increase the inventory quantity of my items, so that I can keep my stock updated when I purchase new items.","lastModifiedDate":"2022-10-05"},{"lineNumber":282,"author":{"gitId":"yixiann"},"content":"6. As a purchasing manager, I can decrease the inventory quantity of my items.","lastModifiedDate":"2022-10-03"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"Eugenetanwl3881"},"content":"View Inventory Items:","lastModifiedDate":"2022-10-05"},{"lineNumber":285,"author":{"gitId":"Eugenetanwl3881"},"content":"1. As a purchasing manager, I can view all items in my inventory so that I can have an overview of all items and their details.","lastModifiedDate":"2022-10-05"},{"lineNumber":286,"author":{"gitId":"Eugenetanwl3881"},"content":"2. As a purchasing manager, I can search for items by name, so that I can view a specific item and its associated details","lastModifiedDate":"2022-10-05"},{"lineNumber":287,"author":{"gitId":"Eugenetanwl3881"},"content":"3. As a purchasing manager, I can search for items by tags, so that I can view all items that have the same tag.","lastModifiedDate":"2022-10-05"},{"lineNumber":288,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":289,"author":{"gitId":"Eugenetanwl3881"},"content":"Tag Management System","lastModifiedDate":"2022-10-05"},{"lineNumber":290,"author":{"gitId":"bryanljx"},"content":"1. As a purchasing manager, I can view a list of tags.","lastModifiedDate":"2022-10-09"},{"lineNumber":291,"author":{"gitId":"bryanljx"},"content":"2. As a purchasing manager, I can create tags to classify inventory items.","lastModifiedDate":"2022-10-09"},{"lineNumber":292,"author":{"gitId":"bryanljx"},"content":"3. As a purchasing manager, I can rename a tag.","lastModifiedDate":"2022-10-09"},{"lineNumber":293,"author":{"gitId":"bryanljx"},"content":"4. As a purchasing manager, I can delete a tag.","lastModifiedDate":"2022-10-09"},{"lineNumber":294,"author":{"gitId":"bryanljx"},"content":"5. As a purchasing manager, I can add a tag to an item.","lastModifiedDate":"2022-10-09"},{"lineNumber":295,"author":{"gitId":"bryanljx"},"content":"6. As a purchasing manager, I can remove a tag from an item.","lastModifiedDate":"2022-10-09"},{"lineNumber":296,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":297,"author":{"gitId":"Eugenetanwl3881"},"content":"Miscellaneous","lastModifiedDate":"2022-10-05"},{"lineNumber":298,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":299,"author":{"gitId":"Eugenetanwl3881"},"content":"Sorting","lastModifiedDate":"2022-10-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"Eugenetanwl3881"},"content":"(For all use cases below, the **System** is `FoodRem` and the **Actor** is the `purchasing manager`, unless specified otherwise)","lastModifiedDate":"2022-09-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"Eugenetanwl3881"},"content":"#### UC1: Add Item to Inventory","lastModifiedDate":"2022-09-30"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":307,"author":{"gitId":"Eugenetanwl3881"},"content":"Use Case: UC1 - Add Item to Inventory","lastModifiedDate":"2022-09-30"},{"lineNumber":308,"author":{"gitId":"Eugenetanwl3881"},"content":"MSS:","lastModifiedDate":"2022-09-30"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":310,"author":{"gitId":"Eugenetanwl3881"},"content":"1. User adds an item to the inventory.","lastModifiedDate":"2022-09-30"},{"lineNumber":311,"author":{"gitId":"Eugenetanwl3881"},"content":"2. FoodRem adds the item into the inventory list.","lastModifiedDate":"2022-09-30"},{"lineNumber":312,"author":{"gitId":"Eugenetanwl3881"},"content":"   Use Case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":314,"author":{"gitId":"Eugenetanwl3881"},"content":"Extensions:","lastModifiedDate":"2022-09-30"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":316,"author":{"gitId":"RichDom2185"},"content":"- 1a. If the item name already exists in the inventory, FoodRem will throw an error.","lastModifiedDate":"2022-09-30"},{"lineNumber":317,"author":{"gitId":"RichDom2185"},"content":"  - 1a1. User will re-enter command until the new item is correct.","lastModifiedDate":"2022-09-30"},{"lineNumber":318,"author":{"gitId":"RichDom2185"},"content":"    Use case resumes from Step 2.","lastModifiedDate":"2022-09-30"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":320,"author":{"gitId":"Eugenetanwl3881"},"content":"#### UC2: Update Item in Inventory","lastModifiedDate":"2022-09-30"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":322,"author":{"gitId":"Eugenetanwl3881"},"content":"Use Case: UC2 - Update Item in Inventory","lastModifiedDate":"2022-09-30"},{"lineNumber":323,"author":{"gitId":"Eugenetanwl3881"},"content":"MSS:","lastModifiedDate":"2022-09-30"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":325,"author":{"gitId":"Eugenetanwl3881"},"content":"1. User updates an inventory item\u0027s detail.","lastModifiedDate":"2022-09-30"},{"lineNumber":326,"author":{"gitId":"Eugenetanwl3881"},"content":"2. FoodRem updates the detail of the inventory item.","lastModifiedDate":"2022-09-30"},{"lineNumber":327,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"Eugenetanwl3881"},"content":"Extensions:","lastModifiedDate":"2022-09-30"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":331,"author":{"gitId":"RichDom2185"},"content":"- 1a. If the item does not exist in the inventory, FoodRem will throw an error.","lastModifiedDate":"2022-09-30"},{"lineNumber":332,"author":{"gitId":"RichDom2185"},"content":"  - 1a1. User will re-enter command until the correct item is given (i.e item exists in inventory).","lastModifiedDate":"2022-09-30"},{"lineNumber":333,"author":{"gitId":"Eugenetanwl3881"},"content":"    Use case resumes from Step 2.","lastModifiedDate":"2022-09-30"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"Ferusel"},"content":"#### UC3: Delete Item from Inventory","lastModifiedDate":"2022-09-30"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":337,"author":{"gitId":"Ferusel"},"content":"Use Case: UC2 - Delete Item from Inventory","lastModifiedDate":"2022-09-30"},{"lineNumber":338,"author":{"gitId":"Ferusel"},"content":"MSS:","lastModifiedDate":"2022-09-30"},{"lineNumber":339,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":340,"author":{"gitId":"Ferusel"},"content":"1. User deletes an item from inventory.","lastModifiedDate":"2022-09-30"},{"lineNumber":341,"author":{"gitId":"Ferusel"},"content":"2. FoodRem removes item from inventory.","lastModifiedDate":"2022-09-30"},{"lineNumber":342,"author":{"gitId":"Ferusel"},"content":"   Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":343,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":344,"author":{"gitId":"Ferusel"},"content":"Extensions:","lastModifiedDate":"2022-09-30"},{"lineNumber":345,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":346,"author":{"gitId":"RichDom2185"},"content":"- 1a. Item does not exist in inventory.","lastModifiedDate":"2022-09-30"},{"lineNumber":347,"author":{"gitId":"RichDom2185"},"content":"  - 1a1. FoodRem displays error to user that item does not exist in inventory.","lastModifiedDate":"2022-09-30"},{"lineNumber":348,"author":{"gitId":"Ferusel"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2022-09-30"},{"lineNumber":349,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":350,"author":{"gitId":"Ferusel"},"content":"#### UC4: Create Tag","lastModifiedDate":"2022-09-30"},{"lineNumber":351,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":352,"author":{"gitId":"Ferusel"},"content":"Use Case: UC4 - Create Tag","lastModifiedDate":"2022-09-30"},{"lineNumber":353,"author":{"gitId":"Ferusel"},"content":"MSS:","lastModifiedDate":"2022-09-30"},{"lineNumber":354,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":355,"author":{"gitId":"Ferusel"},"content":"1. User creates a tag.","lastModifiedDate":"2022-09-30"},{"lineNumber":356,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":357,"author":{"gitId":"Ferusel"},"content":"Extensions:","lastModifiedDate":"2022-09-30"},{"lineNumber":358,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":359,"author":{"gitId":"RichDom2185"},"content":"- 1a. Tag already exists.","lastModifiedDate":"2022-09-30"},{"lineNumber":360,"author":{"gitId":"RichDom2185"},"content":"  - 1a1. FoodRem displays error warning to user.","lastModifiedDate":"2022-09-30"},{"lineNumber":361,"author":{"gitId":"Ferusel"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2022-09-30"},{"lineNumber":362,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":363,"author":{"gitId":"bryanljx"},"content":"#### UC5: Find Item","lastModifiedDate":"2022-10-09"},{"lineNumber":364,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":365,"author":{"gitId":"bryanljx"},"content":"Use Case: UC5 - Find Item","lastModifiedDate":"2022-10-09"},{"lineNumber":366,"author":{"gitId":"bryanljx"},"content":"MSS:","lastModifiedDate":"2022-10-09"},{"lineNumber":367,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":368,"author":{"gitId":"bryanljx"},"content":"1. User searches for an Item using keywords.","lastModifiedDate":"2022-10-09"},{"lineNumber":369,"author":{"gitId":"bryanljx"},"content":"2. FoodRem displays all items in inventory which name matches the given keyword.","lastModifiedDate":"2022-10-09"},{"lineNumber":370,"author":{"gitId":"bryanljx"},"content":"   Use case ends.","lastModifiedDate":"2022-10-09"},{"lineNumber":371,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":372,"author":{"gitId":"bryanljx"},"content":"#### UC6: Add Tag to Item","lastModifiedDate":"2022-10-09"},{"lineNumber":373,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":374,"author":{"gitId":"bryanljx"},"content":"Use Case: UC6 - Add Tag to an Item","lastModifiedDate":"2022-10-09"},{"lineNumber":375,"author":{"gitId":"bryanljx"},"content":"MSS:","lastModifiedDate":"2022-10-09"},{"lineNumber":376,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":377,"author":{"gitId":"bryanljx"},"content":"1. User enters the command to find the item of interest.","lastModifiedDate":"2022-10-09"},{"lineNumber":378,"author":{"gitId":"bryanljx"},"content":"2. FoodRem shows a list containing possible matching items.","lastModifiedDate":"2022-10-09"},{"lineNumber":379,"author":{"gitId":"bryanljx"},"content":"3. User enters command to add a specified tag from the desired items.","lastModifiedDate":"2022-10-09"},{"lineNumber":380,"author":{"gitId":"bryanljx"},"content":"4. FoodRem informs user that the tag has been updated successfully.","lastModifiedDate":"2022-10-09"},{"lineNumber":381,"author":{"gitId":"bryanljx"},"content":"   Use case ends.","lastModifiedDate":"2022-10-09"},{"lineNumber":382,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":383,"author":{"gitId":"bryanljx"},"content":"Extensions:","lastModifiedDate":"2022-10-09"},{"lineNumber":384,"author":{"gitId":"bryanljx"},"content":"- 1a. FoodRem detects that there is an issue with the command entered.","lastModifiedDate":"2022-10-09"},{"lineNumber":385,"author":{"gitId":"bryanljx"},"content":"    - 1a1. FoodRem requests for the command to be entered again.","lastModifiedDate":"2022-10-09"},{"lineNumber":386,"author":{"gitId":"bryanljx"},"content":"    - 1a2. User re-enters the command.","lastModifiedDate":"2022-10-09"},{"lineNumber":387,"author":{"gitId":"bryanljx"},"content":"    - Steps 1a1-1a2 are repeated until the command entered is correct. Use case resumes from step 2.","lastModifiedDate":"2022-10-09"},{"lineNumber":388,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":389,"author":{"gitId":"bryanljx"},"content":"- 3a. FoodRem detects that there is an issue with the command entered.","lastModifiedDate":"2022-10-09"},{"lineNumber":390,"author":{"gitId":"bryanljx"},"content":"    - 3a1. FoodRem requests for the command to be entered again.","lastModifiedDate":"2022-10-09"},{"lineNumber":391,"author":{"gitId":"bryanljx"},"content":"    - 3a2. User re-enters the command.","lastModifiedDate":"2022-10-09"},{"lineNumber":392,"author":{"gitId":"bryanljx"},"content":"    - Steps 3a1-3a2 are repeated until the command entered is correct.","lastModifiedDate":"2022-10-09"},{"lineNumber":393,"author":{"gitId":"bryanljx"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2022-10-09"},{"lineNumber":394,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":395,"author":{"gitId":"yixiann"},"content":"#### UC7: Rename a tag","lastModifiedDate":"2022-10-03"},{"lineNumber":396,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":397,"author":{"gitId":"yixiann"},"content":"Use Case: UC7 - Rename a tag","lastModifiedDate":"2022-10-03"},{"lineNumber":398,"author":{"gitId":"yixiann"},"content":"MSS:","lastModifiedDate":"2022-09-30"},{"lineNumber":399,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":400,"author":{"gitId":"yixiann"},"content":"1. User chooses to view all tags.","lastModifiedDate":"2022-10-03"},{"lineNumber":401,"author":{"gitId":"Eugenetanwl3881"},"content":"2. FoodRem shows all tags.","lastModifiedDate":"2022-10-05"},{"lineNumber":402,"author":{"gitId":"yixiann"},"content":"3. User enters the command to rename desired tag.","lastModifiedDate":"2022-10-03"},{"lineNumber":403,"author":{"gitId":"Eugenetanwl3881"},"content":"4. FoodRem informs user that the tag has been updated successfully.","lastModifiedDate":"2022-10-05"},{"lineNumber":404,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":405,"author":{"gitId":"yixiann"},"content":"Extensions:","lastModifiedDate":"2022-09-30"},{"lineNumber":406,"author":{"gitId":"Eugenetanwl3881"},"content":"- 3a. FoodRem detects that the new tag name already exist.","lastModifiedDate":"2022-10-05"},{"lineNumber":407,"author":{"gitId":"Eugenetanwl3881"},"content":"  - 3a1. FoodRem requests for a new tag name that does not exist.","lastModifiedDate":"2022-10-05"},{"lineNumber":408,"author":{"gitId":"yixiann"},"content":"  - 3a2. User re-enters the command to rename the desired tag.","lastModifiedDate":"2022-10-03"},{"lineNumber":409,"author":{"gitId":"yixiann"},"content":"  - Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2022-10-03"},{"lineNumber":410,"author":{"gitId":"yixiann"},"content":"    Use case resumes from step 4.","lastModifiedDate":"2022-10-03"},{"lineNumber":411,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":412,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":413,"author":{"gitId":"Eugenetanwl3881"},"content":"- 3b. FoodRem detects that the name is in an incorrect format.","lastModifiedDate":"2022-10-05"},{"lineNumber":414,"author":{"gitId":"Eugenetanwl3881"},"content":"  - 3b1. FoodRem requests for a new tag name that follows an acceptable format.","lastModifiedDate":"2022-10-05"},{"lineNumber":415,"author":{"gitId":"yixiann"},"content":"  - 3b2. User re-enters the command to rename the desired tag.","lastModifiedDate":"2022-10-03"},{"lineNumber":416,"author":{"gitId":"yixiann"},"content":"  - Steps 3b1-3b2 are repeated until the command entered is correct.","lastModifiedDate":"2022-10-03"},{"lineNumber":417,"author":{"gitId":"yixiann"},"content":"    Use case resumes from step 4.","lastModifiedDate":"2022-10-03"},{"lineNumber":418,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":419,"author":{"gitId":"yixiann"},"content":"#### UC8: Removing a tag from an item","lastModifiedDate":"2022-10-03"},{"lineNumber":420,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":421,"author":{"gitId":"yixiann"},"content":"Use Case: UC8 - Removing a tag from an item","lastModifiedDate":"2022-10-03"},{"lineNumber":422,"author":{"gitId":"yixiann"},"content":"Preconditions: User knows the name of the tag they are removing from an item.","lastModifiedDate":"2022-10-03"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":424,"author":{"gitId":"yixiann"},"content":"MSS:","lastModifiedDate":"2022-09-30"},{"lineNumber":425,"author":{"gitId":"yixiann"},"content":"1. User enters the command to find the item of interest.","lastModifiedDate":"2022-10-03"},{"lineNumber":426,"author":{"gitId":"Eugenetanwl3881"},"content":"2. FoodRem shows a list containing possible matching items.","lastModifiedDate":"2022-10-05"},{"lineNumber":427,"author":{"gitId":"yixiann"},"content":"3. User enters command to remove the tag from the desired items.","lastModifiedDate":"2022-10-03"},{"lineNumber":428,"author":{"gitId":"Eugenetanwl3881"},"content":"4. FoodRem informs user that the tag has been updated successfully.","lastModifiedDate":"2022-10-05"},{"lineNumber":429,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":430,"author":{"gitId":"yixiann"},"content":"Extensions:","lastModifiedDate":"2022-09-30"},{"lineNumber":431,"author":{"gitId":"Eugenetanwl3881"},"content":"- 1a. FoodRem detects that there is an issue with the command entered.","lastModifiedDate":"2022-10-05"},{"lineNumber":432,"author":{"gitId":"Eugenetanwl3881"},"content":"  - 1a1. FoodRem requests for the command to be entered again.","lastModifiedDate":"2022-10-05"},{"lineNumber":433,"author":{"gitId":"yixiann"},"content":"  - 1a2. User re-enters the command.","lastModifiedDate":"2022-10-03"},{"lineNumber":434,"author":{"gitId":"yixiann"},"content":"  - Steps 1a1-1a2 are repeated until the command entered is correct. Use case resumes from step 2.","lastModifiedDate":"2022-10-03"},{"lineNumber":435,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":436,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":437,"author":{"gitId":"Eugenetanwl3881"},"content":"- 3a. FoodRem detects that there is an issue with the command entered.","lastModifiedDate":"2022-10-05"},{"lineNumber":438,"author":{"gitId":"Eugenetanwl3881"},"content":"  - 3a1. FoodRem requests for the command to be entered again.","lastModifiedDate":"2022-10-05"},{"lineNumber":439,"author":{"gitId":"yixiann"},"content":"  - 3a2. User re-enters the command.","lastModifiedDate":"2022-10-03"},{"lineNumber":440,"author":{"gitId":"yixiann"},"content":"  - Steps 3a1-3a2 are repeated until the command entered is correct.","lastModifiedDate":"2022-10-03"},{"lineNumber":441,"author":{"gitId":"yixiann"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2022-10-03"},{"lineNumber":442,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":443,"author":{"gitId":"RichDom2185"},"content":"#### UC9: Increment/Decrement Quantity of Item","lastModifiedDate":"2022-09-30"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"RichDom2185"},"content":"Use Case: UC9 - Increment/Decrement Quantity of Item","lastModifiedDate":"2022-09-30"},{"lineNumber":446,"author":{"gitId":"RichDom2185"},"content":"MSS:","lastModifiedDate":"2022-09-30"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"RichDom2185"},"content":"1. User increases/decreases the amount of the item in the inventory","lastModifiedDate":"2022-09-30"},{"lineNumber":449,"author":{"gitId":"RichDom2185"},"content":"   Extensions:","lastModifiedDate":"2022-09-30"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"RichDom2185"},"content":"- 1a. Item does not exist","lastModifiedDate":"2022-09-30"},{"lineNumber":452,"author":{"gitId":"Eugenetanwl3881"},"content":"  - 1a1. FoodRem displays an error.","lastModifiedDate":"2022-10-05"},{"lineNumber":453,"author":{"gitId":"Eugenetanwl3881"},"content":"  - 1a2. FoodRem asks the user if they want to try again","lastModifiedDate":"2022-10-05"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"RichDom2185"},"content":"#### UC10: Sorting List of Items by Criteria","lastModifiedDate":"2022-09-30"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"RichDom2185"},"content":"Use Case: UC10 - Sorting List of Items by Criteria","lastModifiedDate":"2022-09-30"},{"lineNumber":458,"author":{"gitId":"RichDom2185"},"content":"MSS:","lastModifiedDate":"2022-09-30"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"RichDom2185"},"content":"1. User lists items","lastModifiedDate":"2022-09-30"},{"lineNumber":461,"author":{"gitId":"RichDom2185"},"content":"2. User selects a criteria to sort the list by","lastModifiedDate":"2022-09-30"},{"lineNumber":462,"author":{"gitId":"RichDom2185"},"content":"3. The list items are reordered according to the chosen criterion","lastModifiedDate":"2022-09-30"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2022-10-03"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":466,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"Eugenetanwl3881"},"content":"1. The product should work on any mainstream OS (Windows, macOS, Linux) that has Java 11 or above installed.","lastModifiedDate":"2022-09-29"},{"lineNumber":469,"author":{"gitId":"Eugenetanwl3881"},"content":"2. The product should be able to hold up to 1000 items without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-29"},{"lineNumber":470,"author":{"gitId":"Eugenetanwl3881"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-09-29"},{"lineNumber":471,"author":{"gitId":"Eugenetanwl3881"},"content":"4. A user should not experience excessive sluggishness when searching and sorting items.","lastModifiedDate":"2022-09-29"},{"lineNumber":472,"author":{"gitId":"Eugenetanwl3881"},"content":"5. The product should be for a single user (i.e. not a multi-user product where different users can run the application at different times on a shared computer).","lastModifiedDate":"2022-09-29"},{"lineNumber":473,"author":{"gitId":"Eugenetanwl3881"},"content":"6. The data of the application is stored locally.","lastModifiedDate":"2022-09-29"},{"lineNumber":474,"author":{"gitId":"Eugenetanwl3881"},"content":"7. A user must be able to view at least 5 tags when an item is displayed.","lastModifiedDate":"2022-09-29"},{"lineNumber":475,"author":{"gitId":"Eugenetanwl3881"},"content":"8. A user must be able to view at least 5 items with minimal scrolling if there are no tags added to each item.","lastModifiedDate":"2022-09-29"},{"lineNumber":476,"author":{"gitId":"Eugenetanwl3881"},"content":"9. A user should be able to use the app after reading the help instructions.","lastModifiedDate":"2022-09-29"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"Ferusel"},"content":"### A","lastModifiedDate":"2022-09-30"},{"lineNumber":481,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":482,"author":{"gitId":"Ferusel"},"content":"#### Argument","lastModifiedDate":"2022-09-30"},{"lineNumber":483,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":484,"author":{"gitId":"Ferusel"},"content":"\u003e A value that is passed into a command.","lastModifiedDate":"2022-09-30"},{"lineNumber":485,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":486,"author":{"gitId":"Ferusel"},"content":"Example:","lastModifiedDate":"2022-09-30"},{"lineNumber":487,"author":{"gitId":"Ferusel"},"content":"`tag create food`, where food is the argument to the command `tag create`","lastModifiedDate":"2022-09-30"},{"lineNumber":488,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":489,"author":{"gitId":"Ferusel"},"content":"### B","lastModifiedDate":"2022-09-30"},{"lineNumber":490,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":491,"author":{"gitId":"Ferusel"},"content":"#### Bought Date","lastModifiedDate":"2022-09-30"},{"lineNumber":492,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":493,"author":{"gitId":"Ferusel"},"content":"\u003e Date where an item was purchased. Usually in the format dd/mm/yyyy.","lastModifiedDate":"2022-09-30"},{"lineNumber":494,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":495,"author":{"gitId":"RichDom2185"},"content":"_TODO: CHANGE FORMAT OF DATETIME AFTER CONFIRMING IMPLEMENTATION DETAILS._","lastModifiedDate":"2022-09-30"},{"lineNumber":496,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":497,"author":{"gitId":"Ferusel"},"content":"### C","lastModifiedDate":"2022-09-30"},{"lineNumber":498,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":499,"author":{"gitId":"Ferusel"},"content":"#### Command","lastModifiedDate":"2022-09-30"},{"lineNumber":500,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":501,"author":{"gitId":"Ferusel"},"content":"\u003e A feature or function that FoodRem can perform.","lastModifiedDate":"2022-09-30"},{"lineNumber":502,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":503,"author":{"gitId":"Ferusel"},"content":"### E","lastModifiedDate":"2022-09-30"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"Ferusel"},"content":"#### Expiry Date","lastModifiedDate":"2022-09-30"},{"lineNumber":506,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":507,"author":{"gitId":"Ferusel"},"content":"\u003e Date where an item spoils, expires, or becomes unusable. Usually in the format dd/mm/yyyy.","lastModifiedDate":"2022-09-30"},{"lineNumber":508,"author":{"gitId":"Ferusel"},"content":"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":509,"author":{"gitId":"RichDom2185"},"content":"\u003e _TODO: CHANGE FORMAT OF DATETIME AFTER CONFIRMING IMPLEMENTATION DETAILS._","lastModifiedDate":"2022-09-30"},{"lineNumber":510,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":511,"author":{"gitId":"Ferusel"},"content":"### F","lastModifiedDate":"2022-09-30"},{"lineNumber":512,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":513,"author":{"gitId":"Ferusel"},"content":"#### Flag","lastModifiedDate":"2022-09-30"},{"lineNumber":514,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":515,"author":{"gitId":"Ferusel"},"content":"\u003e A marker or delimiter signifying a potentially optional argument to a command.","lastModifiedDate":"2022-09-30"},{"lineNumber":516,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":517,"author":{"gitId":"Ferusel"},"content":"MISSING EXAMPLE","lastModifiedDate":"2022-09-30"},{"lineNumber":518,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":519,"author":{"gitId":"Ferusel"},"content":"### I","lastModifiedDate":"2022-09-30"},{"lineNumber":520,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":521,"author":{"gitId":"Ferusel"},"content":"#### Input","lastModifiedDate":"2022-09-30"},{"lineNumber":522,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":523,"author":{"gitId":"Ferusel"},"content":"\u003e The text that a user would enter into FoodRem.","lastModifiedDate":"2022-09-30"},{"lineNumber":524,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":525,"author":{"gitId":"Ferusel"},"content":"#### Item","lastModifiedDate":"2022-09-30"},{"lineNumber":526,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":527,"author":{"gitId":"Ferusel"},"content":"\u003e Represents a thing that is stored and kept track by FoodRem.","lastModifiedDate":"2022-09-30"},{"lineNumber":528,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":529,"author":{"gitId":"Ferusel"},"content":"Example: Creating a `potato` item","lastModifiedDate":"2022-09-30"},{"lineNumber":530,"author":{"gitId":"Ferusel"},"content":"`[item] new n/potato`","lastModifiedDate":"2022-09-30"},{"lineNumber":531,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":532,"author":{"gitId":"Ferusel"},"content":"### O","lastModifiedDate":"2022-09-30"},{"lineNumber":533,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":534,"author":{"gitId":"Ferusel"},"content":"#### Output","lastModifiedDate":"2022-09-30"},{"lineNumber":535,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":536,"author":{"gitId":"Ferusel"},"content":"\u003e The result of calling a Command.","lastModifiedDate":"2022-09-30"},{"lineNumber":537,"author":{"gitId":"Ferusel"},"content":"\u003e Results are displayed in the GUI, here: (ADD SCREENSHOT)","lastModifiedDate":"2022-09-30"},{"lineNumber":538,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":539,"author":{"gitId":"Ferusel"},"content":"### Q","lastModifiedDate":"2022-09-30"},{"lineNumber":540,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":541,"author":{"gitId":"Ferusel"},"content":"#### Quantity","lastModifiedDate":"2022-09-30"},{"lineNumber":542,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":543,"author":{"gitId":"Ferusel"},"content":"\u003e The frequency of item(s) kept track by FoodRem.","lastModifiedDate":"2022-09-30"},{"lineNumber":544,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":545,"author":{"gitId":"Ferusel"},"content":"### T","lastModifiedDate":"2022-09-30"},{"lineNumber":546,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":547,"author":{"gitId":"Ferusel"},"content":"#### Tag","lastModifiedDate":"2022-09-30"},{"lineNumber":548,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":549,"author":{"gitId":"Ferusel"},"content":"\u003e The main method of categorizing items in FoodRem. A tag may be attached to zero or more items.","lastModifiedDate":"2022-09-30"},{"lineNumber":550,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":551,"author":{"gitId":"Ferusel"},"content":"Example:","lastModifiedDate":"2022-09-30"},{"lineNumber":552,"author":{"gitId":"Ferusel"},"content":"Tagging an item in the first index as the tag `ingredient`:","lastModifiedDate":"2022-09-30"},{"lineNumber":553,"author":{"gitId":"Ferusel"},"content":"`tag 1 ingredient`","lastModifiedDate":"2022-09-30"},{"lineNumber":554,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":555,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Eugenetanwl3881":55,"RichDom2185":98,"bryanljx":39,"Ferusel":72,"yixiann":41,"-":301}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Documentation guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2020-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"- We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"- The `docs/` folder is used for documentation.","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"- To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":"- Note these points when adapting the documentation to a different project/product:","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"  - The \u0027Site-wide settings\u0027 section of the page linked above has information on how to update site-wide elements such as the top navigation bar.","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"  - :bulb: In addition to updating content files, you might have to update the config files `docs\\_config.yml` and `docs\\_sass\\minima\\_base.scss` (which contains a reference to `AB-3` that comes into play when converting documentation pages to PDF format).","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"- If you are using Intellij for editing documentation files, you can consider enabling \u0027soft wrapping\u0027 for `*.md` files, as explained in [_[se-edu/guides] **Intellij IDEA: Useful settings**_](https://se-education.org/guides/tutorials/intellijUsefulSettings.html#enabling-soft-wrapping)","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Style guidance:**","lastModifiedDate":"2020-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"- Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"- Also relevant is the [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2020-06-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"RichDom2185"},"content":"- See the [_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"- See the guide [_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"RichDom2185":11,"-":17}},{"path":"docs/Logging.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-06-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Logging guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"- We are using `java.util.logging` package for logging.","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":"- The `LogsCenter` class is used to manage the logging levels and logging destinations.","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"- The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level.","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"- Log messages are output through the console and to a `.log` file.","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"- The output logging level can be controlled using the `logLevel` setting in the configuration file (See the [Configuration guide](Configuration.md) section).","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":"- **When choosing a level for a log message**, follow the conventions given in [_[se-edu/guides] Java: Logging conventions_](https://se-education.org/guides/conventions/java/logging.html).","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"RichDom2185":6,"-":5}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"- Table of Contents","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"RichDom2185"},"content":"   - [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"RichDom2185"},"content":"   - [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"RichDom2185"},"content":"   - [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"RichDom2185":8,"-":48}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"- Table of Contents","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"- **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"  - To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"  - To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"- **Method 2: Using Gradle**","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"  - Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"1. _Unit tests_ targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.commons.StringUtilTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"1. _Integration tests_ that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.storage.StorageManagerTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.logic.LogicManagerTest`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"RichDom2185":10,"-":26}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"Eugenetanwl3881"},"content":"# FoodRem User Guide","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Eugenetanwl3881"},"content":"## About","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"We want you to spend less time keeping track of perishable goods in your daily operations. ","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"FoodRem is a command line application that enables you to efficiently record, update and categorise food items.","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"It is a convenient administrative tool that can answer the following questions in a flash:","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"- What food items are about to expire?","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"- How much of each condiment do I have? ","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"- Which food items are newly purchases?","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"- ...and many more!","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"With a few quick commands, you can have complete control of your perishable goods, so you can focus on what ","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"is important: serving your customers, improving menu recipes, and transforming your business into the next ","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"success story.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Eugenetanwl3881"},"content":"## Key Features","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Eugenetanwl3881"},"content":"1. Add, update and delete inventory items","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"Eugenetanwl3881"},"content":"2. Search and sort food items by:","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"Eugenetanwl3881"},"content":"   - Name","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"Eugenetanwl3881"},"content":"   - Quantity","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"Eugenetanwl3881"},"content":"   - Bought date","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"Eugenetanwl3881"},"content":"   - Expiry date","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"   - Tags","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"Eugenetanwl3881"},"content":"3. Tag items to group them into categories","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Eugenetanwl3881"},"content":"## Purpose, Scope and Audience","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"### Purpose","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"FoodRem helps small businesses to easily manage consumables and perishable goods within a single inventory to reduce time spent on managing and restocking inventory.","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"### Scope","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"This app is targeted at small F\u0026B businesses which may struggle in inventory management due to a lack of streamlined process and manpower. ","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"### Audience","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"This guide is targeted at users using FoodRem who wants to find out more about the different commands to manage their inventory in a quicker and more efficient manner. ","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"bryanljx"},"content":"Readers do not have to be familiar with the command line to use this guide effectively. ","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"bryanljx"},"content":"The only expectation we have of you is to carefully read through the different sections.","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"\u003cdiv style\u003d\"page-break-after: always\"\u003e\u003c/div\u003e \u003c! ---Testing line break--\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"# Tables of Contents","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"1. [How to use the user guide](#how-to-use-the-user-guide)","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"2. [Quick Start](#quick-start)","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"3. [Items and Tags](#items-and-tags)","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"4. [Navigating around the application](#navigating-around-the-application)","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"yixiann"},"content":"5. [Flags](#flags)","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"yixiann"},"content":"6. [Placeholders](#placeholders)","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"yixiann"},"content":"7. [Features](#features)","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"yixiann"},"content":"   7.1. [Item Features](#item-features)","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"yixiann"},"content":"   \u0026emsp; 7.1.1. [Create a new item](#create-a-new-item)","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"yixiann"},"content":"   \u0026emsp; 7.1.2. [List all items](#list-all-items)","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"yixiann"},"content":"   \u0026emsp; 7.1.3. [Search for an item](#search-for-an-item)","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"yixiann"},"content":"   \u0026emsp; 7.1.4. [Sort all items by an attribute](#sort-all-items-by-an-attribute)","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"yixiann"},"content":"   \u0026emsp; 7.1.5. [View the information of an item](#view-the-information-of-an-item)","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"yixiann"},"content":"   \u0026emsp; 7.1.6. [Increase the quantity of an item](#increase-the-quantity-of-an-item)","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"yixiann"},"content":"   \u0026emsp; 7.1.7. [Decrease the quantity of an item](#decrease-the-quantity-of-an-item)","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"yixiann"},"content":"   \u0026emsp; 7.1.8. [Update the information of an item](#update-the-information-of-an-item)","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"yixiann"},"content":"   \u0026emsp; 7.1.9. [Delete an item](#delete-an-item)","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"yixiann"},"content":"   7.2. [Tag Features](#tag-features)","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"yixiann"},"content":"   \u0026emsp; 7.2.1. [Create a new tag](#create-a-new-tag)","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"yixiann"},"content":"   \u0026emsp; 7.2.2. [List all tags](#list-all-tags)","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"yixiann"},"content":"   \u0026emsp; 7.2.3. [Tag an item](#tag-an-item)","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"yixiann"},"content":"   \u0026emsp; 7.2.4. [Untag an item](#untag-an-item)","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"yixiann"},"content":"   \u0026emsp; 7.2.5. [Rename a tag](#rename-a-tag)","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"yixiann"},"content":"   \u0026emsp; 7.2.6. [Delete a tag](#delete-an-item)","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"yixiann"},"content":"   7.3. [Receive help during usage](#receive-help-during-usage)","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":105,"author":{"gitId":"yixiann"},"content":"   7.4. [Reset the application](#reset-the-application)","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":107,"author":{"gitId":"yixiann"},"content":"   7.5. [Exit the application](#exit-the-application)","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"yixiann"},"content":"8. [Command Summary](#command-summary)","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"yixiann"},"content":"9. [Troubleshooting](#troubleshooting)","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"yixiann"},"content":"10. [FAQ](#faq)","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"yixiann"},"content":"11. [Future Extensions](#future-extensions)","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"yixiann"},"content":"12. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"yixiann"},"content":"13. [Glossary](#glossary)","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"yixiann"},"content":"## How to use the User Guide","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"yixiann"},"content":"Thank you for choosing FoodRem! We are delighted to have you as a user and aim to serve you well!","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"yixiann"},"content":"To gain the most out from this User Guide, start off with the [Quick Start](#quick-start) section.","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"yixiann"},"content":"This will give you a brief overview about how to use this application. ","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"yixiann"},"content":"It is **highly recommended** that you read through the User Guide in a **sequential order** up until the section","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"yixiann"},"content":"[Features](#features) where you can find all the information you need for each command. ","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"yixiann"},"content":"[Items and Tags](#items-and-tags) : ","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"yixiann"},"content":"- What FoodRem is capable of storing","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"yixiann"},"content":"[Navigating around the application](#navigating-around-the-application): ","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"yixiann"},"content":"- Terminologies of different parts of the application","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"yixiann"},"content":"- What you are expected to see.","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"yixiann"},"content":"[Flags](#flags) and [Placeholders](#placeholders):","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"yixiann"},"content":"- Important syntax you will come across while reading the user","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"yixiann"},"content":"guide such as `n/`, `bgt/` or `INDEX`, `ITEM_NAME`. ","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"yixiann"},"content":"If you are confident, you can immediately refer to the [Command Summary](#command-summary)","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"yixiann"},"content":"after completing the [Quick Start](#quick-start).","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"yixiann"},"content":"Meaning of icons:","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"yixiann"},"content":"- ℹ️ : additional info","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"yixiann"},"content":"- ❗ : warning","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"yixiann"},"content":"If you are stuck, refer to [Troubleshooting](#troubleshooting) or [FAQ](#faq).","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"yixiann"},"content":"There is also a [Glossary](#glossary) that contains definitions of what common words ","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"yixiann"},"content":"used in this application mean.","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"yixiann"},"content":"It is time for you to unleash the potential of a command line application!","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":155,"author":{"gitId":"Eugenetanwl3881"},"content":"## Quick Start","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":157,"author":{"gitId":"yixiann"},"content":"Hello! This is the command box where we key in our commands.","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"yixiann"},"content":"{Image of a command box}","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"yixiann"},"content":"([Navigating around the application](#navigating-around-the-application))","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"yixiann"},"content":"The format for commands are not identical. One command in FoodRem is the command to create a new item.","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"yixiann"},"content":"Format: `new n/ITEM_NAME [qty/QUANTITY] [unit/UNIT] [bgt/BOUGHT_DATE] [exp/EXPIRY_DATE]`","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"yixiann"},"content":"The first word of every command allows FoodRem to distinguish different commands.","lastModifiedDate":"2022-10-04"},{"lineNumber":168,"author":{"gitId":"yixiann"},"content":"`new` tells FoodRem that this is the command to create a new item.","lastModifiedDate":"2022-10-04"},{"lineNumber":169,"author":{"gitId":"yixiann"},"content":"[Flags](#flags) such as `n/` and `qty/` are delimiters that enable FoodRem to distinguish different parameters","lastModifiedDate":"2022-10-04"},{"lineNumber":170,"author":{"gitId":"yixiann"},"content":"supplied by you without ambiguity. [Placeholders](#placeholders) such as `ITEM_NAME` and `QUANTITY` shows you","lastModifiedDate":"2022-10-04"},{"lineNumber":171,"author":{"gitId":"yixiann"},"content":"what you should place in each portion of the command. ","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"yixiann"},"content":"Suppose you just bought 30 kg of potatoes, today is 5th September 22, and you do not feel the need to record","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"yixiann"},"content":"an expiry date for the potatoes.","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":176,"author":{"gitId":"yixiann"},"content":"`ITEM_NAME`: Potatoes","lastModifiedDate":"2022-10-04"},{"lineNumber":177,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":178,"author":{"gitId":"yixiann"},"content":"`QUANTITY`: 30","lastModifiedDate":"2022-10-04"},{"lineNumber":179,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":180,"author":{"gitId":"yixiann"},"content":"`UNIT`: kg","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":182,"author":{"gitId":"yixiann"},"content":"`BOUGHT_DATE`: 05-09-22","lastModifiedDate":"2022-10-04"},{"lineNumber":183,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":184,"author":{"gitId":"yixiann"},"content":"Note: ","lastModifiedDate":"2022-10-04"},{"lineNumber":185,"author":{"gitId":"yixiann"},"content":"- The [Placeholder](#placeholders) section covers the restrictions for respective placeholders.","lastModifiedDate":"2022-10-04"},{"lineNumber":186,"author":{"gitId":"yixiann"},"content":"For example, the date format of BOUGHT_DATE, certain characters you cannot use and the limit and precision of numbers.","lastModifiedDate":"2022-10-04"},{"lineNumber":187,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":188,"author":{"gitId":"yixiann"},"content":"The command you would like to enter into the command box would be:","lastModifiedDate":"2022-10-04"},{"lineNumber":189,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":190,"author":{"gitId":"yixiann"},"content":"`new n/Potatoes qty/30 unit/kg bgt/05-09-22`","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":192,"author":{"gitId":"yixiann"},"content":"Alternatively these commands would do the same thing:","lastModifiedDate":"2022-10-04"},{"lineNumber":193,"author":{"gitId":"yixiann"},"content":"- `new n/Potatoesqty/30unit/kgbgt/05-09-22` (Omitting space between tags)","lastModifiedDate":"2022-10-05"},{"lineNumber":194,"author":{"gitId":"yixiann"},"content":"- `new qty/30 n/Potatoes bgt/05-09-22 unit/kg` (Reordering the flags)","lastModifiedDate":"2022-10-05"},{"lineNumber":195,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":196,"author":{"gitId":"yixiann"},"content":"These commands are invalid:","lastModifiedDate":"2022-10-04"},{"lineNumber":197,"author":{"gitId":"yixiann"},"content":"- `newn/Potatoesqty/30unit/kgbgt/05-09-22` (Removing space between command identifier and flag)","lastModifiedDate":"2022-10-05"},{"lineNumber":198,"author":{"gitId":"yixiann"},"content":"- `new qty/-48 n/PÖtátÖes bgt/05/09/22 unit/|kg|` (Restrictions of placeholders not followed)","lastModifiedDate":"2022-10-05"},{"lineNumber":199,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":200,"author":{"gitId":"yixiann"},"content":"Find out more about restrictions in the sections [Flags](#flags), [Placeholders](#placeholders) and ","lastModifiedDate":"2022-10-04"},{"lineNumber":201,"author":{"gitId":"yixiann"},"content":"[Features](#features).","lastModifiedDate":"2022-10-04"},{"lineNumber":202,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":203,"author":{"gitId":"yixiann"},"content":"Notice that there is a pair of square brackets [] surrounding some parameters like `qty/QUANTITY` ","lastModifiedDate":"2022-10-04"},{"lineNumber":204,"author":{"gitId":"yixiann"},"content":"in the format. This indicates that the parameter is optional. Each of these placeholders have a default value","lastModifiedDate":"2022-10-04"},{"lineNumber":205,"author":{"gitId":"yixiann"},"content":"based on the commands. These are documented in the [Features](#features) section for each command. ","lastModifiedDate":"2022-10-04"},{"lineNumber":206,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":207,"author":{"gitId":"yixiann"},"content":"Let us try another command!","lastModifiedDate":"2022-10-04"},{"lineNumber":208,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":209,"author":{"gitId":"yixiann"},"content":"After creating the potatoes item, you decided to buy 40 kg more of potatoes.","lastModifiedDate":"2022-10-04"},{"lineNumber":210,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":211,"author":{"gitId":"yixiann"},"content":"Format: `inc id/INDEX_LIST [qty/QUANTITY]`","lastModifiedDate":"2022-10-04"},{"lineNumber":212,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":213,"author":{"gitId":"yixiann"},"content":"`inc` tells FoodRem that this is the command to increment the quantity of an item.","lastModifiedDate":"2022-10-04"},{"lineNumber":214,"author":{"gitId":"yixiann"},"content":"Suppose the `INDEX` for potatoes is `12` in the application, the command you","lastModifiedDate":"2022-10-04"},{"lineNumber":215,"author":{"gitId":"yixiann"},"content":"would like to enter into the command box is `inc id/12 qty/30`.","lastModifiedDate":"2022-10-04"},{"lineNumber":216,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":217,"author":{"gitId":"yixiann"},"content":"Note: `INDEX_LIST` can be an `INDEX` (More information in [Placeholders](#placeholders))","lastModifiedDate":"2022-10-04"},{"lineNumber":218,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":219,"author":{"gitId":"yixiann"},"content":"Now you should have a general sensing of how commands are used and how to interpret formats. All commands are","lastModifiedDate":"2022-10-04"},{"lineNumber":220,"author":{"gitId":"yixiann"},"content":"consolidated in [Command Summary](#command-summary). However, it is **highly recommended** that you read through ","lastModifiedDate":"2022-10-04"},{"lineNumber":221,"author":{"gitId":"yixiann"},"content":"the User Guide in a  **sequential order** up until the section [Features](#features) where you can find all the","lastModifiedDate":"2022-10-04"},{"lineNumber":222,"author":{"gitId":"yixiann"},"content":"information you need for each command. This covers more details on syntax and common errors. Before using any ","lastModifiedDate":"2022-10-04"},{"lineNumber":223,"author":{"gitId":"yixiann"},"content":"command, take note of the behaviour when certain tags are not included and restrictions.","lastModifiedDate":"2022-10-04"},{"lineNumber":224,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":225,"author":{"gitId":"yixiann"},"content":"Checklist before using a command:","lastModifiedDate":"2022-10-04"},{"lineNumber":226,"author":{"gitId":"yixiann"},"content":"- [ ] I know the restrictions of the command","lastModifiedDate":"2022-10-04"},{"lineNumber":227,"author":{"gitId":"yixiann"},"content":"- [ ] I know what flags are supplied to the command","lastModifiedDate":"2022-10-04"},{"lineNumber":228,"author":{"gitId":"yixiann"},"content":"- [ ] I know the restrictions of each placeholder","lastModifiedDate":"2022-10-04"},{"lineNumber":229,"author":{"gitId":"yixiann"},"content":"- [ ] I know the effects of not specifying each optional flag.","lastModifiedDate":"2022-10-04"},{"lineNumber":230,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":231,"author":{"gitId":"yixiann"},"content":"## Items and Tags","lastModifiedDate":"2022-10-04"},{"lineNumber":232,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":233,"author":{"gitId":"yixiann"},"content":"### Item","lastModifiedDate":"2022-10-04"},{"lineNumber":234,"author":{"gitId":"yixiann"},"content":"An item is a food item that you would like to include in FoodRem.","lastModifiedDate":"2022-10-04"},{"lineNumber":235,"author":{"gitId":"yixiann"},"content":"The following are all the attributes store for each item:","lastModifiedDate":"2022-10-04"},{"lineNumber":236,"author":{"gitId":"yixiann"},"content":"- Item name","lastModifiedDate":"2022-10-04"},{"lineNumber":237,"author":{"gitId":"yixiann"},"content":"- Item quantity","lastModifiedDate":"2022-10-04"},{"lineNumber":238,"author":{"gitId":"yixiann"},"content":"- Item unit (Unit of measurement e.g. `kg`, `packets`)","lastModifiedDate":"2022-10-05"},{"lineNumber":239,"author":{"gitId":"yixiann"},"content":"- Item bought date","lastModifiedDate":"2022-10-04"},{"lineNumber":240,"author":{"gitId":"yixiann"},"content":"- Item expiry date","lastModifiedDate":"2022-10-04"},{"lineNumber":241,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":242,"author":{"gitId":"yixiann"},"content":"All items in FoodRem are unique. This means that no two items should have the same name.","lastModifiedDate":"2022-10-04"},{"lineNumber":243,"author":{"gitId":"yixiann"},"content":"Uniqueness is not case-sensitive. \"potato\" and \"POTATO\" are treated as identical.","lastModifiedDate":"2022-10-04"},{"lineNumber":244,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":245,"author":{"gitId":"yixiann"},"content":"FoodRem allows you to include an item that has an expiry date before a bought date. ","lastModifiedDate":"2022-10-04"},{"lineNumber":246,"author":{"gitId":"yixiann"},"content":"However, it will warn you that you are including an expired item into the inventory.","lastModifiedDate":"2022-10-04"},{"lineNumber":247,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":248,"author":{"gitId":"yixiann"},"content":"Restrictions for other attributes can be found in [Placeholders](#placeholders).","lastModifiedDate":"2022-10-04"},{"lineNumber":249,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":250,"author":{"gitId":"yixiann"},"content":"### Tag","lastModifiedDate":"2022-10-04"},{"lineNumber":251,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":252,"author":{"gitId":"yixiann"},"content":"A tag serves as a means to categorise items. These tags are also unique and not case-sensitive.","lastModifiedDate":"2022-10-04"},{"lineNumber":253,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":254,"author":{"gitId":"yixiann"},"content":"We can tag multiple items with the same tag and each item can have multiple tags. Tags are optional","lastModifiedDate":"2022-10-04"},{"lineNumber":255,"author":{"gitId":"yixiann"},"content":"and serve as a means to easily categorise items. ","lastModifiedDate":"2022-10-04"},{"lineNumber":256,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":257,"author":{"gitId":"yixiann"},"content":"Tags can be renamed and these changes would be reflected on all items immediately. ","lastModifiedDate":"2022-10-04"},{"lineNumber":258,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":259,"author":{"gitId":"yixiann"},"content":"## Navigating around the application","lastModifiedDate":"2022-10-04"},{"lineNumber":260,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":261,"author":{"gitId":"yixiann"},"content":"{Image of entire application}","lastModifiedDate":"2022-10-04"},{"lineNumber":262,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":263,"author":{"gitId":"yixiann"},"content":"\u003ctable\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":264,"author":{"gitId":"yixiann"},"content":"\u003cthead\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":265,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":266,"author":{"gitId":"yixiann"},"content":"    \u003cth\u003eName\u003c/th\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":267,"author":{"gitId":"yixiann"},"content":"    \u003cth\u003eDescription\u003c/th\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":268,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":269,"author":{"gitId":"yixiann"},"content":"\u003c/thead\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":270,"author":{"gitId":"yixiann"},"content":"\u003ctbody\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":271,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":272,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eCommand Input\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":273,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003e{image}\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":274,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":275,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":276,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eCommand result\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":277,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003e{image}\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":278,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":279,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":280,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eList Component\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":281,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003e{image}\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":282,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":283,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":284,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eView Component\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":285,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003e{image}\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":286,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":287,"author":{"gitId":"yixiann"},"content":"\u003c/tbody\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":288,"author":{"gitId":"yixiann"},"content":"\u003c/table\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":289,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":290,"author":{"gitId":"yixiann"},"content":"## Flags","lastModifiedDate":"2022-10-04"},{"lineNumber":291,"author":{"gitId":"yixiann"},"content":"Flags are delimiters that enable FoodRem to distinguish different parameters without ambiguity.","lastModifiedDate":"2022-10-04"},{"lineNumber":292,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":293,"author":{"gitId":"yixiann"},"content":"\u003ctable\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":294,"author":{"gitId":"yixiann"},"content":"\u003cthead\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":295,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":296,"author":{"gitId":"yixiann"},"content":"    \u003cth\u003eFlags\u003c/th\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":297,"author":{"gitId":"yixiann"},"content":"    \u003cth\u003eRelated Placeholder\u003c/th\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":298,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":299,"author":{"gitId":"yixiann"},"content":"\u003c/thead\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":300,"author":{"gitId":"yixiann"},"content":"\u003ctbody\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":301,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":302,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eid/\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":303,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eINDEX\u003cbr\u003eINDEX_LIST\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":304,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":305,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":306,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003en/\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":307,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eITEM_NAME\u003cbr\u003eTAG_NAME\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":308,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":309,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":310,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eqty/\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":311,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eQUANTITY\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":312,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":313,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":314,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eunit/\u003c/td\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":315,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eUNIT\u003c/td\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":316,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":317,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":318,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003ebuy/\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":319,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eBOUGHT_DATE\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":320,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":321,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":322,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eexp/\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":323,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eEXPIRY DATE\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":324,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":325,"author":{"gitId":"yixiann"},"content":"\u003c/tbody\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":326,"author":{"gitId":"yixiann"},"content":"\u003c/table\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":327,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":328,"author":{"gitId":"yixiann"},"content":"## Placeholders","lastModifiedDate":"2022-10-04"},{"lineNumber":329,"author":{"gitId":"yixiann"},"content":"Placeholders are words in UPPER_CASE to show you what parameters you can supply to a command.","lastModifiedDate":"2022-10-04"},{"lineNumber":330,"author":{"gitId":"yixiann"},"content":"\u003ctable\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":331,"author":{"gitId":"yixiann"},"content":"\u003cthead\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":332,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":333,"author":{"gitId":"yixiann"},"content":"    \u003cth\u003ePlaceholders\u003c/th\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":334,"author":{"gitId":"yixiann"},"content":"    \u003cth\u003eRelated Flags\u003c/th\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":335,"author":{"gitId":"yixiann"},"content":"    \u003cth\u003eDescription\u003c/th\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":336,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":337,"author":{"gitId":"yixiann"},"content":"\u003c/thead\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":338,"author":{"gitId":"yixiann"},"content":"\u003ctbody\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":339,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":340,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eINDEX\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":341,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eid/\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":342,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eThe INDEX of an item is the number to the left of the item name in the List Component.\u003cbr\u003eINDEX is a whole number larger than 0. \u003cbr/\u003e\u003cbr/\u003e\u003cbr\u003e\u003cstrong\u003eIMPORTANT\u003c/strong\u003e: \u003cbr\u003eThe index of an item is dependent on the current search performed.\u003cbr\u003eThere is a limit of 10000 for the index.\u003cbr\u003eDo not include thousands separators. \u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eValid Examples\u003c/strong\u003e:\u003cbr\u003e1\u003cbr\u003e124\u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eInvalid Examples:\u003c/strong\u003e\u003cbr\u003e-1\u003cbr\u003e1.5\u003cbr\u003e1,132\u003cbr\u003e1 132\u003cbr\u003e10001\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":343,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":344,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":345,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eINDEX_LIST\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":346,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eid/\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":347,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eThe INDEX_LIST is a list of INDEX separated by commas. \u003cbr\u003eAll restrictions to INDEX are relevant.\u003cbr/\u003e\u003cbr\u003e\u003cstrong\u003eIMPORTANT\u003c/strong\u003e: \u003cbr\u003eThere is a limit of 20 indexes in the list.\u003cbr\u003eDo not insert unnecessary commas or spaces.\u003cbr\u003eDo not include duplicates in the list.\u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eValid Examples\u003c/strong\u003e:\u003cbr\u003e1\u003cbr\u003e3214\u003cbr\u003e3,2,1,4\u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eInvalid Examples:\u003c/strong\u003e\u003cbr\u003e,\u003cbr\u003e3,2,1,4,\u003cbr\u003e3,3,3,3\u003cbr\u003e3,,2,1,,,4,\u003cbr\u003e3, 2, 1, 4\u003cbr\u003e3 2 1 4\u003cbr\u003e3/2/1/4\u003cbr\u003e1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":348,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":349,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":350,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eITEM_NAME\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":351,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003en/\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":352,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eThe ITEM_NAME is the term we use to identify an item.\u003cbr\u003eITEM_NAME is a short text.\u003cbr/\u003e\u003cbr\u003e\u003cstrong\u003eIMPORTANT\u003c/strong\u003e: \u003cbr\u003eOnly English characters, numbers, space, and the following symbols are accepted:\u003cbr\u003e~`!@#$%^\u0026amp;*()_-+\u003d{}[]:;”’\u0026lt;\u0026gt;,.?\u003cbr\u003eThere is a limit of 150 characters. Below is a text that is 200 characters long:\u003cbr\u003e“Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum vitae purus at nisi aliquet convallis. Aliquam scelerisque in erat ac sodales sed.”\u003cbr\u003eITEM_NAME is unique\u003cbr\u003eITEM_NAME cannot be blank \u003cbr\u003eLeading and trailing spaces will be trimmed\u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eValid Examples\u003c/strong\u003e:\u003cbr\u003ePotatoes\u003cbr\u003eTomatoes! (Sauce :D)?\u003cbr\u003e     \u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eInvalid Examples:\u003c/strong\u003e\u003cbr\u003e黃瓜\u003cbr\u003eCarrots/Cucumbers\u003cbr\u003eCarrots|Cucumbers\u003cbr\u003eCarrots\\Cucumbers\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":353,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":354,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":355,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eTAG_NAME\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":356,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003en/\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":357,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eThe TAG_NAME is the term we use to identify a tag.\u003cbr\u003eTAG_NAME is a short text.\u003cbr/\u003e\u003cbr\u003e\u003cstrong\u003eIMPORTANT\u003c/strong\u003e:\u003cbr\u003eOnly English characters, numbers, space, and the following symbols are accepted: \u003cbr\u003e~`!@#$%^\u0026amp;*()_-+\u003d{}[]:;”’\u0026lt;\u0026gt;,.?\u003cbr\u003eThere is a limit of 30 characters in a TAG_NAME. Below is a text that is 30 characters long:\u003cbr\u003e“Lorem ipsum dolor sit posuere.”\u003cbr\u003eTAG_NAME is unique\u003cbr\u003eTAG_NAME cannot be blank \u003cbr\u003eLeading and trailing spaces will be trimmed\u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eValid Examples\u003c/strong\u003e:\u003cbr\u003eFood\u003cbr\u003eYummy! (Delicious :D)?\u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eInvalid Examples:\u003c/strong\u003e\u003cbr\u003eОдноразовый\u003cbr\u003eFood/Condiments\u003cbr\u003eFood|Condiments\u003cbr\u003eFood\\Condiments\u003cbr\u003eFood Food Food Food Food Food Food\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":358,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":359,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":360,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eQUANTITY\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":361,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eqty/\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":362,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eThe QUANTITY is the number representing the amount of an item.\u003cbr\u003eQUANTITY is a number larger than 0. It has an accuracy of up to 4 decimal places.\u003cbr/\u003e\u003cbr\u003e\u003cstrong\u003eIMPORTANT\u003c/strong\u003e:\u003cbr\u003eThere is a limit of 10000000 for the quantity.\u003cbr\u003eDo not include thousands separators. \u003cbr\u003eDo not include mathematical symbols\u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eValid Examples\u003c/strong\u003e:\u003cbr\u003e12\u003cbr\u003e12.1234\u003cbr\u003e1234567\u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eInvalid Examples:\u003c/strong\u003e\u003cbr\u003e12.12345\u003cbr\u003e1,234,567\u003cbr\u003e1 + 1\u003cbr\u003e1/2\u003cbr\u003eπ\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":363,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":364,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":365,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eUNIT\u003c/td\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":366,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eunit/\u003c/td\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":367,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eThe UNIT is an optional text indicating the unit of an item.\u003cbr\u003eUNIT is a short text.\u003cbr/\u003e\u003cbr\u003e\u003cstrong\u003eIMPORTANT\u003c/strong\u003e:\u003cbr\u003eOnly English characters, numbers, space, and the following symbols are accepted: \u003cbr\u003e~`!@#$%^\u0026amp;*()_-+\u003d{}[]:;”’\u0026lt;\u0026gt;,.?\u003cbr\u003eThere is a limit of 20 characters in a UNIT.\u003cbr\u003eLeading and trailing spaces will be trimmed\u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eValid Examples\u003c/strong\u003e:\u003cbr\u003ekg\u003cbr\u003ePackets\u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eInvalid Examples:\u003c/strong\u003e\u003cbr\u003eContainers (1000 grams)\u003cbr\u003eContainers/grams\u003cbr\u003eContainers|grams\u003cbr\u003eContainers\\grams\u003c/td\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":368,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":369,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":370,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eBOUGHT_DATE\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":371,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003ebgt/\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":372,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eThe BOUGHT_DATE is an optional date indicating when the item was bought.\u003cbr\u003eBOUGHT_DATE is a date in one of the following formats:\u003cbr\u003eyyyy-mm-dd\u003cbr\u003edd-mm-yyyy\u003cbr/\u003e\u003cbr\u003e\u003cstrong\u003eIMPORTANT\u003c/strong\u003e:\u003cbr\u003eWe only accept years less than 10000\u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eValid Examples\u003c/strong\u003e:\u003cbr\u003e2022-09-01\u003cbr\u003e01-09-2022\u003cbr\u003e1-9-2022\u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eInvalid Examples:\u003c/strong\u003e\u003cbr\u003e01-11-20222\u003cbr\u003e01/09/2022\u003cbr\u003e40-40-2022\u003cbr\u003e1-9-22\u003cbr\u003e1-nov-2202\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":373,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":374,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":375,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eEXPIRY_DATE\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":376,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eexp/\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":377,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eThe EXPIRY_DATE is an optional date indicating when the item will expire.\u003cbr\u003eEXPIRY_DATE is a date in one of the following formats:\u003cbr\u003eyyyy-mm-dd\u003cbr\u003edd-mm-yyyy\u003cbr/\u003e\u003cbr\u003e\u003cstrong\u003eIMPORTANT\u003c/strong\u003e:\u003cbr\u003eWe only accept years less than 10000\u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eValid Examples\u003c/strong\u003e:\u003cbr\u003e2022-09-01\u003cbr\u003e01-09-2022\u003cbr\u003e1-9-2022\u003cbr\u003e\u003cbr/\u003e\u003cstrong\u003eInvalid Examples:\u003c/strong\u003e\u003cbr\u003e01-11-20222\u003cbr\u003e01/09/2022\u003cbr\u003e40-40-2022\u003cbr\u003e1-9-22\u003cbr\u003e1-nov-2202\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":378,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":379,"author":{"gitId":"yixiann"},"content":"\u003c/tbody\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":380,"author":{"gitId":"yixiann"},"content":"\u003c/table\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":382,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2022-10-04"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":384,"author":{"gitId":"yixiann"},"content":"This section covers how to use each command in detail. ","lastModifiedDate":"2022-10-04"},{"lineNumber":385,"author":{"gitId":"yixiann"},"content":"Before continuing, ensure you have read the section on [Flags](#flags) and [Placeholders](#placeholders).","lastModifiedDate":"2022-10-04"},{"lineNumber":386,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":387,"author":{"gitId":"yixiann"},"content":"What you should expect to find:","lastModifiedDate":"2022-10-04"},{"lineNumber":388,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":389,"author":{"gitId":"yixiann"},"content":"- A description of the command","lastModifiedDate":"2022-10-04"},{"lineNumber":390,"author":{"gitId":"yixiann"},"content":"- The expected behaviour for the command","lastModifiedDate":"2022-10-04"},{"lineNumber":391,"author":{"gitId":"yixiann"},"content":"- A few valid and invalid examples of the command","lastModifiedDate":"2022-10-04"},{"lineNumber":392,"author":{"gitId":"yixiann"},"content":"- Important points to note","lastModifiedDate":"2022-10-04"},{"lineNumber":393,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":394,"author":{"gitId":"yixiann"},"content":"**IMPORTANT:**","lastModifiedDate":"2022-10-04"},{"lineNumber":395,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":396,"author":{"gitId":"yixiann"},"content":"- Square brackets indicate an optional parameter.","lastModifiedDate":"2022-10-04"},{"lineNumber":397,"author":{"gitId":"yixiann"},"content":"- For each command, \"Format\" indicates the syntax of the command.","lastModifiedDate":"2022-10-04"},{"lineNumber":398,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":399,"author":{"gitId":"yixiann"},"content":"### Item Features","lastModifiedDate":"2022-10-04"},{"lineNumber":400,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":401,"author":{"gitId":"yixiann"},"content":"{Insert an image of items}","lastModifiedDate":"2022-10-04"},{"lineNumber":402,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":403,"author":{"gitId":"yixiann"},"content":"#### Create a new item","lastModifiedDate":"2022-10-04"},{"lineNumber":404,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":405,"author":{"gitId":"yixiann"},"content":"\u003c!--- Remember to warn users if expiry date \u003c bought date--\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":406,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":407,"author":{"gitId":"yixiann"},"content":"Command: `item new ITEM_NAME`","lastModifiedDate":"2022-10-04"},{"lineNumber":408,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":409,"author":{"gitId":"yixiann"},"content":"\u003e Description: Creates a new item with the provided item_name.","lastModifiedDate":"2022-10-04"},{"lineNumber":410,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":411,"author":{"gitId":"bryanljx"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":412,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":413,"author":{"gitId":"bryanljx"},"content":"Example:","lastModifiedDate":"2022-09-30"},{"lineNumber":414,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":415,"author":{"gitId":"bryanljx"},"content":"Input","lastModifiedDate":"2022-09-30"},{"lineNumber":416,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":417,"author":{"gitId":"bryanljx"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":418,"author":{"gitId":"yixiann"},"content":"item new potato","lastModifiedDate":"2022-10-04"},{"lineNumber":419,"author":{"gitId":"bryanljx"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":420,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":421,"author":{"gitId":"bryanljx"},"content":"Output","lastModifiedDate":"2022-09-30"},{"lineNumber":422,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":423,"author":{"gitId":"bryanljx"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":424,"author":{"gitId":"yixiann"},"content":"Item  “potato” successfully created","lastModifiedDate":"2022-10-04"},{"lineNumber":425,"author":{"gitId":"bryanljx"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":426,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":427,"author":{"gitId":"yixiann"},"content":"#### List all items","lastModifiedDate":"2022-10-04"},{"lineNumber":428,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":429,"author":{"gitId":"Eugenetanwl3881"},"content":"Command: `list`","lastModifiedDate":"2022-09-30"},{"lineNumber":430,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":431,"author":{"gitId":"Eugenetanwl3881"},"content":"\u003e Description: Lists all the items in the inventory.","lastModifiedDate":"2022-09-30"},{"lineNumber":432,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":433,"author":{"gitId":"Eugenetanwl3881"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":434,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":435,"author":{"gitId":"Eugenetanwl3881"},"content":"Example:","lastModifiedDate":"2022-09-30"},{"lineNumber":436,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":437,"author":{"gitId":"Eugenetanwl3881"},"content":"Input","lastModifiedDate":"2022-09-30"},{"lineNumber":438,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":439,"author":{"gitId":"Eugenetanwl3881"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":440,"author":{"gitId":"Eugenetanwl3881"},"content":"list","lastModifiedDate":"2022-09-30"},{"lineNumber":441,"author":{"gitId":"Eugenetanwl3881"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":442,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":443,"author":{"gitId":"Eugenetanwl3881"},"content":"Output","lastModifiedDate":"2022-09-30"},{"lineNumber":444,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":445,"author":{"gitId":"Eugenetanwl3881"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":446,"author":{"gitId":"Eugenetanwl3881"},"content":"Here are the items in your inventory:","lastModifiedDate":"2022-09-30"},{"lineNumber":447,"author":{"gitId":"Eugenetanwl3881"},"content":"Onions","lastModifiedDate":"2022-09-30"},{"lineNumber":448,"author":{"gitId":"Eugenetanwl3881"},"content":"Details about onions","lastModifiedDate":"2022-09-30"},{"lineNumber":449,"author":{"gitId":"Eugenetanwl3881"},"content":"Tomatoes","lastModifiedDate":"2022-09-30"},{"lineNumber":450,"author":{"gitId":"Eugenetanwl3881"},"content":"Details about tomatoes","lastModifiedDate":"2022-09-30"},{"lineNumber":451,"author":{"gitId":"Eugenetanwl3881"},"content":"Chicken wings","lastModifiedDate":"2022-09-30"},{"lineNumber":452,"author":{"gitId":"Eugenetanwl3881"},"content":"Details about chicken wings","lastModifiedDate":"2022-09-30"},{"lineNumber":453,"author":{"gitId":"Eugenetanwl3881"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":454,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":455,"author":{"gitId":"yixiann"},"content":"### Search for an item","lastModifiedDate":"2022-10-04"},{"lineNumber":456,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":457,"author":{"gitId":"yixiann"},"content":"\u003c!--- Remember to implement find by tags--\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":458,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":459,"author":{"gitId":"yixiann"},"content":"Command: `find NAME`","lastModifiedDate":"2022-10-04"},{"lineNumber":460,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":461,"author":{"gitId":"yixiann"},"content":"\u003e Description: Find an inventory item based on the given keywords","lastModifiedDate":"2022-10-04"},{"lineNumber":462,"author":{"gitId":"yixiann"},"content":"\u003e The search is case-insensitive. (e.g. apples will match Apples)","lastModifiedDate":"2022-10-04"},{"lineNumber":463,"author":{"gitId":"yixiann"},"content":"\u003e The order of the keyword does not matter e.g (rose apple will match apple rose)","lastModifiedDate":"2022-10-04"},{"lineNumber":464,"author":{"gitId":"yixiann"},"content":"\u003e Only the item name is searched","lastModifiedDate":"2022-10-04"},{"lineNumber":465,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":466,"author":{"gitId":"Eugenetanwl3881"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":467,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":468,"author":{"gitId":"Eugenetanwl3881"},"content":"Example:","lastModifiedDate":"2022-09-30"},{"lineNumber":469,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":470,"author":{"gitId":"Eugenetanwl3881"},"content":"Input","lastModifiedDate":"2022-09-30"},{"lineNumber":471,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":472,"author":{"gitId":"Eugenetanwl3881"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":473,"author":{"gitId":"yixiann"},"content":"find apple","lastModifiedDate":"2022-10-04"},{"lineNumber":474,"author":{"gitId":"Eugenetanwl3881"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":475,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":476,"author":{"gitId":"Eugenetanwl3881"},"content":"Output","lastModifiedDate":"2022-09-30"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":478,"author":{"gitId":"Eugenetanwl3881"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":479,"author":{"gitId":"yixiann"},"content":"Here are the results matching your search","lastModifiedDate":"2022-10-04"},{"lineNumber":480,"author":{"gitId":"yixiann"},"content":"Green apple","lastModifiedDate":"2022-10-04"},{"lineNumber":481,"author":{"gitId":"yixiann"},"content":"Rose apple","lastModifiedDate":"2022-10-04"},{"lineNumber":482,"author":{"gitId":"Eugenetanwl3881"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":484,"author":{"gitId":"yixiann"},"content":"#### Sort all items by an attribute","lastModifiedDate":"2022-10-04"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":486,"author":{"gitId":"yixiann"},"content":"#### View the information of an item","lastModifiedDate":"2022-10-04"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":488,"author":{"gitId":"yixiann"},"content":"#### Increase the quantity of an item","lastModifiedDate":"2022-10-04"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":490,"author":{"gitId":"yixiann"},"content":"#### Decrease the quantity of an item","lastModifiedDate":"2022-10-04"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":492,"author":{"gitId":"yixiann"},"content":"#### Update the information of an item","lastModifiedDate":"2022-10-04"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":494,"author":{"gitId":"yixiann"},"content":"#### Delete an item","lastModifiedDate":"2022-10-04"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":496,"author":{"gitId":"yixiann"},"content":"Command: `[item] delete ITEM_INDEX`","lastModifiedDate":"2022-10-04"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":498,"author":{"gitId":"yixiann"},"content":"\u003e Description: Deletes a specified item. Returns a warning if the item does not exist. ","lastModifiedDate":"2022-10-04"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":500,"author":{"gitId":"yixiann"},"content":"---","lastModifiedDate":"2022-10-04"},{"lineNumber":501,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":502,"author":{"gitId":"yixiann"},"content":"Example: ","lastModifiedDate":"2022-10-04"},{"lineNumber":503,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":504,"author":{"gitId":"yixiann"},"content":"Input","lastModifiedDate":"2022-10-04"},{"lineNumber":505,"author":{"gitId":"yixiann"},"content":"```","lastModifiedDate":"2022-10-04"},{"lineNumber":506,"author":{"gitId":"yixiann"},"content":"delete 1","lastModifiedDate":"2022-10-04"},{"lineNumber":507,"author":{"gitId":"yixiann"},"content":"```","lastModifiedDate":"2022-10-04"},{"lineNumber":508,"author":{"gitId":"yixiann"},"content":"Output","lastModifiedDate":"2022-10-04"},{"lineNumber":509,"author":{"gitId":"yixiann"},"content":"```","lastModifiedDate":"2022-10-04"},{"lineNumber":510,"author":{"gitId":"yixiann"},"content":"(Item exists): Item “potato” successfully deleted!","lastModifiedDate":"2022-10-04"},{"lineNumber":511,"author":{"gitId":"yixiann"},"content":"(Item does not exist): No item to be found at index 1. Use “list items” or “find NAME” to find the index of the item to be deleted.","lastModifiedDate":"2022-10-04"},{"lineNumber":512,"author":{"gitId":"yixiann"},"content":"```","lastModifiedDate":"2022-10-04"},{"lineNumber":513,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":514,"author":{"gitId":"yixiann"},"content":"### Tag Features","lastModifiedDate":"2022-10-04"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":516,"author":{"gitId":"yixiann"},"content":"{Insert an image of tags}","lastModifiedDate":"2022-10-04"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":518,"author":{"gitId":"yixiann"},"content":"#### Create a new tag","lastModifiedDate":"2022-10-04"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":520,"author":{"gitId":"yixiann"},"content":"#### List all tags","lastModifiedDate":"2022-10-04"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":522,"author":{"gitId":"yixiann"},"content":"Command: `list tags`","lastModifiedDate":"2022-10-04"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":524,"author":{"gitId":"yixiann"},"content":"\u003e Description: Lists all the tags that the user has created.","lastModifiedDate":"2022-10-04"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":526,"author":{"gitId":"Eugenetanwl3881"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":527,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":528,"author":{"gitId":"Eugenetanwl3881"},"content":"Example:","lastModifiedDate":"2022-09-30"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":530,"author":{"gitId":"Eugenetanwl3881"},"content":"Input","lastModifiedDate":"2022-09-30"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":532,"author":{"gitId":"Eugenetanwl3881"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":533,"author":{"gitId":"yixiann"},"content":"list tags","lastModifiedDate":"2022-10-04"},{"lineNumber":534,"author":{"gitId":"Eugenetanwl3881"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":536,"author":{"gitId":"Eugenetanwl3881"},"content":"Output","lastModifiedDate":"2022-09-30"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":538,"author":{"gitId":"Eugenetanwl3881"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":539,"author":{"gitId":"yixiann"},"content":"Here are the tags that are available:","lastModifiedDate":"2022-10-04"},{"lineNumber":540,"author":{"gitId":"yixiann"},"content":"Fruits","lastModifiedDate":"2022-10-04"},{"lineNumber":541,"author":{"gitId":"yixiann"},"content":"Vegetables","lastModifiedDate":"2022-10-04"},{"lineNumber":542,"author":{"gitId":"yixiann"},"content":"Spices","lastModifiedDate":"2022-10-04"},{"lineNumber":543,"author":{"gitId":"Eugenetanwl3881"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":545,"author":{"gitId":"yixiann"},"content":"#### Tag an item","lastModifiedDate":"2022-10-04"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":547,"author":{"gitId":"yixiann"},"content":"#### Untag an item","lastModifiedDate":"2022-10-04"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":549,"author":{"gitId":"yixiann"},"content":"#### Rename a tag","lastModifiedDate":"2022-10-04"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":551,"author":{"gitId":"yixiann"},"content":"#### Delete a tag","lastModifiedDate":"2022-10-04"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":553,"author":{"gitId":"yixiann"},"content":"### Receive help during usage","lastModifiedDate":"2022-10-04"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":555,"author":{"gitId":"yixiann"},"content":"Command: `help`","lastModifiedDate":"2022-09-30"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":557,"author":{"gitId":"yixiann"},"content":"\u003e Description: Displays a list of commands that can be used.","lastModifiedDate":"2022-09-30"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":559,"author":{"gitId":"yixiann"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":561,"author":{"gitId":"yixiann"},"content":"Example:","lastModifiedDate":"2022-09-30"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":563,"author":{"gitId":"yixiann"},"content":"Input","lastModifiedDate":"2022-09-30"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":565,"author":{"gitId":"yixiann"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":566,"author":{"gitId":"yixiann"},"content":"help","lastModifiedDate":"2022-09-30"},{"lineNumber":567,"author":{"gitId":"yixiann"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":569,"author":{"gitId":"yixiann"},"content":"Output:","lastModifiedDate":"2022-09-30"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":571,"author":{"gitId":"yixiann"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":572,"author":{"gitId":"yixiann"},"content":"list:","lastModifiedDate":"2022-09-30"},{"lineNumber":573,"author":{"gitId":"yixiann"},"content":"    Lists all the items/tags that the user has created.","lastModifiedDate":"2022-09-30"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":575,"author":{"gitId":"yixiann"},"content":"    Usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":576,"author":{"gitId":"yixiann"},"content":"        List items:  \"list items\"","lastModifiedDate":"2022-09-30"},{"lineNumber":577,"author":{"gitId":"yixiann"},"content":"        List tags:   \"list tags\"","lastModifiedDate":"2022-09-30"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":579,"author":{"gitId":"yixiann"},"content":"item:","lastModifiedDate":"2022-09-30"},{"lineNumber":580,"author":{"gitId":"yixiann"},"content":"    Create / Delete / Increment quantity / Decrement quantity /","lastModifiedDate":"2022-09-30"},{"lineNumber":581,"author":{"gitId":"yixiann"},"content":"    Set quantity / Set expiry date / Set bought date, of an item.","lastModifiedDate":"2022-09-30"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":583,"author":{"gitId":"yixiann"},"content":"    Flags:","lastModifiedDate":"2022-09-30"},{"lineNumber":584,"author":{"gitId":"yixiann"},"content":"        Name:        n/","lastModifiedDate":"2022-09-30"},{"lineNumber":585,"author":{"gitId":"yixiann"},"content":"        Quantity:    qty/","lastModifiedDate":"2022-09-30"},{"lineNumber":586,"author":{"gitId":"yixiann"},"content":"        Expiry Date: exp/","lastModifiedDate":"2022-09-30"},{"lineNumber":587,"author":{"gitId":"yixiann"},"content":"        Bought Date: bgt/","lastModifiedDate":"2022-09-30"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":589,"author":{"gitId":"yixiann"},"content":"    Usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":590,"author":{"gitId":"yixiann"},"content":"        Create:      \"item new n/Potatoes\"","lastModifiedDate":"2022-09-30"},{"lineNumber":591,"author":{"gitId":"yixiann"},"content":"        Delete:      \"item del 1\"","lastModifiedDate":"2022-09-30"},{"lineNumber":592,"author":{"gitId":"yixiann"},"content":"        Increment:   \"item inc 1 10\"","lastModifiedDate":"2022-09-30"},{"lineNumber":593,"author":{"gitId":"yixiann"},"content":"        Decrement:   \"item dec 1 10\"","lastModifiedDate":"2022-09-30"},{"lineNumber":594,"author":{"gitId":"yixiann"},"content":"        Set:         \"item set 1 n/Potatoes qty/10\"","lastModifiedDate":"2022-09-30"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":596,"author":{"gitId":"yixiann"},"content":"find:","lastModifiedDate":"2022-09-30"},{"lineNumber":597,"author":{"gitId":"yixiann"},"content":"    Find an inventory item based on the given keywords.","lastModifiedDate":"2022-09-30"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":599,"author":{"gitId":"yixiann"},"content":"    Usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":600,"author":{"gitId":"yixiann"},"content":"        Find:        \"find potato carrots\"","lastModifiedDate":"2022-09-30"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":602,"author":{"gitId":"yixiann"},"content":"tag:","lastModifiedDate":"2022-09-30"},{"lineNumber":603,"author":{"gitId":"yixiann"},"content":"    Create / Rename / Set item tied to / Delete, a tag.","lastModifiedDate":"2022-09-30"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":605,"author":{"gitId":"yixiann"},"content":"    Flags:","lastModifiedDate":"2022-09-30"},{"lineNumber":606,"author":{"gitId":"yixiann"},"content":"        Name:        n/","lastModifiedDate":"2022-09-30"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":608,"author":{"gitId":"yixiann"},"content":"    Usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":609,"author":{"gitId":"yixiann"},"content":"        Create:      \"tag create food\"","lastModifiedDate":"2022-09-30"},{"lineNumber":610,"author":{"gitId":"yixiann"},"content":"        Rename:      \"tag rename food n/foodie\"","lastModifiedDate":"2022-09-30"},{"lineNumber":611,"author":{"gitId":"yixiann"},"content":"        Set item:    \"tag 1 2 7 71 food\"","lastModifiedDate":"2022-09-30"},{"lineNumber":612,"author":{"gitId":"yixiann"},"content":"        Delete:      \"tag delete food\"","lastModifiedDate":"2022-09-30"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":614,"author":{"gitId":"yixiann"},"content":"bye:","lastModifiedDate":"2022-09-30"},{"lineNumber":615,"author":{"gitId":"yixiann"},"content":"    Exits Foodrem program.","lastModifiedDate":"2022-09-30"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":617,"author":{"gitId":"yixiann"},"content":"    Usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":618,"author":{"gitId":"yixiann"},"content":"        Exit:       \"bye\"","lastModifiedDate":"2022-09-30"},{"lineNumber":619,"author":{"gitId":"yixiann"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":621,"author":{"gitId":"yixiann"},"content":"### Reset the application","lastModifiedDate":"2022-10-04"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":623,"author":{"gitId":"yixiann"},"content":"### Exit the application","lastModifiedDate":"2022-10-04"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":625,"author":{"gitId":"Eugenetanwl3881"},"content":"Command: `bye`","lastModifiedDate":"2022-09-30"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":627,"author":{"gitId":"yixiann"},"content":"\u003e Description: Exits FoodRem program.","lastModifiedDate":"2022-10-04"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":629,"author":{"gitId":"Eugenetanwl3881"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":631,"author":{"gitId":"Eugenetanwl3881"},"content":"Example:","lastModifiedDate":"2022-09-30"},{"lineNumber":632,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":633,"author":{"gitId":"Eugenetanwl3881"},"content":"Input","lastModifiedDate":"2022-09-30"},{"lineNumber":634,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":635,"author":{"gitId":"Eugenetanwl3881"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":636,"author":{"gitId":"Eugenetanwl3881"},"content":"bye","lastModifiedDate":"2022-09-30"},{"lineNumber":637,"author":{"gitId":"Eugenetanwl3881"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":638,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":639,"author":{"gitId":"Eugenetanwl3881"},"content":"## Command Summary","lastModifiedDate":"2022-09-29"},{"lineNumber":640,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":641,"author":{"gitId":"yixiann"},"content":"### Item Commands","lastModifiedDate":"2022-10-04"},{"lineNumber":642,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":643,"author":{"gitId":"Eugenetanwl3881"},"content":"\u003ctable\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":644,"author":{"gitId":"Eugenetanwl3881"},"content":"\u003cthead\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":645,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":646,"author":{"gitId":"yixiann"},"content":"    \u003cth\u003eAction\u003c/th\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":647,"author":{"gitId":"yixiann"},"content":"    \u003cth\u003eFormat\u003c/th\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":648,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":649,"author":{"gitId":"Eugenetanwl3881"},"content":"\u003c/thead\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":650,"author":{"gitId":"Eugenetanwl3881"},"content":"\u003ctbody\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":651,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":652,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eCreate a new item\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":653,"author":{"gitId":"bryanljx"},"content":"    \u003ctd\u003e\u003cb\u003enew n/ITEM_NAME [qty/QUANTITY] [unit/UNIT] [bgt/BOUGHT_DATE] [exp/EXPIRY_DATE]\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Example:\u003c/u\u003e\u003cbr\u003enew n/Potato qty/70 unit/kg bgt/22-02-11 exp/22-03/11\u003c/td\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":654,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":655,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":656,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eList all items\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":657,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003e\u003cb\u003elist\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Example:\u003c/u\u003e\u003cbr\u003elist\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":658,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":659,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":660,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eSearch for an item\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":661,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003e\u003cb\u003efind n/ITEM_NAME\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Example:\u003c/u\u003e\u003cbr\u003efind n/Potato\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":662,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":663,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":664,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eSort an item by name, quantity, type, bought date or expiry date.\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":665,"author":{"gitId":"bryanljx"},"content":"    \u003ctd\u003e\u003cb\u003esort [n/] [qty/] [unit/] [bgt/] [exp/]\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Example:\u003c/u\u003e\u003cbr\u003esort n/\u003cbr\u003esort qty/\u003cbr\u003esort qty/ bgt/\u003cbr\u003e\u003cbr\u003e\u003cu\u003eInvalid Example:\u003c/u\u003e\u003cbr\u003esort\u003c/td\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":666,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":667,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":668,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eView information about an item\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":669,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003e\u003cb\u003eview id/INDEX\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Examples:\u003c/u\u003e\u003cbr\u003eview id/1\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":670,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":671,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":672,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eIncrease the quantity of an item\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":673,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003e\u003cb\u003einc id/INDEX_LIST [qty/QUANTITY]\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Examples:\u003c/u\u003e\u003cbr\u003einc id/1 qty/100\u003cbr\u003einc id/1,2,3 qty/100\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":674,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":675,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":676,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eDecrease the quantity of an item\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":677,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003e\u003cb\u003edec id/INDEX_LIST [qty/QUANTITY]\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Examples:\u003c/u\u003e\u003cbr\u003edec id/1 qty/100\u003cbr\u003edec id/1,2,3 qty/100\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":678,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":679,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":680,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eUpdate the information of an item\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":681,"author":{"gitId":"bryanljx"},"content":"    \u003ctd\u003e\u003cb\u003eset id/INDEX_LIST [n/ITEM_NAME] [qty/QUANTITY] [unit/UNIT] [bgt/BOUGHT_DATE] [exp/EXPIRY_DATE]\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e❗ IMPORTANT:\u003cbr\u003eDo not update multiple items to have the same name\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Examples:\u003c/u\u003e\u003cbr\u003eset id/1 n/Potatoes qty/60 unit/kg\u003cbr\u003eset id/1,2,3 qty/60\u003c/td\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":682,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":683,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":684,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eDelete an item\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":685,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003e\u003cb\u003edel id/INDEX_LIST\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Examples:\u003c/u\u003e\u003cbr\u003edel id/1\u003cbr\u003edel id/1,2,3\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":686,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":687,"author":{"gitId":"yixiann"},"content":"\u003c/tbody\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":688,"author":{"gitId":"yixiann"},"content":"\u003c/table\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":689,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":690,"author":{"gitId":"yixiann"},"content":"### Tag Commands","lastModifiedDate":"2022-10-04"},{"lineNumber":691,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":692,"author":{"gitId":"yixiann"},"content":"\u003ctable\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":693,"author":{"gitId":"yixiann"},"content":"\u003cthead\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":694,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":695,"author":{"gitId":"yixiann"},"content":"    \u003cth\u003eAction\u003c/th\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":696,"author":{"gitId":"yixiann"},"content":"    \u003cth\u003eFormat\u003c/th\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":697,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":698,"author":{"gitId":"yixiann"},"content":"\u003c/thead\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":699,"author":{"gitId":"yixiann"},"content":"\u003ctbody\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":700,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":701,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003eCreate a new tag\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":702,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003e\u003cb\u003enewtag n/TAG_NAME\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Examples:\u003c/u\u003e\u003cbr\u003enewtag n/Food\u003cbr\u003enewtag n/Condiments\u003cbr\u003e\u003cbr\u003e\u003cu\u003eInvalid Examples:\u003c/u\u003e\u003cbr\u003enewtag Food\u003cbr\u003enewtag Condiments\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":703,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":704,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":705,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003eList all tags available\u003cbr\u003e\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":706,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003e\u003cb\u003elisttag\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Example:\u003c/u\u003e\u003cbr\u003elisttag\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eInvalid Example:\u003c/u\u003e\u003cbr\u003elisttags\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":707,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":708,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":709,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003eTag items with a specific tag\u003cbr\u003e\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":710,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003e\u003cb\u003etag n/TAG_NAME id/INDEX_LIST\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Examples:\u003c/u\u003e\u003cbr\u003etag n/Condiments id/1\u003cbr\u003etag n/Condiments id/1,2,4,8\u003cbr\u003e\u003cbr\u003e\u003cu\u003eInvalid Example:\u003c/u\u003e\u003cbr\u003etag Condiments 1\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":711,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":712,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":713,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003eUntag items with a specific tag\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":714,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003e\u003cb\u003euntag n/TAG_NAME id/INDEX_LIST\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Examples:\u003c/u\u003e\u003cbr\u003euntag n/Condiments id/1\u003cbr\u003euntag n/Condiments id/1,2,4,8\u003cbr\u003e\u003cbr\u003e\u003cu\u003eInvalid Example:\u003c/u\u003e\u003cbr\u003euntag Condiments 1,2\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":715,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":716,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":717,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003eRename a tag\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":718,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003e\u003cb\u003erenametag n/TAG_NAME n/TAG_NAME\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Example:\u003c/u\u003e\u003cbr\u003erenametag n/Condiments n/Condiment\u003cbr\u003e\u003cbr\u003e\u003cu\u003eInvalid Example:\u003c/u\u003e\u003cbr\u003erenametag Condiments Condiment\u003c/u\u003e\u003cbr\u003e\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":719,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":720,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":721,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003eDelete a tag\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":722,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003e\u003cb\u003edelete n/TAG_NAME\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Examples:\u003c/u\u003e\u003cbr\u003edeletetag n/Food\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eInvalid Examples:\u003c/u\u003e\u003cbr\u003edeletetag n/\u003cbr\u003edeletetag Food\u003cbr\u003edeletetag Condiments\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":723,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":724,"author":{"gitId":"yixiann"},"content":"\u003c/tbody\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":725,"author":{"gitId":"yixiann"},"content":"\u003c/table\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":726,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":727,"author":{"gitId":"yixiann"},"content":"### Other Commands","lastModifiedDate":"2022-10-04"},{"lineNumber":728,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":729,"author":{"gitId":"yixiann"},"content":"\u003ctable\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":730,"author":{"gitId":"yixiann"},"content":"\u003cthead\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":731,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":732,"author":{"gitId":"yixiann"},"content":"    \u003cth\u003eAction\u003c/th\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":733,"author":{"gitId":"yixiann"},"content":"    \u003cth\u003eFormat\u003c/th\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":734,"author":{"gitId":"yixiann"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":735,"author":{"gitId":"yixiann"},"content":"\u003c/thead\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":736,"author":{"gitId":"yixiann"},"content":"\u003ctbody\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":737,"author":{"gitId":"yixiann"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":738,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eShows a help dialog with a list of available commands\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":739,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003e\u003cb\u003ehelp\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003cu\u003eValid Example:\u003c/u\u003e\u003cbr\u003ehelp\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":740,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":741,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":742,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eReset the application\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":743,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003e\u003cb\u003ereset\u003c/b\u003e\u003cbr\u003e\u003cu\u003e\u003cbr\u003eValid Example:\u003c/u\u003e\u003cbr\u003ereset\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":744,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":745,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":746,"author":{"gitId":"yixiann"},"content":"    \u003ctd\u003eExit the application\u003c/td\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":747,"author":{"gitId":"Eugenetanwl3881"},"content":"    \u003ctd\u003e\u003cb\u003eexit\u003c/b\u003e\u003cbr\u003e\u003cu\u003e\u003cbr\u003eValid Examples:\u003c/u\u003e\u003cbr\u003eexit\u003c/td\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":748,"author":{"gitId":"Eugenetanwl3881"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":749,"author":{"gitId":"Eugenetanwl3881"},"content":"\u003c/tbody\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":750,"author":{"gitId":"Eugenetanwl3881"},"content":"\u003c/table\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":751,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":752,"author":{"gitId":"Eugenetanwl3881"},"content":"## Troubleshooting","lastModifiedDate":"2022-09-29"},{"lineNumber":753,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":754,"author":{"gitId":"Eugenetanwl3881"},"content":"Something goes here...","lastModifiedDate":"2022-09-29"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":756,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2022-09-29"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":758,"author":{"gitId":"Eugenetanwl3881"},"content":"Something goes here...","lastModifiedDate":"2022-09-29"},{"lineNumber":759,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":760,"author":{"gitId":"Eugenetanwl3881"},"content":"## Future Extensions","lastModifiedDate":"2022-09-29"},{"lineNumber":761,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":762,"author":{"gitId":"Eugenetanwl3881"},"content":"(NOT COMPLETED)","lastModifiedDate":"2022-09-29"},{"lineNumber":763,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":764,"author":{"gitId":"Eugenetanwl3881"},"content":"1. Food expiring soon / Date food bought","lastModifiedDate":"2022-09-29"},{"lineNumber":765,"author":{"gitId":"Eugenetanwl3881"},"content":"   **Glorified search and sort**","lastModifiedDate":"2022-09-29"},{"lineNumber":766,"author":{"gitId":"Eugenetanwl3881"},"content":"   a. Upgrade sort and search b. Sort food items by quantity c. Sort food items by name d. Sort food items by expiry","lastModifiedDate":"2022-09-29"},{"lineNumber":767,"author":{"gitId":"Eugenetanwl3881"},"content":"   date e. Sort food items by purchase date","lastModifiedDate":"2022-09-29"},{"lineNumber":768,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":769,"author":{"gitId":"Eugenetanwl3881"},"content":"2. Food buffer a. Rainbow UI / Dashboard b. Optional : Minimum acceptable quantity c. Optional : Percentage of stock","lastModifiedDate":"2022-09-29"},{"lineNumber":770,"author":{"gitId":"Eugenetanwl3881"},"content":"   expiring","lastModifiedDate":"2022-09-29"},{"lineNumber":771,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":772,"author":{"gitId":"Eugenetanwl3881"},"content":"3. Purchasing (Hard -\u003e Will not see benefit immediately)","lastModifiedDate":"2022-09-29"},{"lineNumber":773,"author":{"gitId":"Eugenetanwl3881"},"content":"   a. History + Statistics b. Inventory need a price of items","lastModifiedDate":"2022-09-29"},{"lineNumber":774,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":775,"author":{"gitId":"Eugenetanwl3881"},"content":"4. (Last priority) Order management a. Grouping of items b. Creation of menu with specific items c. Record menu items","lastModifiedDate":"2022-09-29"},{"lineNumber":776,"author":{"gitId":"Eugenetanwl3881"},"content":"   bought d. Statistics","lastModifiedDate":"2022-09-29"},{"lineNumber":777,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":778,"author":{"gitId":"Eugenetanwl3881"},"content":"## Acknowledgements","lastModifiedDate":"2022-09-29"},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":780,"author":{"gitId":"Eugenetanwl3881"},"content":"Something goes here...","lastModifiedDate":"2022-09-29"},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":782,"author":{"gitId":"Eugenetanwl3881"},"content":"## Glossary","lastModifiedDate":"2022-09-29"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":784,"author":{"gitId":"Eugenetanwl3881"},"content":"Something goes here...","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"Eugenetanwl3881":170,"bryanljx":31,"Ferusel":3,"yixiann":475,"-":105}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AddressBook Level-3","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W16-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S1-CS2103T-W16-2/tp)","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"- If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"- If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"- Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"RichDom2185":3,"yixiann":1,"-":14}},{"path":"docs/team/bryanljx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"title: Bryan Lim Jing Xiang\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"- **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"  - What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"  - Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"  - Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"  - Credits: _{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}_","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"- **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"- **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"- **Project management**:","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"  - Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"  - Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"  - Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"- **Documentation**:","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"  - User Guide:","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"    - Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"    - Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"  - Developer Guide:","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"    - Added implementation details of the `delete` feature.","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"- **Community**:","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"  - PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"  - Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"  - Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"  - Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"RichDom2185"},"content":"- **Tools**:","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"RichDom2185"},"content":"  - Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"  - Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"RichDom2185"},"content":"- _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"bryanljx":19,"RichDom2185":33}},{"path":"docs/team/eugenetanwl3881.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"Eugenetanwl3881"},"content":"layout: page","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"Eugenetanwl3881"},"content":"title: Eugene Tan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"Eugenetanwl3881"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"Eugenetanwl3881"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"Eugenetanwl3881"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-23"},{"lineNumber":9,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"Eugenetanwl3881"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"- **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"  - What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"  - Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"  - Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"  - Credits: _{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}_","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"- **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"- **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"- **Project management**:","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"  - Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"  - Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"  - Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"- **Documentation**:","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"  - User Guide:","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"    - Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"    - Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"  - Developer Guide:","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"    - Added implementation details of the `delete` feature.","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"- **Community**:","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"  - PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"  - Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"  - Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"  - Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"RichDom2185"},"content":"- **Tools**:","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"RichDom2185"},"content":"  - Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"  - Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"RichDom2185"},"content":"- _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"Eugenetanwl3881":19,"RichDom2185":33}},{"path":"docs/team/ferusel.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ferusel"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"Ferusel"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"Ferusel"},"content":"title: Mai Ting Kai\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"Ferusel"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"Ferusel"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"Ferusel"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"Ferusel"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"- **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"  - What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"  - Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"  - Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"  - Credits: _{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}_","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"- **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"- **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"- **Project management**:","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"  - Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"  - Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"  - Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"- **Documentation**:","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"  - User Guide:","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"    - Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"    - Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"  - Developer Guide:","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"    - Added implementation details of the `delete` feature.","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"- **Community**:","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"  - PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"  - Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"  - Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"  - Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"RichDom2185"},"content":"- **Tools**:","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"RichDom2185"},"content":"  - Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"RichDom2185"},"content":"  - Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"- \\_{you can add/remove categories in the list above}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"Ferusel":11,"RichDom2185":39}},{"path":"docs/team/richdom2185.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"title: Richard Dominick\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"- **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"  - What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"  - Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"  - Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"  - Credits: _{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}_","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"- **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"- **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"- **Project management**:","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"  - Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"  - Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"  - Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"- **Documentation**:","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"  - User Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"    - Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"    - Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"  - Developer Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"    - Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"- **Community**:","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"  - PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"  - Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"  - Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"  - Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"RichDom2185"},"content":"- **Tools**:","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"RichDom2185"},"content":"  - Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"  - Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"RichDom2185"},"content":"- _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"RichDom2185":52}},{"path":"docs/team/yixiann.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"title: Tan Yi Xian\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"- **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"  - What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"  - Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"  - Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"  - Credits: _{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}_","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"- **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"- **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"- **Project management**:","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"  - Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"  - Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"  - Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"- **Documentation**:","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"  - User Guide:","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"    - Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"    - Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"  - Developer Guide:","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"    - Added implementation details of the `delete` feature.","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"- **Community**:","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"  - PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"  - Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"  - Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"  - Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"RichDom2185"},"content":"- **Tools**:","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"RichDom2185"},"content":"  - Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"  - Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"RichDom2185"},"content":"- _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"RichDom2185":33,"yixiann":19}},{"path":"src/main/java/seedu/address/logic/commands/generalcommands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.generalcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Eugenetanwl3881":3,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/generalcommands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.generalcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Eugenetanwl3881":3,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/generalcommands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.generalcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Eugenetanwl3881":3,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/personcommands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Eugenetanwl3881":3,"-":66}},{"path":"src/main/java/seedu/address/logic/commands/personcommands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Eugenetanwl3881":3,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/personcommands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Eugenetanwl3881":3,"-":225}},{"path":"src/main/java/seedu/address/logic/commands/personcommands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Eugenetanwl3881":3,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/personcommands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Eugenetanwl3881":3,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/tagcommands/ListTagsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.tagcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"Eugenetanwl3881"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"Eugenetanwl3881"},"content":" * Lists all the tags available","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"Eugenetanwl3881"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"Eugenetanwl3881"},"content":"public class ListTagsCommand{","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"Eugenetanwl3881"},"content":"    //To be implemented","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"Eugenetanwl3881"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Eugenetanwl3881":8}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.AddCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Eugenetanwl3881":1,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.generalcommands.ClearCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.generalcommands.ExitCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.generalcommands.HelpCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.AddCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.DeleteCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.EditCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.FindCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.ListCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Eugenetanwl3881":8,"-":68}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.DeleteCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Eugenetanwl3881":1,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.EditCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Eugenetanwl3881":2,"-":80}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.FindCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Eugenetanwl3881":1,"-":32}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"import seedu.address.model.tag.UniqueTagList;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"    private final UniqueTagList tags;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"        tags \u003d new UniqueTagList();","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"bryanljx"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"bryanljx"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"bryanljx"},"content":"    public void setTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"bryanljx"},"content":"        this.tags.setTags(tags);","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"bryanljx"},"content":"        setTags(newData.getTagList());","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"bryanljx"},"content":"    //// tag-level methods","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"bryanljx"},"content":"     * Returns true if a tag with the same name as {@code tag} exists in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"bryanljx"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"bryanljx"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"bryanljx"},"content":"        return tags.contains(tag);","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"bryanljx"},"content":"     * Adds a tag to the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"bryanljx"},"content":"     * The tag must not already exist in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"bryanljx"},"content":"    public void addTag(Tag t) {","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"bryanljx"},"content":"        tags.add(t);","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"bryanljx"},"content":"     * Replaces the given person {@code target} in the list with {@code editedTag}.","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"bryanljx"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"bryanljx"},"content":"     * The tag in {@code editedTag} must not be the same as another existing tag in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"bryanljx"},"content":"    public void setTag(Tag target, Tag editedTag) {","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"bryanljx"},"content":"        requireNonNull(editedTag);","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"bryanljx"},"content":"        tags.setTag(target, editedTag);","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"bryanljx"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"bryanljx"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"bryanljx"},"content":"    public void removeTag(Tag key) {","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"bryanljx"},"content":"        tags.remove(key);","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"bryanljx"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\"","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"bryanljx"},"content":"                + tags.asUnmodifiableObservableList().size() + \" tags\";","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":159,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"bryanljx"},"content":"    public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"bryanljx"},"content":"        return tags.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"bryanljx"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons))","lastModifiedDate":"2022-10-04"},{"lineNumber":169,"author":{"gitId":"bryanljx"},"content":"                \u0026\u0026 tags.equals(((AddressBook) other).tags);","lastModifiedDate":"2022-10-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"bryanljx"},"content":"        return persons.hashCode() ^ tags.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanljx":59,"-":117}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"    Predicate\u003cTag\u003e PREDICATE_SHOW_ALL_TAGS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"bryanljx"},"content":"     * Returns true if a tag with the same name as {@code tag} exists in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"bryanljx"},"content":"    boolean hasTag(Tag tag);","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"bryanljx"},"content":"     * Deletes the given tag.","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"bryanljx"},"content":"     * The tag must exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"bryanljx"},"content":"    void deleteTag(Tag target);","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"bryanljx"},"content":"     * Adds the given tag.","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"bryanljx"},"content":"     * {@code tag} must not already exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"bryanljx"},"content":"    void addTag(Tag tag);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"bryanljx"},"content":"     * Replaces the given tag {@code target} with {@code editedTag}.","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"bryanljx"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"bryanljx"},"content":"     * The tag name of {@code editedTag} must not be the same as another existing tag in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"bryanljx"},"content":"    void setTag(Tag target, Tag editedTag);","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"bryanljx"},"content":"    /** Returns an unmodifiable view of the filtered tag list */","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"bryanljx"},"content":"    ObservableList\u003cTag\u003e getFilteredTagList();","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"bryanljx"},"content":"     * Updates the filter of the filtered tag list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"bryanljx"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"bryanljx"},"content":"    void updateFilteredTagList(Predicate\u003cTag\u003e predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bryanljx":37,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"    private final FilteredList\u003cTag\u003e filteredTags;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"        filteredTags \u003d new FilteredList\u003c\u003e(this.addressBook.getTagList());","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"bryanljx"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"bryanljx"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"bryanljx"},"content":"        return addressBook.hasTag(tag);","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"bryanljx"},"content":"    public void deleteTag(Tag target) {","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"bryanljx"},"content":"        addressBook.removeTag(target);","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"bryanljx"},"content":"    public void addTag(Tag tag) {","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"bryanljx"},"content":"        addressBook.addTag(tag);","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"bryanljx"},"content":"        updateFilteredTagList(PREDICATE_SHOW_ALL_TAGS);","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"bryanljx"},"content":"    public void setTag(Tag target, Tag editedTag) {","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"bryanljx"},"content":"        requireAllNonNull(target, editedTag);","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"bryanljx"},"content":"        addressBook.setTag(target, editedTag);","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":153,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"bryanljx"},"content":"     * Returns an unmodifiable view of the list of {@code Tag} backed by the internal list of","lastModifiedDate":"2022-10-04"},{"lineNumber":155,"author":{"gitId":"bryanljx"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":157,"author":{"gitId":"bryanljx"},"content":"    public ObservableList\u003cTag\u003e getFilteredTagList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"bryanljx"},"content":"        return filteredTags;","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":167,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"bryanljx"},"content":"    public void updateFilteredTagList(Predicate\u003cTag\u003e predicate) {","lastModifiedDate":"2022-10-04"},{"lineNumber":169,"author":{"gitId":"bryanljx"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":170,"author":{"gitId":"bryanljx"},"content":"        filteredTags.setPredicate(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":171,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":189,"author":{"gitId":"bryanljx"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-10-04"},{"lineNumber":190,"author":{"gitId":"bryanljx"},"content":"                \u0026\u0026 filteredTags.equals(other.filteredTags);","lastModifiedDate":"2022-10-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanljx":44,"-":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"    ObservableList\u003cTag\u003e getTagList();","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanljx":2,"-":17}},{"path":"src/main/java/seedu/address/model/item/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ferusel"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Ferusel"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"Ferusel"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Ferusel"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Ferusel"},"content":" * Represents an Item in FoodREM.","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"Ferusel"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Ferusel"},"content":"public class Item {","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"    // Identity fields","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    private final ItemName name;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    // Data fields","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"    private final ItemQuantity quantity;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"    private final ItemUnit unit;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"Ferusel"},"content":"    private final ItemBoughtDate boughtDate;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"Ferusel"},"content":"    private final ItemExpiryDate expiryDate;","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    // TODO: Implement Item with Tags","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Ferusel"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Ferusel"},"content":"     * Constructs an item.","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"Ferusel"},"content":"     * @param name       Name of the item.","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Ferusel"},"content":"     * @param quantity   Quantity of the item.","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"     * @param unit       Unit of the item.","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"Ferusel"},"content":"     * @param boughtDate Date when the item was purchased.","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"     * @param expiryDate Date when the item will expire.","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"Ferusel"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Ferusel"},"content":"    public Item(ItemName name,","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"Ferusel"},"content":"                ItemQuantity quantity,","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"Ferusel"},"content":"                ItemUnit unit,","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"Ferusel"},"content":"                ItemBoughtDate boughtDate,","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"Ferusel"},"content":"                ItemExpiryDate expiryDate) {","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"        requireAllNonNull(name, quantity, unit, boughtDate, expiryDate);","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"Ferusel"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Ferusel"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"        this.unit \u003d unit;","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"Ferusel"},"content":"        this.boughtDate \u003d boughtDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Ferusel"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Ferusel"},"content":"    public ItemName getName() {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Ferusel"},"content":"        return name;","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Ferusel"},"content":"    public ItemQuantity getQuantity() {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Ferusel"},"content":"        return quantity;","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"    public ItemUnit getUnit() {","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"        return unit;","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"Ferusel"},"content":"    public ItemBoughtDate getBoughtDate() {","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"Ferusel"},"content":"        return boughtDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Ferusel"},"content":"    public ItemExpiryDate getExpiryDate() {","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"Ferusel"},"content":"        return expiryDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"Ferusel"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"yixiann"},"content":"     * Returns true if both items have the same name.","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"yixiann"},"content":"     * This defines a weaker notion of equality between two items.","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"yixiann"},"content":"    public boolean isSameItem(Item otherItem) {","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"yixiann"},"content":"        if (otherItem \u003d\u003d this) {","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"yixiann"},"content":"            return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"yixiann"},"content":"        return otherItem !\u003d null","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"yixiann"},"content":"                \u0026\u0026 otherItem.getName().equals(name);","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"yixiann"},"content":"     * Returns true if both items have the same name and data fields.","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"yixiann"},"content":"     * This defines a stronger notion of equality between two items.","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"yixiann"},"content":"     * @param other an object to compare against.","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"yixiann"},"content":"     * @return true if both items have the same name, false otherwise.","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"Ferusel"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"Ferusel"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"Ferusel"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"Ferusel"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"Ferusel"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"Ferusel"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"Ferusel"},"content":"        if (!(other instanceof Item)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"Ferusel"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"Ferusel"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"Ferusel"},"content":"        Item otherItem \u003d (Item) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"yixiann"},"content":"        return otherItem.getName().equals(name)","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"yixiann"},"content":"                \u0026\u0026 otherItem.getQuantity().equals(quantity)","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"yixiann"},"content":"                \u0026\u0026 otherItem.getUnit().equals(unit)","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"yixiann"},"content":"                \u0026\u0026 otherItem.getBoughtDate().equals(boughtDate)","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"yixiann"},"content":"                \u0026\u0026 otherItem.getExpiryDate().equals(expiryDate);","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"Ferusel"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"yixiann"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"Ferusel"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"Ferusel"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"Ferusel"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"Ferusel"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"yixiann"},"content":"        return Objects.hash(name, quantity, unit, boughtDate, expiryDate);","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"Ferusel"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"yixiann"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-07"},{"lineNumber":115,"author":{"gitId":"Ferusel"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"Ferusel"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"Ferusel"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"yixiann"},"content":"        return String.format(\"%s; Quantity: %s %s; Bought Date: %s, Expiry Date: %s;\",","lastModifiedDate":"2022-10-07"},{"lineNumber":119,"author":{"gitId":"yixiann"},"content":"                name, quantity, unit, boughtDate, expiryDate);","lastModifiedDate":"2022-10-07"},{"lineNumber":120,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"Ferusel"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Ferusel":75,"yixiann":46}},{"path":"src/main/java/seedu/address/model/item/ItemBoughtDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ferusel"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Ferusel"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"Ferusel"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Ferusel"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Ferusel"},"content":"import seedu.address.model.item.itemvalidator.ItemBoughtDateValidator;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":" * Represents an item date in an {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"Ferusel"},"content":"public class ItemBoughtDate {","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"    private static final String DATE_OUTPUT_PATTERN_REGEX \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Ferusel"},"content":"    private final LocalDate itemDate;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"     * Constructs an itemDate.","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"     * @param dateString a string that represents the itemDate of the format","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"Ferusel"},"content":"    public ItemBoughtDate(String dateString) {","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"        requireNonNull(dateString);","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"Ferusel"},"content":"        ItemBoughtDateValidator.validate(dateString);","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"        itemDate \u003d LocalDate.parse(dateString);","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"Ferusel"},"content":"     * Returns true if both {@link ItemBoughtDate#itemDate} have the same date by","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"     * {@link LocalDate#equals(Object)}.","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"Ferusel"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Ferusel"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Ferusel"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Ferusel"},"content":"                || (other instanceof ItemBoughtDate // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"Ferusel"},"content":"                \u0026\u0026 itemDate.equals(((ItemBoughtDate) other).itemDate)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"Ferusel"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Ferusel"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Ferusel"},"content":"        return itemDate.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Ferusel"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"Ferusel"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"Ferusel"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"        return itemDate.format(DateTimeFormatter.ofPattern(DATE_OUTPUT_PATTERN_REGEX));","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"Ferusel"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Ferusel":35,"yixiann":22}},{"path":"src/main/java/seedu/address/model/item/ItemExpiryDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ferusel"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Ferusel"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"Ferusel"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Ferusel"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Ferusel"},"content":"import seedu.address.model.item.itemvalidator.ItemExpiryDateValidator;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":" * Represents an item date in an {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"Ferusel"},"content":"public class ItemExpiryDate {","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"    private static final String DATE_OUTPUT_PATTERN_REGEX \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Ferusel"},"content":"    private final LocalDate itemDate;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"     * Constructs an itemDate.","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"     * @param dateString a string that represents the itemDate of the format","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"Ferusel"},"content":"    public ItemExpiryDate(String dateString) {","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"        requireNonNull(dateString);","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"Ferusel"},"content":"        ItemExpiryDateValidator.validate(dateString);","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"        itemDate \u003d LocalDate.parse(dateString);","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"Ferusel"},"content":"     * Returns true if both {@link ItemExpiryDate#itemDate} have the same date by","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"     * {@link LocalDate#equals(Object)}.","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"Ferusel"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Ferusel"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Ferusel"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Ferusel"},"content":"                || (other instanceof ItemExpiryDate // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"Ferusel"},"content":"                \u0026\u0026 itemDate.equals(((ItemExpiryDate) other).itemDate)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"Ferusel"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Ferusel"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Ferusel"},"content":"        return itemDate.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Ferusel"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"Ferusel"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"Ferusel"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"        return itemDate.format(DateTimeFormatter.ofPattern(DATE_OUTPUT_PATTERN_REGEX));","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"Ferusel"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Ferusel":35,"yixiann":22}},{"path":"src/main/java/seedu/address/model/item/ItemName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ferusel"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Ferusel"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Ferusel"},"content":"import seedu.address.model.item.itemvalidator.ItemNameValidator;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":" * Represents an item name in an {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"Ferusel"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"public class ItemName {","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    private final String itemName;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Ferusel"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"     * Constructs an {@link ItemName}.","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"Ferusel"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"     * @param name a valid item {@link ItemName#itemName}.","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"Ferusel"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Ferusel"},"content":"    public ItemName(String name) {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Ferusel"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"        ItemNameValidator.validate(name);","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"        itemName \u003d name;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"Ferusel"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Ferusel"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Ferusel"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Ferusel"},"content":"                || (other instanceof ItemName // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Ferusel"},"content":"                \u0026\u0026 itemName.equals(((ItemName) other).itemName)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"Ferusel"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Ferusel"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Ferusel"},"content":"        return itemName.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"    public String toString() {","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"        return itemName;","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"Ferusel"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Ferusel":28,"yixiann":23}},{"path":"src/main/java/seedu/address/model/item/ItemQuantity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ferusel"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Ferusel"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import seedu.address.model.item.itemvalidator.ItemQuantityValidator;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":" * Represents an item quantity in an {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"Ferusel"},"content":"public class ItemQuantity {","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"    private static final double DEFAULT_QUANTITY \u003d 0;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"Ferusel"},"content":"    private final double itemQuantity;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"    public ItemQuantity(String itemQuantityString) {","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"        requireNonNull(itemQuantityString);","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"        if (itemQuantityString.isEmpty()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"            itemQuantity \u003d DEFAULT_QUANTITY;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"            return;","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"        ItemQuantityValidator.validate(itemQuantityString);","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"        itemQuantity \u003d Double.parseDouble(itemQuantityString);","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"Ferusel"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Ferusel"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Ferusel"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Ferusel"},"content":"                || (other instanceof ItemQuantity // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"                \u0026\u0026 itemQuantity \u003d\u003d ((ItemQuantity) other).itemQuantity); // state check","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Ferusel"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"Ferusel"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"Ferusel"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Ferusel"},"content":"        return String.valueOf(itemQuantity);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Ferusel"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Ferusel":23,"yixiann":25}},{"path":"src/main/java/seedu/address/model/item/ItemUnit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"Ferusel"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import seedu.address.model.item.itemvalidator.ItemUnitValidator;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":" * Represents an item unit in an {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"public class ItemUnit {","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"    private final String itemUnit;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"     * Constructs an {@link ItemUnit}.","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"     * @param unitString a valid item {@link ItemUnit#itemUnit}.","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"    public ItemUnit(String unitString) {","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"        requireNonNull(unitString);","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"        ItemUnitValidator.validate(unitString);","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"        itemUnit \u003d unitString;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"                || (other instanceof ItemUnit // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"                \u0026\u0026 itemUnit.equals(((ItemUnit) other).itemUnit)); // state check","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"        return itemUnit.hashCode();","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"    public String toString() {","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"        return itemUnit;","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Ferusel":2,"yixiann":50}},{"path":"src/main/java/seedu/address/model/item/itemvalidator/ItemBoughtDateValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package seedu.address.model.item.itemvalidator;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"Ferusel"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"Ferusel"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"Ferusel"},"content":"import seedu.address.model.validator.DateValidator;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"Ferusel"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"Ferusel"},"content":" * Validation class for item dates.","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"Ferusel"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"Ferusel"},"content":"public class ItemBoughtDateValidator {","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"    // Validation for parsing","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    private static final String DATE_INPUT_PATTERN_REGEX \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_INPUT_PATTERN_REGEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"    private static final String MESSAGE_FOR_UNABLE_TO_PARSE \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"            String.format(\"Dates must follow the format %s.\", DATE_INPUT_PATTERN_REGEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    // Validation for year","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"    private static final int MIN_YEAR \u003d 1000;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"    private static final String MESSAGE_FOR_YEAR_TOO_SMALL \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"            String.format(\"Year should be larger than %d.\", MIN_YEAR);","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"    private static final int MAX_YEAR \u003d 2100;","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"    private static final String MESSAGE_FOR_YEAR_TOO_LARGE \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"            String.format(\"Year should be less than %d.\", MAX_YEAR);","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"Ferusel"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"Ferusel"},"content":"     * Validates a given input String.","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"Ferusel"},"content":"     * @param dateString String representation of date to validate against.","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"Ferusel"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"    public static void validate(String dateString) {","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"        checkArgument(isParsableItemDatetime(dateString), MESSAGE_FOR_UNABLE_TO_PARSE);","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"        checkArgument(isYearMoreThanMaxYear(date), MESSAGE_FOR_YEAR_TOO_LARGE);","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"        checkArgument(isYearLessThanMaxYear(date), MESSAGE_FOR_YEAR_TOO_SMALL);","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"     * Returns true if an item date is parsable, false otherwise.","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"     * @param dateTimeString a string that represents the itemDate of the format","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"Ferusel"},"content":"     *                       {@link ItemBoughtDateValidator#DATE_INPUT_PATTERN_REGEX}","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"    private static boolean isParsableItemDatetime(String dateTimeString) {","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"        DateValidator validator \u003d new DateValidator(DATE_TIME_FORMATTER);","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"        return validator.isParsableDateString(dateTimeString);","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"Ferusel"},"content":"     * Returns true if an item date has a year more than {@link ItemBoughtDateValidator#MAX_YEAR}, false otherwise.","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"     * @param date a local date that represents the date of the {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"    private static boolean isYearMoreThanMaxYear(LocalDate date) {","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"        return date.getYear() \u003e MAX_YEAR;","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"Ferusel"},"content":"     * Returns true if an item date has a year less than {@link ItemBoughtDateValidator#MIN_YEAR}, false otherwise.","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"yixiann"},"content":"     * @param date a LocalDate that represents the date of the {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"yixiann"},"content":"    private static boolean isYearLessThanMaxYear(LocalDate date) {","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"yixiann"},"content":"        return date.getYear() \u003c MIN_YEAR;","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Ferusel":14,"yixiann":56}},{"path":"src/main/java/seedu/address/model/item/itemvalidator/ItemExpiryDateValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package seedu.address.model.item.itemvalidator;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"Ferusel"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"Ferusel"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"Ferusel"},"content":"import seedu.address.model.validator.DateValidator;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"Ferusel"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"Ferusel"},"content":" * Validation class for item dates.","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"Ferusel"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"Ferusel"},"content":"public class ItemExpiryDateValidator {","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"    // Validation for parsing","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    private static final String DATE_INPUT_PATTERN_REGEX \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_INPUT_PATTERN_REGEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"    private static final String MESSAGE_FOR_UNABLE_TO_PARSE \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"            String.format(\"Dates must follow the format %s.\", DATE_INPUT_PATTERN_REGEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    // Validation for year","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"    private static final int MIN_YEAR \u003d 1000;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"    private static final String MESSAGE_FOR_YEAR_TOO_SMALL \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"            String.format(\"Year should be larger than %d.\", MIN_YEAR);","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"    private static final int MAX_YEAR \u003d 2100;","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"    private static final String MESSAGE_FOR_YEAR_TOO_LARGE \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"            String.format(\"Year should be less than %d.\", MAX_YEAR);","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"Ferusel"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"Ferusel"},"content":"     * Validates a given input String.","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"Ferusel"},"content":"     * @param dateString String representation of date to validate against.","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"Ferusel"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"    public static void validate(String dateString) {","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"        checkArgument(isParsableItemDatetime(dateString), MESSAGE_FOR_UNABLE_TO_PARSE);","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"        checkArgument(isYearMoreThanMaxYear(date), MESSAGE_FOR_YEAR_TOO_LARGE);","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"        checkArgument(isYearLessThanMaxYear(date), MESSAGE_FOR_YEAR_TOO_SMALL);","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"     * Returns true if an item date is parsable, false otherwise.","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"     * @param dateTimeString a string that represents the itemDate of the format","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"Ferusel"},"content":"     *                       {@link ItemExpiryDateValidator#DATE_INPUT_PATTERN_REGEX}","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"    private static boolean isParsableItemDatetime(String dateTimeString) {","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"        DateValidator validator \u003d new DateValidator(DATE_TIME_FORMATTER);","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"        return validator.isParsableDateString(dateTimeString);","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"Ferusel"},"content":"     * Returns true if an item date has a year more than {@link ItemExpiryDateValidator#MAX_YEAR}, false otherwise.","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"     * @param date a local date that represents the date of the {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"    private static boolean isYearMoreThanMaxYear(LocalDate date) {","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"        return date.getYear() \u003e MAX_YEAR;","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"Ferusel"},"content":"     * Returns true if an item date has a year less than {@link ItemExpiryDateValidator#MIN_YEAR}, false otherwise.","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"yixiann"},"content":"     * @param date a LocalDate that represents the date of the {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"yixiann"},"content":"    private static boolean isYearLessThanMaxYear(LocalDate date) {","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"yixiann"},"content":"        return date.getYear() \u003c MIN_YEAR;","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Ferusel":14,"yixiann":56}},{"path":"src/main/java/seedu/address/model/item/itemvalidator/ItemNameValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package seedu.address.model.item.itemvalidator;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"Ferusel"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"Ferusel"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"Ferusel"},"content":" * Validation class for item names.","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"Ferusel"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"public class ItemNameValidator {","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"    // Validation for characters used in name","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    // TODO: Change validation to match FoodREM","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"    private static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    private static final String MESSAGE_FOR_INVALID_CHARACTERS \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"            \"Item name should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"    // Validation for name length","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"    private static final int MAX_LENGTH \u003d 200;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    private static final String MESSAGE_FOR_NAME_TOO_LONG \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"            String.format(\"Item name should not exceed %d characters\", MAX_LENGTH);","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    private static final String MESSAGE_FOR_NAME_IS_BLANK \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"            \"Item name should not be blank\";","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"Ferusel"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"Ferusel"},"content":"     * Validates a given input String.","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"Ferusel"},"content":"     * @param itemName String representation of item name to validate against.","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"Ferusel"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"Ferusel"},"content":"    public static void validate(String itemName) {","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"Ferusel"},"content":"        checkArgument(doesNameContainInvalidCharacters(itemName), MESSAGE_FOR_INVALID_CHARACTERS);","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"Ferusel"},"content":"        checkArgument(isNameLengthMoreThanMaxLength(itemName), MESSAGE_FOR_NAME_TOO_LONG);","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"Ferusel"},"content":"        checkArgument(isNameBlank(itemName), MESSAGE_FOR_NAME_IS_BLANK);","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"     * Returns true if a given string contains invalid characters, false otherwise.","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"     * @param itemName a string that represents the name of the {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"    private static boolean doesNameContainInvalidCharacters(String itemName) {","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"        return !itemName.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"     * Returns true if an item name has a length more than {@link ItemNameValidator#MAX_LENGTH}, false otherwise.","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"     * @param itemName a string that represents the name of the {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"    private static boolean isNameLengthMoreThanMaxLength(String itemName) {","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"        return itemName.length() \u003e MAX_LENGTH;","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"     * Returns true if an item name is {@link String#isEmpty()}, false otherwise.","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"     * @param itemName a string that represents the name of the {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"    private static boolean isNameBlank(String itemName) {","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"        return itemName.isEmpty();","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Ferusel":13,"yixiann":48}},{"path":"src/main/java/seedu/address/model/item/itemvalidator/ItemQuantityValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package seedu.address.model.item.itemvalidator;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"Ferusel"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"Ferusel"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"Ferusel"},"content":" * Validation class for item quantities.","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"Ferusel"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"public class ItemQuantityValidator {","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"    // Validation for quantity is a number","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    private static final String MESSAGE_FOR_NOT_A_NUMBER \u003d \"Quantities should be a number.\";","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    // Validation for quantity precision","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"    private static final int MAX_DECIMAL_PLACE \u003d 4;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    private static final String DECIMAL_POINT \u003d \".\";","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"    private static final String MESSAGE_FOR_PRECISION_TOO_HIGH \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"            String.format(\"Quantity should not have more than %d decimal places\", MAX_DECIMAL_PLACE);","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"    // Validation for size of quantity","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    private static final int MAX_QUANTITY \u003d 1000000;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"    private static final String MESSAGE_FOR_QUANTITY_TOO_LARGE \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"            String.format(\"Quantity should not be more than %d.\", MAX_QUANTITY);","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"    private static final String MESSAGE_FOR_QUANTITY_IS_NEGATIVE \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"            \"Quantity should not be negative.\";","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"Ferusel"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"Ferusel"},"content":"     * Validates a given input String.","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"Ferusel"},"content":"     * @param itemQuantityString String representation of item quantity to validate against.","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"Ferusel"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"    public static void validate(String itemQuantityString) {","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"        checkArgument(isParsableQuantity(itemQuantityString), MESSAGE_FOR_NOT_A_NUMBER);","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"        checkArgument(isQuantityTooPrecise(itemQuantityString), MESSAGE_FOR_PRECISION_TOO_HIGH);","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"        double quantity \u003d Double.parseDouble(itemQuantityString);","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"        checkArgument(isQuantityMoreThanMaxQuantity(quantity), MESSAGE_FOR_QUANTITY_TOO_LARGE);","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"        checkArgument(isQuantityNegative(quantity), MESSAGE_FOR_QUANTITY_IS_NEGATIVE);","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"     * Returns true if an item quantity can be parsed, false otherwise.","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"     * @param itemQuantityString a string that represents the quantity of the {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"    private static boolean isParsableQuantity(String itemQuantityString) {","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"        try {","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"            Double.parseDouble(itemQuantityString);","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"            return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"        return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"     * Returns true if an item quantity is too precise, false otherwise.","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"     * @param itemQuantityString a string that represents the quantity of the {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"    private static boolean isQuantityTooPrecise(String itemQuantityString) {","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"        if (!itemQuantityString.contains(DECIMAL_POINT)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"            return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"        int numberOfDecimalPoints \u003d itemQuantityString.length() - itemQuantityString.indexOf(DECIMAL_POINT);","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"yixiann"},"content":"        return numberOfDecimalPoints \u003e MAX_DECIMAL_PLACE;","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"yixiann"},"content":"     * Returns true if an item quantity is more than the {@link ItemQuantityValidator#MAX_QUANTITY}, false otherwise.","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"yixiann"},"content":"     * @param itemQuantity a double that represents the quantity of the {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"yixiann"},"content":"    private static boolean isQuantityMoreThanMaxQuantity(double itemQuantity) {","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"yixiann"},"content":"        return itemQuantity \u003e MAX_QUANTITY;","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"yixiann"},"content":"     * Returns true if an item quantity is negative, false otherwise.","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"yixiann"},"content":"     * @param itemQuantity a double that represents the quantity of the {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"yixiann"},"content":"    private static boolean isQuantityNegative(double itemQuantity) {","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"yixiann"},"content":"        return itemQuantity \u003c 0;","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Ferusel":9,"yixiann":76}},{"path":"src/main/java/seedu/address/model/item/itemvalidator/ItemUnitValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package seedu.address.model.item.itemvalidator;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"Ferusel"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"Ferusel"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"Ferusel"},"content":" * Validation class for item names.","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"Ferusel"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"public class ItemUnitValidator {","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"    // Validation for characters used in unit","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    // TODO: Change validation to match FoodREM","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"    // TODO: SHOULD ABSTRACT OUT LOGIC FROM ITEM NAME, UNIT, TAG NAME COMMON TO VALIDATION","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    private static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"    private static final String MESSAGE_FOR_INVALID_CHARACTERS \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"            \"Item unit should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"    // Validation for unit length","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    private static final int MAX_LENGTH \u003d 10;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"    private static final String MESSAGE_FOR_NAME_TOO_LONG \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"            String.format(\"Item unit should not exceed %d characters\", MAX_LENGTH);","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"Ferusel"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"Ferusel"},"content":"     * Validates a given input String.","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"Ferusel"},"content":"     * @param unitString String representation of item unit to validate against.","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"Ferusel"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"    public static void validate(String unitString) {","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"        checkArgument(doesUnitContainInvalidCharacters(unitString), MESSAGE_FOR_INVALID_CHARACTERS);","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"        checkArgument(isUnitLengthMoreThanMaxLength(unitString), MESSAGE_FOR_NAME_TOO_LONG);","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"     * Returns true if a given string contains invalid characters, false otherwise.","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"     * @param itemUnit a string that represents the unit of the {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"    private static boolean doesUnitContainInvalidCharacters(String itemUnit) {","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"        return !itemUnit.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"     * Returns true if an item unit has a length more than {@link ItemUnitValidator#MAX_LENGTH}, false otherwise.","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"     * @param itemUnit a string that represents the unit of the {@link Item}.","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"    private static boolean isUnitLengthMoreThanMaxLength(String itemUnit) {","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"        return itemUnit.length() \u003e MAX_LENGTH;","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Ferusel":9,"yixiann":41}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names have a max length of 30 characters\";","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"    private static final int MAX_CHAR_LIMIT \u003d 30;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"    public final TagName tagName;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"        this.tagName \u003d new TagName(tagName);","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"    public String getName() {","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"        return this.tagName.toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"        return test.length() \u003c\u003d MAX_CHAR_LIMIT;","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"bryanljx"},"content":"        return tagName.toString();","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanljx":8,"-":50}},{"path":"src/main/java/seedu/address/model/tag/TagName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":" * Represents a Tag\u0027s name in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"public class TagName {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"            \"Names should only contain alphanumeric characters, spaces, and the punctuations within the \"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"                    + \"list of allowed punctuations. \"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"                    + \"Names must start with an alphanumeric character.\";","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"    /*","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"     * Regex to check for valid punctuation","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"    public static final String ALLOWED_PUNCTUATION_REGEX \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"            \"[\\\\?\\\\.\\\\\u0027\\\\\\\"\\\\[\\\\]\\\\{\\\\}\\\\+\\\\^\\\\$\\\\*\\\\(\\\\)\\\\-\u003c\u003e,:;~@!#%\u0026_\u003d`]\";","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"    /*","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"     * Only alphanumeric characters, whitespaces and punctuation within the ALLOWED_PUNCTUATION list are allowed.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"     * The first character of the name must be alphanumeric.","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"    public static final String VALIDATION_REGEX \u003d String.format(","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"            \"[\\\\p{Alnum}][\\\\p{Alnum} | \\\\p{Space} | %s]*\",","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"            ALLOWED_PUNCTUATION_REGEX","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"    );","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"    public final String fullName;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"    public TagName(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"bryanljx"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"bryanljx"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"bryanljx"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"bryanljx"},"content":"        return fullName;","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"bryanljx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"bryanljx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"bryanljx"},"content":"                || (other instanceof TagName // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"bryanljx"},"content":"                \u0026\u0026 fullName.equals(((TagName) other).fullName)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"bryanljx"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"bryanljx"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"bryanljx":70}},{"path":"src/main/java/seedu/address/model/tag/TagNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" * Tests that a {@code tag}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"public class TagNameContainsKeywordsPredicate implements Predicate\u003cTag\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"    public TagNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"    public boolean test(Tag tag) {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(tag.getName(), keyword));","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"                // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"                || (other instanceof TagNameContainsKeywordsPredicate","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"                // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"                \u0026\u0026 keywords.equals(((TagNameContainsKeywordsPredicate) other).keywords));","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"bryanljx":33}},{"path":"src/main/java/seedu/address/model/tag/UniqueTagList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"import seedu.address.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":" * A list of tags that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":" * A tag is considered unique by comparing using {@code Tag#equals(Tag)}. As such, adding and updating of","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":" * tags uses Tag#equals(Tag) for equality so as to ensure that the tag being added or updated is","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":" * unique in terms of identity in the UniqueTagList.","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"public class UniqueTagList implements Iterable\u003cTag\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"    private final ObservableList\u003cTag\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"    private final ObservableList\u003cTag\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"    public boolean contains(Tag toCheck) {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"     * Adds a tag to the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"     * The tag must not already exist in the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"    public void add(Tag toAdd) {","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"bryanljx"},"content":"     * Replaces the tag {@code target} in the list with {@code editedTag}.","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"bryanljx"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"bryanljx"},"content":"     * The tag identity of {@code editedTag} must not be the same as another existing tag in the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"bryanljx"},"content":"    public void setTag(Tag target, Tag editedTag) {","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"bryanljx"},"content":"        requireAllNonNull(target, editedTag);","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"bryanljx"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"bryanljx"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"bryanljx"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"bryanljx"},"content":"        if (!target.equals(editedTag) \u0026\u0026 contains(editedTag)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"bryanljx"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"bryanljx"},"content":"        internalList.set(index, editedTag);","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"bryanljx"},"content":"     * Removes the equivalent tag from the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"bryanljx"},"content":"     * The tag must exist in the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"bryanljx"},"content":"    public void remove(Tag toRemove) {","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"bryanljx"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"bryanljx"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"bryanljx"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"bryanljx"},"content":"    public void setTags(UniqueTagList replacement) {","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"bryanljx"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"bryanljx"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"bryanljx"},"content":"     * Replaces the contents of this list with {@code tags}.","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"bryanljx"},"content":"     * {@code tags} must not contain duplicate tags.","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"bryanljx"},"content":"    public void setTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"bryanljx"},"content":"        requireAllNonNull(tags);","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"bryanljx"},"content":"        if (!tagsAreUnique(tags)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"bryanljx"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"bryanljx"},"content":"        internalList.setAll(tags);","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"bryanljx"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"bryanljx"},"content":"    public ObservableList\u003cTag\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"bryanljx"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"bryanljx"},"content":"    public Iterator\u003cTag\u003e iterator() {","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"bryanljx"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"bryanljx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"bryanljx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"bryanljx"},"content":"                || (other instanceof UniqueTagList // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"bryanljx"},"content":"                \u0026\u0026 internalList.equals(((UniqueTagList) other).internalList));","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"bryanljx"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"bryanljx"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"bryanljx"},"content":"     * Returns true if {@code tags} contains only unique tags.","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"bryanljx"},"content":"    private boolean tagsAreUnique(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"bryanljx"},"content":"        HashSet\u003cTag\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"bryanljx"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"bryanljx"},"content":"            if (set.contains(tag)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"bryanljx"},"content":"                return false;","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"bryanljx"},"content":"            }","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"bryanljx"},"content":"            set.add(tag);","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"bryanljx"},"content":"        return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"bryanljx":135}},{"path":"src/main/java/seedu/address/model/tag/exceptions/DuplicateTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":" * Signals that the operation will result in duplicate Tags (Tags are considered duplicates if they have the same","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":" * name).","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"public class DuplicateTagException extends RuntimeException {","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"    public DuplicateTagException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"        super(\"Operation would result in duplicate tags\");","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"bryanljx":11}},{"path":"src/main/java/seedu/address/model/tag/exceptions/TagNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":" * Signals that the operation is unable to find the specified tag.","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"public class TagNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"bryanljx":6}},{"path":"src/main/java/seedu/address/model/validator/DateValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package seedu.address.model.validator;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Ferusel"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Ferusel"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Ferusel"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":" * Validates if a date is parsable according to the dateFormatter provided.","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"Ferusel"},"content":" * Provided an isValidDateString that returns a boolean value indicating","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"Ferusel"},"content":" * if it is parsable.","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"Ferusel"},"content":"public class DateValidator {","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"    private static final DateTimeFormatter DEFAULT_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"Ferusel"},"content":"    private final DateTimeFormatter dateTimeFormatter;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"     * Constructor for a DateValidator object.","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"     * @param dateFormatter the format in which we will validate dateStrings according to.","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"Ferusel"},"content":"    public DateValidator(DateTimeFormatter dateFormatter) {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Ferusel"},"content":"        // TODO: Use assertion this is not null","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"        dateTimeFormatter \u003d Optional.of(dateFormatter).orElse(DEFAULT_DATE_TIME_FORMATTER);","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Ferusel"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"     * Returns true if a provided dateString can be parsed according to {@link DateValidator#dateTimeFormatter}.","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"     * Returns false otherwise.","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"     * @param dateString a string to be checked if it is parsable according to the","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"     *                   {@link DateValidator#dateTimeFormatter}.","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"     * @return true if the dateString is parsable, false otherwise.","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"    public boolean isParsableDateString(String dateString) {","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"Ferusel"},"content":"        try {","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"            LocalDate.parse(dateString, dateTimeFormatter);","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"Ferusel"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Ferusel"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Ferusel"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Ferusel"},"content":"        return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Ferusel"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Ferusel"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Ferusel":21,"yixiann":22}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"        tagName \u003d source.getName();","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bryanljx":1,"-":47}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"bryanljx"},"content":"                .sorted(Comparator.comparing(Tag::getName))","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"bryanljx"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.getName())));","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bryanljx":3,"-":75}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.AddCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.ListCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Eugenetanwl3881":2,"-":160}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.EditCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"bryanljx"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby/\"; // \u0027/\u0027 not allowed in tags","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Eugenetanwl3881":1,"bryanljx":1,"-":127}},{"path":"src/test/java/seedu/address/logic/commands/generalcommands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.generalcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Eugenetanwl3881":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/generalcommands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.generalcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"Eugenetanwl3881"},"content":"import static seedu.address.logic.commands.generalcommands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Eugenetanwl3881":3,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/generalcommands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.generalcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Eugenetanwl3881"},"content":"import static seedu.address.logic.commands.generalcommands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Eugenetanwl3881":3,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Eugenetanwl3881":1,"-":44}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"bryanljx"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"bryanljx"},"content":"        public boolean hasTag(Tag tag) {","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"bryanljx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"bryanljx"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"bryanljx"},"content":"        public void deleteTag(Tag target) {","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"bryanljx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"bryanljx"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"bryanljx"},"content":"        public void addTag(Tag tag) {","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"bryanljx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"bryanljx"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"bryanljx"},"content":"        public void setTag(Tag target, Tag editedTag) {","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"bryanljx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"bryanljx"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"bryanljx"},"content":"        public ObservableList\u003cTag\u003e getFilteredTagList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"bryanljx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"bryanljx"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"bryanljx"},"content":"        public void updateFilteredTagList(Predicate\u003cTag\u003e predicate) {","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"bryanljx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Eugenetanwl3881":2,"bryanljx":31,"-":193}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Eugenetanwl3881":1,"-":108}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.generalcommands.ClearCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Eugenetanwl3881":3,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Eugenetanwl3881":2,"-":56}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Eugenetanwl3881":1,"-":82}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugenetanwl3881"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Eugenetanwl3881":1,"-":38}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.AddCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"bryanljx"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e parser.parse(NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"bryanljx"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"bryanljx"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND));","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Eugenetanwl3881":1,"bryanljx":4,"-":137}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.generalcommands.ClearCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.generalcommands.ExitCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.generalcommands.HelpCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.AddCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.DeleteCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.EditCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.FindCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.ListCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Eugenetanwl3881":9,"-":92}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.DeleteCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Eugenetanwl3881":1,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.EditCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"bryanljx"},"content":"        // invalid tag","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"bryanljx"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e parser.parse(\"1\" + INVALID_TAG_DESC));","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"bryanljx"},"content":"        // assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"bryanljx"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e parser.parse(\"1\" + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"bryanljx"},"content":"                + TAG_DESC_HUSBAND + TAG_EMPTY));","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"bryanljx"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e parser.parse(\"1\" + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"bryanljx"},"content":"                + TAG_EMPTY + TAG_DESC_HUSBAND));","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"bryanljx"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e parser.parse(\"1\" + TAG_EMPTY","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"bryanljx"},"content":"                + TAG_DESC_FRIEND + TAG_DESC_HUSBAND));","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Eugenetanwl3881":2,"bryanljx":10,"-":204}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.FindCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Eugenetanwl3881":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"bryanljx"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"bryanljx"},"content":"    public void parseTags_collectionWithInvalidTags_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"bryanljx"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e ParserUtil.parseTags(","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"bryanljx"},"content":"                Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"bryanljx":4,"-":193}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"Eugenetanwl3881"},"content":"        private final ObservableList\u003cTag\u003e tags \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"Eugenetanwl3881"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"Eugenetanwl3881"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"Eugenetanwl3881"},"content":"        public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"Eugenetanwl3881"},"content":"            return tags;","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"Eugenetanwl3881"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Eugenetanwl3881":7,"-":102}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"bryanljx"},"content":"    public void toModelType_invalidTags_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"bryanljx"},"content":"        assertThrows(IllegalArgumentException.class, person::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bryanljx":2,"-":108}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Eugenetanwl3881":1,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.AddCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"Eugenetanwl3881"},"content":"import seedu.address.logic.commands.personcommands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.getName() + \" \")","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Eugenetanwl3881":2,"bryanljx":1,"-":59}}]
