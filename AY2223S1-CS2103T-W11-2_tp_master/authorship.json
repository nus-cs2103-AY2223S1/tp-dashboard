[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leongdl135"},"content":"# ProfNUS","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"leongdl135"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W11-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W11-2/tp/actions)","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"leongdl135"},"content":"ProfNUS is a desktop application which helps SOC Professors who have many modules with many students/TAs to manage. It is optimized for users who prefer CLI over GUI so that frequent tasks can be done faster by typing in commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"leongdl135"},"content":"To find out more about ProfNUS, please visit our **[Product Website](https://ay2223s1-cs2103t-w11-2.github.io/tp/)**","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"leongdl135"},"content":"### Acknowledgements","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"leongdl135"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"leongdl135":9,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"### Bryan Ng Zi Hao","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"\u003cimg src\u003d\"images/bryanngzh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"[[github](https://github.com/bryanngzh)]","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"leongdl135"},"content":"[[portfolio](team/bryanngzh.md)]","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"lizekai-richard"},"content":"### Li Zekai","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"lizekai-richard"},"content":"\u003cdiv align\u003dleft\u003e\u003cimg src\u003d\"images/lizekai-richard.png\" alt\u003d\"lizekai-richard\" style\u003d\"zoom:100%;\" width\u003d200px /\u003e\u003c/div\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"lizekai-richard"},"content":" ","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"leongdl135"},"content":"[[github](https://github.com/lizekai-richard)]","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"leongdl135"},"content":"[[portfolio](team/lizekai-richard.md)]","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"lizekai-richard"},"content":"* Role: Developer","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"lizekai-richard"},"content":"* Responsibilities: Backend","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"leongdl135"},"content":"### Leong Jia Hao Daniel","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"leongdl135"},"content":"\u003cimg src\u003d\"images/leongdl135.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"leongdl135"},"content":"[[github](http://github.com/leongdl135)] [[portfolio](team/leongdl135.md)]","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"### Khoo Jing Hong, Derrick ","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"\u003cimg src\u003d\"images/drkkjh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"[[github](http://github.com/drkkjh)]","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"leongdl135"},"content":"[[portfolio](team/drkkjh.md)]","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"myangat0343"},"content":"### YANG Mingyang","lastModifiedDate":"2022-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"myangat0343"},"content":"\u003cimg src\u003d\"images/myangat0343.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"myangat0343"},"content":"[[github](http://github.com/myangat0343)]","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"leongdl135"},"content":"[[portfolio](team/myangat0343.md)]","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"drkkjh":3,"lizekai-richard":5,"myangat0343":3,"-":38,"leongdl135":8,"bryanngzh":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"leongdl135"},"content":"* NUS SOC Professors","lastModifiedDate":"2022-09-30"},{"lineNumber":261,"author":{"gitId":"leongdl135"},"content":"* has a need to view and manage a significant number of students","lastModifiedDate":"2022-09-30"},{"lineNumber":262,"author":{"gitId":"leongdl135"},"content":"* has modules to manage","lastModifiedDate":"2022-09-30"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"leongdl135"},"content":"**Value proposition**: The application helps NUS SOC Professors manage their students and TA in the various modules, by providing a quick and easy way to find and contact them.","lastModifiedDate":"2022-09-30"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"| Priority | As a …​       | I want to …​                                | So that I can…​                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"drkkjh"},"content":"|----------|---------------|---------------------------------------------|---------------------------------------------|","lastModifiedDate":"2022-10-01"},{"lineNumber":277,"author":{"gitId":"drkkjh"},"content":"| `* * *`  | SoC Professor | View the contact information of my students | I can contact them                          |","lastModifiedDate":"2022-10-01"},{"lineNumber":278,"author":{"gitId":"drkkjh"},"content":"| `* * *`  | SoC Professor | View the list of modules                    | Better plan my module\u0027s timeslots           |","lastModifiedDate":"2022-10-01"},{"lineNumber":279,"author":{"gitId":"drkkjh"},"content":"| `* * *`  | SoC Professor | Edit the information of my students         | Rectify inaccuracies in student information |","lastModifiedDate":"2022-10-01"},{"lineNumber":280,"author":{"gitId":"drkkjh"},"content":"| `* * *`  | SoC Professor | Find a student                              |                                             |","lastModifiedDate":"2022-10-01"},{"lineNumber":281,"author":{"gitId":"drkkjh"},"content":"| `* * *`  | SoC Professor | Add new student to a module                 |                                             |","lastModifiedDate":"2022-10-01"},{"lineNumber":282,"author":{"gitId":"drkkjh"},"content":"| `* * *`  | SoC Professor | Add a module                                |                                             |","lastModifiedDate":"2022-10-01"},{"lineNumber":283,"author":{"gitId":"drkkjh"},"content":"| `* * *`  | SoC Professor | Delete a module                             |                                             |","lastModifiedDate":"2022-10-01"},{"lineNumber":284,"author":{"gitId":"drkkjh"},"content":"| `* *`    | SoC Professor | View my teaching timetable                  | Plan my activities in advance               |","lastModifiedDate":"2022-10-01"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"bryanngzh"},"content":"(For all use cases below, the **System** is the `ProfNUS` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-30"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"bryanngzh"},"content":"**Use case: Add a module**","lastModifiedDate":"2022-09-30"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"bryanngzh"},"content":"1. User requests to list modules","lastModifiedDate":"2022-09-30"},{"lineNumber":297,"author":{"gitId":"bryanngzh"},"content":"2. ProfNUS shows a list of modules ","lastModifiedDate":"2022-09-30"},{"lineNumber":298,"author":{"gitId":"bryanngzh"},"content":"3. User requests to add a module to the list","lastModifiedDate":"2022-09-30"},{"lineNumber":299,"author":{"gitId":"bryanngzh"},"content":"4. ProfNUS adds the module","lastModifiedDate":"2022-09-30"},{"lineNumber":300,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":301,"author":{"gitId":"bryanngzh"},"content":"   Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":302,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":303,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":304,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":305,"author":{"gitId":"bryanngzh"},"content":"**Use case: Delete a module**","lastModifiedDate":"2022-09-30"},{"lineNumber":306,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":307,"author":{"gitId":"bryanngzh"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":308,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":309,"author":{"gitId":"bryanngzh"},"content":"1. User requests to list modules","lastModifiedDate":"2022-09-30"},{"lineNumber":310,"author":{"gitId":"bryanngzh"},"content":"2. ProfNUS shows a list of modules","lastModifiedDate":"2022-09-30"},{"lineNumber":311,"author":{"gitId":"bryanngzh"},"content":"3. User requests to delete a module in the list","lastModifiedDate":"2022-09-30"},{"lineNumber":312,"author":{"gitId":"bryanngzh"},"content":"4. ProfNUS deletes the module","lastModifiedDate":"2022-09-30"},{"lineNumber":313,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":314,"author":{"gitId":"bryanngzh"},"content":"   Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":315,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":316,"author":{"gitId":"bryanngzh"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":317,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":318,"author":{"gitId":"bryanngzh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":319,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":320,"author":{"gitId":"bryanngzh"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":321,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":322,"author":{"gitId":"bryanngzh"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":323,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":324,"author":{"gitId":"bryanngzh"},"content":"    * 3a1. ProfNUS shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":325,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":326,"author":{"gitId":"bryanngzh"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-30"},{"lineNumber":327,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":328,"author":{"gitId":"bryanngzh"},"content":"**Use case: Add a student**","lastModifiedDate":"2022-09-30"},{"lineNumber":329,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":330,"author":{"gitId":"bryanngzh"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":331,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":332,"author":{"gitId":"bryanngzh"},"content":"1. User requests to list modules","lastModifiedDate":"2022-09-30"},{"lineNumber":333,"author":{"gitId":"bryanngzh"},"content":"2. ProfNUS shows a list of modules","lastModifiedDate":"2022-09-30"},{"lineNumber":334,"author":{"gitId":"bryanngzh"},"content":"3. User request to list students in a particular module","lastModifiedDate":"2022-09-30"},{"lineNumber":335,"author":{"gitId":"bryanngzh"},"content":"4. ProfNUS shows a list of students","lastModifiedDate":"2022-09-30"},{"lineNumber":336,"author":{"gitId":"bryanngzh"},"content":"5. User requests to add a specific student to the list","lastModifiedDate":"2022-09-30"},{"lineNumber":337,"author":{"gitId":"bryanngzh"},"content":"6. ProfNUS adds the student","lastModifiedDate":"2022-09-30"},{"lineNumber":338,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":339,"author":{"gitId":"bryanngzh"},"content":"   Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":340,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":341,"author":{"gitId":"bryanngzh"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":342,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":343,"author":{"gitId":"bryanngzh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":344,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":345,"author":{"gitId":"bryanngzh"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":346,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":347,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":348,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":349,"author":{"gitId":"bryanngzh"},"content":"**Use case: Delete a student**","lastModifiedDate":"2022-09-30"},{"lineNumber":350,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":351,"author":{"gitId":"bryanngzh"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":352,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":353,"author":{"gitId":"bryanngzh"},"content":"1. User requests to list modules","lastModifiedDate":"2022-09-30"},{"lineNumber":354,"author":{"gitId":"bryanngzh"},"content":"2. ProfNUS shows a list of modules","lastModifiedDate":"2022-09-30"},{"lineNumber":355,"author":{"gitId":"bryanngzh"},"content":"3. User request to list students in a particular module","lastModifiedDate":"2022-09-30"},{"lineNumber":356,"author":{"gitId":"bryanngzh"},"content":"4. ProfNUS shows a list of students","lastModifiedDate":"2022-09-30"},{"lineNumber":357,"author":{"gitId":"bryanngzh"},"content":"5. User requests to delete a specific student in the list","lastModifiedDate":"2022-09-30"},{"lineNumber":358,"author":{"gitId":"bryanngzh"},"content":"6. ProfNUS deletes the student","lastModifiedDate":"2022-09-30"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":362,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":364,"author":{"gitId":"bryanngzh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":365,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":366,"author":{"gitId":"bryanngzh"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":367,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":368,"author":{"gitId":"bryanngzh"},"content":"* 4a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":369,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":370,"author":{"gitId":"bryanngzh"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":371,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":372,"author":{"gitId":"bryanngzh"},"content":"* 5a. The given index is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":373,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":374,"author":{"gitId":"bryanngzh"},"content":"    * 5a1. ProfNUS shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":375,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":376,"author":{"gitId":"bryanngzh"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-30"},{"lineNumber":377,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":378,"author":{"gitId":"bryanngzh"},"content":"**Use case: Add an event**","lastModifiedDate":"2022-09-30"},{"lineNumber":379,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":380,"author":{"gitId":"bryanngzh"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":381,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":382,"author":{"gitId":"bryanngzh"},"content":"1. User requests to list modules","lastModifiedDate":"2022-09-30"},{"lineNumber":383,"author":{"gitId":"bryanngzh"},"content":"2. ProfNUS shows a list of modules","lastModifiedDate":"2022-09-30"},{"lineNumber":384,"author":{"gitId":"bryanngzh"},"content":"3. User requests to add an event to the module","lastModifiedDate":"2022-09-30"},{"lineNumber":385,"author":{"gitId":"bryanngzh"},"content":"4. ProfNUS adds the event","lastModifiedDate":"2022-09-30"},{"lineNumber":386,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":387,"author":{"gitId":"bryanngzh"},"content":"   Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":388,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":389,"author":{"gitId":"bryanngzh"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":390,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":391,"author":{"gitId":"bryanngzh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":392,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":393,"author":{"gitId":"bryanngzh"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":394,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":395,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":396,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":397,"author":{"gitId":"bryanngzh"},"content":"**Use case: Delete an event**","lastModifiedDate":"2022-09-30"},{"lineNumber":398,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":399,"author":{"gitId":"bryanngzh"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":400,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":401,"author":{"gitId":"bryanngzh"},"content":"1. User requests to list modules","lastModifiedDate":"2022-09-30"},{"lineNumber":402,"author":{"gitId":"bryanngzh"},"content":"2. ProfNUS shows a list of modules ","lastModifiedDate":"2022-09-30"},{"lineNumber":403,"author":{"gitId":"bryanngzh"},"content":"3. User requests to delete an event in the module","lastModifiedDate":"2022-09-30"},{"lineNumber":404,"author":{"gitId":"bryanngzh"},"content":"4. ProfNUS deletes the event","lastModifiedDate":"2022-09-30"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"bryanngzh"},"content":"    * 3a1. ProfNUS shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"lizekai-richard"},"content":"2.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-10-01"},{"lineNumber":426,"author":{"gitId":"lizekai-richard"},"content":"3.  User data are stored in local files.","lastModifiedDate":"2022-10-01"},{"lineNumber":427,"author":{"gitId":"lizekai-richard"},"content":"4.  Should be used only by users authorized as SoC professors.","lastModifiedDate":"2022-10-01"},{"lineNumber":428,"author":{"gitId":"lizekai-richard"},"content":"5.  The probability of critical failure should be lower than 5%.","lastModifiedDate":"2022-10-01"},{"lineNumber":429,"author":{"gitId":"lizekai-richard"},"content":"6.  Should be able to process 500 or more students information without a noticeable lag.","lastModifiedDate":"2022-10-01"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"myangat0343"},"content":"1. **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2022-10-01"},{"lineNumber":436,"author":{"gitId":"myangat0343"},"content":"2. **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2022-10-01"},{"lineNumber":437,"author":{"gitId":"myangat0343"},"content":"3. **SoC**: School of Computing, National University of Singapore","lastModifiedDate":"2022-10-01"},{"lineNumber":438,"author":{"gitId":"myangat0343"},"content":"4. **Module**: Courses provided by professors from SoC","lastModifiedDate":"2022-10-01"},{"lineNumber":439,"author":{"gitId":"myangat0343"},"content":"5. **CLI**: Command-Line Interface(CLI), which receives commands from a user in the form of lines of text","lastModifiedDate":"2022-10-01"},{"lineNumber":440,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"drkkjh":9,"lizekai-richard":5,"myangat0343":6,"-":362,"leongdl135":4,"bryanngzh":107}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"ProfNUS is a **desktop application which helps SOC Professors who have many modules with many students/TAs to manage.** It is optimized for users who prefer CLI over GUI so that frequent tasks can be done faster by typing in commands.","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"myangat0343"},"content":"1. Download the latest `ProfNUS.jar` from [here](https://github.com/AY2223S1-CS2103T-W11-2/tp/releases).","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"myangat0343"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your ProfNUS application.","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"leongdl135"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the ProfNUS application.","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2022-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"drkkjh"},"content":"### Adding a person: `addstu`","lastModifiedDate":"2022-09-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"leongdl135"},"content":"Adds a person to the module.","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"drkkjh"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​ [m/MODULE]…​`","lastModifiedDate":"2022-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"drkkjh"},"content":"A person can have any number of tags or modules(including 0)","lastModifiedDate":"2022-09-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"drkkjh"},"content":"* `add n/Adam Doink t/TA e/ad4md01nk@example.com a/Kent Ridge Hall p/1234567 m/CS1101S`","lastModifiedDate":"2022-09-27"},{"lineNumber":87,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":88,"author":{"gitId":"drkkjh"},"content":"![addstu](images/userguide/addstu.png)","lastModifiedDate":"2022-09-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"leongdl135"},"content":"### Listing all students : `list`","lastModifiedDate":"2022-09-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"leongdl135"},"content":"Shows a list of all the students in the module with their contact information in the application.","lastModifiedDate":"2022-09-27"},{"lineNumber":93,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":94,"author":{"gitId":"leongdl135"},"content":"Format: `list MODULE_NAME [MORE_MODULE_NAMES]`","lastModifiedDate":"2022-09-27"},{"lineNumber":95,"author":{"gitId":"leongdl135"},"content":"- The module name is case-insensitive. e.g CS1101S will match cs1101s","lastModifiedDate":"2022-09-27"},{"lineNumber":96,"author":{"gitId":"leongdl135"},"content":"- Students matching at least one module will be returned","lastModifiedDate":"2022-09-27"},{"lineNumber":97,"author":{"gitId":"leongdl135"},"content":"- Only exact module matches will be returned. e.g. CS1231 will not match CS1231S","lastModifiedDate":"2022-09-27"},{"lineNumber":98,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":99,"author":{"gitId":"leongdl135"},"content":"Examples:","lastModifiedDate":"2022-09-27"},{"lineNumber":100,"author":{"gitId":"myangat0343"},"content":"- `list CS1101S returns` Alex Yeoh and Bernice Yu","lastModifiedDate":"2022-10-01"},{"lineNumber":101,"author":{"gitId":"leongdl135"},"content":"- `list CS1101S CS1231S` returns Bernice Yu only`","lastModifiedDate":"2022-09-27"},{"lineNumber":102,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":103,"author":{"gitId":"leongdl135"},"content":"![list](images/userguide/list.png)","lastModifiedDate":"2022-09-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":106,"author":{"gitId":"bryanngzh"},"content":"### Viewing list of modules : `mlist`","lastModifiedDate":"2022-09-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":108,"author":{"gitId":"leongdl135"},"content":"Shows a list of all modules in the ProfNUS application.","lastModifiedDate":"2022-10-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":110,"author":{"gitId":"bryanngzh"},"content":"![mlist](images/userguide/mlist.png)","lastModifiedDate":"2022-09-27"},{"lineNumber":111,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":112,"author":{"gitId":"bryanngzh"},"content":"Format: `mlist`","lastModifiedDate":"2022-09-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"leongdl135"},"content":"Edits an existing person in the ProfNUS application.","lastModifiedDate":"2022-10-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2022-10-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2022-10-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-10-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2022-10-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2022-10-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2022-10-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2022-10-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-10-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2022-10-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2022-10-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2022-10-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"leongdl135"},"content":"Deletes the specified person from the ProfNUS application.","lastModifiedDate":"2022-10-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"leongdl135"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the list of students.","lastModifiedDate":"2022-10-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"leongdl135"},"content":"Clears all entries from the ProfNUS application.","lastModifiedDate":"2022-10-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"leongdl135"},"content":"ProfNUS data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-10-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"myangat0343"},"content":"### Viewing your teaching schedule","lastModifiedDate":"2022-09-28"},{"lineNumber":181,"author":{"gitId":"leongdl135"},"content":"ProfNUS data are saved as a JSON file `[JAR file location]/data/profnus.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":184,"author":{"gitId":"leongdl135"},"content":"If your changes to the data file makes its format invalid, ProfNUS will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-10-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":186,"author":{"gitId":"lizekai-richard"},"content":"### View your teaching schedule: `view schedule`","lastModifiedDate":"2022-09-27"},{"lineNumber":187,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":188,"author":{"gitId":"lizekai-richard"},"content":"**Syntax**: `view schedule [-w WEEKDAY] [-m MODULE_CODE] [-d DATE] [-h] [-v]`","lastModifiedDate":"2022-09-27"},{"lineNumber":189,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":190,"author":{"gitId":"lizekai-richard"},"content":"- `-w WEEKDAY` option shows your schedule on the `WEEKDAY`. `WEEKDAY` should be one of `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`.","lastModifiedDate":"2022-09-27"},{"lineNumber":191,"author":{"gitId":"lizekai-richard"},"content":"- `-m MODULE_NAME` option shows your weekly schedule of `MODULE_CODE`.","lastModifiedDate":"2022-09-27"},{"lineNumber":192,"author":{"gitId":"lizekai-richard"},"content":"- `-d DATE` option shows your schedule on the `DATE`. `DATE` should comply with the format `yyyy-mm-dd`","lastModifiedDate":"2022-09-27"},{"lineNumber":193,"author":{"gitId":"lizekai-richard"},"content":"- `-h` option shows your schedule table in a horizontal mode (time will be columns and weekdays will be rows).","lastModifiedDate":"2022-09-27"},{"lineNumber":194,"author":{"gitId":"lizekai-richard"},"content":"- `-v` options shows your schedule table in a vertical mode (weekdays will be columns and time will be rows).","lastModifiedDate":"2022-09-27"},{"lineNumber":195,"author":{"gitId":"lizekai-richard"},"content":"- The result will be a timetable in vertical mode by default if no option is specified.","lastModifiedDate":"2022-09-27"},{"lineNumber":196,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":197,"author":{"gitId":"lizekai-richard"},"content":"**Notes about the syntax**:","lastModifiedDate":"2022-09-27"},{"lineNumber":198,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":199,"author":{"gitId":"lizekai-richard"},"content":"- `-w WEEKDAY` option and `-d DATE` option cannot be used at the same time.","lastModifiedDate":"2022-09-27"},{"lineNumber":200,"author":{"gitId":"lizekai-richard"},"content":"- If either `-w WEEKDAY`, `-m MODULE_NAME` or `-d DATE` is used, the result won\u0027t be a timetable. Instead, it will be shown as a list of slots.","lastModifiedDate":"2022-09-27"},{"lineNumber":201,"author":{"gitId":"lizekai-richard"},"content":"- `-h` and `-v` options can only be used when the result is shown as a timetable.","lastModifiedDate":"2022-09-27"},{"lineNumber":202,"author":{"gitId":"lizekai-richard"},"content":"- `-h` option and `-v` option cannot be used at the same time.","lastModifiedDate":"2022-09-27"},{"lineNumber":203,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":204,"author":{"gitId":"lizekai-richard"},"content":"**Examples**:","lastModifiedDate":"2022-09-27"},{"lineNumber":205,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":206,"author":{"gitId":"lizekai-richard"},"content":"- `view schedule -w Monday -m CS2103T`","lastModifiedDate":"2022-09-27"},{"lineNumber":207,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":208,"author":{"gitId":"lizekai-richard"},"content":"  \u003cdiv align\u003dcenter\u003e\u003cimg src\u003d\"./images/view schedule -w Monday -m CS2103T.png\" width\u003d300px\u003e\u003c/div\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":209,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":210,"author":{"gitId":"lizekai-richard"},"content":"- `view schedule -d 2022-09-12`","lastModifiedDate":"2022-09-27"},{"lineNumber":211,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":212,"author":{"gitId":"lizekai-richard"},"content":"  \u003cdiv align\u003dcenter\u003e\u003cimg src\u003d\"./images/view schedule -d 2022-09-12.png\" width\u003d300px\u003e\u003c/div\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":213,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":214,"author":{"gitId":"lizekai-richard"},"content":"- `view schedule -h` ","lastModifiedDate":"2022-09-27"},{"lineNumber":215,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":216,"author":{"gitId":"lizekai-richard"},"content":"  \u003cdiv align\u003dcenter\u003e\u003cimg src\u003d\"./images/view schedule -h.png\" width\u003d500px height\u003d250px\u003e\u003c/div\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":217,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":218,"author":{"gitId":"myangat0343"},"content":"### Finding a student","lastModifiedDate":"2022-09-28"},{"lineNumber":219,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":220,"author":{"gitId":"myangat0343"},"content":"Finds a student based on some keywords, with all information showing up.","lastModifiedDate":"2022-09-28"},{"lineNumber":221,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":222,"author":{"gitId":"myangat0343"},"content":"Format: `find keyword`","lastModifiedDate":"2022-10-01"},{"lineNumber":223,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":224,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":225,"author":{"gitId":"myangat0343"},"content":"**Tip:** Keyword  person can have any number of tags or modules (including 0).","lastModifiedDate":"2022-09-28"},{"lineNumber":226,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":227,"author":{"gitId":"myangat0343"},"content":"**Tip:** The result is a list of persons which keywords matching with their name, phone number or email.","lastModifiedDate":"2022-09-28"},{"lineNumber":228,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":229,"author":{"gitId":"myangat0343"},"content":"**Example** ","lastModifiedDate":"2022-09-28"},{"lineNumber":230,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":231,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":232,"author":{"gitId":"myangat0343"},"content":"- `find Adam Do`","lastModifiedDate":"2022-09-28"},{"lineNumber":233,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":234,"author":{"gitId":"myangat0343"},"content":"  \u003cdiv align\u003dcenter\u003e\u003cimg src\u003d\"./images/find Adam Do.png\" width\u003d\"500px\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":235,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":236,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":237,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"leongdl135"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ProfNUS home folder.","lastModifiedDate":"2022-10-01"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":252,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":253,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2022-10-01"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":255,"author":{"gitId":"myangat0343"},"content":"| Action                     | Format                                                               | Example                                                                                                                                                                     |","lastModifiedDate":"2022-10-01"},{"lineNumber":256,"author":{"gitId":"myangat0343"},"content":"|----------------------------|----------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-01"},{"lineNumber":257,"author":{"gitId":"myangat0343"},"content":"| add a person               | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​ [m/MODULE]…​` | `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` \u003cbr\u003e `add n/Adam Doink t/TA e/ad4md01nk@example.com a/Kent Ridge Hall p/1234567 m/CS1101S` |","lastModifiedDate":"2022-10-01"},{"lineNumber":258,"author":{"gitId":"myangat0343"},"content":"| edit a person              | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`      | `edit 1 p/91234567 e/johndoe@example.com` \u003cbr\u003e `edit 2 n/Betsy Crower t/`                                                                                                   |","lastModifiedDate":"2022-10-01"},{"lineNumber":259,"author":{"gitId":"drkkjh"},"content":"| delete a person            | `delete INDEX`                                                       | `delete 1`                                                                                                                                                                  |","lastModifiedDate":"2022-10-01"},{"lineNumber":260,"author":{"gitId":"myangat0343"},"content":"| clear                      | `clear`                                                              | `clear`                                                                                                                                                                     |","lastModifiedDate":"2022-10-01"},{"lineNumber":261,"author":{"gitId":"drkkjh"},"content":"| add a module               | `madd`                                                               | `madd CS2100`                                                                                                                                                               |","lastModifiedDate":"2022-10-01"},{"lineNumber":262,"author":{"gitId":"myangat0343"},"content":"| list modules               | `list MODULE_NAME [MORE_MODULE_NAMES]`                               | `list CS1101S` \u003cbr\u003e`list CS1101S CS1231S`                                                                                                                                   |","lastModifiedDate":"2022-10-01"},{"lineNumber":263,"author":{"gitId":"myangat0343"},"content":"| list all modules           | `mlist`                                                              | `mlist`                                                                                                                                                                     |","lastModifiedDate":"2022-10-01"},{"lineNumber":264,"author":{"gitId":"myangat0343"},"content":"| view the teaching schedule | `view schedule [-w WEEKDAY] [-m MODULE_CODE] [-d DATE] [-h] [-v]`    | `view schedule -w Monday -m CS2103T` \u003cbr\u003e`view schedule -d 2022-09-12` \u003cbr\u003e `view schedule -h`                                                                              |","lastModifiedDate":"2022-10-01"},{"lineNumber":265,"author":{"gitId":"myangat0343"},"content":"| find a person              | `find KEYWORD [MORE_KEYWORD]`                                        | `find Adam Do`                                                                                                                                                              |","lastModifiedDate":"2022-10-01"},{"lineNumber":266,"author":{"gitId":"myangat0343"},"content":"| help                       | `help`                                                               | `help`                                                                                                                                                                      | ","lastModifiedDate":"2022-10-01"},{"lineNumber":267,"author":{"gitId":"myangat0343"},"content":"| exit                       | `exit`                                                               | `exit`                                                                                                                                                                      | ","lastModifiedDate":"2022-10-01"},{"lineNumber":268,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":269,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"drkkjh":8,"lizekai-richard":33,"myangat0343":38,"-":162,"leongdl135":23,"bryanngzh":5}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"drkkjh"},"content":"    content: \"ProfNUS\";","lastModifiedDate":"2022-09-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"drkkjh":1,"-":294}},{"path":"docs/team/bryanngzh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"title: Bryan Ng\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"### Project: ProfNUS","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"ProfNUS is a **desktop application which helps SOC Professors who have many modules with many students/TAs to manage.** It is optimized for users who prefer CLI over GUI so that frequent tasks can be done faster by typing in commands.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dbryanngzh\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"  ","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"* **Tools**:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"  ","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"bryanngzh":31}},{"path":"docs/team/drkkjh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"title: Khoo Jing Hong, Derrick\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"### Project: ProfNUS","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"ProfNUS is a **desktop application which helps SOC Professors who have many modules with many students/TAs to manage.** It is optimized for users who prefer CLI over GUI so that frequent tasks can be done faster by typing in commands.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003ddrkkjh\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"* **Tools**:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"  ","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"drkkjh":31}},{"path":"docs/team/leongdl135.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leongdl135"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"leongdl135"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"leongdl135"},"content":"title: Daniel Leong\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"leongdl135"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"leongdl135"},"content":"### Project: ProfNUS","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"leongdl135"},"content":"ProfNUS is a **desktop application which helps SOC Professors who have many modules with many students/TAs to manage.** It is optimized for users who prefer CLI over GUI so that frequent tasks can be done faster by typing in commands.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"leongdl135"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"leongdl135"},"content":"* **New Feature**: ","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"leongdl135"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"leongdl135"},"content":"  ","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"leongdl135"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dleongdl135\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"leongdl135"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"leongdl135"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"leongdl135"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"leongdl135"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"leongdl135"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"leongdl135"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"leongdl135"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"leongdl135"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"leongdl135"},"content":"  ","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"leongdl135"},"content":"* **Tools**:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"leongdl135"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"leongdl135"},"content":"  ","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"leongdl135":31}},{"path":"docs/team/lizekai-richard.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lizekai-richard"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"lizekai-richard"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"lizekai-richard"},"content":"title: Li Zekai\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"lizekai-richard"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"lizekai-richard"},"content":"### Project: ProfNUS","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"lizekai-richard"},"content":"* **Code contributed**: ","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"lizekai-richard"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"lizekai-richard"},"content":"* **New features implemented**: ","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"lizekai-richard"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"lizekai-richard"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"lizekai-richard"},"content":"  * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"lizekai-richard"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"lizekai-richard"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"lizekai-richard"},"content":"* **Tools**","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"lizekai-richard":16}},{"path":"docs/team/myangat0343.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"myangat0343"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"myangat0343"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"myangat0343"},"content":"title: YANG Mingyang\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"myangat0343"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"myangat0343"},"content":"### Project: ProfNUS","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"myangat0343"},"content":"ProfNUS is a **desktop application which helps SOC Professors who have many modules with many students/TAs to manage.** It is optimized for users who prefer CLI over GUI so that frequent tasks can be done faster by typing in commands.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"myangat0343"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"myangat0343"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"myangat0343"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"myangat0343"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dleongdl135\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"myangat0343"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"myangat0343"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"myangat0343"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"myangat0343"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"myangat0343"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"myangat0343"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"myangat0343"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"myangat0343"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"myangat0343"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"myangat0343"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"myangat0343"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"myangat0343"},"content":"  ","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"myangat0343":31}},{"path":"src/main/java/seedu/address/logic/commands/AddStuCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leongdl135"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"leongdl135"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HANDLE;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_INFO;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"leongdl135"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"leongdl135"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"leongdl135"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"leongdl135"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"leongdl135"},"content":" * Adds a person to the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"leongdl135"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"leongdl135"},"content":"public class AddStuCommand extends Command {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"leongdl135"},"content":"    public static final String COMMAND_WORD \u003d \"addstu\";","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"leongdl135"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the address book. \"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"leongdl135"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"leongdl135"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"leongdl135"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"leongdl135"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"leongdl135"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"leongdl135"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"leongdl135"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"leongdl135"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"leongdl135"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"leongdl135"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"leongdl135"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"leongdl135"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"leongdl135"},"content":"            + PREFIX_TAG + \"owesMoney\"","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"leongdl135"},"content":"            + PREFIX_ID + \"A0123456G \"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"leongdl135"},"content":"            + PREFIX_HANDLE + \"@good_student \"","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"leongdl135"},"content":"            + PREFIX_STUDENT_INFO + \"High Tier CS student \";","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"leongdl135"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"leongdl135"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This student already exists in the address book\";","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"leongdl135"},"content":"    private final Student toAdd;","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"leongdl135"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"leongdl135"},"content":"     * Creates an AddStuCommand to add the specified {@code Person}","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"leongdl135"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"leongdl135"},"content":"    public AddStuCommand(Student student) {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"leongdl135"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"leongdl135"},"content":"        toAdd \u003d student;","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"leongdl135"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"leongdl135"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"leongdl135"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"leongdl135"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"leongdl135"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"leongdl135"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"leongdl135"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"leongdl135"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"leongdl135"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"leongdl135"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"leongdl135"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"leongdl135"},"content":"                || (other instanceof AddStuCommand // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"leongdl135"},"content":"                \u0026\u0026 toAdd.equals(((AddStuCommand) other).toAdd));","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"leongdl135"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"leongdl135":73}},{"path":"src/main/java/seedu/address/logic/parser/AddStuCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leongdl135"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HANDLE;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_INFO;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"leongdl135"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"leongdl135"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"leongdl135"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"leongdl135"},"content":"import seedu.address.logic.commands.AddStuCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"leongdl135"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"leongdl135"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"leongdl135"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"leongdl135"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"leongdl135"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"leongdl135"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"leongdl135"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"leongdl135"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"leongdl135"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"leongdl135"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"leongdl135"},"content":"public class AddStuCommandParser implements Parser\u003cAddStuCommand\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"leongdl135"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"leongdl135"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"leongdl135"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"leongdl135"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"leongdl135"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"leongdl135"},"content":"    public AddStuCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"leongdl135"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"leongdl135"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"leongdl135"},"content":"                        PREFIX_ID, PREFIX_HANDLE, PREFIX_STUDENT_INFO);","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"leongdl135"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"leongdl135"},"content":"                PREFIX_ID, PREFIX_HANDLE, PREFIX_STUDENT_INFO)","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"leongdl135"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"leongdl135"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStuCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"leongdl135"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"leongdl135"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"leongdl135"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"leongdl135"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"leongdl135"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"leongdl135"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"leongdl135"},"content":"        String id \u003d ParserUtil.parseID(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"leongdl135"},"content":"        String handle \u003d ParserUtil.parseTelegramHandle(argMultimap.getValue(PREFIX_HANDLE).get());","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"leongdl135"},"content":"        String studentInfo \u003d ParserUtil.parseStudentInfo(argMultimap.getValue(PREFIX_STUDENT_INFO).get());","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"leongdl135"},"content":"        Student student \u003d new Student(name, phone, email, address, tagList, id, handle, studentInfo);","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"leongdl135"},"content":"        return new AddStuCommand(student);","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"leongdl135"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"leongdl135"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"leongdl135"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"leongdl135"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"leongdl135"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"leongdl135"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"leongdl135"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"leongdl135":68}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"leongdl135"},"content":"import seedu.address.logic.commands.AddStuCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"leongdl135"},"content":"        case AddStuCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"leongdl135"},"content":"            return new AddStuCommandParser().parse(arguments);","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":76,"leongdl135":4}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"leongdl135"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"leongdl135"},"content":"    public static final Prefix PREFIX_HANDLE \u003d new Prefix(\"h/\");","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"leongdl135"},"content":"    public static final Prefix PREFIX_STUDENT_INFO \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":15,"leongdl135":3}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"leongdl135"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"leongdl135"},"content":"     * Parses id.","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"leongdl135"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"leongdl135"},"content":"     * @param id","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"leongdl135"},"content":"     * @return id.","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"leongdl135"},"content":"     * @throws ParseException If null.","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"leongdl135"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"leongdl135"},"content":"    public static String parseID(String id) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"leongdl135"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"leongdl135"},"content":"        String trimmedID \u003d id.trim();","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"leongdl135"},"content":"        return id;","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"leongdl135"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"leongdl135"},"content":"     * Parses telegram Handle.","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"leongdl135"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"leongdl135"},"content":"     * @param handle","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"leongdl135"},"content":"     * @return handle.","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"leongdl135"},"content":"     * @throws ParseException If null.","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"leongdl135"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"leongdl135"},"content":"    public static String parseTelegramHandle(String handle) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"leongdl135"},"content":"        requireNonNull(handle);","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"leongdl135"},"content":"        String trimmedID \u003d handle.trim();","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"leongdl135"},"content":"        return handle;","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"leongdl135"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"leongdl135"},"content":"     * Parses student info.","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"leongdl135"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"leongdl135"},"content":"     * @param info","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"leongdl135"},"content":"     * @return String","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"leongdl135"},"content":"     * @throws ParseException If null.","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"leongdl135"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"leongdl135"},"content":"    public static String parseStudentInfo(String info) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"leongdl135"},"content":"        requireNonNull(info);","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"leongdl135"},"content":"        String trimmedID \u003d info.trim();","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"leongdl135"},"content":"        return info;","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":124,"leongdl135":39}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"import seedu.address.model.module.UniqueModuleList;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"    private final UniqueModuleList modules;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"    {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"        modules \u003d new UniqueModuleList();","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"     * Replaces the contents of the module list with {@code modules}.","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"     * {@code modules} must not contain duplicate modules.","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"        this.modules.setModules(modules);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":72,"author":{"gitId":"bryanngzh"},"content":"        setModules(newData.getModuleList());","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"     * Returns true if a module with the same identity as {@code module} exists in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"bryanngzh"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"bryanngzh"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"bryanngzh"},"content":"        return modules.contains(module);","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"bryanngzh"},"content":"     * Adds a module to the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"bryanngzh"},"content":"     * The module must not already exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"bryanngzh"},"content":"    public void addModule(Module m) {","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"bryanngzh"},"content":"        modules.add(m);","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"bryanngzh"},"content":"     * Replaces the given module {@code target} in the list with {@code editedModule}.","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"bryanngzh"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"bryanngzh"},"content":"     * The module identity of {@code editedModule} must not be the same as another existing module in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"bryanngzh"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"bryanngzh"},"content":"        requireNonNull(editedModule);","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"bryanngzh"},"content":"        modules.setModule(target, editedModule);","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"bryanngzh"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"bryanngzh"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"bryanngzh"},"content":"    public void removeModule(Module key) {","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"bryanngzh"},"content":"        modules.remove(key);","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":160,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"bryanngzh"},"content":"    public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"bryanngzh"},"content":"        return modules.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":120,"bryanngzh":56}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    Predicate\u003cModule\u003e PREDICATE_SHOW_ALL_MODULES \u003d unused -\u003e true;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"bryanngzh"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"    boolean hasModule(Module module);","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"bryanngzh"},"content":"     * Deletes the given person.","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"bryanngzh"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"bryanngzh"},"content":"    void deleteModule(Module target);","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"bryanngzh"},"content":"     * Adds the given person.","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"bryanngzh"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"bryanngzh"},"content":"    void addModule(Module module);","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"bryanngzh"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"bryanngzh"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"bryanngzh"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"bryanngzh"},"content":"    void setModule(Module target, Module editedModule);","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"bryanngzh"},"content":"    /** Returns an unmodifiable view of the filtered module list */","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"bryanngzh"},"content":"    ObservableList\u003cModule\u003e getFilteredModuleList();","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"bryanngzh"},"content":"     * Updates the filter of the filtered module list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"bryanngzh"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"bryanngzh"},"content":"    void updateFilteredModuleList(Predicate\u003cModule\u003e predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":87,"bryanngzh":37}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    private final FilteredList\u003cModule\u003e filteredModules;","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"        filteredModules \u003d new FilteredList\u003c\u003e(this.addressBook.getModuleList());","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"bryanngzh"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"bryanngzh"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"bryanngzh"},"content":"        return addressBook.hasModule(module);","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"bryanngzh"},"content":"    public void deleteModule(Module target) {","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"bryanngzh"},"content":"        addressBook.removeModule(target);","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"bryanngzh"},"content":"    public void addModule(Module module) {","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"bryanngzh"},"content":"        addressBook.addModule(module);","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"bryanngzh"},"content":"        updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"bryanngzh"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"bryanngzh"},"content":"        requireAllNonNull(target, editedModule);","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"bryanngzh"},"content":"        addressBook.setModule(target, editedModule);","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"bryanngzh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Module List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"bryanngzh"},"content":"     * Returns an unmodifiable view of the list of {@code Module} backed by the internal list of","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"bryanngzh"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"bryanngzh"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"bryanngzh"},"content":"        return filteredModules;","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"bryanngzh"},"content":"    public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"bryanngzh"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"bryanngzh"},"content":"        filteredModules.setPredicate(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":150,"bryanngzh":44}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"     * Returns an unmodifiable view of the module list.","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * This list will not contain any duplicate modules.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    ObservableList\u003cModule\u003e getModuleList();","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":17,"bryanngzh":7}},{"path":"src/main/java/seedu/address/model/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package seedu.address.model.module;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":" * Represents a Module in ProfNUS.","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"public class Module {","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"    // Identity fields","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    private final ModuleName name;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"    private final ModuleCode code;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"    private final ModuleDescription description;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"    // Data fields","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    private final ArrayList\u003cPerson\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"    public Module(ModuleName name, ModuleCode code, ModuleDescription description, Set\u003cTag\u003e tags,","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"                  ArrayList\u003cPerson\u003e students) {","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"        this.code \u003d code;","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"        this.students.addAll(students);","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"    public ModuleName getName() {","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"        return name;","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    public ModuleCode getCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        return code;","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"    public ModuleDescription getDescription() {","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"        return description;","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"    public ArrayList\u003cPerson\u003e getStudents() {","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"        return students;","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"     * Returns true if both modules have the same name.","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"     * This defines a weaker notion of equality between two modules.","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"    public boolean isSameModule(Module otherModule) {","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"        if (otherModule \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"bryanngzh"},"content":"        return otherModule !\u003d null","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"bryanngzh"},"content":"                \u0026\u0026 otherModule.getName().equals(getName());","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"bryanngzh"},"content":"     * Returns true if both modules have the same identity and data fields.","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"bryanngzh"},"content":"     * This defines a stronger notion of equality between two modules.","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"bryanngzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"bryanngzh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"bryanngzh"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"        if (!(other instanceof Module)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"bryanngzh"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"bryanngzh"},"content":"        Module otherModule \u003d (Module) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"bryanngzh"},"content":"        return otherModule.getName().equals(getName())","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"bryanngzh"},"content":"                \u0026\u0026 otherModule.getCode().equals(getCode())","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"bryanngzh"},"content":"                \u0026\u0026 otherModule.getDescription().equals(getDescription())","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"bryanngzh"},"content":"                \u0026\u0026 otherModule.getTags().equals(getTags());","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"bryanngzh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"bryanngzh"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"bryanngzh"},"content":"        return Objects.hash(name, code, description, tags);","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":104,"author":{"gitId":"bryanngzh"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"bryanngzh"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"bryanngzh"},"content":"        builder.append(getName())","lastModifiedDate":"2022-10-02"},{"lineNumber":107,"author":{"gitId":"bryanngzh"},"content":"                .append(\"; Code: \")","lastModifiedDate":"2022-10-02"},{"lineNumber":108,"author":{"gitId":"bryanngzh"},"content":"                .append(getCode())","lastModifiedDate":"2022-10-02"},{"lineNumber":109,"author":{"gitId":"bryanngzh"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2022-10-02"},{"lineNumber":110,"author":{"gitId":"bryanngzh"},"content":"                .append(getDescription());","lastModifiedDate":"2022-10-02"},{"lineNumber":111,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":112,"author":{"gitId":"bryanngzh"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-10-02"},{"lineNumber":113,"author":{"gitId":"bryanngzh"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-10-02"},{"lineNumber":114,"author":{"gitId":"bryanngzh"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-10-02"},{"lineNumber":115,"author":{"gitId":"bryanngzh"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-10-02"},{"lineNumber":116,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":117,"author":{"gitId":"bryanngzh"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-02"},{"lineNumber":118,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":120,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"bryanngzh":120}},{"path":"src/main/java/seedu/address/model/module/ModuleCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package seedu.address.model.module;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":" * Represents a Module\u0027s code in the ProfNUS.","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCode(String)}","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"public class ModuleCode {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"            \"Codes should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    /*","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"    public final String fullCode;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     * Constructs a {@code ModuleCode}.","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"     * @param code A valid code.","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"    public ModuleCode(String code) {","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"        requireNonNull(code);","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"        checkArgument(isValidCode(code), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"        fullCode \u003d code;","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     * Returns true if a given string is a valid code.","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"    public static boolean isValidCode(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        return fullCode;","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"                || (other instanceof ModuleCode // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"                \u0026\u0026 fullCode.equals(((ModuleCode) other).fullCode)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"        return fullCode.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"bryanngzh":59}},{"path":"src/main/java/seedu/address/model/module/ModuleDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package seedu.address.model.module;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":" * Represents a Module\u0027s description in the ProfNUS.","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"public class ModuleDescription {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"            \"Descriptions should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    /*","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"    public final String fullDescription;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     * Constructs a {@code ModuleDescription}.","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"     * @param description A valid description.","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"    public ModuleDescription(String description) {","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"        fullDescription \u003d description;","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        return fullDescription;","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"                || (other instanceof ModuleDescription // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"                \u0026\u0026 fullDescription.equals(((ModuleDescription) other).fullDescription)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"        return fullDescription.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"bryanngzh":59}},{"path":"src/main/java/seedu/address/model/module/ModuleName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package seedu.address.model.module;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":" * Represents a Module\u0027s name in the ProfNUS.","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"public class ModuleName {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    /*","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"    public final String fullName;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     * Constructs a {@code ModuleName}.","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"    public ModuleName(String name) {","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        return fullName;","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"                || (other instanceof ModuleName // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"                \u0026\u0026 fullName.equals(((ModuleName) other).fullName)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"bryanngzh":59}},{"path":"src/main/java/seedu/address/model/module/UniqueModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package seedu.address.model.module;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"import seedu.address.model.module.exceptions.DuplicateModuleException;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"import seedu.address.model.module.exceptions.ModuleNotFoundException;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":" * A list of modules that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":" * A module is considered unique by comparing using {@code Module#isSameModule(Module)}. As such, adding and updating of","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":" * modules uses Module#isSameModule(Module) for equality so as to ensure that the module being added or updated is","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":" * unique in terms of identity in the UniqueModuleList. However, the removal of a module uses Module#equals(Object) so","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":" * as to ensure that the module with exactly the same fields will be removed.","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":" * @see Module#isSameModule(Module)","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"public class UniqueModuleList implements Iterable\u003cModule\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    private final ObservableList\u003cModule\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"    private final ObservableList\u003cModule\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * Returns true if the list contains an equivalent module as the given argument.","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"    public boolean contains(Module toCheck) {","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"        return internalList.stream().anyMatch(toCheck::isSameModule);","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"     * Adds a module to the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"     * The module must not already exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    public void add(Module toAdd) {","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"     * Replaces the module {@code target} in the list with {@code editedModule}.","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"     * The module identity of {@code editedModule} must not be the same as another existing module in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"        requireAllNonNull(target, editedModule);","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"            throw new ModuleNotFoundException();","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"        if (!target.isSameModule(editedModule) \u0026\u0026 contains(editedModule)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"        internalList.set(index, editedModule);","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"bryanngzh"},"content":"     * Removes the equivalent module from the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"bryanngzh"},"content":"     * The module must exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"bryanngzh"},"content":"    public void remove(Module toRemove) {","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"bryanngzh"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"bryanngzh"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"bryanngzh"},"content":"            throw new ModuleNotFoundException();","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"bryanngzh"},"content":"    public void setModules(UniqueModuleList replacement) {","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"bryanngzh"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"bryanngzh"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"bryanngzh"},"content":"     * Replaces the contents of this list with {@code modules}.","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"bryanngzh"},"content":"     * {@code modules} must not contain duplicate modules.","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"bryanngzh"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"bryanngzh"},"content":"        requireAllNonNull(modules);","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"bryanngzh"},"content":"        if (!modulesAreUnique(modules)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"bryanngzh"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"bryanngzh"},"content":"        internalList.setAll(modules);","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"bryanngzh"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"bryanngzh"},"content":"    public ObservableList\u003cModule\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"bryanngzh"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"bryanngzh"},"content":"    public Iterator\u003cModule\u003e iterator() {","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"bryanngzh"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"bryanngzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"bryanngzh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"bryanngzh"},"content":"                || (other instanceof UniqueModuleList // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"bryanngzh"},"content":"                \u0026\u0026 internalList.equals(((UniqueModuleList) other).internalList));","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"bryanngzh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"bryanngzh"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"bryanngzh"},"content":"     * Returns true if {@code modules} contains only unique modules.","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"bryanngzh"},"content":"    private boolean modulesAreUnique(List\u003cModule\u003e modules) {","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"bryanngzh"},"content":"        for (int i \u003d 0; i \u003c modules.size() - 1; i++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"bryanngzh"},"content":"            for (int j \u003d i + 1; j \u003c modules.size(); j++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"bryanngzh"},"content":"                if (modules.get(i).isSameModule(modules.get(j))) {","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"bryanngzh"},"content":"                    return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"bryanngzh"},"content":"                }","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"bryanngzh"},"content":"        return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"bryanngzh":137}},{"path":"src/main/java/seedu/address/model/module/exceptions/DuplicateModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package seedu.address.model.module.exceptions;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":" * Signals that the operation will result in duplicate Modules (Modules are considered duplicates if they have the same","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":" * identity).","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"public class DuplicateModuleException extends RuntimeException {","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"    public DuplicateModuleException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"        super(\"Operation would result in duplicate modules\");","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"bryanngzh":11}},{"path":"src/main/java/seedu/address/model/module/exceptions/ModuleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package seedu.address.model.module.exceptions;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":" * Signals that the operation is unable to find the specified module.","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"public class ModuleNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"bryanngzh":7}},{"path":"src/main/java/seedu/address/model/module/schedule/ClassType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lizekai-richard"},"content":"package seedu.address.model.module.schedule;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"lizekai-richard"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"lizekai-richard"},"content":" * Represents the type of class in a slot","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"lizekai-richard"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lizekai-richard"},"content":"public enum ClassType {","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lizekai-richard"},"content":"    Lecture,","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lizekai-richard"},"content":"    Tutorial,","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"lizekai-richard"},"content":"    Lab,","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"lizekai-richard"},"content":"    Reflection","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"lizekai-richard"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lizekai-richard":11}},{"path":"src/main/java/seedu/address/model/module/schedule/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lizekai-richard"},"content":"package seedu.address.model.module.schedule;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"lizekai-richard"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"lizekai-richard"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lizekai-richard"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lizekai-richard"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"lizekai-richard"},"content":"import seedu.address.model.module.schedule.exceptions.ConflictSlotException;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"lizekai-richard"},"content":"import seedu.address.model.module.schedule.exceptions.DuplicateSlotException;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"lizekai-richard"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"lizekai-richard"},"content":" * Represents a schedule of a module","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"lizekai-richard"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"lizekai-richard"},"content":"public class Schedule {","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"lizekai-richard"},"content":"    private final List\u003cSlot\u003e slots;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"lizekai-richard"},"content":"    private final Module module;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"lizekai-richard"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"lizekai-richard"},"content":"     * Requires module not to e null","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"lizekai-richard"},"content":"     * @param module the module that has this schedule","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"lizekai-richard"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"lizekai-richard"},"content":"    public Schedule(Module module) {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"lizekai-richard"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"lizekai-richard"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"lizekai-richard"},"content":"        this.slots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"lizekai-richard"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"lizekai-richard"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"lizekai-richard"},"content":"     * Checks if the new slot is conflict with any existing slot","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"lizekai-richard"},"content":"     * @param newSlot new slot to add","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"lizekai-richard"},"content":"     * @return conflict or not","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"lizekai-richard"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"lizekai-richard"},"content":"    private boolean isConflict(Slot newSlot) {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"lizekai-richard"},"content":"        requireNonNull(newSlot);","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"lizekai-richard"},"content":"        return slots.stream().anyMatch(newSlot::isOverlap);","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"lizekai-richard"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"lizekai-richard"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"lizekai-richard"},"content":"     * Adds a new slot to the slot list","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"lizekai-richard"},"content":"     * @param newSlot new slot to add","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"lizekai-richard"},"content":"     * @throws DuplicateSlotException","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"lizekai-richard"},"content":"     * @throws ConflictSlotException","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"lizekai-richard"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"lizekai-richard"},"content":"    public void addSlot(Slot newSlot) throws DuplicateSlotException, ConflictSlotException {","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"lizekai-richard"},"content":"        if (slots.contains(newSlot)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"lizekai-richard"},"content":"            throw new DuplicateSlotException();","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"lizekai-richard"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"lizekai-richard"},"content":"        if (isConflict(newSlot)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"lizekai-richard"},"content":"            throw new ConflictSlotException();","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"lizekai-richard"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"lizekai-richard"},"content":"        slots.add(newSlot);","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"lizekai-richard"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"lizekai-richard"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"lizekai-richard"},"content":"     * Obtains all the slots","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"lizekai-richard"},"content":"     * @return slot list","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"lizekai-richard"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"lizekai-richard"},"content":"    public List\u003cSlot\u003e getSlots() {","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"lizekai-richard"},"content":"        return slots;","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"lizekai-richard"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"lizekai-richard"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lizekai-richard":61}},{"path":"src/main/java/seedu/address/model/module/schedule/Slot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lizekai-richard"},"content":"package seedu.address.model.module.schedule;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"lizekai-richard"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"lizekai-richard"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lizekai-richard"},"content":" * Represents a slot in the schedule","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lizekai-richard"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lizekai-richard"},"content":"public class Slot {","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"lizekai-richard"},"content":"    private final Venue venue;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"lizekai-richard"},"content":"    private final Weekdays weekday;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"lizekai-richard"},"content":"    private final String startTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"lizekai-richard"},"content":"    private final String endTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"lizekai-richard"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"lizekai-richard"},"content":"     * Requires all fields to be not null","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"lizekai-richard"},"content":"     * @param venue venue","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"lizekai-richard"},"content":"     * @param weekday weekday","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"lizekai-richard"},"content":"     * @param startTime start time","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"lizekai-richard"},"content":"     * @param endTime end time","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"lizekai-richard"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"lizekai-richard"},"content":"    public Slot(Venue venue, Weekdays weekday, String startTime, String endTime) {","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"lizekai-richard"},"content":"        requireAllNonNull(venue, weekday, startTime, endTime);","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"lizekai-richard"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"lizekai-richard"},"content":"        this.weekday \u003d weekday;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"lizekai-richard"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"lizekai-richard"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"lizekai-richard"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"lizekai-richard"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"lizekai-richard"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"lizekai-richard"},"content":"        return startTime + \" - \" + endTime + \"\\n\" + venue;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"lizekai-richard"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"lizekai-richard"},"content":"    public Weekdays getWeekday() {","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"lizekai-richard"},"content":"        return weekday;","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"lizekai-richard"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"lizekai-richard"},"content":"    public String getPeriod() {","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"lizekai-richard"},"content":"        return startTime + \" - \" + endTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"lizekai-richard"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"lizekai-richard"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"lizekai-richard"},"content":"     * Checks if two slots are overlapping","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"lizekai-richard"},"content":"     * @param newSlot another slot","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"lizekai-richard"},"content":"     * @return overlaps or not","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"lizekai-richard"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"lizekai-richard"},"content":"    public boolean isOverlap(Slot newSlot) {","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"lizekai-richard"},"content":"        if (newSlot.startTime.compareTo(this.endTime) \u003e 0","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"lizekai-richard"},"content":"                || newSlot.endTime.compareTo(this.startTime) \u003c 0) {","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"lizekai-richard"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"lizekai-richard"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"lizekai-richard"},"content":"        return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"lizekai-richard"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"lizekai-richard"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"lizekai-richard"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"lizekai-richard"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"lizekai-richard"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"lizekai-richard"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"lizekai-richard"},"content":"        if (!(other instanceof Slot)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"lizekai-richard"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"lizekai-richard"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"lizekai-richard"},"content":"        Slot otherSlot \u003d (Slot) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"lizekai-richard"},"content":"        return otherSlot.venue.equals(this.venue)","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"lizekai-richard"},"content":"                \u0026\u0026 otherSlot.weekday.equals(this.weekday)","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"lizekai-richard"},"content":"                \u0026\u0026 otherSlot.startTime.equals(this.startTime)","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"lizekai-richard"},"content":"                \u0026\u0026 otherSlot.endTime.equals(this.endTime);","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"lizekai-richard"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"lizekai-richard"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lizekai-richard":69}},{"path":"src/main/java/seedu/address/model/module/schedule/Venue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lizekai-richard"},"content":"package seedu.address.model.module.schedule;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"lizekai-richard"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"lizekai-richard"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lizekai-richard"},"content":" * Represents a venue in NUS","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lizekai-richard"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lizekai-richard"},"content":"public class Venue {","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"lizekai-richard"},"content":"    private final String name;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"lizekai-richard"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"lizekai-richard"},"content":"     * Every field must be present and not null","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"lizekai-richard"},"content":"     * @param venueName the name of the venue","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"lizekai-richard"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"lizekai-richard"},"content":"    public Venue(String venueName) {","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"lizekai-richard"},"content":"        requireAllNonNull(venueName);","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"lizekai-richard"},"content":"        this.name \u003d venueName;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"lizekai-richard"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"lizekai-richard"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"lizekai-richard"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"lizekai-richard"},"content":"        return name;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"lizekai-richard"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"lizekai-richard"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"lizekai-richard"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"lizekai-richard"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"lizekai-richard"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"lizekai-richard"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"lizekai-richard"},"content":"        if (!(other instanceof Venue)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"lizekai-richard"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"lizekai-richard"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"lizekai-richard"},"content":"        Venue otherVenue \u003d (Venue) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"lizekai-richard"},"content":"        return otherVenue.name.equals(this.name);","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"lizekai-richard"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"lizekai-richard"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lizekai-richard":36}},{"path":"src/main/java/seedu/address/model/module/schedule/Weekdays.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lizekai-richard"},"content":"package seedu.address.model.module.schedule;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"lizekai-richard"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"lizekai-richard"},"content":" * Represents the weekday of the slot","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"lizekai-richard"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lizekai-richard"},"content":"public enum Weekdays {","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lizekai-richard"},"content":"    Monday,","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lizekai-richard"},"content":"    Tuesday,","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"lizekai-richard"},"content":"    Wednesday,","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"lizekai-richard"},"content":"    Thursday,","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"lizekai-richard"},"content":"    Friday,","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"lizekai-richard"},"content":"    Saturday,","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"lizekai-richard"},"content":"    Sunday","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"lizekai-richard"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lizekai-richard":14}},{"path":"src/main/java/seedu/address/model/module/schedule/exceptions/ConflictSlotException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lizekai-richard"},"content":"package seedu.address.model.module.schedule.exceptions;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"lizekai-richard"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"lizekai-richard"},"content":" * Signals that the operation will result in conflicts among Slots","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"lizekai-richard"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lizekai-richard"},"content":"public class ConflictSlotException extends RuntimeException {","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lizekai-richard"},"content":"    public ConflictSlotException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lizekai-richard"},"content":"        super(\"Operation results in conflict of slots\");","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"lizekai-richard"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"lizekai-richard"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lizekai-richard":10}},{"path":"src/main/java/seedu/address/model/module/schedule/exceptions/DuplicateSlotException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lizekai-richard"},"content":"package seedu.address.model.module.schedule.exceptions;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lizekai-richard"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"lizekai-richard"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"lizekai-richard"},"content":" * Signals that the operation will result in duplicate Slots","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"lizekai-richard"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lizekai-richard"},"content":"public class DuplicateSlotException extends RuntimeException {","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lizekai-richard"},"content":"    public DuplicateSlotException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lizekai-richard"},"content":"        super(\"Operation will result in duplicate slots\");","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"lizekai-richard"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"lizekai-richard"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lizekai-richard":10}},{"path":"src/main/java/seedu/address/model/person/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leongdl135"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"leongdl135"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"leongdl135"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"leongdl135"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"leongdl135"},"content":" * Represents a Student in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"leongdl135"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"leongdl135"},"content":"public class Student extends Person {","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"leongdl135"},"content":"    private String id;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"leongdl135"},"content":"    private String telegramHandle;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"leongdl135"},"content":"    private String studentInfo;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"leongdl135"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"leongdl135"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"leongdl135"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"leongdl135"},"content":"     * @param name","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"leongdl135"},"content":"     * @param phone","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"leongdl135"},"content":"     * @param email","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"leongdl135"},"content":"     * @param address","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"leongdl135"},"content":"     * @param tags","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"leongdl135"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"leongdl135"},"content":"    public Student(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, String id,","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"leongdl135"},"content":"                   String telegramHandle, String studentInfo) {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"leongdl135"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"leongdl135"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"leongdl135"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"leongdl135"},"content":"        this.studentInfo \u003d studentInfo;","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"leongdl135"},"content":"    public String getId() {","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"leongdl135"},"content":"        return id;","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"leongdl135"},"content":"    public String getTelegramHandle() {","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"leongdl135"},"content":"        return telegramHandle;","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"leongdl135"},"content":"    public String getStudentInfo() {","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"leongdl135"},"content":"        return studentInfo;","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"leongdl135"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"leongdl135"},"content":"     * Compares if students are the same.","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"leongdl135"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"leongdl135"},"content":"     * @param otherStudent","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"leongdl135"},"content":"     * @return True if students are the same.","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"leongdl135"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"leongdl135"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"leongdl135"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"leongdl135"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"leongdl135"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"leongdl135"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"leongdl135"},"content":"                \u0026\u0026 otherStudent.getId().equals(getId());","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"leongdl135"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"leongdl135"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"leongdl135"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"leongdl135"},"content":"        builder.append(getName())","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"leongdl135"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"leongdl135"},"content":"                .append(getPhone())","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"leongdl135"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"leongdl135"},"content":"                .append(getEmail())","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"leongdl135"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"leongdl135"},"content":"                .append(getAddress())","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"leongdl135"},"content":"                .append(\"; ID: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"leongdl135"},"content":"                .append(getId())","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"leongdl135"},"content":"                .append(\"; Telegram: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"leongdl135"},"content":"                .append(getTelegramHandle())","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"leongdl135"},"content":"                .append(\"; Student Info:\")","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"leongdl135"},"content":"                .append(getStudentInfo());","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"leongdl135"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"leongdl135"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"leongdl135"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"leongdl135"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"leongdl135"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"leongdl135"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"leongdl135"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"leongdl135":83}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"import seedu.address.model.module.ModuleCode;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"import seedu.address.model.module.ModuleDescription;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"import seedu.address.model.module.ModuleName;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":" * Jackson-friendly version of {@link Module}","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"public class JsonAdaptedModule {","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Module\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"    private final String moduleCode;","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"    private final String moduleDescription;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"    private final String moduleName;","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"    private final List\u003cJsonAdaptedPerson\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"     * Constructs a {@code JsonAdaptedModule} with the given details of the module.","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"    public JsonAdaptedModule(@JsonProperty(\"moduleCode\") String moduleCode,","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"                             @JsonProperty(\"moduleDescription\") String moduleDescription,","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"                             @JsonProperty(\"moduleName\") String moduleName,","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"drkkjh"},"content":"                             @JsonProperty(\"students\") List\u003cJsonAdaptedPerson\u003e students) {","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"drkkjh"},"content":"        this.moduleDescription \u003d moduleDescription;","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"drkkjh"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"drkkjh"},"content":"        if (students !\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"drkkjh"},"content":"            this.students.addAll(students);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"drkkjh"},"content":"     * Converts a given {@code Module} into this class for Jackson use.","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"drkkjh"},"content":"     * @param source","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"drkkjh"},"content":"    public JsonAdaptedModule(Module source) {","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"drkkjh"},"content":"        moduleCode \u003d source.getCode().fullCode;","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"drkkjh"},"content":"        moduleDescription \u003d source.getDescription().fullDescription;","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"drkkjh"},"content":"        moduleName \u003d source.getName().fullName;","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"drkkjh"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"drkkjh"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"drkkjh"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"drkkjh"},"content":"        students.addAll(source.getStudents().stream()","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"drkkjh"},"content":"                .map(JsonAdaptedPerson::new)","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"drkkjh"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"drkkjh"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Module} object.","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"drkkjh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"drkkjh"},"content":"    public Module toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"drkkjh"},"content":"        final List\u003cTag\u003e moduleTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"drkkjh"},"content":"        final List\u003cPerson\u003e moduleStudents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"drkkjh"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"drkkjh"},"content":"            moduleTags.add(tag.toModelType());","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"drkkjh"},"content":"        for (JsonAdaptedPerson person : students) {","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"drkkjh"},"content":"            moduleStudents.add(person.toModelType());","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"drkkjh"},"content":"        if (moduleName \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"drkkjh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"drkkjh"},"content":"                    ModuleName.class.getSimpleName()));","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"drkkjh"},"content":"        if (!ModuleName.isValidName(moduleName)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"drkkjh"},"content":"            throw new IllegalValueException(ModuleName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"drkkjh"},"content":"        final ModuleName modelModuleName \u003d new ModuleName(moduleName);","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"drkkjh"},"content":"        if (moduleDescription \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"drkkjh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"drkkjh"},"content":"                    ModuleDescription.class.getSimpleName()));","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"drkkjh"},"content":"        if (!ModuleDescription.isValidDescription(moduleDescription)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"drkkjh"},"content":"            throw new IllegalValueException(ModuleDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"drkkjh"},"content":"        final ModuleDescription modelModuleDescription \u003d new ModuleDescription(moduleDescription);","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"drkkjh"},"content":"        if (moduleCode \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"drkkjh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"drkkjh"},"content":"                    ModuleCode.class.getSimpleName()));","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"drkkjh"},"content":"        if (!ModuleCode.isValidCode(moduleCode)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"drkkjh"},"content":"            throw new IllegalValueException(ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"drkkjh"},"content":"        final ModuleCode modelModuleCode \u003d new ModuleCode(moduleCode);","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"drkkjh"},"content":"        final Set\u003cTag\u003e modelModuleTags \u003d new HashSet\u003c\u003e(moduleTags);","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"drkkjh"},"content":"        final ArrayList\u003cPerson\u003e modelModuleStudents \u003d new ArrayList\u003c\u003e(moduleStudents);","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"drkkjh"},"content":"        return new Module(modelModuleName, modelModuleCode, modelModuleDescription,","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"drkkjh"},"content":"                modelModuleTags, modelModuleStudents);","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"drkkjh":116}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leongdl135"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"leongdl135"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"leongdl135"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"leongdl135"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"leongdl135"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"leongdl135"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"leongdl135"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"leongdl135"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"leongdl135"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"leongdl135"},"content":"public class JsonAdaptedStudent extends JsonAdaptedPerson {","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"leongdl135"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"leongdl135"},"content":"    private final String id;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"leongdl135"},"content":"    private final String handle;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"leongdl135"},"content":"    private final String info;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"leongdl135"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"leongdl135"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given person details.","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"leongdl135"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"leongdl135"},"content":"     * @param name","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"leongdl135"},"content":"     * @param phone","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"leongdl135"},"content":"     * @param email","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"leongdl135"},"content":"     * @param address","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"leongdl135"},"content":"     * @param tagged","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"leongdl135"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"leongdl135"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"leongdl135"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"leongdl135"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"leongdl135"},"content":"                              @JsonProperty(\"ID\") String id, @JsonProperty(\"handle\") String handle,","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"leongdl135"},"content":"                              @JsonProperty(\"info\") String info) {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"leongdl135"},"content":"        super(name, phone, email, address, tagged);","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"leongdl135"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"leongdl135"},"content":"        this.handle \u003d handle;","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"leongdl135"},"content":"        this.info \u003d info;","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"leongdl135"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"leongdl135"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"leongdl135"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"leongdl135"},"content":"     * @param source","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"leongdl135"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"leongdl135"},"content":"    public JsonAdaptedStudent(Person source) {","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"leongdl135"},"content":"        super(source);","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"leongdl135"},"content":"        id \u003d ((Student) source).getId();","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"leongdl135"},"content":"        handle \u003d ((Student) source).getTelegramHandle();","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"leongdl135"},"content":"        info \u003d ((Student) source).getStudentInfo();","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"leongdl135"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"leongdl135"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"leongdl135"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"leongdl135"},"content":"        Person person \u003d super.toModelType();","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"leongdl135"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"leongdl135"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"ID\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"leongdl135"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"leongdl135"},"content":"        if (handle \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"leongdl135"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Telegram Handle\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"leongdl135"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"leongdl135"},"content":"        if (info \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"leongdl135"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"info\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"leongdl135"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"leongdl135"},"content":"        return new Student(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"leongdl135"},"content":"                person.getTags(), id, handle, info);","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"leongdl135"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"leongdl135"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"leongdl135":69}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"leongdl135"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"Module list contain duplicate module(s).\";","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"    private final List\u003cJsonAdaptedModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"                                       @JsonProperty(\"modules\") List\u003cJsonAdaptedModule\u003e modules) {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"        this.modules.addAll(modules);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"leongdl135"},"content":"     * Makes use of 2 methods to either add a student or person into the storage.","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"leongdl135"},"content":"        persons.addAll(source.getPersonList().stream().filter(x -\u003e !(x instanceof Student))","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"leongdl135"},"content":"                .map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"leongdl135"},"content":"        persons.addAll(source.getPersonList().stream().filter(x -\u003e x instanceof Student)","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"leongdl135"},"content":"                .map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"drkkjh"},"content":"        modules.addAll(source.getModuleList().stream().map(JsonAdaptedModule::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"drkkjh"},"content":"        for (JsonAdaptedModule jsonAdaptedModule : modules) {","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"drkkjh"},"content":"            Module module \u003d jsonAdaptedModule.toModelType();","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"drkkjh"},"content":"            if (addressBook.hasModule(module)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"drkkjh"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"drkkjh"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"drkkjh"},"content":"            addressBook.addModule(module);","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"drkkjh":14,"-":58,"leongdl135":6}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"bryanngzh"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"bryanngzh"},"content":"        public void addModule(Module module) {","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"bryanngzh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"bryanngzh"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"bryanngzh"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"bryanngzh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"bryanngzh"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"bryanngzh"},"content":"        public void deleteModule(Module target) {","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"bryanngzh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"bryanngzh"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"bryanngzh"},"content":"        public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"bryanngzh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"bryanngzh"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"bryanngzh"},"content":"        public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"bryanngzh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"bryanngzh"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"bryanngzh"},"content":"        public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"bryanngzh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":194,"bryanngzh":31}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"bryanngzh"},"content":"        private final ObservableList\u003cModule\u003e modules \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"bryanngzh"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"bryanngzh"},"content":"        public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"bryanngzh"},"content":"            return modules;","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":102,"bryanngzh":7}}]
