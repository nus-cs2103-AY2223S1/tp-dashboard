[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"feliciagan"},"content":"# YellowBook","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"ryanguai"},"content":"[![Java CI](https://github.com/AY2223S1-CS2103T-F11-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-F11-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"feliciagan"},"content":"YellowBook is a desktop application for university students who are involved in many projects to organize their project ","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"feliciagan"},"content":"contacts and tasks. ","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"feliciagan"},"content":"YellowBook is optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"feliciagan"},"content":"## Documentation","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"feliciagan"},"content":"* [User Guide](https://github.com/AY2223S1-CS2103T-F11-4/tp/blob/master/docs/UserGuide.md)","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"feliciagan"},"content":"* [Developer Guide](https://github.com/AY2223S1-CS2103T-F11-4/tp/blob/master/docs/DeveloperGuide.md)","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"feliciagan"},"content":"* [About Us](https://github.com/AY2223S1-CS2103T-F11-4/tp/blob/master/docs/AboutUs.md)","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"feliciagan"},"content":"## Acknowledgements","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"feliciagan"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"feliciagan":14,"ryanguai":1,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ryanguai"},"content":"### Ryan Guai","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ryanguai"},"content":"\u003cimg src\u003d\"images/ryanguai.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ryanguai"},"content":"[[github](https://github.com/ryanguai)]","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"ryanguai"},"content":"[[portfolio](team/ryanguai.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ryanguai"},"content":"* Role: Team Lead","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"### Nicole Lee Siying","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"alvintfl"},"content":"\u003cimg src\u003d\"images/nickeltea.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"[[github](http://github.com/nickeltea)]","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"alvintfl"},"content":"[[portfolio](team/nickeltea.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"nickeltea"},"content":"* Role: Documentation","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"nickeltea"},"content":"* Responsibilities: Quality of project documents","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"junwei-tan"},"content":"### Tan Jun Wei","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"junwei-tan"},"content":"\u003cimg src\u003d\"images/junwei-tan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"junwei-tan"},"content":"[[github](http://github.com/junwei-tan)] [[portfolio](team/junwei-tan.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"junwei-tan"},"content":"* Responsibilities: Testing","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"feliciagan"},"content":"### Felicia Gan","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"feliciagan"},"content":"\u003cimg src\u003d\"images/feliciagan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"feliciagan"},"content":"[[github](http://github.com/feliciagan)]","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"feliciagan"},"content":"[[portfolio](team/feliciagan.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"feliciagan"},"content":"* Role: Code Quality","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"alvintfl"},"content":"### Alvin Tan","lastModifiedDate":"2022-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"alvintfl"},"content":"\u003cimg src\u003d\"images/alvintfl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"alvintfl"},"content":"[[github](http://github.com/alvintfl)]","lastModifiedDate":"2022-09-27"},{"lineNumber":54,"author":{"gitId":"alvintfl"},"content":"[[portfolio](team/alvintfl.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"alvintfl"},"content":"* Role: Integration","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"alvintfl":7,"feliciagan":5,"junwei-tan":4,"nickeltea":4,"ryanguai":5,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"alvintfl"},"content":"* is a university student","lastModifiedDate":"2022-09-27"},{"lineNumber":261,"author":{"gitId":"alvintfl"},"content":"* is involved in many projects","lastModifiedDate":"2022-09-27"},{"lineNumber":262,"author":{"gitId":"alvintfl"},"content":"* has a need to manage a significant number of project contacts and tasks","lastModifiedDate":"2022-09-27"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"alvintfl"},"content":"**Value proposition**: ","lastModifiedDate":"2022-09-27"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"alvintfl"},"content":"* manage project contacts and tasks faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-09-27"},{"lineNumber":271,"author":{"gitId":"alvintfl"},"content":"* manage many group projects at the same time","lastModifiedDate":"2022-09-27"},{"lineNumber":272,"author":{"gitId":"alvintfl"},"content":"* provide a central location for managing project contacts and tasks together","lastModifiedDate":"2022-09-27"},{"lineNumber":273,"author":{"gitId":"alvintfl"},"content":"* track progress on various tasks to ensure milestones are met","lastModifiedDate":"2022-09-27"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"alvintfl"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ------------------------------------------------------------------------------------ |","lastModifiedDate":"2022-09-27"},{"lineNumber":281,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | technically competent student who prefers typing to clicking | have a CLI   | perform operations quickly | ","lastModifiedDate":"2022-09-27"},{"lineNumber":282,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | student who is part of many group projects | keep track of the contact information of my groupmates | communicate with my team |","lastModifiedDate":"2022-09-27"},{"lineNumber":283,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | student who is part of many group projects | track the progress of each group towards its goals | know if everyone is putting in their share of work |","lastModifiedDate":"2022-09-27"},{"lineNumber":284,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | student who often has to email others | store people’s emails    | remember their emails | ","lastModifiedDate":"2022-09-27"},{"lineNumber":285,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | student who prefers calling                | see the person’s phone number  | call them |","lastModifiedDate":"2022-09-27"},{"lineNumber":286,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | student who prefers visiting someone in person |  see the person’s address  | visit them |","lastModifiedDate":"2022-09-27"},{"lineNumber":287,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | SWE student                                | save the github usernames of my contacts | view their repo |","lastModifiedDate":"2022-09-27"},{"lineNumber":288,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | student                                    | edit the information on people’s profiles | update the information when necessary | ","lastModifiedDate":"2022-09-27"},{"lineNumber":289,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | student who pefers a compact social circle | delete contacts                | stop keeping old contacts |","lastModifiedDate":"2022-09-27"},{"lineNumber":290,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | team leader                                | add and remove people from a project when forming the project group | know who is part of the project group |","lastModifiedDate":"2022-09-27"},{"lineNumber":291,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | team leader                                | remove a project and the people associated with it once the project is done | avoid cluttering my workspace |","lastModifiedDate":"2022-09-27"},{"lineNumber":292,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | team member                                | group contacts                 | know which people are involved in which projects | ","lastModifiedDate":"2022-09-27"},{"lineNumber":293,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | team member                                | give status updates on individual tasks | inform the group on my progress |","lastModifiedDate":"2022-09-27"},{"lineNumber":294,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | forgetful student                          | keep track of my tasks         | know which tasks need to be completed |","lastModifiedDate":"2022-09-27"},{"lineNumber":295,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | forgetful student                          | mark tasks as complete         | know if I have completed the task already | ","lastModifiedDate":"2022-09-27"},{"lineNumber":296,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | forgetful student                          | note the deadline of my tasks  | complete my tasks on time | ","lastModifiedDate":"2022-09-27"},{"lineNumber":297,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | forgetful person                           | save people’s profiles with photos | remember their names | ","lastModifiedDate":"2022-09-27"},{"lineNumber":298,"author":{"gitId":"alvintfl"},"content":"| `* * *`  | forgetful person                           | keep notes on the people I’ve met | remember important things about them | ","lastModifiedDate":"2022-09-27"},{"lineNumber":299,"author":{"gitId":"alvintfl"},"content":"| `* *`    | team leader                                | see my team’s progress towards completing their assigned tasks | know if my team is on track |","lastModifiedDate":"2022-09-27"},{"lineNumber":300,"author":{"gitId":"alvintfl"},"content":"| `* *`    | team leader                                | assign tasks to my team members | divide the work efficiently |","lastModifiedDate":"2022-09-27"},{"lineNumber":301,"author":{"gitId":"alvintfl"},"content":"| `* *`    | team leader                                | archive a project and the people associated with it once the project is done | avoid cluttering my workspace|","lastModifiedDate":"2022-09-27"},{"lineNumber":302,"author":{"gitId":"alvintfl"},"content":"| `* *`    | team member                                | send reminders to other team members | remind them to do their work | ","lastModifiedDate":"2022-09-27"},{"lineNumber":303,"author":{"gitId":"alvintfl"},"content":"| `* *`    | team member                                | use an idea board | generate inspiration with my teammates | ","lastModifiedDate":"2022-09-27"},{"lineNumber":304,"author":{"gitId":"alvintfl"},"content":"| `* *`    | anxious student                            | see the percentage completion of the tasks | feel at ease | ","lastModifiedDate":"2022-09-27"},{"lineNumber":305,"author":{"gitId":"alvintfl"},"content":"| `* *`    | anxious student                            | see if I am on track with my deadlines | be assured that my tasks are not behind schedule | ","lastModifiedDate":"2022-09-27"},{"lineNumber":306,"author":{"gitId":"alvintfl"},"content":"| `* *`    | forgetful student                          | be reminded of upcoming deadlines | ensure that I won\u0027t miss them | ","lastModifiedDate":"2022-09-27"},{"lineNumber":307,"author":{"gitId":"alvintfl"},"content":"| `* *`    | artistic student                           | change the colour palette of my UI to my preference | enjoy looking at the UI | ","lastModifiedDate":"2022-09-27"},{"lineNumber":308,"author":{"gitId":"alvintfl"},"content":"| `* *`    | student with color blindness               | have my software be composed of minimal colors | distinguish all elements |","lastModifiedDate":"2022-09-27"},{"lineNumber":309,"author":{"gitId":"alvintfl"},"content":"| `* *`    | student who does work late at night        | use dark mode                  | choose not to strain my eyes | ","lastModifiedDate":"2022-09-27"},{"lineNumber":310,"author":{"gitId":"alvintfl"},"content":"| `*`      | student who struggles with remembering identities | add nicknames to my contacts | better identify them |","lastModifiedDate":"2022-09-27"},{"lineNumber":311,"author":{"gitId":"alvintfl"},"content":"| `*`      | student who prefers pen and paper          | print out my tasks             | annotate on it physically | ","lastModifiedDate":"2022-09-27"},{"lineNumber":312,"author":{"gitId":"alvintfl"},"content":"| `*`      | artistic student                           | have the software I use to look aesthetic | enjoy using them |","lastModifiedDate":"2022-09-27"},{"lineNumber":313,"author":{"gitId":"alvintfl"},"content":"| `*`      | student who is bad with names              | see the person’s first name emphasized | know how to address the person| ","lastModifiedDate":"2022-09-27"},{"lineNumber":314,"author":{"gitId":"alvintfl"},"content":"| `*`      | student with poor eyesight                 | ensure that my software have big fonts and large buttons | distinguish all elements | ","lastModifiedDate":"2022-09-27"},{"lineNumber":315,"author":{"gitId":"alvintfl"},"content":"| `*`      | animal loving person                       | have some cute animals in the background | feel entertained while managing my tasks | ","lastModifiedDate":"2022-09-27"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"alvintfl"},"content":"(For all use cases below, the **System** is the `YellowBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-29"},{"lineNumber":320,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":321,"author":{"gitId":"alvintfl"},"content":"**Use case: Add a contact**","lastModifiedDate":"2022-09-29"},{"lineNumber":322,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":323,"author":{"gitId":"alvintfl"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":324,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":325,"author":{"gitId":"alvintfl"},"content":"1.  User request to add a contact","lastModifiedDate":"2022-09-29"},{"lineNumber":326,"author":{"gitId":"alvintfl"},"content":"2.  YellowBook adds the contact","lastModifiedDate":"2022-09-29"},{"lineNumber":327,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":328,"author":{"gitId":"alvintfl"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":329,"author":{"gitId":"alvintfl"},"content":"    ","lastModifiedDate":"2022-09-29"},{"lineNumber":330,"author":{"gitId":"alvintfl"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":331,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":332,"author":{"gitId":"alvintfl"},"content":"* 1a. The details of the contact are incomplete.","lastModifiedDate":"2022-09-29"},{"lineNumber":333,"author":{"gitId":"alvintfl"},"content":"     ","lastModifiedDate":"2022-09-29"},{"lineNumber":334,"author":{"gitId":"alvintfl"},"content":"    * 1a1. YellowBook shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":335,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":336,"author":{"gitId":"alvintfl"},"content":"\t     Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":337,"author":{"gitId":"alvintfl"},"content":"    ","lastModifiedDate":"2022-09-29"},{"lineNumber":338,"author":{"gitId":"alvintfl"},"content":"* 1b. The contact given already exists.","lastModifiedDate":"2022-09-29"},{"lineNumber":339,"author":{"gitId":"alvintfl"},"content":"\t   ","lastModifiedDate":"2022-09-29"},{"lineNumber":340,"author":{"gitId":"alvintfl"},"content":"    * 1b1. YellowBook shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":341,"author":{"gitId":"alvintfl"},"content":"  ","lastModifiedDate":"2022-09-29"},{"lineNumber":342,"author":{"gitId":"alvintfl"},"content":"      Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"nickeltea"},"content":"2.  YellowBook shows a list of persons","lastModifiedDate":"2022-09-30"},{"lineNumber":350,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"nickeltea"},"content":"    * 3a1. YellowBook shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":364,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":365,"author":{"gitId":"nickeltea"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":366,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":367,"author":{"gitId":"nickeltea"},"content":"**Use case: Add a task**","lastModifiedDate":"2022-09-29"},{"lineNumber":368,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":369,"author":{"gitId":"nickeltea"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":370,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":371,"author":{"gitId":"nickeltea"},"content":"1.  User requests to list tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":372,"author":{"gitId":"nickeltea"},"content":"2.  YellowBook shows a list of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":373,"author":{"gitId":"nickeltea"},"content":"3.  User requests to delete a specific task in the list","lastModifiedDate":"2022-09-29"},{"lineNumber":374,"author":{"gitId":"nickeltea"},"content":"4.  YellowBook deletes the task","lastModifiedDate":"2022-09-30"},{"lineNumber":375,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":376,"author":{"gitId":"nickeltea"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":377,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":378,"author":{"gitId":"nickeltea"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":379,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":380,"author":{"gitId":"nickeltea"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-29"},{"lineNumber":381,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":382,"author":{"gitId":"nickeltea"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":383,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":384,"author":{"gitId":"nickeltea"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":385,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":386,"author":{"gitId":"nickeltea"},"content":"    * 3a1. YellowBook shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":387,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":388,"author":{"gitId":"nickeltea"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":389,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":390,"author":{"gitId":"nickeltea"},"content":"**Use case: Add a task**","lastModifiedDate":"2022-09-29"},{"lineNumber":391,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":392,"author":{"gitId":"nickeltea"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":393,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":394,"author":{"gitId":"nickeltea"},"content":"1.  User requests to list tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":395,"author":{"gitId":"nickeltea"},"content":"2.  YellowBook shows a list of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":396,"author":{"gitId":"nickeltea"},"content":"3.  User requests to add a task to the list","lastModifiedDate":"2022-09-29"},{"lineNumber":397,"author":{"gitId":"nickeltea"},"content":"4.  YellowBook adds the task to the end of the list","lastModifiedDate":"2022-09-30"},{"lineNumber":398,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":399,"author":{"gitId":"nickeltea"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":400,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":401,"author":{"gitId":"nickeltea"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":402,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":403,"author":{"gitId":"nickeltea"},"content":"* 3a. The user gives an invalid date format.","lastModifiedDate":"2022-09-29"},{"lineNumber":404,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":405,"author":{"gitId":"nickeltea"},"content":"    * 3a1. YellowBook shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":406,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":407,"author":{"gitId":"nickeltea"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":408,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":409,"author":{"gitId":"nickeltea"},"content":"* 3a. The user does not provide a task description.","lastModifiedDate":"2022-09-29"},{"lineNumber":410,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":411,"author":{"gitId":"nickeltea"},"content":"    * 3a1. YellowBook shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":412,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":413,"author":{"gitId":"nickeltea"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":414,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":415,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":416,"author":{"gitId":"nickeltea"},"content":"**Use case: Delete a task**","lastModifiedDate":"2022-09-29"},{"lineNumber":417,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":418,"author":{"gitId":"nickeltea"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":419,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":420,"author":{"gitId":"nickeltea"},"content":"1.  User requests to list tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":421,"author":{"gitId":"nickeltea"},"content":"2.  YellowBook shows a list of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":422,"author":{"gitId":"nickeltea"},"content":"3.  User requests to delete a specific task in the list","lastModifiedDate":"2022-09-29"},{"lineNumber":423,"author":{"gitId":"nickeltea"},"content":"4.  YellowBook deletes the task","lastModifiedDate":"2022-09-30"},{"lineNumber":424,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":425,"author":{"gitId":"nickeltea"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":426,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":427,"author":{"gitId":"nickeltea"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":428,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":429,"author":{"gitId":"nickeltea"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":430,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":431,"author":{"gitId":"nickeltea"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":432,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":433,"author":{"gitId":"nickeltea"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":434,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":435,"author":{"gitId":"nickeltea"},"content":"    * 3a1. YellowBook shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"feliciagan"},"content":"**Use case: Mark a task**","lastModifiedDate":"2022-09-29"},{"lineNumber":440,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":441,"author":{"gitId":"feliciagan"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":442,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":443,"author":{"gitId":"feliciagan"},"content":"1. User requests to list tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":444,"author":{"gitId":"feliciagan"},"content":"2. YellowBook shows a list of tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":445,"author":{"gitId":"feliciagan"},"content":"3. User requests to mark a specific task in the list","lastModifiedDate":"2022-09-29"},{"lineNumber":446,"author":{"gitId":"feliciagan"},"content":"4. YellowBook marks that task as done","lastModifiedDate":"2022-09-29"},{"lineNumber":447,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":448,"author":{"gitId":"feliciagan"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":449,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":450,"author":{"gitId":"feliciagan"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":451,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":452,"author":{"gitId":"feliciagan"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-29"},{"lineNumber":453,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":454,"author":{"gitId":"feliciagan"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":455,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":456,"author":{"gitId":"feliciagan"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":457,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":458,"author":{"gitId":"feliciagan"},"content":"    * 3a1. YellowBook shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":459,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":460,"author":{"gitId":"feliciagan"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":461,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":462,"author":{"gitId":"junwei-tan"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":463,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":464,"author":{"gitId":"junwei-tan"},"content":"1. User requests to list tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":465,"author":{"gitId":"junwei-tan"},"content":"2. YellowBook shows a list of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":466,"author":{"gitId":"junwei-tan"},"content":"3. User requests to find a task tagged to specific contact","lastModifiedDate":"2022-09-30"},{"lineNumber":467,"author":{"gitId":"junwei-tan"},"content":"4. YellowBook shows a list of task tagged to that contact","lastModifiedDate":"2022-09-30"},{"lineNumber":468,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":469,"author":{"gitId":"junwei-tan"},"content":"   Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":470,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":471,"author":{"gitId":"junwei-tan"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":472,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":473,"author":{"gitId":"junwei-tan"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":474,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":475,"author":{"gitId":"junwei-tan"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":476,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":477,"author":{"gitId":"junwei-tan"},"content":"* 3a. There is no contact matching specified keywords.","lastModifiedDate":"2022-09-30"},{"lineNumber":478,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":479,"author":{"gitId":"junwei-tan"},"content":"    * 3a1. YellowBook shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":480,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":481,"author":{"gitId":"junwei-tan"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-30"},{"lineNumber":482,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":483,"author":{"gitId":"ryanguai"},"content":"**Use case: Add a label to an existing task**","lastModifiedDate":"2022-09-30"},{"lineNumber":484,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":485,"author":{"gitId":"ryanguai"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":486,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":487,"author":{"gitId":"ryanguai"},"content":"1. User requests to list tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":488,"author":{"gitId":"ryanguai"},"content":"2. YellowBook shows a list of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":489,"author":{"gitId":"ryanguai"},"content":"3. User requests to tag a specific task in the list with a label","lastModifiedDate":"2022-09-30"},{"lineNumber":490,"author":{"gitId":"ryanguai"},"content":"4. YellowBook tags the task with specified label","lastModifiedDate":"2022-09-30"},{"lineNumber":491,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":492,"author":{"gitId":"ryanguai"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":493,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":494,"author":{"gitId":"ryanguai"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":495,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":496,"author":{"gitId":"ryanguai"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":497,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":498,"author":{"gitId":"ryanguai"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":499,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":500,"author":{"gitId":"ryanguai"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":501,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":502,"author":{"gitId":"ryanguai"},"content":"    * 3a1. YellowBook shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":504,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-30"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":506,"author":{"gitId":"ryanguai"},"content":"  ","lastModifiedDate":"2022-09-30"},{"lineNumber":507,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"ryanguai"},"content":"2. Should be able to hold up to 30,000 persons without a _noticeable sluggishness_ in performance for typical usage.","lastModifiedDate":"2022-09-30"},{"lineNumber":513,"author":{"gitId":"ryanguai"},"content":"3. Should be able to hold up to 30,000 tasks without a _noticeable sluggishness_ in performance for typical usage.","lastModifiedDate":"2022-09-30"},{"lineNumber":514,"author":{"gitId":"ryanguai"},"content":"4. A user with _above average typing speed_ for _regular text_ should be able to accomplish ","lastModifiedDate":"2022-09-30"},{"lineNumber":515,"author":{"gitId":"junwei-tan"},"content":"most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-09-30"},{"lineNumber":516,"author":{"gitId":"junwei-tan"},"content":"5. Contact/task/tag names should contain alphanumeric characters and/or spaces and/or symbols.","lastModifiedDate":"2022-09-30"},{"lineNumber":517,"author":{"gitId":"junwei-tan"},"content":"6. Contact/task/tag names should be case-insensitive.","lastModifiedDate":"2022-09-30"},{"lineNumber":518,"author":{"gitId":"junwei-tan"},"content":"7. Contact phone numbers should contain numbers only.","lastModifiedDate":"2022-09-30"},{"lineNumber":519,"author":{"gitId":"junwei-tan"},"content":"8. Should be usable by first-time user without referencing external guides.","lastModifiedDate":"2022-09-30"},{"lineNumber":520,"author":{"gitId":"junwei-tan"},"content":"9. GUI should be usable by colour blind users.","lastModifiedDate":"2022-09-30"},{"lineNumber":521,"author":{"gitId":"junwei-tan"},"content":"10. Should work on both 32-bit and 64-bit environments.","lastModifiedDate":"2022-09-30"},{"lineNumber":522,"author":{"gitId":"junwei-tan"},"content":"11. GUI should appear as-designed on screens with resolutions from 1024x576 to 3840x2160.","lastModifiedDate":"2022-09-30"},{"lineNumber":523,"author":{"gitId":"junwei-tan"},"content":"12. Should display a visual prompt when YellowBook is processing an user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":524,"author":{"gitId":"ryanguai"},"content":"13. The project is expected to deliver a _new iteration_ every 2 weeks.","lastModifiedDate":"2022-09-30"},{"lineNumber":525,"author":{"gitId":"junwei-tan"},"content":"14. Should work without an active internet connection.","lastModifiedDate":"2022-09-30"},{"lineNumber":526,"author":{"gitId":"junwei-tan"},"content":"15. Data files from YellowBook v1.1 onwards should be compatible with the future versions.","lastModifiedDate":"2022-09-30"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"ryanguai"},"content":"* **New iteration**: A working MVP","lastModifiedDate":"2022-09-30"},{"lineNumber":535,"author":{"gitId":"ryanguai"},"content":"* **Noticeable sluggishness**: 50-150ms, which is the average latency range for most sites","lastModifiedDate":"2022-09-30"},{"lineNumber":536,"author":{"gitId":"ryanguai"},"content":"* **Above average typing speed**: 65 to 70 words per minute, well above the average of 40 words per minute","lastModifiedDate":"2022-09-30"},{"lineNumber":537,"author":{"gitId":"ryanguai"},"content":"* **Regular text**: English words, excluding code and system admin commands","lastModifiedDate":"2022-09-30"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"alvintfl":68,"feliciagan":23,"junwei-tan":32,"nickeltea":74,"ryanguai":29,"-":364}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ryanguai"},"content":"YellowBook is a **desktop application for university students** who are involved in many projects to organize their project contacts and tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"ryanguai"},"content":"YellowBook is optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"ryanguai"},"content":"1. Download the latest `yellowbook.jar` from [here]().","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"ryanguai"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your YellowBook.","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"ryanguai"},"content":"   * **`listC`** : Lists all contacts.","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"ryanguai"},"content":"   * **`addC`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to YellowBook.","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ryanguai"},"content":"   * **`deleteC`**`3` : Deletes the 3rd contact shown in the current contact list.","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"ryanguai"},"content":"  e.g `n/NAME [t/LABEL]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"ryanguai"},"content":"  e.g. `[t/LABEL]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":59,"author":{"gitId":"ryanguai"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `listC`, `listT`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"feliciagan"},"content":"## Section 1: Contacts","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":66,"author":{"gitId":"ryanguai"},"content":"### Add a contact: `addC`","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":68,"author":{"gitId":"alvintfl"},"content":"Adds a contact to the address book.","lastModifiedDate":"2022-09-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":70,"author":{"gitId":"ryanguai"},"content":"Format:  `addC n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [d/DESCRIPTION]`","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":72,"author":{"gitId":"alvintfl"},"content":"* The description of a contact is optional.","lastModifiedDate":"2022-09-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"alvintfl"},"content":"Examples: ","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"ryanguai"},"content":"* `addC n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"ryanguai"},"content":"* `addC n/Betsy Crowe e/betsycrowe@example.com a/Newgate Prison p/1234567 d/Weird person.`","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"feliciagan"},"content":"### Listing all contacts: `listC`","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"feliciagan"},"content":"Shows all contacts stored in the address book.","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"feliciagan"},"content":"Format: `listC`","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"feliciagan"},"content":"### Deleting a contact: `deleteC`","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"feliciagan"},"content":"Removes the specified contact and all its associated information from the address book.","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"feliciagan"},"content":"Format: `deleteC INDEX`","lastModifiedDate":"2022-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"feliciagan"},"content":"* Index of a contact is its index number on the contact list.","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"feliciagan"},"content":"* INDEX must be a positive integer more than 0.","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"feliciagan"},"content":"* `listC` followed by `deleteC 1` deletes the first contact in the address book.","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"ryanguai"},"content":"* `findC John` followed by `deleteC 1` deletes the first result of the `findC` command.","lastModifiedDate":"2022-10-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"feliciagan"},"content":"## Editing a contact: `editC`","lastModifiedDate":"2022-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"feliciagan"},"content":"Edits the information fields (e.g. name, mobile number, email address) of an existing contact in the address book.","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"feliciagan"},"content":"Format: `editC INDEX [n/NAME] [p/PHONE] [a/ADDRESS] [d/Description]`","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"feliciagan"},"content":"* Index of a contact is its index number on the contact list.","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"feliciagan"},"content":"* INDEX must be a positive integer more than 0.","lastModifiedDate":"2022-09-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"feliciagan"},"content":"* Input values will replace existing values.","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"feliciagan"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"feliciagan"},"content":"* `editC 1 n/John p/12345678` edits the first contact’s name to be John and phone number to be 12345678.","lastModifiedDate":"2022-09-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"junwei-tan"},"content":"### Locating contacts by name: `findC`","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"junwei-tan"},"content":"Finds contacts whose names contain any of the given keywords.","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"junwei-tan"},"content":"Format: `findC KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"junwei-tan"},"content":"* The search is case-insensitive, e.g. `dr. doofenshmirtz` will match `Dr. Doofenshmirtz`.","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"junwei-tan"},"content":"* The order of the keywords does not matter, e.e. `doofenshmirtz dr.` will match `Dr. Doofenshmirtz`.","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"junwei-tan"},"content":"* Only full words will be matched. e.g. `Doofenshmirt` will not match `Doofenshmirtz`.","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"junwei-tan"},"content":"* Contacts matching at least one keyword will be returned. e.g. `Perry Dr.`","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"ryanguai"},"content":"  will match `Perry the Platypus` and `Dr. Doofenshmirtz`.","lastModifiedDate":"2022-10-01"},{"lineNumber":136,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"junwei-tan"},"content":"Example:","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"ryanguai"},"content":"* `findC flynn` will return `Candace Flynn` and `Phineas Flynn`.","lastModifiedDate":"2022-10-01"},{"lineNumber":140,"author":{"gitId":"ryanguai"},"content":"* `findC Phineas Ferb` will return `Phineas Flynn` and  `Ferb Flynn`.","lastModifiedDate":"2022-10-01"},{"lineNumber":141,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"ryanguai"},"content":"### Filtering contacts by label: `filterC`","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"ryanguai"},"content":"Filters contacts whose labels contain any of the given keywords.","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"junwei-tan"},"content":"Filters applied consecutively are stacked.","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"junwei-tan"},"content":"Format: `filterC KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"junwei-tan"},"content":"* The filer is case-insensitive, e.g. `cs2103t` will match `CS2103T`.","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"junwei-tan"},"content":"* The order of the keywords does not matter, e.e. `software cs2103t` will match","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"junwei-tan"},"content":"  `CS2103T Software Engineering`.","lastModifiedDate":"2022-09-30"},{"lineNumber":153,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"ryanguai"},"content":"* Only the contact\u0027s label is filtered.","lastModifiedDate":"2022-09-30"},{"lineNumber":155,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"junwei-tan"},"content":"* Only full words will be matched. e.g. `cs2103t` will not match `cs2103`.","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"ryanguai"},"content":"* Labels matching at least one keyword will be returned. e.g. `cs2103t cs2101` will match","lastModifiedDate":"2022-10-01"},{"lineNumber":159,"author":{"gitId":"ryanguai"},"content":"  `CS2103T Software Engineering` and `CS2101 Effective Communication for Computing Professionals`.","lastModifiedDate":"2022-10-01"},{"lineNumber":160,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"junwei-tan"},"content":"Example:","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"ryanguai"},"content":"* `filterC cs2103t` will return contacts with label `CS2103T Software Engineering`.","lastModifiedDate":"2022-10-01"},{"lineNumber":164,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"feliciagan"},"content":"## Section 2: Tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":166,"author":{"gitId":"feliciagan"},"content":"### Listing all tasks: `listT`","lastModifiedDate":"2022-09-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"feliciagan"},"content":"Shows all tasks stored in the task list.","lastModifiedDate":"2022-09-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"feliciagan"},"content":"Format: `listT`","lastModifiedDate":"2022-09-28"},{"lineNumber":171,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":172,"author":{"gitId":"ryanguai"},"content":"### Adding Tasks: `addT`","lastModifiedDate":"2022-10-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"nickeltea"},"content":"Adds a task to the task list. ","lastModifiedDate":"2022-09-27"},{"lineNumber":175,"author":{"gitId":"nickeltea"},"content":"The deadline of the task is allowed to be empty. Newly added tasks are marked as not done. ","lastModifiedDate":"2022-09-27"},{"lineNumber":176,"author":{"gitId":"nickeltea"},"content":"Throws an exception if the description of the task is empty. ","lastModifiedDate":"2022-09-27"},{"lineNumber":177,"author":{"gitId":"nickeltea"},"content":"Throws an exception if the deadline of the task is not in dd-mm-yyyy format.","lastModifiedDate":"2022-09-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"ryanguai"},"content":"Format: `addT d/DESCRIPTION D/DEADLINE`","lastModifiedDate":"2022-10-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"ryanguai"},"content":"Example:","lastModifiedDate":"2022-10-01"},{"lineNumber":182,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":183,"author":{"gitId":"ryanguai"},"content":"* `addT d/buy milk D/12-09-2022` will add the task \"buy milk\" with deadline 12 September 2022.","lastModifiedDate":"2022-10-01"},{"lineNumber":184,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":185,"author":{"gitId":"ryanguai"},"content":"### Removing Tasks: `deleteT`","lastModifiedDate":"2022-10-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"nickeltea"},"content":"Removes the specified task from the task list. Throws an exception if task does not exist.","lastModifiedDate":"2022-09-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"ryanguai"},"content":"Format: `deleteT i/INDEX`","lastModifiedDate":"2022-10-01"},{"lineNumber":190,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":191,"author":{"gitId":"ryanguai"},"content":"Example:","lastModifiedDate":"2022-10-01"},{"lineNumber":192,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":193,"author":{"gitId":"ryanguai"},"content":"* `deleteT i/12` will delete the 12th task in the task list.","lastModifiedDate":"2022-10-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"ryanguai"},"content":"### Marking task as done: `markT`","lastModifiedDate":"2022-09-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"feliciagan"},"content":"Marks a task in the task list as done.","lastModifiedDate":"2022-09-28"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"ryanguai"},"content":"Format: `markT INDEX`","lastModifiedDate":"2022-09-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"feliciagan"},"content":"* Index of a task is its index number on the task list.","lastModifiedDate":"2022-09-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"feliciagan"},"content":"* INDEX must be a positive integer more than 0.","lastModifiedDate":"2022-09-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"ryanguai"},"content":"* `listT` followed by `markT 1` marks the first task in the displayed task list as done.","lastModifiedDate":"2022-09-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"ryanguai"},"content":"* `findT book` followed by `markT 1` marks the first result of the `findT` command as done.","lastModifiedDate":"2022-10-01"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"ryanguai"},"content":"### Marking task as undone: `unmarkT`","lastModifiedDate":"2022-09-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"feliciagan"},"content":"Marks a task in the task list as undone.","lastModifiedDate":"2022-09-28"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"ryanguai"},"content":"Format: `unmarkT INDEX`","lastModifiedDate":"2022-09-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"feliciagan"},"content":"* Index of a task is its index number on the task list.","lastModifiedDate":"2022-09-28"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"feliciagan"},"content":"* INDEX must be a positive integer more than 0.","lastModifiedDate":"2022-09-28"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":221,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-01"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":223,"author":{"gitId":"ryanguai"},"content":"* `listT` followed by `unmarkT 1` marks the first task in the displayed task list as undone.","lastModifiedDate":"2022-10-01"},{"lineNumber":224,"author":{"gitId":"ryanguai"},"content":"* `findT book` followed by `unmarkT 1` marks the first result of the `findT` command as undone.","lastModifiedDate":"2022-10-01"},{"lineNumber":225,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":226,"author":{"gitId":"junwei-tan"},"content":"### Locating tasks by name: `findT`","lastModifiedDate":"2022-09-30"},{"lineNumber":227,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":228,"author":{"gitId":"ryanguai"},"content":"Finds labels whose names contain any of the given keywords.","lastModifiedDate":"2022-09-30"},{"lineNumber":229,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":230,"author":{"gitId":"junwei-tan"},"content":"Format: `findT KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-09-30"},{"lineNumber":231,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":232,"author":{"gitId":"junwei-tan"},"content":"* The search is case-insensitive, e.g. `cs2103t` will match `CS2103T`.","lastModifiedDate":"2022-09-30"},{"lineNumber":233,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":234,"author":{"gitId":"junwei-tan"},"content":"* The order of the keywords does not matter, e.e. `software cs2103t` will match","lastModifiedDate":"2022-09-30"},{"lineNumber":235,"author":{"gitId":"junwei-tan"},"content":"  `CS2103T Software Engineering`.","lastModifiedDate":"2022-09-30"},{"lineNumber":236,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":237,"author":{"gitId":"junwei-tan"},"content":"* Only the task\u0027s name is searched.","lastModifiedDate":"2022-09-30"},{"lineNumber":238,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":239,"author":{"gitId":"junwei-tan"},"content":"* Only full words will be matched. e.g. `cs2103t` will not match `cs2103`.","lastModifiedDate":"2022-09-30"},{"lineNumber":240,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":241,"author":{"gitId":"ryanguai"},"content":"* Labels matching at least one keyword will be returned. e.g. `cs2103t cs2101` will match","lastModifiedDate":"2022-10-01"},{"lineNumber":242,"author":{"gitId":"ryanguai"},"content":"  `CS2103T Software Engineering` and `CS2101 Effective Communication for Computing Professionals`.","lastModifiedDate":"2022-10-01"},{"lineNumber":243,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":244,"author":{"gitId":"junwei-tan"},"content":"Example:","lastModifiedDate":"2022-09-30"},{"lineNumber":245,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":246,"author":{"gitId":"ryanguai"},"content":"* `findT cs2103t` will return tasks with label `CS2103T Software Engineering`.","lastModifiedDate":"2022-10-01"},{"lineNumber":247,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":248,"author":{"gitId":"ryanguai"},"content":"### Filtering tasks by label: `filterT`","lastModifiedDate":"2022-09-30"},{"lineNumber":249,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":250,"author":{"gitId":"ryanguai"},"content":"Filters tasks whose labels contain any of the given keywords.","lastModifiedDate":"2022-09-30"},{"lineNumber":251,"author":{"gitId":"junwei-tan"},"content":"Filters applied consecutively are stacked.","lastModifiedDate":"2022-09-30"},{"lineNumber":252,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":253,"author":{"gitId":"ryanguai"},"content":"Format: `filterT KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-10-01"},{"lineNumber":254,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":255,"author":{"gitId":"ryanguai"},"content":"* The filter is case-insensitive, e.g. `cs2103t` will match `CS2103T`.","lastModifiedDate":"2022-10-01"},{"lineNumber":256,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":257,"author":{"gitId":"junwei-tan"},"content":"* The order of the keywords does not matter, e.e. `software cs2103t` will match","lastModifiedDate":"2022-09-30"},{"lineNumber":258,"author":{"gitId":"junwei-tan"},"content":"  `CS2103T Software Engineering`.","lastModifiedDate":"2022-09-30"},{"lineNumber":259,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":260,"author":{"gitId":"ryanguai"},"content":"* Only the tasks\u0027s label is filtered.","lastModifiedDate":"2022-09-30"},{"lineNumber":261,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":262,"author":{"gitId":"junwei-tan"},"content":"* Only full words will be matched. e.g. `cs2103t` will not match `cs2103`.","lastModifiedDate":"2022-09-30"},{"lineNumber":263,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":264,"author":{"gitId":"ryanguai"},"content":"* Labels matching at least one keyword will be returned. e.g. `cs2103t cs2101` will match","lastModifiedDate":"2022-10-01"},{"lineNumber":265,"author":{"gitId":"ryanguai"},"content":"  `CS2103T Software Engineering` and `CS2101 Effective Communication for Computing Professionals`.","lastModifiedDate":"2022-10-01"},{"lineNumber":266,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":267,"author":{"gitId":"junwei-tan"},"content":"Example:","lastModifiedDate":"2022-09-30"},{"lineNumber":268,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":269,"author":{"gitId":"ryanguai"},"content":"* `filterT cs2103t` will return tasks with label `CS2103T Software Engineering`.","lastModifiedDate":"2022-10-01"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":271,"author":{"gitId":"ryanguai"},"content":"## Section 3: Labels","lastModifiedDate":"2022-09-30"},{"lineNumber":272,"author":{"gitId":"ryanguai"},"content":"### Listing all labels: `listL`","lastModifiedDate":"2022-09-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":274,"author":{"gitId":"ryanguai"},"content":"Shows a list of all existing labels in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":276,"author":{"gitId":"ryanguai"},"content":"Format: `listL`","lastModifiedDate":"2022-09-30"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":278,"author":{"gitId":"ryanguai"},"content":"### Adding a label to a contact: `addL`","lastModifiedDate":"2022-10-01"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":280,"author":{"gitId":"ryanguai"},"content":"Adds a label to an existing contact in the address book. Each contact can have multiple labels. If there is no existing label with the same name, label is added to the label list. Throws an exception if contact does not exist.","lastModifiedDate":"2022-09-30"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"ryanguai"},"content":"Format: `addL c/INDEX n/label_NAME`","lastModifiedDate":"2022-10-01"},{"lineNumber":283,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":284,"author":{"gitId":"ryanguai"},"content":"Example:","lastModifiedDate":"2022-10-01"},{"lineNumber":285,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":286,"author":{"gitId":"ryanguai"},"content":"* `addL c/12 n/CS2103T` will add the label \"CS2103T\" to the 12th contact on the contact list.","lastModifiedDate":"2022-10-01"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"ryanguai"},"content":"### Removing a label from a contact: `deleteL`","lastModifiedDate":"2022-10-01"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"ryanguai"},"content":"Removes a label from an existing contact in the address book. If contact is last remaining person with said label, label is removed from the label list. Throws an exception if contact or label does not exist.","lastModifiedDate":"2022-09-30"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"ryanguai"},"content":"Format: `deleteL c/INDEX n/label_NAME`","lastModifiedDate":"2022-10-01"},{"lineNumber":293,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":294,"author":{"gitId":"ryanguai"},"content":"Example:","lastModifiedDate":"2022-10-01"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"ryanguai"},"content":"* `deleteL c/14 n/CS2101` will remove the label \"CS2101\" from the 14th contact on the contact list.","lastModifiedDate":"2022-10-01"},{"lineNumber":297,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":298,"author":{"gitId":"ryanguai"},"content":"### Adding a label to a task: `addL`","lastModifiedDate":"2022-10-01"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"ryanguai"},"content":"Adds a label to an existing task in the address book. Each task can have multiple labels. If there is no existing label with the same name, label is added to the label list. Throws an exception if task does not exist.","lastModifiedDate":"2022-09-30"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"ryanguai"},"content":"Format: `addL t/INDEX n/label_NAME`","lastModifiedDate":"2022-10-01"},{"lineNumber":303,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":304,"author":{"gitId":"ryanguai"},"content":"Example:","lastModifiedDate":"2022-10-01"},{"lineNumber":305,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":306,"author":{"gitId":"ryanguai"},"content":"* `addL t/12 n/CS2103T` will add the label \"CS2103T\" to the 12th task on the task list.","lastModifiedDate":"2022-10-01"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"ryanguai"},"content":"### Removing a label from a task: `deleteL`","lastModifiedDate":"2022-10-01"},{"lineNumber":309,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":310,"author":{"gitId":"ryanguai"},"content":"Removes a label from an existing task in the address book. If contact is last remaining person with said label, label is removed from the label list. Throws an exception if task or label does not exist.","lastModifiedDate":"2022-09-30"},{"lineNumber":311,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":312,"author":{"gitId":"ryanguai"},"content":"Format: `deleteL t/INDEX n/label_NAME`","lastModifiedDate":"2022-10-01"},{"lineNumber":313,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":314,"author":{"gitId":"ryanguai"},"content":"Example: ","lastModifiedDate":"2022-10-01"},{"lineNumber":315,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":316,"author":{"gitId":"ryanguai"},"content":"* `deleteL t/14 n/CS2101` will remove the label \"CS2101\" from the 14th task on the task list.","lastModifiedDate":"2022-10-01"},{"lineNumber":317,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":318,"author":{"gitId":"ryanguai"},"content":"## Automatic tab switching","lastModifiedDate":"2022-09-30"},{"lineNumber":319,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":320,"author":{"gitId":"ryanguai"},"content":"Depending on the command you enter, you will see the open tab in the GUI switch automatically. ","lastModifiedDate":"2022-09-30"},{"lineNumber":321,"author":{"gitId":"ryanguai"},"content":"For example, when using a task-related command, the tab switches to \"Task\" and the task list is displayed. ","lastModifiedDate":"2022-09-30"},{"lineNumber":322,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":323,"author":{"gitId":"ryanguai"},"content":"The result of the entered command is displayed.","lastModifiedDate":"2022-09-30"},{"lineNumber":324,"author":{"gitId":"ryanguai"},"content":"For example, after adding a new contact, the list shown on the GUI is the updated list with your new contact included.","lastModifiedDate":"2022-09-30"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"feliciagan"},"content":"## YellowBook data","lastModifiedDate":"2022-09-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"feliciagan"},"content":"YellowBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-28"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":333,"author":{"gitId":"feliciagan"},"content":"YellowBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-28"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":335,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":336,"author":{"gitId":"feliciagan"},"content":"If your changes to the data file makes its format invalid, YellowBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-28"},{"lineNumber":337,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":339,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"feliciagan"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous YellowBook home folder.","lastModifiedDate":"2022-09-28"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"feliciagan"},"content":"| Action     | Format, Examples                                                                                     |","lastModifiedDate":"2022-09-29"},{"lineNumber":351,"author":{"gitId":"feliciagan"},"content":"|------------|------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-29"},{"lineNumber":352,"author":{"gitId":"feliciagan"},"content":"| **listC**   | `listC`                                                                                             |","lastModifiedDate":"2022-09-29"},{"lineNumber":353,"author":{"gitId":"ryanguai"},"content":"| **addC**   | `addC n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [d/DESCRIPTION]` \u003cbr\u003e e.g., `addC n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`                                                                                            |","lastModifiedDate":"2022-09-30"},{"lineNumber":354,"author":{"gitId":"feliciagan"},"content":"| **deleteC** | `deleteC INDEX` \u003cbr\u003e e.g., `deleteC 1`                                                              | ","lastModifiedDate":"2022-09-29"},{"lineNumber":355,"author":{"gitId":"feliciagan"},"content":"| **editC**   | `editC INDEX [n/NAME] [p/PHONE] [a/ADDRESS] [d/Description]` \u003cbr\u003e e.g., `editC 1 n/John p/12345678` |","lastModifiedDate":"2022-09-29"},{"lineNumber":356,"author":{"gitId":"ryanguai"},"content":"| **findC** | `findC KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `findC Phineas Ferb`                                     |","lastModifiedDate":"2022-09-30"},{"lineNumber":357,"author":{"gitId":"junwei-tan"},"content":"| **filterC** | `filterC KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `filterT cs2103t`                                      |                                                                                                 |","lastModifiedDate":"2022-09-30"},{"lineNumber":358,"author":{"gitId":"feliciagan"},"content":"| **listT**   | `listT`                                                                                             |","lastModifiedDate":"2022-09-29"},{"lineNumber":359,"author":{"gitId":"ryanguai"},"content":"| **addT**   |  `addT d/DESCRIPTION D/DEADLINE`                                                                                           |","lastModifiedDate":"2022-10-01"},{"lineNumber":360,"author":{"gitId":"ryanguai"},"content":"| **markT**    | `markT INDEX` \u003cbr\u003e e.g., `mark 1`                                                                    |","lastModifiedDate":"2022-09-30"},{"lineNumber":361,"author":{"gitId":"ryanguai"},"content":"| **unmarkT**  | `unmarkT INDEX` \u003cbr\u003e e.g., `unmark 1`                                                                |","lastModifiedDate":"2022-09-30"},{"lineNumber":362,"author":{"gitId":"junwei-tan"},"content":"| **searchT** | `findT KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `findT cs2103t`                                          |","lastModifiedDate":"2022-09-30"},{"lineNumber":363,"author":{"gitId":"junwei-tan"},"content":"| **filterT** | `filterT KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `filterT cs2103t`                                      |","lastModifiedDate":"2022-09-30"},{"lineNumber":364,"author":{"gitId":"ryanguai"},"content":"| **listL**   | `listL`                                                                                             |","lastModifiedDate":"2022-09-30"},{"lineNumber":365,"author":{"gitId":"ryanguai"},"content":"| **addL**   | `addL c/INDEX n/LABEL_NAME` OR  `addL t/INDEX n/LABEL_NAME`                                                                            |","lastModifiedDate":"2022-10-01"},{"lineNumber":366,"author":{"gitId":"ryanguai"},"content":"| **deleteL**   | `deleteL c/INDEX n/LABEL_NAME` OR `deleteL t/INDEX n/LABEL_NAME`                                                                                           |","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"feliciagan":41,"alvintfl":3,"junwei-tan":69,"nickeltea":5,"ryanguai":107,"-":141}},{"path":"docs/team/alvintfl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvintfl"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"alvintfl"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"alvintfl"},"content":"title: Alvin Tan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"alvintfl"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"alvintfl"},"content":"### Project: YellowBook","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"alvintfl"},"content":"YellowBook is for university students who are involved in many projects and have to organize their project contacts and tasks. The user interacts with YellowBook using a CLI. YellowBook has a GUI created using JavaFX, is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"alvintfl"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"alvintfl"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"alvintfl"},"content":"  * What it does: To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"alvintfl"},"content":"  * Justification: To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"alvintfl"},"content":"  * Highlights: To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"alvintfl"},"content":"  * Credits: *{To be added soon.}*","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"alvintfl"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"alvintfl"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"alvintfl"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"alvintfl"},"content":"  * To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"alvintfl"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"alvintfl"},"content":"  * To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"alvintfl"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"alvintfl"},"content":"  * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"alvintfl"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"alvintfl"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"alvintfl"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"alvintfl"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"alvintfl"},"content":"  * To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"alvintfl"},"content":"* **Tools**:","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"alvintfl"},"content":"  * To be added soon.","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"alvintfl":38}},{"path":"docs/team/feliciagan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"feliciagan"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"feliciagan"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"feliciagan"},"content":"title: Felicia Gan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"feliciagan"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"feliciagan"},"content":"### Project: YellowBook","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"feliciagan"},"content":"YellowBook is for university students who are involved in many projects and have to organize their project contacts and tasks. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"feliciagan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"feliciagan"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"feliciagan"},"content":"    * What it does: To be added soon.","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"feliciagan"},"content":"    * Justification: To be added soon.","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"feliciagan"},"content":"    * Highlights: To be added soon.","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"feliciagan"},"content":"    * Credits: *{To be added soon}*","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"feliciagan"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"feliciagan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"feliciagan"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"feliciagan"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"feliciagan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"feliciagan"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"feliciagan"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"feliciagan"},"content":"    * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"feliciagan"},"content":"        * To be added soon.","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"feliciagan"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"feliciagan"},"content":"        * To be added soon.","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"feliciagan"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"feliciagan"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"feliciagan"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"feliciagan"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"feliciagan":38}},{"path":"docs/team/junwei-tan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junwei-tan"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"junwei-tan"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"junwei-tan"},"content":"title: Jun Wei\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"junwei-tan"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"junwei-tan"},"content":"### Project: YellowBook","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"junwei-tan"},"content":"YellowBook a desktop address book and task tracker for university students to organise project tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"junwei-tan"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"junwei-tan"},"content":"It is written in Java, and has about XXX kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"junwei-tan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"junwei-tan"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"junwei-tan"},"content":"    * What it does:  to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"junwei-tan"},"content":"    * Justification: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"junwei-tan"},"content":"    * Highlights: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"junwei-tan"},"content":"    * Credits: to be added soon *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"junwei-tan"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"junwei-tan"},"content":"* to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"junwei-tan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djunwei-tan\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"junwei-tan"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"junwei-tan"},"content":"    * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"junwei-tan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"junwei-tan"},"content":"    * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"junwei-tan"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"junwei-tan"},"content":"    * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"junwei-tan"},"content":"        * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"junwei-tan"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"junwei-tan"},"content":"        * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"junwei-tan"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"junwei-tan"},"content":"    * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"junwei-tan"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"junwei-tan"},"content":"    * to be added soon","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"junwei-tan":41}},{"path":"docs/team/nickeltea.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"title: Nicole Lee\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"### Project: YellowBook","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"YellowBook is for university students who are involved in many projects and have to organize their project contacts and tasks. The user interacts with YellowBook using a CLI. YellowBook has a GUI created using JavaFX, is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"  * What it does: To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"  * Justification: To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"  * Highlights: To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"  * Credits: *{To be added soon.}*","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"  * To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"  * To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"nickeltea"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"nickeltea"},"content":"  * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"nickeltea"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"nickeltea"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"nickeltea"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"nickeltea"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"nickeltea"},"content":"  * To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"nickeltea"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"nickeltea"},"content":"  * To be added soon.","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"nickeltea":38}},{"path":"docs/team/ryanguai.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanguai"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"ryanguai"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"ryanguai"},"content":"title: Ryan Guai\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"ryanguai"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"ryanguai"},"content":"### Project: YellowBook","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"ryanguai"},"content":"YellowBook is for university students who are involved in many projects and have to organize their project contacts and tasks. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"ryanguai"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"ryanguai"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"ryanguai"},"content":"  * What it does:","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"ryanguai"},"content":"  * Justification:","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"ryanguai"},"content":"  * Highlights:","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"ryanguai"},"content":"  * Credits:","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"ryanguai"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"ryanguai"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"ryanguai"},"content":"* **Project management**:","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"ryanguai"},"content":"  *","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"ryanguai"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"ryanguai"},"content":"  *","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"ryanguai"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"ryanguai"},"content":"  * User Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"ryanguai"},"content":"    *","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"ryanguai"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"ryanguai"},"content":"    *","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"ryanguai"},"content":"* **Community**:","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"ryanguai"},"content":"  *","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"ryanguai"},"content":"* **Tools**:","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"ryanguai"},"content":"  *","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"ryanguai":38}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"feliciagan"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"feliciagan":1,"-":13}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"feliciagan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"feliciagan"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"feliciagan"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"feliciagan":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"feliciagan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"feliciagan"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"feliciagan"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"feliciagan"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"feliciagan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"feliciagan":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"alvintfl"},"content":"public class AddContactCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"alvintfl"},"content":"    public static final String COMMAND_WORD \u003d \"addC\";","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"alvintfl"},"content":"     * Creates an AddContactCommand to add the specified {@code Person}","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"alvintfl"},"content":"    public AddContactCommand(Person person) {","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"alvintfl"},"content":"                || (other instanceof AddContactCommand // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"alvintfl"},"content":"                \u0026\u0026 toAdd.equals(((AddContactCommand) other).toAdd));","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alvintfl":6,"-":61}},{"path":"src/main/java/seedu/address/logic/commands/AddTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanguai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"ryanguai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"ryanguai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"ryanguai"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"ryanguai"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"ryanguai"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"ryanguai"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"ryanguai"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"ryanguai"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"ryanguai"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"ryanguai"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"ryanguai"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"ryanguai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"ryanguai"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"ryanguai"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"ryanguai"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"ryanguai"},"content":"public class AddTagCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"ryanguai"},"content":"    public static final String COMMAND_WORD \u003d \"addL\";","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"ryanguai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"ryanguai"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"ryanguai"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"ryanguai"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"ryanguai"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"ryanguai"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"ryanguai"},"content":"            + PREFIX_TAG + \"CS2103T\";","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"ryanguai"},"content":"    public static final String MESSAGE_ADD_TAG_SUCCESS \u003d \"Added tag: %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"ryanguai"},"content":"    public static final String MESSAGE_TAG_NOT_ADDED \u003d \"At least 1 tag to add must be provided.\";","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"ryanguai"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"ryanguai"},"content":"    private final Index index;","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"ryanguai"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"ryanguai"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"ryanguai"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"ryanguai"},"content":"    public AddTagCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"ryanguai"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"ryanguai"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"ryanguai"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"ryanguai"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"ryanguai"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"ryanguai"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"ryanguai"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"ryanguai"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"ryanguai"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"ryanguai"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"ryanguai"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"ryanguai"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"ryanguai"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"ryanguai"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"ryanguai"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"ryanguai"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"ryanguai"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TAG_SUCCESS,","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"ryanguai"},"content":"        editPersonDescriptor.getTags().orElse(new HashSet\u003c\u003e())));","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"ryanguai"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"ryanguai"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"ryanguai"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"ryanguai"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"ryanguai"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"ryanguai"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"ryanguai"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"ryanguai"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"ryanguai"},"content":"        Set\u003cTag\u003e newTags \u003d editPersonDescriptor.getTags().orElse(new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"ryanguai"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"ryanguai"},"content":"        updatedTags.addAll(personToEdit.getTags());","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"ryanguai"},"content":"        if (newTags.size() \u003e 0) {","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"ryanguai"},"content":"            updatedTags.addAll(newTags);","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"ryanguai"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"ryanguai"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"ryanguai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"ryanguai"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"ryanguai"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"ryanguai"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"ryanguai"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"ryanguai"},"content":"        if (!(other instanceof AddTagCommand)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"ryanguai"},"content":"            return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"ryanguai"},"content":"        // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"ryanguai"},"content":"        AddTagCommand e \u003d (AddTagCommand) other;","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"ryanguai"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"ryanguai"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"ryanguai"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"ryanguai"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"ryanguai"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"ryanguai"},"content":"        private Name name;","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"ryanguai"},"content":"        private Phone phone;","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"ryanguai"},"content":"        private Email email;","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"ryanguai"},"content":"        private Address address;","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"ryanguai"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"ryanguai"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"ryanguai"},"content":"        /**","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"ryanguai"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"ryanguai"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"ryanguai"},"content":"         */","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"ryanguai"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"ryanguai"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"ryanguai"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"ryanguai"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"ryanguai"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"ryanguai"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"ryanguai"},"content":"        /**","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"ryanguai"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"ryanguai"},"content":"         */","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"ryanguai"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"ryanguai"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"ryanguai"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"ryanguai"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"ryanguai"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"ryanguai"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"ryanguai"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"ryanguai"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"ryanguai"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"ryanguai"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"ryanguai"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-10-06"},{"lineNumber":169,"author":{"gitId":"ryanguai"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"ryanguai"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"ryanguai"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"ryanguai"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"ryanguai"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"ryanguai"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"ryanguai"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"ryanguai"},"content":"        /**","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"ryanguai"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"ryanguai"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"ryanguai"},"content":"         */","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"ryanguai"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-06"},{"lineNumber":189,"author":{"gitId":"ryanguai"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"ryanguai"},"content":"        /**","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"ryanguai"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"ryanguai"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-06"},{"lineNumber":195,"author":{"gitId":"ryanguai"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-06"},{"lineNumber":196,"author":{"gitId":"ryanguai"},"content":"         */","lastModifiedDate":"2022-10-06"},{"lineNumber":197,"author":{"gitId":"ryanguai"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-06"},{"lineNumber":198,"author":{"gitId":"ryanguai"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-10-06"},{"lineNumber":199,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"ryanguai"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"ryanguai"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"ryanguai"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":204,"author":{"gitId":"ryanguai"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":205,"author":{"gitId":"ryanguai"},"content":"                return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":206,"author":{"gitId":"ryanguai"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":207,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"ryanguai"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":209,"author":{"gitId":"ryanguai"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":210,"author":{"gitId":"ryanguai"},"content":"                return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":211,"author":{"gitId":"ryanguai"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":212,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":213,"author":{"gitId":"ryanguai"},"content":"            // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":214,"author":{"gitId":"ryanguai"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2022-10-06"},{"lineNumber":215,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":216,"author":{"gitId":"ryanguai"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-10-06"},{"lineNumber":217,"author":{"gitId":"ryanguai"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-10-06"},{"lineNumber":218,"author":{"gitId":"ryanguai"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2022-10-06"},{"lineNumber":219,"author":{"gitId":"ryanguai"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2022-10-06"},{"lineNumber":220,"author":{"gitId":"ryanguai"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-10-06"},{"lineNumber":221,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":222,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":223,"author":{"gitId":"ryanguai"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":224,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"ryanguai":224}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DEADLINE;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":" * Adds a task to the TaskList.","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"    public static final String COMMAND_WORD \u003d \"addT\";","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the TaskList. \"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"            + PREFIX_TASK_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"            + PREFIX_TASK_DEADLINE + \"DEADLINE \"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"            + PREFIX_TASK_DESCRIPTION + \"buy milk \"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"            + PREFIX_TASK_DEADLINE + \"12-09-2022\";","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"    public static final String MESSAGE_ADD_TASK_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"nickeltea"},"content":"    // public static final String MESSAGE_MISSING_DESCRIPTION \u003d \"A task must have a description\";","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"nickeltea"},"content":"    private final Task newTask;","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"nickeltea"},"content":"     * Creates an AddTCommand to add the specified {@code Task}","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"nickeltea"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"nickeltea"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"nickeltea"},"content":"        newTask \u003d task;","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"nickeltea"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"nickeltea"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"nickeltea"},"content":"        model.addT(newTask);","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"nickeltea"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TASK_SUCCESS, newTask));","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"nickeltea"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"nickeltea"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"nickeltea"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"nickeltea"},"content":"                \u0026\u0026 newTask.equals(((AddTaskCommand) other).newTask));","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"nickeltea":54}},{"path":"src/main/java/seedu/address/logic/commands/DeleteContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"alvintfl"},"content":"public class DeleteContactCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"alvintfl"},"content":"    public static final String COMMAND_WORD \u003d \"deleteC\";","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"alvintfl"},"content":"    public DeleteContactCommand(Index targetIndex) {","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"alvintfl"},"content":"                || (other instanceof DeleteContactCommand // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"alvintfl"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteContactCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alvintfl":5,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanguai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"ryanguai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"ryanguai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"ryanguai"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"ryanguai"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"ryanguai"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"ryanguai"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"ryanguai"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"ryanguai"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"ryanguai"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"ryanguai"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"ryanguai"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"ryanguai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"ryanguai"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"ryanguai"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"ryanguai"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"ryanguai"},"content":"public class DeleteTagCommand extends Command {","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"ryanguai"},"content":"    public static final String COMMAND_WORD \u003d \"deleteL\";","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"ryanguai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"ryanguai"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"ryanguai"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"ryanguai"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"ryanguai"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"ryanguai"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"ryanguai"},"content":"            + PREFIX_TAG + \"CS2103T\";","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"ryanguai"},"content":"    public static final String MESSAGE_ADD_TAG_SUCCESS \u003d \"Deleted tag: %1$s\";","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"ryanguai"},"content":"    public static final String MESSAGE_TAG_NOT_ADDED \u003d \"At least 1 tag to add must be provided.\";","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"ryanguai"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"ryanguai"},"content":"    private final Index index;","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"ryanguai"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"ryanguai"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"ryanguai"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"ryanguai"},"content":"    public DeleteTagCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"ryanguai"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"ryanguai"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"ryanguai"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"ryanguai"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"ryanguai"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"ryanguai"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"ryanguai"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"ryanguai"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"ryanguai"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"ryanguai"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"ryanguai"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"ryanguai"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"ryanguai"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"ryanguai"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"ryanguai"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"ryanguai"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"ryanguai"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TAG_SUCCESS,","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"ryanguai"},"content":"        editPersonDescriptor.getTags().orElse(new HashSet\u003c\u003e())));","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"ryanguai"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"ryanguai"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"ryanguai"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"ryanguai"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"ryanguai"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"ryanguai"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"ryanguai"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"ryanguai"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"ryanguai"},"content":"        Set\u003cTag\u003e newTags \u003d editPersonDescriptor.getTags().orElse(new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"ryanguai"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"ryanguai"},"content":"        updatedTags.addAll(personToEdit.getTags());","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"ryanguai"},"content":"        if (newTags.size() \u003e 0) {","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"ryanguai"},"content":"            updatedTags.removeAll(newTags);","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"ryanguai"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"ryanguai"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"ryanguai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"ryanguai"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"ryanguai"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"ryanguai"},"content":"            return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":109,"author":{"gitId":"ryanguai"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"ryanguai"},"content":"        if (!(other instanceof DeleteTagCommand)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"ryanguai"},"content":"            return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":112,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":113,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":114,"author":{"gitId":"ryanguai"},"content":"        // state check","lastModifiedDate":"2022-10-07"},{"lineNumber":115,"author":{"gitId":"ryanguai"},"content":"        DeleteTagCommand e \u003d (DeleteTagCommand) other;","lastModifiedDate":"2022-10-07"},{"lineNumber":116,"author":{"gitId":"ryanguai"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-07"},{"lineNumber":117,"author":{"gitId":"ryanguai"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2022-10-07"},{"lineNumber":118,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":119,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":120,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":121,"author":{"gitId":"ryanguai"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-07"},{"lineNumber":122,"author":{"gitId":"ryanguai"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2022-10-07"},{"lineNumber":123,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":124,"author":{"gitId":"ryanguai"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2022-10-07"},{"lineNumber":125,"author":{"gitId":"ryanguai"},"content":"        private Name name;","lastModifiedDate":"2022-10-07"},{"lineNumber":126,"author":{"gitId":"ryanguai"},"content":"        private Phone phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":127,"author":{"gitId":"ryanguai"},"content":"        private Email email;","lastModifiedDate":"2022-10-07"},{"lineNumber":128,"author":{"gitId":"ryanguai"},"content":"        private Address address;","lastModifiedDate":"2022-10-07"},{"lineNumber":129,"author":{"gitId":"ryanguai"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-07"},{"lineNumber":130,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":131,"author":{"gitId":"ryanguai"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2022-10-07"},{"lineNumber":132,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":133,"author":{"gitId":"ryanguai"},"content":"        /**","lastModifiedDate":"2022-10-07"},{"lineNumber":134,"author":{"gitId":"ryanguai"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-07"},{"lineNumber":135,"author":{"gitId":"ryanguai"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-07"},{"lineNumber":136,"author":{"gitId":"ryanguai"},"content":"         */","lastModifiedDate":"2022-10-07"},{"lineNumber":137,"author":{"gitId":"ryanguai"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2022-10-07"},{"lineNumber":138,"author":{"gitId":"ryanguai"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-10-07"},{"lineNumber":139,"author":{"gitId":"ryanguai"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2022-10-07"},{"lineNumber":140,"author":{"gitId":"ryanguai"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2022-10-07"},{"lineNumber":141,"author":{"gitId":"ryanguai"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2022-10-07"},{"lineNumber":142,"author":{"gitId":"ryanguai"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-10-07"},{"lineNumber":143,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":144,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":145,"author":{"gitId":"ryanguai"},"content":"        /**","lastModifiedDate":"2022-10-07"},{"lineNumber":146,"author":{"gitId":"ryanguai"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-07"},{"lineNumber":147,"author":{"gitId":"ryanguai"},"content":"         */","lastModifiedDate":"2022-10-07"},{"lineNumber":148,"author":{"gitId":"ryanguai"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-07"},{"lineNumber":149,"author":{"gitId":"ryanguai"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2022-10-07"},{"lineNumber":150,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":151,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":152,"author":{"gitId":"ryanguai"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-10-07"},{"lineNumber":153,"author":{"gitId":"ryanguai"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-07"},{"lineNumber":154,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":155,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":156,"author":{"gitId":"ryanguai"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-10-07"},{"lineNumber":157,"author":{"gitId":"ryanguai"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-10-07"},{"lineNumber":158,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":159,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":160,"author":{"gitId":"ryanguai"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-10-07"},{"lineNumber":161,"author":{"gitId":"ryanguai"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":162,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":163,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":164,"author":{"gitId":"ryanguai"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-10-07"},{"lineNumber":165,"author":{"gitId":"ryanguai"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-10-07"},{"lineNumber":166,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":167,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":168,"author":{"gitId":"ryanguai"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-10-07"},{"lineNumber":169,"author":{"gitId":"ryanguai"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-10-07"},{"lineNumber":170,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":171,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":172,"author":{"gitId":"ryanguai"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2022-10-07"},{"lineNumber":173,"author":{"gitId":"ryanguai"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2022-10-07"},{"lineNumber":174,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":175,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":176,"author":{"gitId":"ryanguai"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2022-10-07"},{"lineNumber":177,"author":{"gitId":"ryanguai"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-10-07"},{"lineNumber":178,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":179,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":180,"author":{"gitId":"ryanguai"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2022-10-07"},{"lineNumber":181,"author":{"gitId":"ryanguai"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2022-10-07"},{"lineNumber":182,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":183,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":184,"author":{"gitId":"ryanguai"},"content":"        /**","lastModifiedDate":"2022-10-07"},{"lineNumber":185,"author":{"gitId":"ryanguai"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-07"},{"lineNumber":186,"author":{"gitId":"ryanguai"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-07"},{"lineNumber":187,"author":{"gitId":"ryanguai"},"content":"         */","lastModifiedDate":"2022-10-07"},{"lineNumber":188,"author":{"gitId":"ryanguai"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-07"},{"lineNumber":189,"author":{"gitId":"ryanguai"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-07"},{"lineNumber":190,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":191,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":192,"author":{"gitId":"ryanguai"},"content":"        /**","lastModifiedDate":"2022-10-07"},{"lineNumber":193,"author":{"gitId":"ryanguai"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-07"},{"lineNumber":194,"author":{"gitId":"ryanguai"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-07"},{"lineNumber":195,"author":{"gitId":"ryanguai"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-07"},{"lineNumber":196,"author":{"gitId":"ryanguai"},"content":"         */","lastModifiedDate":"2022-10-07"},{"lineNumber":197,"author":{"gitId":"ryanguai"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-07"},{"lineNumber":198,"author":{"gitId":"ryanguai"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-10-07"},{"lineNumber":199,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":200,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":201,"author":{"gitId":"ryanguai"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":202,"author":{"gitId":"ryanguai"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":203,"author":{"gitId":"ryanguai"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":204,"author":{"gitId":"ryanguai"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-07"},{"lineNumber":205,"author":{"gitId":"ryanguai"},"content":"                return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":206,"author":{"gitId":"ryanguai"},"content":"            }","lastModifiedDate":"2022-10-07"},{"lineNumber":207,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":208,"author":{"gitId":"ryanguai"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":209,"author":{"gitId":"ryanguai"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":210,"author":{"gitId":"ryanguai"},"content":"                return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":211,"author":{"gitId":"ryanguai"},"content":"            }","lastModifiedDate":"2022-10-07"},{"lineNumber":212,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":213,"author":{"gitId":"ryanguai"},"content":"            // state check","lastModifiedDate":"2022-10-07"},{"lineNumber":214,"author":{"gitId":"ryanguai"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2022-10-07"},{"lineNumber":215,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":216,"author":{"gitId":"ryanguai"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-10-07"},{"lineNumber":217,"author":{"gitId":"ryanguai"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-10-07"},{"lineNumber":218,"author":{"gitId":"ryanguai"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2022-10-07"},{"lineNumber":219,"author":{"gitId":"ryanguai"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2022-10-07"},{"lineNumber":220,"author":{"gitId":"ryanguai"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-10-07"},{"lineNumber":221,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":222,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":223,"author":{"gitId":"ryanguai"},"content":"}","lastModifiedDate":"2022-10-07"},{"lineNumber":224,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"ryanguai":224}},{"path":"src/main/java/seedu/address/logic/commands/EditContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"alvintfl"},"content":"public class EditContactCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"alvintfl"},"content":"    public static final String COMMAND_WORD \u003d \"editC\";","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"alvintfl"},"content":"    public EditContactCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"alvintfl"},"content":"        if (!(other instanceof EditContactCommand)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand e \u003d (EditContactCommand) other;","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"alvintfl":5,"-":221}},{"path":"src/main/java/seedu/address/logic/commands/FindContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"alvintfl"},"content":"public class FindContactCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"junwei-tan"},"content":"    public static final String COMMAND_WORD \u003d \"findC\";","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"junwei-tan"},"content":"    private final PersonContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"junwei-tan"},"content":"    public FindContactCommand(PersonContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"alvintfl"},"content":"                || (other instanceof FindContactCommand // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"alvintfl"},"content":"                \u0026\u0026 predicate.equals(((FindContactCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"alvintfl":3,"junwei-tan":4,"-":35}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"junwei-tan"},"content":"    private static final String USER_GUIDE_URL \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"junwei-tan"},"content":"            \"https://ay2223s1-cs2103t-f11-4.github.io/tp/UserGuide.html#quick-start\";","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"junwei-tan"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Sample usage:\\n\\t\"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"junwei-tan"},"content":"            + AddContactCommand.MESSAGE_USAGE + \"\\n\\t\"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"junwei-tan"},"content":"            + DeleteContactCommand.MESSAGE_USAGE + \"\\n\\t\"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"junwei-tan"},"content":"            + EditContactCommand.MESSAGE_USAGE + \"\\n\\t\"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"junwei-tan"},"content":"            + FindContactCommand.MESSAGE_USAGE + \"\\n\\t\"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"junwei-tan"},"content":"            + HelpCommand.MESSAGE_USAGE + \"\\n\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"junwei-tan"},"content":"            + \"Other Commands:\\n\\t\"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"junwei-tan"},"content":"            + ClearCommand.COMMAND_WORD + \"\\n\\t\"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"junwei-tan"},"content":"            + ListContactCommand.COMMAND_WORD + \"\\n\\t\"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"junwei-tan"},"content":"            + ExitCommand.COMMAND_WORD + \"\\n\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"junwei-tan"},"content":"            + \"Further help:\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"junwei-tan"},"content":"            + USER_GUIDE_URL;","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"junwei-tan"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, false, false);","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"junwei-tan":16,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/ListContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"alvintfl"},"content":"public class ListContactCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"alvintfl"},"content":"    public static final String COMMAND_WORD \u003d \"listC\";","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alvintfl":2,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintfl"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"alvintfl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"alvintfl"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"alvintfl"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"alvintfl"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"alvintfl"},"content":" * Lists all tasks in the task list.","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"alvintfl"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"alvintfl"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"alvintfl"},"content":"    public static final String COMMAND_WORD \u003d \"listT\";","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"alvintfl"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"alvintfl"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"alvintfl"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"alvintfl"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"alvintfl"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"alvintfl"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"alvintfl"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"alvintfl"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"alvintfl":24}},{"path":"src/main/java/seedu/address/logic/commands/MarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"feliciagan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"feliciagan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"feliciagan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"feliciagan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"feliciagan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"feliciagan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"feliciagan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"feliciagan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"feliciagan"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"feliciagan"},"content":" * Marks a task in the tasklist as completed.","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"feliciagan"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"feliciagan"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"feliciagan"},"content":"    public static final String COMMAND_WORD \u003d \"markT\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"feliciagan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"feliciagan"},"content":"            + \": Marks as complete the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"feliciagan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"feliciagan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"feliciagan"},"content":"    public static final String MESSAGE_MARK_TEST_SUCCESS \u003d \"Marked Task: %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"feliciagan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"feliciagan"},"content":"    public MarkTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"feliciagan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"feliciagan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"feliciagan"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"feliciagan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"feliciagan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"feliciagan"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"feliciagan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"feliciagan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"feliciagan"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"feliciagan"},"content":"        Task taskToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"feliciagan"},"content":"        taskToMark.markTask();","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"feliciagan"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TEST_SUCCESS, taskToMark));","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"feliciagan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"feliciagan"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"feliciagan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"feliciagan"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"feliciagan"},"content":"                || (other instanceof MarkTaskCommand","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"feliciagan"},"content":"                \u0026\u0026 targetIndex.equals(((MarkTaskCommand) other).targetIndex));","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"feliciagan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"feliciagan"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"feliciagan":53}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"feliciagan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"feliciagan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"feliciagan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"feliciagan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"feliciagan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"feliciagan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"feliciagan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"feliciagan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"feliciagan"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"feliciagan"},"content":" * Marks a task in the tasklist as incomplete.","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"feliciagan"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"feliciagan"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"feliciagan"},"content":"    public static final String COMMAND_WORD \u003d \"unmarkT\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"feliciagan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"feliciagan"},"content":"            + \": Marks as incomplete the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"feliciagan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"feliciagan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"feliciagan"},"content":"    public static final String MESSAGE_UNMARK_TASK_SUCCESS \u003d \"Unmarked Task: %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"feliciagan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"feliciagan"},"content":"    public UnmarkTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"feliciagan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"feliciagan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"feliciagan"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"feliciagan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"feliciagan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"feliciagan"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"feliciagan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"feliciagan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"feliciagan"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"feliciagan"},"content":"        Task taskToUnmark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"feliciagan"},"content":"        taskToUnmark.unmarkTask();","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"feliciagan"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_TASK_SUCCESS, taskToUnmark));","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"feliciagan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"feliciagan"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"feliciagan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"feliciagan"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"feliciagan"},"content":"                || (other instanceof UnmarkTaskCommand","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"feliciagan"},"content":"                \u0026\u0026 targetIndex.equals(((UnmarkTaskCommand) other).targetIndex));","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"feliciagan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"feliciagan"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"feliciagan":53}},{"path":"src/main/java/seedu/address/logic/parser/AddContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"alvintfl"},"content":"public class AddContactCommandParser implements Parser\u003cAddContactCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"alvintfl"},"content":"     * Parses the given {@code String} of arguments in the context of the AddContactCommand","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"alvintfl"},"content":"     * and returns an AddContactCommand object for execution.","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"alvintfl"},"content":"    public AddContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"alvintfl"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"alvintfl"},"content":"        return new AddContactCommand(person);","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"alvintfl":7,"-":53}},{"path":"src/main/java/seedu/address/logic/parser/AddTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"ryanguai"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"ryanguai"},"content":"import seedu.address.logic.commands.AddTagCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"ryanguai"},"content":"public class AddTagCommandParser implements Parser\u003cAddTagCommand\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"ryanguai"},"content":"    public AddTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"ryanguai"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"ryanguai"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"ryanguai"},"content":"            throw new ParseException(AddTagCommand.MESSAGE_TAG_NOT_ADDED);","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"ryanguai"},"content":"        return new AddTagCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"ryanguai":8,"-":74}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DEADLINE;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":" * Parses input arguments and creates a new AddTCommand object","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTCommand","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"     * and returns an AddTCommand object for execution.","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASK_DESCRIPTION, PREFIX_TASK_DEADLINE);","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"nickeltea"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK_DESCRIPTION)","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"nickeltea"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"nickeltea"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"nickeltea"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_TASK_DESCRIPTION).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"nickeltea"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"nickeltea"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"nickeltea"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"nickeltea"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"nickeltea"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"nickeltea"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"nickeltea":48}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"ryanguai"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"ryanguai"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.ListContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"feliciagan"},"content":"import seedu.address.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"feliciagan"},"content":"import seedu.address.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"alvintfl"},"content":"        case AddContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"alvintfl"},"content":"            return new AddContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"alvintfl"},"content":"        case EditContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"alvintfl"},"content":"            return new EditContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"alvintfl"},"content":"        case DeleteContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"alvintfl"},"content":"            return new DeleteContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"alvintfl"},"content":"        case FindContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"alvintfl"},"content":"            return new FindContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"alvintfl"},"content":"        case ListContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"alvintfl"},"content":"            return new ListContactCommand();","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"alvintfl"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"alvintfl"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":79,"author":{"gitId":"ryanguai"},"content":"        case AddTagCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"ryanguai"},"content":"            return new AddTagCommandParser().parse(arguments);","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"ryanguai"},"content":"        case DeleteTagCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"ryanguai"},"content":"            return new DeleteTagCommandParser().parse(arguments);","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"feliciagan"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"feliciagan"},"content":"            return new MarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"feliciagan"},"content":"        case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"feliciagan"},"content":"            return new UnmarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alvintfl":18,"feliciagan":8,"ryanguai":8,"-":62}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"    public static final Prefix PREFIX_TASK_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"    public static final Prefix PREFIX_TASK_DEADLINE \u003d new Prefix(\"D/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nickeltea":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"alvintfl"},"content":" * Parses input arguments and creates a new DeleteContactCommand object","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"alvintfl"},"content":"public class DeleteContactCommandParser implements Parser\u003cDeleteContactCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"alvintfl"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteContactCommand","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"alvintfl"},"content":"     * and returns a DeleteContactCommand object for execution.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"alvintfl"},"content":"    public DeleteContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"alvintfl"},"content":"            return new DeleteContactCommand(index);","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"alvintfl"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"alvintfl":8,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanguai"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"ryanguai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"ryanguai"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"ryanguai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"ryanguai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"ryanguai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"ryanguai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"ryanguai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"ryanguai"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"ryanguai"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"ryanguai"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"ryanguai"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"ryanguai"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"ryanguai"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"ryanguai"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"ryanguai"},"content":"import seedu.address.logic.commands.DeleteTagCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"ryanguai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"ryanguai"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"ryanguai"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"ryanguai"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"ryanguai"},"content":"public class DeleteTagCommandParser implements Parser\u003cDeleteTagCommand\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"ryanguai"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"ryanguai"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"ryanguai"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"ryanguai"},"content":"    public DeleteTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"ryanguai"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"ryanguai"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"ryanguai"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"ryanguai"},"content":"        Index index;","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"ryanguai"},"content":"        try {","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"ryanguai"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"ryanguai"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"ryanguai"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"ryanguai"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"ryanguai"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"ryanguai"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"ryanguai"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"ryanguai"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"ryanguai"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"ryanguai"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"ryanguai"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"ryanguai"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"ryanguai"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"ryanguai"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"ryanguai"},"content":"            throw new ParseException(AddTagCommand.MESSAGE_TAG_NOT_ADDED);","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"ryanguai"},"content":"        return new DeleteTagCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"ryanguai"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"ryanguai"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"ryanguai"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"ryanguai"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"ryanguai"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"ryanguai"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"ryanguai"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"ryanguai"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"ryanguai"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"ryanguai"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"ryanguai":83}},{"path":"src/main/java/seedu/address/logic/parser/EditContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"alvintfl"},"content":" * Parses input arguments and creates a new EditContactCommand object","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"alvintfl"},"content":"public class EditContactCommandParser implements Parser\u003cEditContactCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"alvintfl"},"content":"     * Parses the given {@code String} of arguments in the context of the EditContactCommand","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"alvintfl"},"content":"     * and returns an EditContactCommand object for execution.","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"alvintfl"},"content":"    public EditContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"alvintfl"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"alvintfl"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"alvintfl"},"content":"            throw new ParseException(EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"alvintfl"},"content":"        return new EditContactCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"alvintfl":11,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/FindContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"junwei-tan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"junwei-tan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"junwei-tan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"junwei-tan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"junwei-tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"junwei-tan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"junwei-tan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"alvintfl"},"content":" * Parses input arguments and creates a new FindContactCommand object","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"alvintfl"},"content":"public class FindContactCommandParser implements Parser\u003cFindContactCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"alvintfl"},"content":"     * Parses the given {@code String} of arguments in the context of the FindContactCommand","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"alvintfl"},"content":"     * and returns a FindContactCommand object for execution.","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"alvintfl"},"content":"    public FindContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"junwei-tan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"junwei-tan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME,","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"junwei-tan"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"junwei-tan"},"content":"        if (arePrefixesEmpty(argMultimap, PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"junwei-tan"},"content":"                PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"junwei-tan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"junwei-tan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"junwei-tan"},"content":"                            FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"junwei-tan"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"junwei-tan"},"content":"        List\u003cName\u003e names \u003d getNames(argMultimap);","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"junwei-tan"},"content":"        List\u003cPhone\u003e phones \u003d getPhones(argMultimap);","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"junwei-tan"},"content":"        List\u003cEmail\u003e emails \u003d getEmails(argMultimap);","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"junwei-tan"},"content":"        List\u003cAddress\u003e addresses \u003d getAddresses(argMultimap);","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"junwei-tan"},"content":"        return new FindContactCommand(new PersonContainsKeywordsPredicate(names, phones, emails, addresses));","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"junwei-tan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"junwei-tan"},"content":"    private List\u003cName\u003e getNames(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"junwei-tan"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"junwei-tan"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"junwei-tan"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"junwei-tan"},"content":"        return ParserUtil.parseNames(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"junwei-tan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"junwei-tan"},"content":"    private List\u003cPhone\u003e getPhones(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"junwei-tan"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"junwei-tan"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"junwei-tan"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"junwei-tan"},"content":"        return ParserUtil.parsePhones(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"junwei-tan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"junwei-tan"},"content":"    private List\u003cEmail\u003e getEmails(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"junwei-tan"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"junwei-tan"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"junwei-tan"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"junwei-tan"},"content":"        return ParserUtil.parseEmails(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"junwei-tan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"junwei-tan"},"content":"    private List\u003cAddress\u003e getAddresses(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"junwei-tan"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"junwei-tan"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"junwei-tan"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"junwei-tan"},"content":"        return ParserUtil.parseAddresses(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"junwei-tan"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"junwei-tan"},"content":"     * Returns true if all the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"junwei-tan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"junwei-tan"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"junwei-tan"},"content":"    private static boolean arePrefixesEmpty(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"junwei-tan"},"content":"        return Stream.of(prefixes).noneMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"junwei-tan"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"alvintfl":6,"junwei-tan":63,"-":18}},{"path":"src/main/java/seedu/address/logic/parser/MarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"feliciagan"},"content":"import seedu.address.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"feliciagan"},"content":" * Parses input arguments and creates a new MarkTaskCommand object","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"feliciagan"},"content":"public class MarkTaskCommandParser implements Parser\u003cMarkTaskCommand\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"feliciagan"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkTaskCommand","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"feliciagan"},"content":"     * and returns a MarkTaskCommand object for execution.","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"feliciagan"},"content":"    public MarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"feliciagan"},"content":"            return new MarkTaskCommand(index);","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"feliciagan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"feliciagan":8,"-":19}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"junwei-tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"junwei-tan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"junwei-tan"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"junwei-tan"},"content":"     * Parses a string of {@code String names} into a list of {@code String names}.","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"junwei-tan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"junwei-tan"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"junwei-tan"},"content":"     * @throws ParseException if any {@code name} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"junwei-tan"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"junwei-tan"},"content":"    public static List\u003cName\u003e parseNames(String names) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"junwei-tan"},"content":"        requireNonNull(names);","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"junwei-tan"},"content":"        String trimmedNames \u003d names.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"junwei-tan"},"content":"        String[] nameArr \u003d trimmedNames.split(\" \");","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"junwei-tan"},"content":"        ArrayList\u003cName\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"junwei-tan"},"content":"        for (String name : nameArr) {","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"junwei-tan"},"content":"            if (!Name.isValidName(name)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"junwei-tan"},"content":"                throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"junwei-tan"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"junwei-tan"},"content":"            nameList.add(new Name(name));","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"junwei-tan"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"junwei-tan"},"content":"        return nameList;","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"junwei-tan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"junwei-tan"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"junwei-tan"},"content":"     * Parses a string of {@code String phones} into a list of {@code String phones}.","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"junwei-tan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"junwei-tan"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"junwei-tan"},"content":"     * @throws ParseException if any {@code phone} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"junwei-tan"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"junwei-tan"},"content":"    public static List\u003cPhone\u003e parsePhones(String phones) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"junwei-tan"},"content":"        requireNonNull(phones);","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"junwei-tan"},"content":"        String trimmedNames \u003d phones.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"junwei-tan"},"content":"        String[] phoneArr \u003d trimmedNames.split(\" \");","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"junwei-tan"},"content":"        ArrayList\u003cPhone\u003e phoneList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"junwei-tan"},"content":"        for (String phone : phoneArr) {","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"junwei-tan"},"content":"            if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"junwei-tan"},"content":"                throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"junwei-tan"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"junwei-tan"},"content":"            phoneList.add(new Phone(phone));","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"junwei-tan"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"junwei-tan"},"content":"        return phoneList;","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"junwei-tan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"junwei-tan"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"junwei-tan"},"content":"     * Parses a string of {@code String addresses} into a list of {@code String addresses}.","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"junwei-tan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"junwei-tan"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"junwei-tan"},"content":"     * @throws ParseException if any {@code address} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"junwei-tan"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"junwei-tan"},"content":"    public static List\u003cAddress\u003e parseAddresses(String addresses) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"junwei-tan"},"content":"        requireNonNull(addresses);","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"junwei-tan"},"content":"        String trimmedNames \u003d addresses.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"junwei-tan"},"content":"        String[] addressArr \u003d trimmedNames.split(\" \");","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"junwei-tan"},"content":"        ArrayList\u003cAddress\u003e addressList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"junwei-tan"},"content":"        for (String address : addressArr) {","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"junwei-tan"},"content":"            if (!Address.isValidAddress(address)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"junwei-tan"},"content":"                throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"junwei-tan"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"junwei-tan"},"content":"            addressList.add(new Address(address));","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"junwei-tan"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"junwei-tan"},"content":"        return addressList;","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"junwei-tan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"junwei-tan"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"junwei-tan"},"content":"     * Parses a string of {@code String emails} into a list of {@code String emails}.","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"junwei-tan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"junwei-tan"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"junwei-tan"},"content":"     * @throws ParseException if any {@code email} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"junwei-tan"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"junwei-tan"},"content":"    public static List\u003cEmail\u003e parseEmails(String emails) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"junwei-tan"},"content":"        requireNonNull(emails);","lastModifiedDate":"2022-10-06"},{"lineNumber":169,"author":{"gitId":"junwei-tan"},"content":"        String trimmedNames \u003d emails.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"junwei-tan"},"content":"        String[] emailArr \u003d trimmedNames.split(\" \");","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"junwei-tan"},"content":"        ArrayList\u003cEmail\u003e emailList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"junwei-tan"},"content":"        for (String email : emailArr) {","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"junwei-tan"},"content":"            if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"junwei-tan"},"content":"                throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"junwei-tan"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"junwei-tan"},"content":"            emailList.add(new Email(email));","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"junwei-tan"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"junwei-tan"},"content":"        return emailList;","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"junwei-tan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":207,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":209,"author":{"gitId":"nickeltea"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2022-10-07"},{"lineNumber":210,"author":{"gitId":"nickeltea"},"content":"     * @param description The String to be parsed.","lastModifiedDate":"2022-10-07"},{"lineNumber":211,"author":{"gitId":"nickeltea"},"content":"     * @return A Description instance","lastModifiedDate":"2022-10-07"},{"lineNumber":212,"author":{"gitId":"nickeltea"},"content":"     * @throws ParseException if the given description is invalid.","lastModifiedDate":"2022-10-07"},{"lineNumber":213,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":214,"author":{"gitId":"nickeltea"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":215,"author":{"gitId":"nickeltea"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-06"},{"lineNumber":216,"author":{"gitId":"nickeltea"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":217,"author":{"gitId":"nickeltea"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":218,"author":{"gitId":"nickeltea"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":219,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":220,"author":{"gitId":"nickeltea"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2022-10-06"},{"lineNumber":221,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"junwei-tan":82,"nickeltea":16,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"feliciagan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"feliciagan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"feliciagan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"feliciagan"},"content":"import seedu.address.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"feliciagan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"feliciagan"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"feliciagan"},"content":" * Parses input arguments and creates a new UnmarkTaskCommand object","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"feliciagan"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"feliciagan"},"content":"public class UnmarkTaskCommandParser implements Parser\u003cUnmarkTaskCommand\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"feliciagan"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"feliciagan"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkTaskCommand","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"feliciagan"},"content":"     * and returns an UnmarkTaskCommand object for execution.","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"feliciagan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"feliciagan"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"feliciagan"},"content":"    public UnmarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"feliciagan"},"content":"        try {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"feliciagan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"feliciagan"},"content":"            return new UnmarkTaskCommand(index);","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"feliciagan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"feliciagan"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"feliciagan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"feliciagan"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"feliciagan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"feliciagan"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"feliciagan":27}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"feliciagan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"feliciagan"},"content":"import seedu.address.model.task.TaskList;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"feliciagan"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"feliciagan"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"feliciagan"},"content":"    //task methods","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"feliciagan"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"feliciagan"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"feliciagan"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"feliciagan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":132,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":133,"author":{"gitId":"nickeltea"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":134,"author":{"gitId":"nickeltea"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":135,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"feliciagan":11,"nickeltea":5,"-":120}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"alvintfl"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"alvintfl"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"nickeltea"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"nickeltea"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"nickeltea"},"content":"    void addT(Task task);","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"feliciagan"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"feliciagan"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"alvintfl"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"alvintfl"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"alvintfl"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"alvintfl"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"alvintfl"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"alvintfl":8,"feliciagan":3,"nickeltea":8,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"feliciagan"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"feliciagan"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.addressBook.getTaskList());","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"nickeltea"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"nickeltea"},"content":"    public void addT(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"nickeltea"},"content":"        addressBook.addTask(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":159,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"feliciagan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"feliciagan"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"feliciagan"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"feliciagan"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"feliciagan"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"feliciagan"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"feliciagan"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":169,"author":{"gitId":"feliciagan"},"content":"        return filteredTasks;","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"feliciagan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"alvintfl"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":173,"author":{"gitId":"alvintfl"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-07"},{"lineNumber":174,"author":{"gitId":"alvintfl"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-07"},{"lineNumber":175,"author":{"gitId":"alvintfl"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2022-10-07"},{"lineNumber":176,"author":{"gitId":"alvintfl"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"feliciagan":13,"alvintfl":5,"nickeltea":8,"-":151}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"feliciagan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"feliciagan"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"feliciagan"},"content":"     * Returns an unmodifiable view of the tasks list.","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"feliciagan"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"feliciagan"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"     * Adds a task to the TaskList","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"     * @param task","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"nickeltea"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"feliciagan":5,"nickeltea":6,"-":17}},{"path":"src/main/java/seedu/address/model/person/PersonContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junwei-tan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"junwei-tan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"junwei-tan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"junwei-tan"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"junwei-tan"},"content":" * Tests that a {@code Person}\u0027s {@code Name} and/or {@code Phone} and/or {@code Email} and/or {@code Address}","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"junwei-tan"},"content":" * matches any of the keywords given.","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"junwei-tan"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"junwei-tan"},"content":"public class PersonContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cName\u003e nameKeywords;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cPhone\u003e phoneKeywords;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cEmail\u003e emailKeywords;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cAddress\u003e addressKeywords;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"junwei-tan"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"junwei-tan"},"content":"     * Constructs an {@code PersonContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"junwei-tan"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"junwei-tan"},"content":"     * @param nameKeywords A list containing keywords for {@code Name}.","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"junwei-tan"},"content":"     * @param phoneKeywords A list containing keywords for {@code Phone}.","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"junwei-tan"},"content":"     * @param emailKeywords A list containing keywords for {@code Email}.","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"junwei-tan"},"content":"     * @param addressKeywords A list containing keywords for {@code Address}.","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"junwei-tan"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"junwei-tan"},"content":"    public PersonContainsKeywordsPredicate(List\u003cName\u003e nameKeywords,","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"junwei-tan"},"content":"            List\u003cPhone\u003e phoneKeywords, List\u003cEmail\u003e emailKeywords, List\u003cAddress\u003e addressKeywords) {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"junwei-tan"},"content":"        this.nameKeywords \u003d nameKeywords;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"junwei-tan"},"content":"        this.phoneKeywords \u003d phoneKeywords;","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"junwei-tan"},"content":"        this.emailKeywords \u003d emailKeywords;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"junwei-tan"},"content":"        this.addressKeywords \u003d addressKeywords;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"junwei-tan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"junwei-tan"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"junwei-tan"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"junwei-tan"},"content":"        return (nameKeywords.isEmpty() || nameKeywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"junwei-tan"},"content":"                StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword.toString())))","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"junwei-tan"},"content":"                \u0026\u0026 (phoneKeywords.isEmpty() || phoneKeywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"junwei-tan"},"content":"                StringUtil.containsWordIgnoreCase(person.getPhone().value, keyword.toString())))","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"junwei-tan"},"content":"                \u0026\u0026 (emailKeywords.isEmpty() || emailKeywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"junwei-tan"},"content":"                StringUtil.containsWordIgnoreCase(person.getEmail().value, keyword.toString())))","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"junwei-tan"},"content":"                \u0026\u0026 (addressKeywords.isEmpty() || addressKeywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"junwei-tan"},"content":"                StringUtil.containsWordIgnoreCase(person.getAddress().value, keyword.toString())));","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"junwei-tan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"junwei-tan"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"junwei-tan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"junwei-tan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"junwei-tan"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"junwei-tan"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"junwei-tan"},"content":"        if (!(other instanceof PersonContainsKeywordsPredicate)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"junwei-tan"},"content":"            return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"junwei-tan"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"junwei-tan"},"content":"        PersonContainsKeywordsPredicate castedOther \u003d (PersonContainsKeywordsPredicate) other;","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"junwei-tan"},"content":"        return nameKeywords.equals(castedOther.nameKeywords)","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"junwei-tan"},"content":"                \u0026\u0026 phoneKeywords.equals(castedOther.phoneKeywords)","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"junwei-tan"},"content":"                \u0026\u0026 emailKeywords.equals(castedOther.emailKeywords)","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"junwei-tan"},"content":"                \u0026\u0026 addressKeywords.equals(castedOther.addressKeywords);","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"junwei-tan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"junwei-tan"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"junwei-tan":63}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"ryanguai"},"content":"    public String getName() {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"ryanguai"},"content":"        return this.tagName;","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"ryanguai"},"content":"     * Returns true if other tag has the same name as this tag.","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"ryanguai"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"ryanguai"},"content":"     * @param otherTag Tag instance to be checked.","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"ryanguai"},"content":"    public boolean isSameTag(Tag otherTag) {","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"ryanguai"},"content":"        if (otherTag \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"ryanguai"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"ryanguai"},"content":"        return otherTag !\u003d null","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"ryanguai"},"content":"                \u0026\u0026 otherTag.getName().equals(getName());","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanguai":18,"-":54}},{"path":"src/main/java/seedu/address/model/tag/UniqueTagList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanguai"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"ryanguai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"ryanguai"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"ryanguai"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"ryanguai"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"ryanguai"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"ryanguai"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"ryanguai"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"ryanguai"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"ryanguai"},"content":" * A list of tags that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"ryanguai"},"content":" * A tag is considered unique by comparing using {@code Tag#isSameTag(Tag)}. As such, adding and updating of","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"ryanguai"},"content":" * tags uses Tag#isSameTag(Tag) for equality so as to ensure that the tag being added or updated is","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"ryanguai"},"content":" * unique in terms of identity in the UniqueTagList. However, the removal of a tag uses Tag#equals(Object) so","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"ryanguai"},"content":" * as to ensure that the tag with exactly the same fields will be removed.","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"ryanguai"},"content":" *","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"ryanguai"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"ryanguai"},"content":" *","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"ryanguai"},"content":" * @see Tag#isSameTag(Tag)","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"ryanguai"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"ryanguai"},"content":"public class UniqueTagList implements Iterable\u003cTag\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"ryanguai"},"content":"    private final ObservableList\u003cTag\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"ryanguai"},"content":"    private final ObservableList\u003cTag\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"ryanguai"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"ryanguai"},"content":"     * Returns true if the list contains an equivalent tag as the given argument.","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"ryanguai"},"content":"    public boolean contains(Tag toCheck) {","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"ryanguai"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"ryanguai"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTag);","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"ryanguai"},"content":"     * Adds a tag to the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"ryanguai"},"content":"     * The tag must not already exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"ryanguai"},"content":"    public void add(Tag toAdd) {","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"ryanguai"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"ryanguai"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"ryanguai"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"ryanguai"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"ryanguai"},"content":"     * Replaces the tag {@code target} in the list with {@code editedTag}.","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"ryanguai"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"ryanguai"},"content":"     * The tag identity of {@code editedTag} must not be the same as another existing tag in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"ryanguai"},"content":"    public void setTag(Tag target, Tag editedTag) {","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"ryanguai"},"content":"        requireAllNonNull(target, editedTag);","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"ryanguai"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"ryanguai"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"ryanguai"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"ryanguai"},"content":"        if (!target.isSameTag(editedTag) \u0026\u0026 contains(editedTag)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"ryanguai"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"ryanguai"},"content":"        internalList.set(index, editedTag);","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"ryanguai"},"content":"     * Removes the equivalent tag from the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"ryanguai"},"content":"     * The tag must exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"ryanguai"},"content":"    public void remove(Tag toRemove) {","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"ryanguai"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"ryanguai"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"ryanguai"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"ryanguai"},"content":"    public void setTags(UniqueTagList replacement) {","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"ryanguai"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"ryanguai"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"ryanguai"},"content":"     * Replaces the contents of this list with {@code tags}.","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"ryanguai"},"content":"     * {@code tags} must not contain duplicate tags.","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"ryanguai"},"content":"    public void setTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"ryanguai"},"content":"        requireAllNonNull(tags);","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"ryanguai"},"content":"        if (!tagsAreUnique(tags)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"ryanguai"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"ryanguai"},"content":"        internalList.setAll(tags);","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"ryanguai"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"ryanguai"},"content":"    public ObservableList\u003cTag\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"ryanguai"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"ryanguai"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"ryanguai"},"content":"    public Iterator\u003cTag\u003e iterator() {","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"ryanguai"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"ryanguai"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"ryanguai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"ryanguai"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"ryanguai"},"content":"                || (other instanceof UniqueTagList // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"ryanguai"},"content":"                \u0026\u0026 internalList.equals(((UniqueTagList) other).internalList));","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"ryanguai"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"ryanguai"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"ryanguai"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"ryanguai"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"ryanguai"},"content":"     * Returns true if {@code tags} contains only unique tags.","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"ryanguai"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"ryanguai"},"content":"    private boolean tagsAreUnique(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"ryanguai"},"content":"        for (int i \u003d 0; i \u003c tags.size() - 1; i++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"ryanguai"},"content":"            for (int j \u003d i + 1; j \u003c tags.size(); j++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"ryanguai"},"content":"                if (tags.get(i).isSameTag(tags.get(j))) {","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"ryanguai"},"content":"                    return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"ryanguai"},"content":"                }","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"ryanguai"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"ryanguai"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"ryanguai"},"content":"        return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"ryanguai"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"ryanguai":138}},{"path":"src/main/java/seedu/address/model/tag/exceptions/DuplicateTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanguai"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"ryanguai"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"ryanguai"},"content":" * Signals that the operation will result in duplicate Tags (Tags are considered duplicates if they have the same","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"ryanguai"},"content":" * identity).","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"ryanguai"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"ryanguai"},"content":"public class DuplicateTagException extends RuntimeException {","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"ryanguai"},"content":"    public DuplicateTagException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"ryanguai"},"content":"        super(\"Operation would result in duplicate tags\");","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"ryanguai"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"ryanguai"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"ryanguai":11}},{"path":"src/main/java/seedu/address/model/tag/exceptions/TagNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanguai"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"ryanguai"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"ryanguai"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"ryanguai"},"content":" * Signals that the operation is unable to find the specified tag.","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"ryanguai"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"ryanguai"},"content":"public class TagNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"ryanguai":6}},{"path":"src/main/java/seedu/address/model/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":" * Represents the deadline of a task in the TaskList.","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"public class Deadline extends Command {","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"    // Implement later.","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"        return null;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"        return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"nickeltea":29}},{"path":"src/main/java/seedu/address/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":" * Represents the description of a task in the TaskList.","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"public class Description {","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"            \"Descriptions should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"    /*","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"    public final String taskDescription;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"     * Constructs an {@code Description}.","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"     * @param description A valid description.","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"    public Description(String description) {","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"nickeltea"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"nickeltea"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"nickeltea"},"content":"        taskDescription \u003d description;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"nickeltea"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"nickeltea"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"nickeltea"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"nickeltea"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"nickeltea"},"content":"        return taskDescription;","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"nickeltea"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"nickeltea"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"nickeltea"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"nickeltea"},"content":"                \u0026\u0026 taskDescription.equals(((Description) other).taskDescription)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"nickeltea":51}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":" * Represents a Task in the TaskList.","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"public class Task {","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"feliciagan"},"content":"    private Description description;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"feliciagan"},"content":"    private boolean isDone;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"     * A constructor that creates an instance of Task.","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"    public Task(Description description) {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"feliciagan"},"content":"     * Returns true if task is done, false if task is not done.","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"feliciagan"},"content":"     * @return boolean indicating task completion status.","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"feliciagan"},"content":"    public boolean getTaskStatus() {","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"feliciagan"},"content":"        return isDone;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"feliciagan"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"feliciagan"},"content":"     * Marks task as done.","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"feliciagan"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"feliciagan"},"content":"    public void markTask() {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"feliciagan"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"feliciagan"},"content":"     * Marks task as not done.","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"feliciagan"},"content":"    public void unmarkTask() {","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"feliciagan"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"feliciagan":14,"nickeltea":26}},{"path":"src/main/java/seedu/address/model/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"feliciagan"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"feliciagan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"feliciagan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"feliciagan"},"content":" * Represents the tasklist.","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"feliciagan"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"feliciagan"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"feliciagan"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"feliciagan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"feliciagan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"feliciagan"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"feliciagan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"     * Adds a Task to the TaskList.","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"nickeltea"},"content":"     * @param task The Task tp be added.","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"nickeltea"},"content":"     * @return A String describing the number of tasks in the TaskList.","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"nickeltea"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"nickeltea"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"nickeltea"},"content":"        internalList.add(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"nickeltea"},"content":"        return TaskUi.addText(internalList.get(internalList.size() - 1).toString(), internalList.size());","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"feliciagan"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"feliciagan"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"feliciagan"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"feliciagan":14,"nickeltea":28}},{"path":"src/main/java/seedu/address/model/task/TaskUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":" * Temporary class for task related UI.","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"public class TaskUi {","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"     * Greets the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"     * @return A greeting to be displayed to the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"    public static String introduction() {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"        String intro \u003d \"Hello! I\u0027m YellowBook \\n\" + \"What can I do for you?\";","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"        return intro;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"     * Informs the user what task has been deleted and how many tasks are left.","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"     * @param deleted The deleted task.","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"     * @param size The number of tasks remaining.","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"     * @return A response to be displayed to the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"nickeltea"},"content":"    public static String deleteText(String deleted, int size) {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"nickeltea"},"content":"        return \"Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"nickeltea"},"content":"                + deleted + \"\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"nickeltea"},"content":"                + \"Now you have \" + size + \" task(s) in the list. \\n\";","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"nickeltea"},"content":"     * Tells the user what Task was added and how many Tasks are in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"nickeltea"},"content":"     * @param added Description of the Task added.","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"nickeltea"},"content":"     * @param size The total number of tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"nickeltea"},"content":"     * @return A response to be displayed to the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"nickeltea"},"content":"    public static String addText(String added, int size) {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"nickeltea"},"content":"        return \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"nickeltea"},"content":"                + added + \"\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"nickeltea"},"content":"                + \"Now you have \" + size + \" task(s) in the list. \\n\";","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"nickeltea"},"content":"     * Informs the user that the task they tried to access does not exist.","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"nickeltea"},"content":"     * @return A response to be displayed to the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"nickeltea"},"content":"    public static String taskNotFoundText() {","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"nickeltea"},"content":"        return \"OOPS!!! That task doesn\u0027t exist. \\n\";","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"nickeltea"},"content":"     * Informs the user that the description field of their command cannot be empty.","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"nickeltea"},"content":"     * @param taskType The type of Task the user tried to create.","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"nickeltea"},"content":"     * @return A response to be displayed to the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"nickeltea"},"content":"    public static String emptyDescription(String taskType) {","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"nickeltea"},"content":"        if (taskType.equals(\"Event\")) {","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"nickeltea"},"content":"            return \"OOPS!!! The description of an Event cannot be empty. \\n\";","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"nickeltea"},"content":"        } else {","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"nickeltea"},"content":"            return \"OOPS!!! The description of a \" + taskType + \" cannot be empty. \\n\";","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"nickeltea"},"content":"     * Informs the user that there is an empty field in their command.","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"nickeltea"},"content":"     * @return A response to be displayed to the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"nickeltea"},"content":"    public static String emptyField() {","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"nickeltea"},"content":"        return \"OOPS!!! all fields of your command must be filled. \\n\";","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"nickeltea"},"content":"     * Tells the user that Duke was unable to add their task to the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"nickeltea"},"content":"     * @return A response to be displayed to the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"nickeltea"},"content":"    public static String unableToAdd() {","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"nickeltea"},"content":"        return \"OOPS!!! Unable to add task. \\n\";","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"nickeltea"},"content":"     * Tells the user that their date format is incorrect.","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"nickeltea"},"content":"     * @return A response to be displayed to the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"nickeltea"},"content":"    public static String wrongDateFormat() {","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"nickeltea"},"content":"        return \"OOPS!!! The deadline must be in yyyy-MM-dd hh:mm AM/PM format. \\n\";","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"nickeltea"},"content":"     * Tells the user that Dukes was unable to find or create a save file.","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"nickeltea"},"content":"     * @return A response to be displayed to the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"nickeltea"},"content":"    public static String saveFileError() {","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"nickeltea"},"content":"        return \"OOPS!!! Unable to find/create save file. \\n\";","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"nickeltea"},"content":"     * Tells the user that their input was not recognised as a command.","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"nickeltea"},"content":"     * @return A response to be displayed to the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"nickeltea"},"content":"    public static String unknownCommand() {","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"nickeltea"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( \\n\";","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"nickeltea"},"content":"     * Bids farewell to the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"nickeltea"},"content":"     * @return A response to be displayed to the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"nickeltea"},"content":"    public static String bye() {","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"nickeltea"},"content":"        return \"Bye. Hope to see you again soon! \\n\";","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"nickeltea":122}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.ListContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"alvintfl"},"content":"        String deleteCommand \u003d \"deleteC 9\";","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"alvintfl"},"content":"        String listCommand \u003d ListContactCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"alvintfl"},"content":"        assertCommandSuccess(listCommand, ListContactCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"alvintfl"},"content":"        String addCommand \u003d AddContactCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"alvintfl":6,"-":156}},{"path":"src/test/java/seedu/address/logic/commands/AddContactCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"alvintfl"},"content":" * Contains integration tests (interaction with the Model) for {@code AddContactCommand}.","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"alvintfl"},"content":"public class AddContactCommandIntegrationTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"alvintfl"},"content":"        assertCommandSuccess(new AddContactCommand(validPerson), model,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"alvintfl"},"content":"                String.format(AddContactCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"alvintfl"},"content":"        assertCommandFailure(new AddContactCommand(personInList), model, AddContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"alvintfl":5,"-":40}},{"path":"src/test/java/seedu/address/logic/commands/AddContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"alvintfl"},"content":"public class AddContactCommandTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"alvintfl"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddContactCommand(null));","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"alvintfl"},"content":"        CommandResult commandResult \u003d new AddContactCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"alvintfl"},"content":"        assertEquals(String.format(AddContactCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"alvintfl"},"content":"        AddContactCommand addCommand \u003d new AddContactCommand(validPerson);","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"alvintfl"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"alvintfl"},"content":"                AddContactCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"alvintfl"},"content":"        AddContactCommand addAliceCommand \u003d new AddContactCommand(alice);","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"alvintfl"},"content":"        AddContactCommand addBobCommand \u003d new AddContactCommand(bob);","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"alvintfl"},"content":"        AddContactCommand addAliceCommandCopy \u003d new AddContactCommand(alice);","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":153,"author":{"gitId":"nickeltea"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":154,"author":{"gitId":"nickeltea"},"content":"        public void addT(Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":155,"author":{"gitId":"nickeltea"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":156,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":157,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":158,"author":{"gitId":"feliciagan"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"feliciagan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"feliciagan"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"alvintfl"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":162,"author":{"gitId":"alvintfl"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":163,"author":{"gitId":"alvintfl"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-07"},{"lineNumber":164,"author":{"gitId":"alvintfl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":165,"author":{"gitId":"alvintfl"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":166,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"alvintfl":15,"feliciagan":3,"nickeltea":8,"-":185}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"alvintfl"},"content":"    public static final EditContactCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"alvintfl"},"content":"    public static final EditContactCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"alvintfl":2,"-":126}},{"path":"src/test/java/seedu/address/logic/commands/DeleteContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"alvintfl"},"content":" * {@code DeleteContactCommand}.","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"alvintfl"},"content":"public class DeleteContactCommandTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"alvintfl"},"content":"        DeleteContactCommand deleteCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"alvintfl"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"alvintfl"},"content":"        DeleteContactCommand deleteCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"alvintfl"},"content":"        DeleteContactCommand deleteCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"alvintfl"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"alvintfl"},"content":"        DeleteContactCommand deleteCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"alvintfl"},"content":"        DeleteContactCommand deleteFirstCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"alvintfl"},"content":"        DeleteContactCommand deleteSecondCommand \u003d new DeleteContactCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"alvintfl"},"content":"        DeleteContactCommand deleteFirstCommandCopy \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"alvintfl":11,"-":98}},{"path":"src/test/java/seedu/address/logic/commands/EditContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"alvintfl"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditContactCommand.","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"alvintfl"},"content":"public class EditContactCommandTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"alvintfl"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"alvintfl"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"alvintfl"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"alvintfl"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"alvintfl"},"content":"        assertCommandFailure(editCommand, model, EditContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"alvintfl"},"content":"        assertCommandFailure(editCommand, model, EditContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"alvintfl"},"content":"        final EditContactCommand standardCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand commandWithSameValues \u003d new EditContactCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"alvintfl"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"alvintfl"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"alvintfl":21,"-":152}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"alvintfl":1,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/FindContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"junwei-tan"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"junwei-tan"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"junwei-tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"junwei-tan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"alvintfl"},"content":" * Contains integration tests (interaction with the Model) for {@code FindContactCommand}.","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"alvintfl"},"content":"public class FindContactCommandTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"junwei-tan"},"content":"    private final String nameKeyword1 \u003d \"Alice\";","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"junwei-tan"},"content":"    private final String nameKeyword2 \u003d \"Benson\";","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"junwei-tan"},"content":"    private final String phoneKeyword1 \u003d \"999\";","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"junwei-tan"},"content":"    private final String phoneKeyword2 \u003d \"62353535\";","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"junwei-tan"},"content":"    private final String emailKeyword1 \u003d \"john@gmail.com\";","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"junwei-tan"},"content":"    private final String emailKeyword2 \u003d \"colonel-sanders-123@kfc.co.uk\";","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"junwei-tan"},"content":"    private final String addressKeyword1 \u003d \"17A Lower Kent Ridge Road, #01-01, S(119081)\";","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"junwei-tan"},"content":"    private final String addressKeyword2 \u003d \"17A Lower Kent Ridge Road, c/o reception@sally, #01-01, S(119081)\";","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cName\u003e nameKeywords \u003d Arrays.asList(new Name(nameKeyword1), new Name(nameKeyword2));","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cPhone\u003e phoneKeywords \u003d Arrays.asList(new Phone(phoneKeyword1), new Phone(phoneKeyword2));","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cEmail\u003e emailKeywords \u003d Arrays.asList(new Email(emailKeyword1), new Email(emailKeyword2));","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cAddress\u003e addressKeywords \u003d Arrays.asList(new Address(addressKeyword1),","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"junwei-tan"},"content":"            new Address(addressKeyword2));","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cName\u003e emptyNameKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cPhone\u003e emptyPhoneKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cEmail\u003e emptyEmailKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cAddress\u003e emptyAddressKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"junwei-tan"},"content":"        PersonContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"junwei-tan"},"content":"                new PersonContainsKeywordsPredicate(nameKeywords, phoneKeywords,","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"junwei-tan"},"content":"                        emailKeywords, addressKeywords);","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"junwei-tan"},"content":"        PersonContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"junwei-tan"},"content":"                new PersonContainsKeywordsPredicate(nameKeywords, emptyPhoneKeywords,","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"junwei-tan"},"content":"                        emptyEmailKeywords, emptyAddressKeywords);","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"alvintfl"},"content":"        FindContactCommand findFirstCommand \u003d new FindContactCommand(firstPredicate);","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"alvintfl"},"content":"        FindContactCommand findSecondCommand \u003d new FindContactCommand(secondPredicate);","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"alvintfl"},"content":"        FindContactCommand findFirstCommandCopy \u003d new FindContactCommand(firstPredicate);","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"junwei-tan"},"content":"    public void execute_zeroMatchingKeywords_noPersonFound() {","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"junwei-tan"},"content":"        // TODO","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"junwei-tan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"junwei-tan"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"junwei-tan"},"content":"                new PersonContainsKeywordsPredicate(nameKeywords, emptyPhoneKeywords,","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"junwei-tan"},"content":"                        emptyEmailKeywords, emptyAddressKeywords);","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"alvintfl"},"content":"        FindContactCommand command \u003d new FindContactCommand(predicate);","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"junwei-tan"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"alvintfl":6,"junwei-tan":42,"-":51}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"junwei-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"junwei-tan"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, false, false);","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"junwei-tan"},"content":"        assertEquals(HelpCommand.SHOWING_HELP_MESSAGE, expectedCommandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"junwei-tan":4,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"alvintfl"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListContactCommand.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"alvintfl"},"content":"public class ListContactCommandTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"alvintfl"},"content":"        assertCommandSuccess(new ListContactCommand(), model, ListContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"alvintfl"},"content":"        assertCommandSuccess(new ListContactCommand(), model, ListContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"alvintfl":4,"-":35}},{"path":"src/test/java/seedu/address/logic/parser/AddContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"alvintfl"},"content":"public class AddContactCommandParserTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"alvintfl"},"content":"    private AddContactCommandParser parser \u003d new AddContactCommandParser();","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"alvintfl"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"alvintfl"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"alvintfl"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"alvintfl"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"alvintfl"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"alvintfl"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddContactCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"alvintfl"},"content":"                new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"alvintfl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"alvintfl"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"alvintfl":12,"-":129}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.ListContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"alvintfl"},"content":"        AddContactCommand command \u003d (AddContactCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"alvintfl"},"content":"        assertEquals(new AddContactCommand(person), command);","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"alvintfl"},"content":"        DeleteContactCommand command \u003d (DeleteContactCommand) parser.parseCommand(","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"alvintfl"},"content":"                DeleteContactCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"alvintfl"},"content":"        assertEquals(new DeleteContactCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand command \u003d (EditContactCommand) parser.parseCommand(EditContactCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"alvintfl"},"content":"        assertEquals(new EditContactCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"junwei-tan"},"content":"        // TODO","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"alvintfl"},"content":"        assertTrue(parser.parseCommand(ListContactCommand.COMMAND_WORD) instanceof ListContactCommand);","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"alvintfl"},"content":"        assertTrue(parser.parseCommand(ListContactCommand.COMMAND_WORD + \" 3\") instanceof ListContactCommand);","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"alvintfl":14,"junwei-tan":1,"-":77}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"alvintfl"},"content":"    private DeleteContactCommandParser parser \u003d new DeleteContactCommandParser();","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"alvintfl"},"content":"        assertParseSuccess(parser, \"1\", new DeleteContactCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"alvintfl"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"alvintfl"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"alvintfl":5,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"alvintfl"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"alvintfl"},"content":"    private EditContactCommandParser parser \u003d new EditContactCommandParser();","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"alvintfl"},"content":"        assertParseFailure(parser, \"1\", EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"alvintfl"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"alvintfl"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"alvintfl"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"alvintfl"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"alvintfl"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"alvintfl"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"alvintfl":16,"-":195}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"junwei-tan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"junwei-tan"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"alvintfl"},"content":"    private FindContactCommandParser parser \u003d new FindContactCommandParser();","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"alvintfl"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"alvintfl"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"junwei-tan"},"content":"        String nameKeyword1 \u003d \"ali\";","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"junwei-tan"},"content":"        String nameKeyword2 \u003d \"baba\";","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"junwei-tan"},"content":"        String phoneKeyword1 \u003d \"999\";","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"junwei-tan"},"content":"        String phoneKeyword2 \u003d \"62353535\";","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"junwei-tan"},"content":"        String emailKeyword1 \u003d \"john@gmail.com\";","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"junwei-tan"},"content":"        String emailKeyword2 \u003d \"colonel-sanders-123@kfc.co.uk\";","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"junwei-tan"},"content":"        String addressKeyword1 \u003d \"17A Lower Kent Ridge Road, #01-01, S(119081)\";","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"junwei-tan"},"content":"        String addressKeyword2 \u003d \"17A Lower Kent Ridge Road, c/o reception@sally, #01-01, S(119081)\";","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"junwei-tan"},"content":"        List\u003cName\u003e nameKeywords \u003d Arrays.asList(new Name(nameKeyword1), new Name(nameKeyword2));","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"junwei-tan"},"content":"        List\u003cPhone\u003e phoneKeywords \u003d Arrays.asList(new Phone(phoneKeyword1), new Phone(phoneKeyword2));","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"junwei-tan"},"content":"        List\u003cEmail\u003e emailKeywords \u003d Arrays.asList(new Email(emailKeyword1), new Email(emailKeyword2));","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"junwei-tan"},"content":"        List\u003cAddress\u003e addressKeywords \u003d Arrays.asList(new Address(addressKeyword1), new Address(addressKeyword2));","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"junwei-tan"},"content":"        FindContactCommand expectedFindCommand \u003d new FindContactCommand(new PersonContainsKeywordsPredicate(","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"junwei-tan"},"content":"                nameKeywords, phoneKeywords, emailKeywords, addressKeywords));","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"junwei-tan"},"content":"        // TODO: Add test case","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"junwei-tan"},"content":"        // no prefix","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"junwei-tan"},"content":"        // TODO: throw error","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"junwei-tan"},"content":"        // repeated prefixes","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"junwei-tan"},"content":"        // TODO: throw error","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"alvintfl":4,"junwei-tan":28,"-":24}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"feliciagan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"feliciagan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"feliciagan"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"feliciagan"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"feliciagan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"feliciagan"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"nickeltea"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"nickeltea"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":109,"author":{"gitId":"nickeltea"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"feliciagan":6,"nickeltea":5,"-":102}},{"path":"src/test/java/seedu/address/model/person/PersonContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junwei-tan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"junwei-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"junwei-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"junwei-tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"junwei-tan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"junwei-tan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"junwei-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"junwei-tan"},"content":"public class PersonContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"junwei-tan"},"content":"    private final String nameKeyword1 \u003d \"Alice\";","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"junwei-tan"},"content":"    private final String nameKeyword2 \u003d \"Benson\";","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"junwei-tan"},"content":"    private final String phoneKeyword1 \u003d \"999\";","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"junwei-tan"},"content":"    private final String phoneKeyword2 \u003d \"62353535\";","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"junwei-tan"},"content":"    private final String emailKeyword1 \u003d \"john@gmail.com\";","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"junwei-tan"},"content":"    private final String emailKeyword2 \u003d \"colonel-sanders-123@kfc.co.uk\";","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"junwei-tan"},"content":"    private final String addressKeyword1 \u003d \"17A Lower Kent Ridge Road, #01-01, S(119081)\";","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"junwei-tan"},"content":"    private final String addressKeyword2 \u003d \"17A Lower Kent Ridge Road, c/o reception@sally, #01-01, S(119081)\";","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cName\u003e nameKeywords \u003d Arrays.asList(new Name(nameKeyword1), new Name(nameKeyword2));","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cPhone\u003e phoneKeywords \u003d Arrays.asList(new Phone(phoneKeyword1), new Phone(phoneKeyword2));","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cEmail\u003e emailKeywords \u003d Arrays.asList(new Email(emailKeyword1), new Email(emailKeyword2));","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cAddress\u003e addressKeywords \u003d Arrays.asList(new Address(addressKeyword1),","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"junwei-tan"},"content":"            new Address(addressKeyword2));","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cName\u003e emptyNameKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cPhone\u003e emptyPhoneKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cEmail\u003e emptyEmailKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"junwei-tan"},"content":"    private final List\u003cAddress\u003e emptyAddressKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"junwei-tan"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"junwei-tan"},"content":"    public void equals() {","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"junwei-tan"},"content":"        PersonContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"junwei-tan"},"content":"                new PersonContainsKeywordsPredicate(nameKeywords, phoneKeywords,","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"junwei-tan"},"content":"                        emailKeywords, addressKeywords);","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"junwei-tan"},"content":"        PersonContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"junwei-tan"},"content":"                new PersonContainsKeywordsPredicate(nameKeywords, emptyPhoneKeywords,","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"junwei-tan"},"content":"                        emptyEmailKeywords, emptyAddressKeywords);","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"junwei-tan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"junwei-tan"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"junwei-tan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"junwei-tan"},"content":"        PersonContainsKeywordsPredicate firstPredicateCopy \u003d new PersonContainsKeywordsPredicate(","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"junwei-tan"},"content":"                nameKeywords, phoneKeywords, emailKeywords, addressKeywords);","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"junwei-tan"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"junwei-tan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"junwei-tan"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"junwei-tan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"junwei-tan"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"junwei-tan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"junwei-tan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"junwei-tan"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"junwei-tan"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"junwei-tan"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"junwei-tan":60}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"alvintfl":1,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"alvintfl"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"alvintfl"},"content":"        return AddContactCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"alvintfl":3,"-":59}}]
