[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Vinodjayakumar124"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103-F09-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103-F09-2/tp/actions)","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Vinodjayakumar124"},"content":"### Persons","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Vinodjayakumar124"},"content":"### Events","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"Vinodjayakumar124"},"content":"![Ui_events](docs/images/Ui_events.png)","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"Vinodjayakumar124"},"content":"# Duke The Market","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"Vinodjayakumar124"},"content":"Duke The Market is a one-stop marketing tool that allows department stores to keep track of their upcoming marketing plan roll outs, monitor its impact, and to target the appropriate subsegment of its customer base for each of those plans.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"Vinodjayakumar124"},"content":"* If you are keen on using this application, head over to the User Guide [Link TBC]","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"Vinodjayakumar124"},"content":"* If you are keen on adding new features to this application, head over to the Developer Guide [Link TBC]","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"Vinodjayakumar124"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"Vinodjayakumar124":13,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"Benjamin-Sim"},"content":"    archiveFileName \u003d \u0027dukeTheMarket.jar\u0027","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Benjamin-Sim"},"content":"run {","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"Benjamin-Sim"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Benjamin-Sim":3,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"lfrostbytee"},"content":"### Ong Wee Marcus","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":"\u003cimg src\u003d\"images/lfrostbytee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"[[github](https://github.com/lfrostbytee)]","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"[[portfolio](team/lfrostbytee.md)]","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"* Role: Team Lead","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"* Responsibilities: Deliverables, Scheduling and Tracking","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"### Meng Qiaoran","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"\u003cimg src\u003d\"images/qiaoran-m.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"[[github](http://github.com/Qiaoran-M)]","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"[[portfolio](team/qiaoran-m.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"* Role: Developer","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"* Responsibilities: Testing","lastModifiedDate":"2022-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Benjamin-Sim"},"content":"### Benjamin Sim","lastModifiedDate":"2022-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Benjamin-Sim"},"content":"\u003cimg src\u003d\"images/benjamin-sim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Benjamin-Sim"},"content":"[[github](https://github.com/Benjamin-Sim)]","lastModifiedDate":"2022-09-22"},{"lineNumber":37,"author":{"gitId":"Benjamin-Sim"},"content":"[[portfolio](team/benjamin-sim.md)]","lastModifiedDate":"2022-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-22"},{"lineNumber":40,"author":{"gitId":"Benjamin-Sim"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2022-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"### Tan Hong Liang","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"\u003cimg src\u003d\"images/tanhl2000.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"[[github](http://github.com/tanhl2000)] [[portfolio](team/tanhl2000.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"* Responsibilities: Integration","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Vinodjayakumar124"},"content":"### Vinod s/o Jaya Kumar","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Vinodjayakumar124"},"content":"\u003cimg src\u003d\"images/vinodjayakumar124.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Vinodjayakumar124"},"content":"[[github](http://github.com/Vinodjayakumar124)]","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"Vinodjayakumar124"},"content":"[[portfolio](team/vinodjayakumar124.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"Vinodjayakumar124"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"Benjamin-Sim":5,"tanhl2000":4,"Vinodjayakumar124":5,"lfrostbytee":6,"Qiaoran-M":6,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"lfrostbytee"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `EventListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"lfrostbytee"},"content":"* depends on some classes in the `Model` component, as it displays `Person` objects and `Event` objects residing in the `Model`.","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"lfrostbytee"},"content":"* stores the address book data i.e., all `Person` and `Events` objects (which are contained in the `UniquePersonList` and `UniqueEventList` objects).","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"lfrostbytee"},"content":"* stores the currently \u0027selected\u0027 `Event` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cEvent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"Benjamin-Sim"},"content":"### Sort Persons","lastModifiedDate":"2022-10-19"},{"lineNumber":159,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":160,"author":{"gitId":"Benjamin-Sim"},"content":"The sort persons feature allows the user to sort persons by their name, date of birth or gender.","lastModifiedDate":"2022-10-21"},{"lineNumber":161,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"Benjamin-Sim"},"content":"The field to sort persons by is encapsulated within the `SortField` class. `SortField` stores the sort field enumeration (`SortFieldType`) as well as the `Comparator` object that defines the sorting logic.","lastModifiedDate":"2022-10-19"},{"lineNumber":163,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":164,"author":{"gitId":"Benjamin-Sim"},"content":"The following class diagram shows how the `SortField` class integrates with the other components:","lastModifiedDate":"2022-10-19"},{"lineNumber":165,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":166,"author":{"gitId":"Benjamin-Sim"},"content":"![SortFieldClassDiagram](images/SortFieldClassDiagram.png)","lastModifiedDate":"2022-10-19"},{"lineNumber":167,"author":{"gitId":"Benjamin-Sim"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":168,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":169,"author":{"gitId":"Benjamin-Sim"},"content":"Sorting is performed as part of `listPersonsCommand#execute()`. The sorting operation is exposed in the `Model` interface as `Model#sortPersons()` which calls `AddressBook#sortPersons()` which in turn calls `UniquePersonList#sort()` to sort the underlying `ObservableList\u003cPerson\u003e`.","lastModifiedDate":"2022-10-21"},{"lineNumber":170,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":171,"author":{"gitId":"Benjamin-Sim"},"content":"The following sequence diagram illustrates the relevant sorting method calls for the command `listPersons s/n` with a `SortField` object `s`:","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":173,"author":{"gitId":"Benjamin-Sim"},"content":"![SortPersonsSequenceDiagram](images/SortPersonsSequenceDiagram.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":177,"author":{"gitId":"Benjamin-Sim"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Sorting is performed directly on the underlying `UniquePersonList` object, which means the sorted result is **permanent**. For example, if `listPersons s/n` and `listPersons` are executed back-to-back, the result of the second `listPersons` command will display the sorted results from the first `listPersons s/n` command because the sorted result is permanent.","lastModifiedDate":"2022-10-21"},{"lineNumber":178,"author":{"gitId":"Benjamin-Sim"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":179,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":180,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":181,"author":{"gitId":"Benjamin-Sim"},"content":"#### Design Considerations:","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":183,"author":{"gitId":"Benjamin-Sim"},"content":"**Aspect: How sorting is performed:**","lastModifiedDate":"2022-10-19"},{"lineNumber":184,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":185,"author":{"gitId":"Benjamin-Sim"},"content":"Ideally, sorting should be a \"view\" level operation that doesn\u0027t change the underlying persons list. However, the way the UI is designed makes it difficult to implement sorting as such. The issue is that the UI is **hardcoded** to only display persons from the `UniquePersonList` object. As such, any changes to the persons list must be made directly to the `UniquePersonList` object. i.e. A modified copy of the persons list cannot be passed to the UI during runtime since the UI is hardcoded to show only the `UniquePersonList` object.","lastModifiedDate":"2022-10-21"},{"lineNumber":186,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":187,"author":{"gitId":"Benjamin-Sim"},"content":"Therefore, given the constraints of the UI, sorting is implemented as a **permanent operation**.","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":189,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":190,"author":{"gitId":"Benjamin-Sim"},"content":"* **Alternative 1 (current choice):** Sort the underlying persons list directly.","lastModifiedDate":"2022-10-19"},{"lineNumber":191,"author":{"gitId":"Benjamin-Sim"},"content":"  * Pros: User can directly use the index numbers of the sorted list to interact with the persons using other commands such as `editPerson` or `deletePerson`.","lastModifiedDate":"2022-10-19"},{"lineNumber":192,"author":{"gitId":"Benjamin-Sim"},"content":"  * Cons: Sorted result is permanent, instead of being a \"view\" level operation.","lastModifiedDate":"2022-10-19"},{"lineNumber":193,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":194,"author":{"gitId":"Benjamin-Sim"},"content":"* **Alternative 2:** Sort the persons list at the UI level.","lastModifiedDate":"2022-10-19"},{"lineNumber":195,"author":{"gitId":"Benjamin-Sim"},"content":"   * Pros: Sorted result is not permanent. So sorting won\u0027t interfere with the underlying persons list.","lastModifiedDate":"2022-10-19"},{"lineNumber":196,"author":{"gitId":"Benjamin-Sim"},"content":"   * Cons: Requires redesigning a significant part of the `UI`, `Logic` and `Model` classes.","lastModifiedDate":"2022-10-19"},{"lineNumber":197,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":198,"author":{"gitId":"Vinodjayakumar124"},"content":"### Adding Events","lastModifiedDate":"2022-10-21"},{"lineNumber":199,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":200,"author":{"gitId":"Vinodjayakumar124"},"content":"The Add Event feature that is accessed through the `addEvent` command allows users to add new marketing campaigns of ","lastModifiedDate":"2022-10-22"},{"lineNumber":201,"author":{"gitId":"Vinodjayakumar124"},"content":"the `event` class to the application. ","lastModifiedDate":"2022-10-21"},{"lineNumber":202,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":203,"author":{"gitId":"Vinodjayakumar124"},"content":"The `event` added by the user will have 4 compulsory fields:","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"Vinodjayakumar124"},"content":"- Title of the `event`","lastModifiedDate":"2022-10-21"},{"lineNumber":205,"author":{"gitId":"Vinodjayakumar124"},"content":"- Date of the `event`","lastModifiedDate":"2022-10-21"},{"lineNumber":206,"author":{"gitId":"Vinodjayakumar124"},"content":"- Time of the `event`","lastModifiedDate":"2022-10-21"},{"lineNumber":207,"author":{"gitId":"Vinodjayakumar124"},"content":"- Purpose of the `event`","lastModifiedDate":"2022-10-21"},{"lineNumber":208,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":209,"author":{"gitId":"Vinodjayakumar124"},"content":"The `addEvent` operation is facilitated by `AddEventCommand` which extends from `Command`. If the users\u0027 input matches","lastModifiedDate":"2022-10-21"},{"lineNumber":210,"author":{"gitId":"Vinodjayakumar124"},"content":"the `COMMAND_WORD` of `AddEventCommand` in `AddressBookParser#parseCommand()`, `AddEventCommandParser#parse()` will ","lastModifiedDate":"2022-10-22"},{"lineNumber":211,"author":{"gitId":"Vinodjayakumar124"},"content":"process the additional user inputs which constitute the 4 compulsory fields of the `event` class and return an ","lastModifiedDate":"2022-10-21"},{"lineNumber":212,"author":{"gitId":"Vinodjayakumar124"},"content":"`AddEventCommand`. ","lastModifiedDate":"2022-10-22"},{"lineNumber":213,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":214,"author":{"gitId":"Vinodjayakumar124"},"content":"Executing this Command object through the `AddEventCommand#execute()` triggers the `Model` interface\u0027s ","lastModifiedDate":"2022-10-22"},{"lineNumber":215,"author":{"gitId":"Vinodjayakumar124"},"content":"`Model#addEvent()`. This operation subsequently calls upon the `AddressBook#addEvent()` operation which in turn calls ","lastModifiedDate":"2022-10-22"},{"lineNumber":216,"author":{"gitId":"Vinodjayakumar124"},"content":"upon the `UniqueEventList#add()` operation and the `event` will be stored in memory.","lastModifiedDate":"2022-10-21"},{"lineNumber":217,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":218,"author":{"gitId":"Vinodjayakumar124"},"content":"The addEvent operation will also trigger the `StorageManager#saveAddressBook()` operation which will save the event to","lastModifiedDate":"2022-10-21"},{"lineNumber":219,"author":{"gitId":"Vinodjayakumar124"},"content":"a .JSON format together with all other `Person`(s) and `Event`(s) in memory.","lastModifiedDate":"2022-10-22"},{"lineNumber":220,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":221,"author":{"gitId":"Vinodjayakumar124"},"content":"The following sequence diagram will illustrate how the `addEvent` operation works: ","lastModifiedDate":"2022-10-21"},{"lineNumber":222,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":223,"author":{"gitId":"Vinodjayakumar124"},"content":"![AddEventSequenceDiagram](images/AddEventSequenceDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":224,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":225,"author":{"gitId":"Vinodjayakumar124"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** `cmd` in the diagram represents the add","lastModifiedDate":"2022-10-22"},{"lineNumber":226,"author":{"gitId":"Vinodjayakumar124"},"content":"event command text entered by user. event represents the event class created and stored within AddEventCommand. ","lastModifiedDate":"2022-10-22"},{"lineNumber":227,"author":{"gitId":"Vinodjayakumar124"},"content":"Additionally, saving of the updated events list has been excluded from this diagram for simplicity.","lastModifiedDate":"2022-10-22"},{"lineNumber":228,"author":{"gitId":"Vinodjayakumar124"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":229,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":230,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":231,"author":{"gitId":"Vinodjayakumar124"},"content":"### Deleting Events","lastModifiedDate":"2022-10-22"},{"lineNumber":232,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":233,"author":{"gitId":"Vinodjayakumar124"},"content":"The Delete Event feature that is accessed through the `deleteEvent` command allows users to delete marketing campaigns of","lastModifiedDate":"2022-10-22"},{"lineNumber":234,"author":{"gitId":"Vinodjayakumar124"},"content":"the `event` class in the application.","lastModifiedDate":"2022-10-22"},{"lineNumber":235,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":236,"author":{"gitId":"Vinodjayakumar124"},"content":"The `deleteEvent` operation is facilitated by `DeleteEventCommand` which extends from `Command`. If the users\u0027 input matches","lastModifiedDate":"2022-10-22"},{"lineNumber":237,"author":{"gitId":"Vinodjayakumar124"},"content":"the `COMMAND_WORD` of `DeleteEventCommand` in `AddressBookParser#parseCommand()`, `DeleteEventCommandParser#parse()` will","lastModifiedDate":"2022-10-22"},{"lineNumber":238,"author":{"gitId":"Vinodjayakumar124"},"content":"process the additional user input which is the current index of the marketing event on the User Interface.","lastModifiedDate":"2022-10-22"},{"lineNumber":239,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":240,"author":{"gitId":"Vinodjayakumar124"},"content":"Executing this Command object through the `DeleteEventCommand#execute()` triggers the `Model` interface\u0027s","lastModifiedDate":"2022-10-22"},{"lineNumber":241,"author":{"gitId":"Vinodjayakumar124"},"content":"`Model#deleteEvent()`. This operation subsequently calls upon the `AddressBook#deleteEvent()` operation which in turn calls","lastModifiedDate":"2022-10-22"},{"lineNumber":242,"author":{"gitId":"Vinodjayakumar124"},"content":"upon the `UniqueEventList#remove()` operation and the `event` will be removed from memory.","lastModifiedDate":"2022-10-22"},{"lineNumber":243,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":244,"author":{"gitId":"Vinodjayakumar124"},"content":"The deleteEvent operation will also trigger the `StorageManager#saveAddressBook()` operation which will save the current ","lastModifiedDate":"2022-10-22"},{"lineNumber":245,"author":{"gitId":"Vinodjayakumar124"},"content":"list of events which excludes the deleted event to a .JSON format together with all other `Person`(s) in memory.","lastModifiedDate":"2022-10-22"},{"lineNumber":246,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":247,"author":{"gitId":"Vinodjayakumar124"},"content":"The following sequence diagram will illustrate how the `deleteEvent` operation works:","lastModifiedDate":"2022-10-22"},{"lineNumber":248,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":249,"author":{"gitId":"Vinodjayakumar124"},"content":"![DeleteEventSequenceDiagram](images/DeleteEventSequenceDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":250,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":251,"author":{"gitId":"Vinodjayakumar124"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** `cmd` in the diagram represents the delete","lastModifiedDate":"2022-10-22"},{"lineNumber":252,"author":{"gitId":"Vinodjayakumar124"},"content":"event command text entered by user. event represents the instance of event class created and stored within DeleteEventCommand. ","lastModifiedDate":"2022-10-22"},{"lineNumber":253,"author":{"gitId":"Vinodjayakumar124"},"content":"Additionally, saving of the updated events list from has been excluded from this diagram for simplicity.","lastModifiedDate":"2022-10-22"},{"lineNumber":254,"author":{"gitId":"Vinodjayakumar124"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":255,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":256,"author":{"gitId":"Qiaoran-M"},"content":"### Add Gender","lastModifiedDate":"2022-10-20"},{"lineNumber":257,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":258,"author":{"gitId":"Qiaoran-M"},"content":"The Add Gender feature allows users to add a gender field (Male / Female) to a person in the contact list. It is performed as a part","lastModifiedDate":"2022-10-20"},{"lineNumber":259,"author":{"gitId":"Qiaoran-M"},"content":" of `addPersonCommand#execute()`.","lastModifiedDate":"2022-10-21"},{"lineNumber":260,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":261,"author":{"gitId":"Qiaoran-M"},"content":"These operations are exposed in the `Model` interface as the method `Model#addPerson()`, which calls","lastModifiedDate":"2022-10-20"},{"lineNumber":262,"author":{"gitId":"Qiaoran-M"},"content":"`AddressBook#addPerson()` which calls `UniquePersonList#add()` to add a new person in the person list","lastModifiedDate":"2022-10-21"},{"lineNumber":263,"author":{"gitId":"Qiaoran-M"},"content":"stored in AddressBook.","lastModifiedDate":"2022-10-20"},{"lineNumber":264,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":265,"author":{"gitId":"Qiaoran-M"},"content":"The following sequence diagram shows the methods calls related to add person operation:","lastModifiedDate":"2022-10-20"},{"lineNumber":266,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":267,"author":{"gitId":"Qiaoran-M"},"content":"![AddPersonSequenceDiagram](images/AddPersonSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":268,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":269,"author":{"gitId":"Qiaoran-M"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** `cmd` in the diagram represents the add","lastModifiedDate":"2022-10-20"},{"lineNumber":270,"author":{"gitId":"Qiaoran-M"},"content":"person command text entered by user. The specific `UniquePersonList` operations are not shown in the diagram","lastModifiedDate":"2022-10-20"},{"lineNumber":271,"author":{"gitId":"Qiaoran-M"},"content":"for simplicity.","lastModifiedDate":"2022-10-20"},{"lineNumber":272,"author":{"gitId":"Qiaoran-M"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":273,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":274,"author":{"gitId":"Qiaoran-M"},"content":"The following activity diagram shows what happens when a user executes a new add command:","lastModifiedDate":"2022-10-20"},{"lineNumber":275,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":276,"author":{"gitId":"Qiaoran-M"},"content":"![AddPersonActivityDiagram](images/AddPersonActivityDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":277,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":278,"author":{"gitId":"Qiaoran-M"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Only the","lastModifiedDate":"2022-10-20"},{"lineNumber":279,"author":{"gitId":"Qiaoran-M"},"content":"activities related to gender field are considered and shown in this activity diagram.","lastModifiedDate":"2022-10-20"},{"lineNumber":280,"author":{"gitId":"Qiaoran-M"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"Qiaoran-M"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**Parser exceptions are thrown and caught if","lastModifiedDate":"2022-10-20"},{"lineNumber":283,"author":{"gitId":"Qiaoran-M"},"content":"gender field is not provided in the command, or the gender is not of valid format; Duplicated person exception is","lastModifiedDate":"2022-10-20"},{"lineNumber":284,"author":{"gitId":"Qiaoran-M"},"content":"thrown if the person to add already exists in the contact list. Error message is displayed on the GUI subsequently.","lastModifiedDate":"2022-10-20"},{"lineNumber":285,"author":{"gitId":"Qiaoran-M"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":286,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":287,"author":{"gitId":"Qiaoran-M"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-20"},{"lineNumber":288,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":289,"author":{"gitId":"Qiaoran-M"},"content":"**Aspect: Whether gender field should be optional for a person:**","lastModifiedDate":"2022-10-20"},{"lineNumber":290,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":291,"author":{"gitId":"Qiaoran-M"},"content":"* **Alternative 1 (current choice):** Compulsory gender field:","lastModifiedDate":"2022-10-20"},{"lineNumber":292,"author":{"gitId":"Qiaoran-M"},"content":"    * Pros: It is a more logical implementation because gender is a common attribute for all persons,","lastModifiedDate":"2022-10-20"},{"lineNumber":293,"author":{"gitId":"Qiaoran-M"},"content":"  similar to name, address, etc, which are also compulsory field for persons in contact list.","lastModifiedDate":"2022-10-20"},{"lineNumber":294,"author":{"gitId":"Qiaoran-M"},"content":"    * Cons: It is less flexible, since only female and male genders are accepted.","lastModifiedDate":"2022-10-20"},{"lineNumber":295,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":296,"author":{"gitId":"Qiaoran-M"},"content":"* **Alternative 2:** Optional gender field:","lastModifiedDate":"2022-10-20"},{"lineNumber":297,"author":{"gitId":"Qiaoran-M"},"content":"    * Pros: It is a more flexible implementation, since user has the choice to set gender to male or female,","lastModifiedDate":"2022-10-20"},{"lineNumber":298,"author":{"gitId":"Qiaoran-M"},"content":"  as well as hide gender.","lastModifiedDate":"2022-10-20"},{"lineNumber":299,"author":{"gitId":"Qiaoran-M"},"content":"    * Cons: It is less logical since gender is usually a required binary field in most applications.","lastModifiedDate":"2022-10-20"},{"lineNumber":300,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":301,"author":{"gitId":"Qiaoran-M"},"content":"### Edit Gender","lastModifiedDate":"2022-10-20"},{"lineNumber":302,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":303,"author":{"gitId":"Qiaoran-M"},"content":"The Edit Gender feature allows users to edit a gender field (Male / Female) of a person in the contact list.","lastModifiedDate":"2022-10-20"},{"lineNumber":304,"author":{"gitId":"Qiaoran-M"},"content":"It is performed as a part of `editPersonCommand#execute()`.","lastModifiedDate":"2022-10-21"},{"lineNumber":305,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":306,"author":{"gitId":"Qiaoran-M"},"content":"These operations are exposed in the `Model` interface as the method `Model#setPerson()`, which calls","lastModifiedDate":"2022-10-20"},{"lineNumber":307,"author":{"gitId":"Qiaoran-M"},"content":"`AddressBook#setPerson()` which calls `UniquePersonList#setPerson()` to replace an existing person with a new person","lastModifiedDate":"2022-10-21"},{"lineNumber":308,"author":{"gitId":"Qiaoran-M"},"content":"object with edited fields in the person list stored in AddressBook.","lastModifiedDate":"2022-10-20"},{"lineNumber":309,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":310,"author":{"gitId":"Qiaoran-M"},"content":"The following sequence diagram shows the methods calls related to edit person operation:","lastModifiedDate":"2022-10-20"},{"lineNumber":311,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":312,"author":{"gitId":"Qiaoran-M"},"content":"![EditPersonSequenceDiagram](images/EditPersonSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":313,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":314,"author":{"gitId":"Qiaoran-M"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** `cmd` in the diagram represents the edit","lastModifiedDate":"2022-10-20"},{"lineNumber":315,"author":{"gitId":"Qiaoran-M"},"content":"person command text entered by user; the `setPerson(P1, P2)` method replaces person P1 with person P2 in the person list","lastModifiedDate":"2022-10-20"},{"lineNumber":316,"author":{"gitId":"Qiaoran-M"},"content":"in the model. The specific `UniquePersonList` operations are not shown in the diagram for simplicity.","lastModifiedDate":"2022-10-20"},{"lineNumber":317,"author":{"gitId":"Qiaoran-M"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":318,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":319,"author":{"gitId":"Qiaoran-M"},"content":"The following activity diagram shows what happens when a user executes a new edit command:","lastModifiedDate":"2022-10-20"},{"lineNumber":320,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":321,"author":{"gitId":"Qiaoran-M"},"content":"![EditPersonActivityDiagram](images/EditPersonActivityDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":322,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":323,"author":{"gitId":"Qiaoran-M"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Only the","lastModifiedDate":"2022-10-20"},{"lineNumber":324,"author":{"gitId":"Qiaoran-M"},"content":"activities related to gender field are considered and shown in this activity diagram. All fields are considered optional","lastModifiedDate":"2022-10-20"},{"lineNumber":325,"author":{"gitId":"Qiaoran-M"},"content":"in edit person command, therefore, it is not compulsory that gender field must be provided.","lastModifiedDate":"2022-10-20"},{"lineNumber":326,"author":{"gitId":"Qiaoran-M"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":327,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":328,"author":{"gitId":"Qiaoran-M"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**Parser exceptions are thrown and caught if","lastModifiedDate":"2022-10-20"},{"lineNumber":329,"author":{"gitId":"Qiaoran-M"},"content":"the gender is not of valid format; Invalid person exception is thrown if the person to edit doesn\u0027t exist in the","lastModifiedDate":"2022-10-20"},{"lineNumber":330,"author":{"gitId":"Qiaoran-M"},"content":"contact list. Error message is displayed on the GUI subsequently.","lastModifiedDate":"2022-10-20"},{"lineNumber":331,"author":{"gitId":"Qiaoran-M"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"tanhl2000"},"content":"### Add Date Of Birth","lastModifiedDate":"2022-10-22"},{"lineNumber":334,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":335,"author":{"gitId":"tanhl2000"},"content":"The Add Date Of Birth feature allows users to add a date of birth field (format: dd/mm/yyyy) to a person in the addressbook. It is performed as a part of `addPersonCommand#execute()`.","lastModifiedDate":"2022-10-22"},{"lineNumber":336,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":337,"author":{"gitId":"tanhl2000"},"content":"These operations are exposed in the `Model` interface as the method `Model#addPerson()`, which calls","lastModifiedDate":"2022-10-22"},{"lineNumber":338,"author":{"gitId":"tanhl2000"},"content":"`AddressBook#addPerson()` which calls `UniquePersonList#add()` to add a new person in the person list","lastModifiedDate":"2022-10-22"},{"lineNumber":339,"author":{"gitId":"tanhl2000"},"content":"stored in AddressBook.","lastModifiedDate":"2022-10-22"},{"lineNumber":340,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":341,"author":{"gitId":"tanhl2000"},"content":"The following sequence diagram shows the methods calls related to add person operation:","lastModifiedDate":"2022-10-22"},{"lineNumber":342,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":343,"author":{"gitId":"tanhl2000"},"content":"![AddPersonSequenceDiagram](images/AddPersonSequenceDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":344,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":345,"author":{"gitId":"tanhl2000"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** `cmd` in the diagram represents the add","lastModifiedDate":"2022-10-22"},{"lineNumber":346,"author":{"gitId":"tanhl2000"},"content":"person command text entered by user. The specific `UniquePersonList` operations are not shown in the diagram","lastModifiedDate":"2022-10-22"},{"lineNumber":347,"author":{"gitId":"tanhl2000"},"content":"for simplicity.","lastModifiedDate":"2022-10-22"},{"lineNumber":348,"author":{"gitId":"tanhl2000"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":349,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":350,"author":{"gitId":"tanhl2000"},"content":"The following activity diagram shows what happens when a user executes a new add person command:","lastModifiedDate":"2022-10-22"},{"lineNumber":351,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":352,"author":{"gitId":"tanhl2000"},"content":"![AddPersonActivityDiagram](images/AddPersonActivityDiagram_DOB.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":353,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":354,"author":{"gitId":"tanhl2000"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Only the","lastModifiedDate":"2022-10-22"},{"lineNumber":355,"author":{"gitId":"tanhl2000"},"content":"activities related to date of birth field are considered and shown in this activity diagram.","lastModifiedDate":"2022-10-22"},{"lineNumber":356,"author":{"gitId":"tanhl2000"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":358,"author":{"gitId":"tanhl2000"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**Parser exceptions are thrown and caught if","lastModifiedDate":"2022-10-22"},{"lineNumber":359,"author":{"gitId":"tanhl2000"},"content":"date of birth field is not provided in the command, or the date of birth is not of valid format; Duplicate person exception is","lastModifiedDate":"2022-10-22"},{"lineNumber":360,"author":{"gitId":"tanhl2000"},"content":"thrown if the person to add already exists in the addressbook. Error message is displayed on the GUI subsequently.","lastModifiedDate":"2022-10-22"},{"lineNumber":361,"author":{"gitId":"tanhl2000"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":362,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":363,"author":{"gitId":"tanhl2000"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-22"},{"lineNumber":364,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":365,"author":{"gitId":"tanhl2000"},"content":"**Aspect: Whether date of birth field should be optional for a person:**","lastModifiedDate":"2022-10-22"},{"lineNumber":366,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":367,"author":{"gitId":"tanhl2000"},"content":"* **Alternative 1 (current choice):** Compulsory date of birth field:","lastModifiedDate":"2022-10-22"},{"lineNumber":368,"author":{"gitId":"tanhl2000"},"content":"    * Pros: It is a more logical implementation because date of birth is a common attribute for all persons,","lastModifiedDate":"2022-10-22"},{"lineNumber":369,"author":{"gitId":"tanhl2000"},"content":"  similar to name, address, etc, which are also compulsory fields for persons in the addressbook.","lastModifiedDate":"2022-10-22"},{"lineNumber":370,"author":{"gitId":"tanhl2000"},"content":"    * Cons: It is less flexible in cases where the user is missing the date of birth field for a contact,","lastModifiedDate":"2022-10-22"},{"lineNumber":371,"author":{"gitId":"tanhl2000"},"content":"    but wants to add the contact anyways, as the user is not able to leave the date of birth field blank.","lastModifiedDate":"2022-10-22"},{"lineNumber":372,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":373,"author":{"gitId":"tanhl2000"},"content":"* **Alternative 2:** Optional date of birth field:","lastModifiedDate":"2022-10-22"},{"lineNumber":374,"author":{"gitId":"tanhl2000"},"content":"    * Pros: It is a more flexible implementation, since the user has the choice to set a date of birth,","lastModifiedDate":"2022-10-22"},{"lineNumber":375,"author":{"gitId":"tanhl2000"},"content":"    or leave it empty.","lastModifiedDate":"2022-10-22"},{"lineNumber":376,"author":{"gitId":"tanhl2000"},"content":"    * Cons: It is less logical since date of birth is a common attribute for all persons in the addressbook.","lastModifiedDate":"2022-10-22"},{"lineNumber":377,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":378,"author":{"gitId":"tanhl2000"},"content":"### Edit Date of Birth","lastModifiedDate":"2022-10-22"},{"lineNumber":379,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":380,"author":{"gitId":"tanhl2000"},"content":"The Edit Date of Birth feature allows users to edit a date of birth field (format: dd/mm/yyyy) of a person in the addressbook.","lastModifiedDate":"2022-10-22"},{"lineNumber":381,"author":{"gitId":"tanhl2000"},"content":"It is performed as a part of `editPersonCommand#execute()`.","lastModifiedDate":"2022-10-22"},{"lineNumber":382,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":383,"author":{"gitId":"tanhl2000"},"content":"These operations are exposed in the `Model` interface as the method `Model#setPerson()`, which calls","lastModifiedDate":"2022-10-22"},{"lineNumber":384,"author":{"gitId":"tanhl2000"},"content":"`AddressBook#setPerson()` which calls `UniquePersonList#setPerson()` to replace an existing person with a new person","lastModifiedDate":"2022-10-22"},{"lineNumber":385,"author":{"gitId":"tanhl2000"},"content":"object with edited fields in the person list stored in AddressBook.","lastModifiedDate":"2022-10-22"},{"lineNumber":386,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":387,"author":{"gitId":"tanhl2000"},"content":"The following sequence diagram shows the methods calls related to edit person operation:","lastModifiedDate":"2022-10-22"},{"lineNumber":388,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":389,"author":{"gitId":"tanhl2000"},"content":"![EditPersonSequenceDiagram](images/EditPersonSequenceDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":390,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":391,"author":{"gitId":"tanhl2000"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** `cmd` in the diagram represents the edit","lastModifiedDate":"2022-10-22"},{"lineNumber":392,"author":{"gitId":"tanhl2000"},"content":"person command text entered by user; the `setPerson(P1, P2)` method replaces person P1 with person P2 in the person list","lastModifiedDate":"2022-10-22"},{"lineNumber":393,"author":{"gitId":"tanhl2000"},"content":"in the model. The specific `UniquePersonList` operations are not shown in the diagram for simplicity.","lastModifiedDate":"2022-10-22"},{"lineNumber":394,"author":{"gitId":"tanhl2000"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":395,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":396,"author":{"gitId":"tanhl2000"},"content":"The following activity diagram shows what happens when a user executes a new edit command:","lastModifiedDate":"2022-10-22"},{"lineNumber":397,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":398,"author":{"gitId":"tanhl2000"},"content":"![EditPersonActivityDiagram](images/EditPersonActivityDiagram_DOB.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":399,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":400,"author":{"gitId":"tanhl2000"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Only the","lastModifiedDate":"2022-10-22"},{"lineNumber":401,"author":{"gitId":"tanhl2000"},"content":"activities related to date of birth field are considered and shown in this activity diagram. The edit person command only requires at least one of the optional fields to be given, all of the fields are optional, therefore, it is not compulsory that a date of birth field must be provided.","lastModifiedDate":"2022-10-22"},{"lineNumber":402,"author":{"gitId":"tanhl2000"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":403,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":404,"author":{"gitId":"tanhl2000"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**Parser exceptions are thrown and caught if","lastModifiedDate":"2022-10-22"},{"lineNumber":405,"author":{"gitId":"tanhl2000"},"content":"the date of birth is not of valid format; Invalid person exception is thrown if the person to edit doesn\u0027t exist in the","lastModifiedDate":"2022-10-22"},{"lineNumber":406,"author":{"gitId":"tanhl2000"},"content":"addressbook. Error message is displayed on the GUI subsequently.","lastModifiedDate":"2022-10-22"},{"lineNumber":407,"author":{"gitId":"tanhl2000"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":408,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":409,"author":{"gitId":"Qiaoran-M"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2022-10-20"},{"lineNumber":410,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"lfrostbytee"},"content":"### Listing Events","lastModifiedDate":"2022-10-20"},{"lineNumber":494,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":495,"author":{"gitId":"lfrostbytee"},"content":"The List Events feature allows users to enter `listEvents` and update the UI display for events, showing a list of all","lastModifiedDate":"2022-10-20"},{"lineNumber":496,"author":{"gitId":"lfrostbytee"},"content":"events sorted in their current order inside `ModelManager`. In the future, the command will take in a parameter,","lastModifiedDate":"2022-10-20"},{"lineNumber":497,"author":{"gitId":"lfrostbytee"},"content":"which specifies the field that the events list can be permanently sorted by.","lastModifiedDate":"2022-10-20"},{"lineNumber":498,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":499,"author":{"gitId":"lfrostbytee"},"content":"The List Events feature is facilitated by `ListEventsCommand` which extends from `Command`. Additionally, it implements","lastModifiedDate":"2022-10-21"},{"lineNumber":500,"author":{"gitId":"lfrostbytee"},"content":"the following operation:","lastModifiedDate":"2022-10-20"},{"lineNumber":501,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":502,"author":{"gitId":"lfrostbytee"},"content":"* `ModelManager#updateFilteredEventList()`  — Updates the predicate inside `ModelManager`\u0027s filtered event list","lastModifiedDate":"2022-10-21"},{"lineNumber":503,"author":{"gitId":"lfrostbytee"},"content":"to modify and sort which and how events are shown.","lastModifiedDate":"2022-10-20"},{"lineNumber":504,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":505,"author":{"gitId":"lfrostbytee"},"content":"This operation is exposed in the `Model` interface as the method `Model#updateFilteredEventList()`.","lastModifiedDate":"2022-10-21"},{"lineNumber":506,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":507,"author":{"gitId":"lfrostbytee"},"content":"The following sequence diagram shows how the `listEvents` operation works.","lastModifiedDate":"2022-10-21"},{"lineNumber":508,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":509,"author":{"gitId":"lfrostbytee"},"content":"![ListEventsSequenceDiagram](images/ListEventsSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":510,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":511,"author":{"gitId":"lfrostbytee"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Only the activities related to events are","lastModifiedDate":"2022-10-20"},{"lineNumber":512,"author":{"gitId":"lfrostbytee"},"content":"considered and shown in this activity diagram.","lastModifiedDate":"2022-10-20"},{"lineNumber":513,"author":{"gitId":"lfrostbytee"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":514,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":515,"author":{"gitId":"lfrostbytee"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `ListEventsCommand` should","lastModifiedDate":"2022-10-21"},{"lineNumber":516,"author":{"gitId":"lfrostbytee"},"content":"end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of the diagram.","lastModifiedDate":"2022-10-20"},{"lineNumber":517,"author":{"gitId":"lfrostbytee"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":518,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":519,"author":{"gitId":"lfrostbytee"},"content":"#### Design Considerations:","lastModifiedDate":"2022-10-21"},{"lineNumber":520,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":521,"author":{"gitId":"lfrostbytee"},"content":"**Aspect: If `listEvents` should sort events permanently:**","lastModifiedDate":"2022-10-21"},{"lineNumber":522,"author":{"gitId":"lfrostbytee"},"content":"* **Alternative 1 (current choice):** Sort all events permanently.","lastModifiedDate":"2022-10-20"},{"lineNumber":523,"author":{"gitId":"lfrostbytee"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2022-10-20"},{"lineNumber":524,"author":{"gitId":"lfrostbytee"},"content":"  * Cons: Whenever events are added, they are always added as the last event in the event list. Once sorted, the order","lastModifiedDate":"2022-10-20"},{"lineNumber":525,"author":{"gitId":"lfrostbytee"},"content":"  cannot be returned to the order which events were added.","lastModifiedDate":"2022-10-20"},{"lineNumber":526,"author":{"gitId":"lfrostbytee"},"content":"* **Alternative 2:** Sort all events temporarily.","lastModifiedDate":"2022-10-20"},{"lineNumber":527,"author":{"gitId":"lfrostbytee"},"content":"  * Pros: When users sort their events, the ordering of the events in `ModelManager` stays constant.","lastModifiedDate":"2022-10-21"},{"lineNumber":528,"author":{"gitId":"lfrostbytee"},"content":"  * Cons: Hard to implement as a new form of storage or memory has to be created to maintain the relative ordering of","lastModifiedDate":"2022-10-20"},{"lineNumber":529,"author":{"gitId":"lfrostbytee"},"content":"    events.","lastModifiedDate":"2022-10-21"},{"lineNumber":530,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":531,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":532,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":533,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":538,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":539,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":540,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":541,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"lfrostbytee"},"content":"**Target user profile**: Duke The Market aims to help marketers of department stores better manage customer profiles and keep track of target customers during market plan rollouts.","lastModifiedDate":"2022-09-29"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"lfrostbytee"},"content":"* needs to manage a significant number of customer contacts","lastModifiedDate":"2022-09-29"},{"lineNumber":552,"author":{"gitId":"lfrostbytee"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2022-09-29"},{"lineNumber":553,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":555,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"lfrostbytee"},"content":"* needs to oversee many marketing events","lastModifiedDate":"2022-09-29"},{"lineNumber":557,"author":{"gitId":"lfrostbytee"},"content":"* needs to track customer activity in own department store","lastModifiedDate":"2022-09-29"},{"lineNumber":558,"author":{"gitId":"lfrostbytee"},"content":"* needs to generate statistics based of customer data","lastModifiedDate":"2022-09-29"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"lfrostbytee"},"content":"**Value proposition**: A one-stop marketing tool that allows department stores to manage and organize their customer contacts for usage in the company’s various marketing plans","lastModifiedDate":"2022-09-29"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"| Priority | As a …​                                              | I want to …​                                                                                                  | So that I can…​                                                                              |","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"lfrostbytee"},"content":"|----------|------------------------------------------------------|---------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-29"},{"lineNumber":569,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                             | see usage instructions                                                                                        | refer to instructions when I forget how to use the App                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"lfrostbytee"},"content":"| `* * *`  | frequent user                                        | update new data immediately                                                                                   | I can exit and enter the product freely                                                      |","lastModifiedDate":"2022-09-29"},{"lineNumber":571,"author":{"gitId":"lfrostbytee"},"content":"| `* * *`  | frequent user                                        | enter and exit the product in a short amount of time                                                          | use the product on the fly                                                                   |","lastModifiedDate":"2022-09-29"},{"lineNumber":572,"author":{"gitId":"lfrostbytee"},"content":"| `* * *`  | marketer                                             | add a new customer contact                                                                                    | keep track of all customers and enlarge the customer base over time                          |","lastModifiedDate":"2022-09-29"},{"lineNumber":573,"author":{"gitId":"lfrostbytee"},"content":"| `* * *`  | marketer                                             | delete a customer contact                                                                                     | remove entries that I no longer need                                                         |","lastModifiedDate":"2022-09-29"},{"lineNumber":574,"author":{"gitId":"lfrostbytee"},"content":"| `* * *`  | marketer                                             | find a customer contact by name                                                                               | locate details of customers without having to go through the entire list                     |","lastModifiedDate":"2022-09-29"},{"lineNumber":575,"author":{"gitId":"lfrostbytee"},"content":"| `* * *`  | pre-event marketer                                   | view all the upcoming marketing events in the system sorted in the order that they were added into the system | have a high level overview of all marketing events and be mentally prepared for each of them |","lastModifiedDate":"2022-09-29"},{"lineNumber":576,"author":{"gitId":"lfrostbytee"},"content":"| `* * *`  | pre-event marketer who handles many marketing events | add marketing events                                                                                          | keep the system up to date with changes that happen to the marketing plans                   |","lastModifiedDate":"2022-09-29"},{"lineNumber":577,"author":{"gitId":"lfrostbytee"},"content":"| `* * *`  | pre-event marketer who handles many marketing events | delete marketing events                                                                                       | remove marketing events that I no longer need                                                |","lastModifiedDate":"2022-09-29"},{"lineNumber":578,"author":{"gitId":"lfrostbytee"},"content":"| `* *`    | marketer with many customer contacts                 | sort all customer contacts by name, date of birth or gender                                                    | locate people more easily and obtain contact lists of different demographic groups           |","lastModifiedDate":"2022-09-30"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"lfrostbytee"},"content":"(For all use cases below, **UC** is the `Use Case`, the **System** is `Duke The Market` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-29"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"lfrostbytee"},"content":"**UC01: Delete a customer**","lastModifiedDate":"2022-09-29"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"lfrostbytee"},"content":"1. User requests to list customers","lastModifiedDate":"2022-09-29"},{"lineNumber":591,"author":{"gitId":"lfrostbytee"},"content":"2. Duke The Market shows a list of customers","lastModifiedDate":"2022-09-29"},{"lineNumber":592,"author":{"gitId":"lfrostbytee"},"content":"3. User requests to delete a specific customer in the list","lastModifiedDate":"2022-09-29"},{"lineNumber":593,"author":{"gitId":"lfrostbytee"},"content":"4. Duke The Market deletes the customer","lastModifiedDate":"2022-09-29"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"* 2a.  The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"* 3a.  The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"lfrostbytee"},"content":"    * 3a1. Duke The Market shows an error message","lastModifiedDate":"2022-09-29"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":610,"author":{"gitId":"lfrostbytee"},"content":"**UC02: Add a customer**","lastModifiedDate":"2022-09-29"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":612,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":614,"author":{"gitId":"lfrostbytee"},"content":"1.  User requests to add a customer of specific name, phone number, email, address, gender and date of birth","lastModifiedDate":"2022-09-29"},{"lineNumber":615,"author":{"gitId":"lfrostbytee"},"content":"2.  Duke The Market adds the customer","lastModifiedDate":"2022-09-29"},{"lineNumber":616,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":617,"author":{"gitId":"lfrostbytee"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":618,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":619,"author":{"gitId":"lfrostbytee"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":620,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":621,"author":{"gitId":"lfrostbytee"},"content":"* 1a. User enters data in an invalid format.","lastModifiedDate":"2022-09-29"},{"lineNumber":622,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":623,"author":{"gitId":"lfrostbytee"},"content":"    * 1a1. Duke The Market requests for the correct data","lastModifiedDate":"2022-09-29"},{"lineNumber":624,"author":{"gitId":"lfrostbytee"},"content":"    * 1a2. User enters new data","lastModifiedDate":"2022-09-29"},{"lineNumber":625,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":626,"author":{"gitId":"lfrostbytee"},"content":"  Steps 1a1-1a2 are repeated until the data entered is correct","lastModifiedDate":"2022-09-29"},{"lineNumber":627,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":628,"author":{"gitId":"lfrostbytee"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":629,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":630,"author":{"gitId":"lfrostbytee"},"content":"* 1b. User enters data for an individual who already exists in the database.","lastModifiedDate":"2022-09-29"},{"lineNumber":631,"author":{"gitId":"lfrostbytee"},"content":"    * 1b1. Duke The Market shows an error message that the user is a duplicate customer","lastModifiedDate":"2022-09-29"},{"lineNumber":632,"author":{"gitId":"lfrostbytee"},"content":"    * 1b2. User enters new data","lastModifiedDate":"2022-09-29"},{"lineNumber":633,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":634,"author":{"gitId":"lfrostbytee"},"content":"  Steps 1b1-1b2 are repeated until the data entered is correct.","lastModifiedDate":"2022-09-29"},{"lineNumber":635,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":636,"author":{"gitId":"lfrostbytee"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":637,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":638,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":639,"author":{"gitId":"lfrostbytee"},"content":"**UC03: View the overall performance of a past event**","lastModifiedDate":"2022-09-29"},{"lineNumber":640,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":641,"author":{"gitId":"lfrostbytee"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":642,"author":{"gitId":"lfrostbytee"},"content":"1.  User requests to list events","lastModifiedDate":"2022-09-29"},{"lineNumber":643,"author":{"gitId":"lfrostbytee"},"content":"2.  Duke The Market shows a list of events","lastModifiedDate":"2022-09-29"},{"lineNumber":644,"author":{"gitId":"lfrostbytee"},"content":"3.  User requests to generate statistics about an ongoing/past event in the list","lastModifiedDate":"2022-09-29"},{"lineNumber":645,"author":{"gitId":"lfrostbytee"},"content":"4.  Duke The Market shows the visual representation of the statistics about that event","lastModifiedDate":"2022-09-29"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":647,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":649,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":651,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-29"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":653,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":655,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":656,"author":{"gitId":"lfrostbytee"},"content":"    * 3a1. Duke The Market shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":657,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":658,"author":{"gitId":"lfrostbytee"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-09-29"},{"lineNumber":659,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":660,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":661,"author":{"gitId":"lfrostbytee"},"content":"**UC04: Export email addresses of customers to a file**","lastModifiedDate":"2022-09-29"},{"lineNumber":662,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":663,"author":{"gitId":"lfrostbytee"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":664,"author":{"gitId":"lfrostbytee"},"content":"1.  User requests to export to a specified file the email address of customers who attended a specific event.","lastModifiedDate":"2022-09-29"},{"lineNumber":665,"author":{"gitId":"lfrostbytee"},"content":"2.  Duke The Market exports the customers’ email addresses to the specified file","lastModifiedDate":"2022-09-29"},{"lineNumber":666,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":667,"author":{"gitId":"lfrostbytee"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":668,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":669,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":670,"author":{"gitId":"lfrostbytee"},"content":"**UC05: Retrieve customers who may be interested in an upcoming event**","lastModifiedDate":"2022-09-29"},{"lineNumber":671,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":672,"author":{"gitId":"lfrostbytee"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":673,"author":{"gitId":"lfrostbytee"},"content":"1. User requests to list events","lastModifiedDate":"2022-09-29"},{"lineNumber":674,"author":{"gitId":"lfrostbytee"},"content":"2. Duke The Market shows a list of events","lastModifiedDate":"2022-09-29"},{"lineNumber":675,"author":{"gitId":"lfrostbytee"},"content":"3. User requests to show customers who may be interested in an upcoming event in the list","lastModifiedDate":"2022-09-29"},{"lineNumber":676,"author":{"gitId":"lfrostbytee"},"content":"4. Duke The Market shows the customers who may be interested in that upcoming event","lastModifiedDate":"2022-09-29"},{"lineNumber":677,"author":{"gitId":"lfrostbytee"},"content":"5. User requests to \u003cins\u003eexport the customers\u0027 email addresses to a specified file (UC04)\u003c/ins\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":678,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":679,"author":{"gitId":"lfrostbytee"},"content":"   Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":680,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":684,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"lfrostbytee"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2022-09-29"},{"lineNumber":689,"author":{"gitId":"lfrostbytee"},"content":"2. App should not require installation to work (i.e. it is portable)","lastModifiedDate":"2022-09-30"},{"lineNumber":690,"author":{"gitId":"lfrostbytee"},"content":"3. App should work well for standard screen resolutions 1920x1080 and higher, as well as for screen scales 100% and 125%.","lastModifiedDate":"2022-09-29"},{"lineNumber":691,"author":{"gitId":"lfrostbytee"},"content":"4. App should be usable (i.e. all functions can be used even if the user experience is not optimal) for resolutions 1280x720 and higher, as well as for screen scales 150%.","lastModifiedDate":"2022-09-30"},{"lineNumber":692,"author":{"gitId":"lfrostbytee"},"content":"5. Should be able to hold up to 1000 customers and 200 events without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-29"},{"lineNumber":693,"author":{"gitId":"lfrostbytee"},"content":"6. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-09-29"},{"lineNumber":694,"author":{"gitId":"lfrostbytee"},"content":"7. The system should respond within 5 seconds.","lastModifiedDate":"2022-09-29"},{"lineNumber":695,"author":{"gitId":"lfrostbytee"},"content":"8. Data should be stored locally in a human editable text file.","lastModifiedDate":"2022-09-29"},{"lineNumber":696,"author":{"gitId":"lfrostbytee"},"content":"9. Data should not be stored using an external database management system (DBMS)","lastModifiedDate":"2022-09-29"},{"lineNumber":697,"author":{"gitId":"lfrostbytee"},"content":"10. File size of the data should not exceed 1GB (should be stored in a space saving manner)","lastModifiedDate":"2022-09-29"},{"lineNumber":698,"author":{"gitId":"lfrostbytee"},"content":"11. App should be an executable (Double-clicked or can be run using the `java -jar` command).","lastModifiedDate":"2022-09-29"},{"lineNumber":699,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"lfrostbytee"},"content":"* **Interested customers**: Customers who have attended similar events in the past.","lastModifiedDate":"2022-09-29"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Benjamin-Sim":42,"Vinodjayakumar124":56,"tanhl2000":75,"lfrostbytee":140,"Qiaoran-M":76,"-":370}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Vinodjayakumar124"},"content":"**Duke The Market** is a one-stop marketing tool that allows department stores to keep track of their upcoming","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"Vinodjayakumar124"},"content":"marketing plan roll-outs, monitor its impact, and to target the appropriate subsegment of its customer base for each of those plans.","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"Vinodjayakumar124"},"content":"Also, it is optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"Vinodjayakumar124"},"content":"Interface (GUI). If you can type fast, Duke The Market can help you organise your marketing events and reach out to your target customer base much faster than a traditional GUI app.","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Vinodjayakumar124"},"content":"2. Download the latest `dukethemarket.jar` from [here](https://github.com/AY2223S1-CS2103-F09-2/tp/releases).","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Vinodjayakumar124"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your application.","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Vinodjayakumar124"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Vinodjayakumar124"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Vinodjayakumar124"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the application.","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"   * **`deletePerson`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Vinodjayakumar124"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Vinodjayakumar124"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"Vinodjayakumar124"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"lfrostbytee"},"content":"### Instantaneous launching","lastModifiedDate":"2022-09-23"},{"lineNumber":71,"author":{"gitId":"lfrostbytee"},"content":"Users that have Java 11 or above installed in their computers can launch the Duke The Market program","lastModifiedDate":"2022-09-23"},{"lineNumber":72,"author":{"gitId":"Vinodjayakumar124"},"content":"by double-clicking on the file.","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":74,"author":{"gitId":"lfrostbytee"},"content":"### Saving the data","lastModifiedDate":"2022-09-23"},{"lineNumber":75,"author":{"gitId":"lfrostbytee"},"content":"Duke The Market data are saved in the hard disk automatically after any command that changes the data.","lastModifiedDate":"2022-09-23"},{"lineNumber":76,"author":{"gitId":"lfrostbytee"},"content":"There is no need to save manually.","lastModifiedDate":"2022-09-23"},{"lineNumber":77,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"Vinodjayakumar124"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"Qiaoran-M"},"content":"### Adding a contact: `add`","lastModifiedDate":"2022-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"Vinodjayakumar124"},"content":"Adds a contact to the application.","lastModifiedDate":"2022-10-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"tanhl2000"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [g/GENDER] d/DOB [t/TAG]`","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"tanhl2000"},"content":"- The compulsory parameters are: name (`n`), phone number (`p`), email (`e`), address (`a`), date of birth(`d`).","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"tanhl2000"},"content":"- The parameters in [ ] are optional parameters, including gender (`g`), purchase history (`ph`), tag (`t`).","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"Qiaoran-M"},"content":"- A person in the contact list can have more than 1 tag.","lastModifiedDate":"2022-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"Qiaoran-M"},"content":"Examples:","lastModifiedDate":"2022-09-22"},{"lineNumber":97,"author":{"gitId":"tanhl2000"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 g/m d/20/03/2002`","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"tanhl2000"},"content":"* `add n/Betsy Crowe e/betsycrowe@example.com a/Newgate Prison p/1234567 t/friend t/criminal g/f d/14/12/1998`","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":100,"author":{"gitId":"Qiaoran-M"},"content":"__Optional Parameter 1: Gender__","lastModifiedDate":"2022-09-22"},{"lineNumber":101,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":102,"author":{"gitId":"Qiaoran-M"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [g/GENDER]`","lastModifiedDate":"2022-09-22"},{"lineNumber":103,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":104,"author":{"gitId":"Qiaoran-M"},"content":"- Adds gender to a person in the contact list. The genders accepted by the contact list are: `M`/`m` for male,  `F`/`f` for female.","lastModifiedDate":"2022-09-23"},{"lineNumber":105,"author":{"gitId":"Qiaoran-M"},"content":"- NAME can contain more than 1 word.","lastModifiedDate":"2022-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"Qiaoran-M"},"content":"* `add n/John Wang p/98765432 e/johnwang@example.com a/John street, block 123, #01-01 g/M`","lastModifiedDate":"2022-09-22"},{"lineNumber":109,"author":{"gitId":"Qiaoran-M"},"content":"* `add n/John p/92781123 e/john@example.com a/Donald street, block 248, #02-04 g/m`","lastModifiedDate":"2022-09-22"},{"lineNumber":110,"author":{"gitId":"Qiaoran-M"},"content":"* `add n/Charlotte p/81286623 e/charlotte@example.com a/Charity street, block 101, #10-82  g/F`","lastModifiedDate":"2022-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"tanhl2000"},"content":"__Additional Parameter 2: Date of Birth__","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"tanhl2000"},"content":"- Adds date of birth to a person in the contact list. Date format accepted is: dd/mm/yyyy.","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"Vinodjayakumar124"},"content":"Shows a list of all persons in the application.","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"Benjamin-Sim"},"content":"Format: `list [s/FIELD]`","lastModifiedDate":"2022-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":122,"author":{"gitId":"Benjamin-Sim"},"content":"* Sorts the contacts by the specified field in **ascending** order. `FIELD` must take one the following values:","lastModifiedDate":"2022-09-22"},{"lineNumber":123,"author":{"gitId":"Benjamin-Sim"},"content":"  * `n` or `N` sort by name ignoring case differences","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"Benjamin-Sim"},"content":"  * `d` or `D` Sort by date of birth","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"Benjamin-Sim"},"content":"  * `g` or `G` Sort by gender","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":127,"author":{"gitId":"Benjamin-Sim"},"content":"* It is optional to specify the field to sort by. If no field is specified, no sorting is performed.","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"Benjamin-Sim"},"content":"* At most one field can be specified. i.e. Cannot specify 2nd or 3rd criteria to sort by.","lastModifiedDate":"2022-09-22"},{"lineNumber":129,"author":{"gitId":"Benjamin-Sim"},"content":"* Persons with an empty field that is being used to sort will be placed at the top of the list.","lastModifiedDate":"2022-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"Benjamin-Sim"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"Benjamin-Sim"},"content":":information_source: **Note:** The sorted result is persistent on the underlying contacts list.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"Benjamin-Sim"},"content":"For example, if `list s/n` and `list` are executed back-to-back, the result of the second `list` command will still display the sorted results from the first `list s/n` command since the sorted result is persistent.","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"Benjamin-Sim"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-22"},{"lineNumber":139,"author":{"gitId":"Vinodjayakumar124"},"content":"* `list` Lists all persons in the order they were inserted.","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"Benjamin-Sim"},"content":"* `list s/n` Lists all persons sorted by their names.","lastModifiedDate":"2022-09-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"Qiaoran-M"},"content":"### Editing a contact : `edit`","lastModifiedDate":"2022-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"Vinodjayakumar124"},"content":"Edits an existing contact in the application.","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"Vinodjayakumar124"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [g/GENDER] [d/DOB] [t/TAG]`","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"Qiaoran-M"},"content":"- Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-09-22"},{"lineNumber":150,"author":{"gitId":"Qiaoran-M"},"content":"  The index must be **a positive integer** 1, 2, 3, …​, and it must be within the range of the contact list index.","lastModifiedDate":"2022-09-22"},{"lineNumber":151,"author":{"gitId":"Qiaoran-M"},"content":"- At least one of the optional fields must be provided.","lastModifiedDate":"2022-09-22"},{"lineNumber":152,"author":{"gitId":"Qiaoran-M"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2022-09-22"},{"lineNumber":153,"author":{"gitId":"Vinodjayakumar124"},"content":"- When editing tags, the existing tags of the person will be removed (i.e. adding of tags is not cumulative).","lastModifiedDate":"2022-10-02"},{"lineNumber":154,"author":{"gitId":"Qiaoran-M"},"content":"- You can remove all the person’s tags by typing t/ without specifying any tags after it.","lastModifiedDate":"2022-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"Qiaoran-M"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be","lastModifiedDate":"2022-09-22"},{"lineNumber":158,"author":{"gitId":"Qiaoran-M"},"content":"   `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"tanhl2000"},"content":"*  `edit 3 n/Charlotte g/F d/3/4/1998` Edits the 3rd person’s contact: edits name to be `Charlotte`,","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"Vinodjayakumar124"},"content":"edits gender to be `Female` and edits date of birth to be `3.4.1998`.","lastModifiedDate":"2022-10-02"},{"lineNumber":162,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":163,"author":{"gitId":"Qiaoran-M"},"content":"__Optional Parameter 1: Gender__","lastModifiedDate":"2022-09-22"},{"lineNumber":164,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":165,"author":{"gitId":"Qiaoran-M"},"content":"Format: `edit INDEX [g/GENDER]`","lastModifiedDate":"2022-09-22"},{"lineNumber":166,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":167,"author":{"gitId":"Qiaoran-M"},"content":"- Edits the gender of a person in the contact list. The genders accepted by the contact list are: `M`/`m` for male,","lastModifiedDate":"2022-10-14"},{"lineNumber":168,"author":{"gitId":"Qiaoran-M"},"content":"`F`/`f` for female, and `NA` for empty gender (if user wants to hide gender).","lastModifiedDate":"2022-10-14"},{"lineNumber":169,"author":{"gitId":"Qiaoran-M"},"content":"- `INDEX` must be **a positive integer** (i.e 1,2,3…)","lastModifiedDate":"2022-09-23"},{"lineNumber":170,"author":{"gitId":"Vinodjayakumar124"},"content":"- `INDEX` must be within the range of the contact list index (i.e. from 1 to size of contact list).","lastModifiedDate":"2022-10-02"},{"lineNumber":171,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":172,"author":{"gitId":"Qiaoran-M"},"content":"Examples:","lastModifiedDate":"2022-09-22"},{"lineNumber":173,"author":{"gitId":"Qiaoran-M"},"content":"* `edit 1 g/M`","lastModifiedDate":"2022-09-22"},{"lineNumber":174,"author":{"gitId":"Qiaoran-M"},"content":"* `edit 2 g/f`","lastModifiedDate":"2022-09-22"},{"lineNumber":175,"author":{"gitId":"Qiaoran-M"},"content":"* `edit 3 g/NA`","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"tanhl2000"},"content":"__Optional Parameter 2: Date of Birth__","lastModifiedDate":"2022-09-29"},{"lineNumber":178,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":179,"author":{"gitId":"tanhl2000"},"content":"Format: `edit INDEX [d/DOB]`","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":181,"author":{"gitId":"tanhl2000"},"content":"- Edits the date of birth of a person in the contact list. Date format accepted is: dd/mm/yyyy.","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"tanhl2000"},"content":"- `INDEX` must be **a positive integer** (i.e 1,2,3…)","lastModifiedDate":"2022-09-30"},{"lineNumber":183,"author":{"gitId":"Vinodjayakumar124"},"content":"- `INDEX` must be within the range of the contact list index (i.e. from 1 to size of contact list).","lastModifiedDate":"2022-10-02"},{"lineNumber":184,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":185,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":186,"author":{"gitId":"tanhl2000"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":187,"author":{"gitId":"tanhl2000"},"content":"* `edit 1 d/20/03/2000`","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"tanhl2000"},"content":"* `edit 2 d/5/4/2000`","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"tanhl2000"},"content":"* `edit 3 d/23/09/2000`","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"Vinodjayakumar124"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2022-10-02"},{"lineNumber":198,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"Qiaoran-M"},"content":"### Deleting a person : `deletePerson`","lastModifiedDate":"2022-10-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"Vinodjayakumar124"},"content":"Deletes the specified person from the application.","lastModifiedDate":"2022-10-02"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"Qiaoran-M"},"content":"Format: `deletePerson INDEX`","lastModifiedDate":"2022-10-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"Qiaoran-M"},"content":"* The index must be **a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"Qiaoran-M"},"content":"* `list` followed by `deletePerson 2` deletes the 2nd person in the application.","lastModifiedDate":"2022-10-18"},{"lineNumber":221,"author":{"gitId":"Qiaoran-M"},"content":"* `find Betsy` followed by `deletePerson 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2022-10-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"Vinodjayakumar124"},"content":"### Add an event: `addEvent`","lastModifiedDate":"2022-10-02"},{"lineNumber":224,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":225,"author":{"gitId":"Vinodjayakumar124"},"content":"Adds a new event in the application.","lastModifiedDate":"2022-10-02"},{"lineNumber":226,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":227,"author":{"gitId":"Vinodjayakumar124"},"content":"Format: `addEvent n/EVENT_TITLE d/DATE t/TIME p/PURPOSE`","lastModifiedDate":"2022-10-02"},{"lineNumber":228,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":229,"author":{"gitId":"Vinodjayakumar124"},"content":"* The compulsory parameters are: event name (`n`), date (`d`), time (`t`) and purpose (`p`)","lastModifiedDate":"2022-10-02"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":232,"author":{"gitId":"Vinodjayakumar124"},"content":"* `addEvent n/Shoe Sale 30% d/30-05-2022 t/11:00 p/Discount on all shoes for up to 30%`","lastModifiedDate":"2022-10-02"},{"lineNumber":233,"author":{"gitId":"Vinodjayakumar124"},"content":"* `addEvent n/Banana Discount 10% d/20-04-2022 t/14:00 p/10% discount on all bananas`","lastModifiedDate":"2022-10-02"},{"lineNumber":234,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":235,"author":{"gitId":"Vinodjayakumar124"},"content":"### Deleting an event: `deleteEvent`","lastModifiedDate":"2022-10-02"},{"lineNumber":236,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":237,"author":{"gitId":"Vinodjayakumar124"},"content":"Deletes an existing event in the application.","lastModifiedDate":"2022-10-02"},{"lineNumber":238,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":239,"author":{"gitId":"Vinodjayakumar124"},"content":"Format: `deleteEvent INDEX`","lastModifiedDate":"2022-10-02"},{"lineNumber":240,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":241,"author":{"gitId":"Vinodjayakumar124"},"content":"* Removes the event at the specified `INDEX`.","lastModifiedDate":"2022-09-29"},{"lineNumber":242,"author":{"gitId":"Vinodjayakumar124"},"content":"* The index refers to the index number shown in the displayed event list","lastModifiedDate":"2022-09-29"},{"lineNumber":243,"author":{"gitId":"Vinodjayakumar124"},"content":"* The index must be a positive integer 1, 2, 3, …, and it must be within the range of the event list index.","lastModifiedDate":"2022-09-28"},{"lineNumber":244,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":245,"author":{"gitId":"Vinodjayakumar124"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":246,"author":{"gitId":"Vinodjayakumar124"},"content":"* `deleteEvent 2` after listing all events with `listEvents` deletes the event at index 2","lastModifiedDate":"2022-10-02"},{"lineNumber":247,"author":{"gitId":"Vinodjayakumar124"},"content":"* `deleteEvent 7` after listing all events with `listEvents` deletes the event at index 7","lastModifiedDate":"2022-10-02"},{"lineNumber":248,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":249,"author":{"gitId":"Vinodjayakumar124"},"content":"### Display all events: `listEvents`","lastModifiedDate":"2022-10-02"},{"lineNumber":250,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":251,"author":{"gitId":"Vinodjayakumar124"},"content":"Shows a list of all existing events in the application.","lastModifiedDate":"2022-10-02"},{"lineNumber":252,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":253,"author":{"gitId":"Vinodjayakumar124"},"content":"Format: `listEvents`","lastModifiedDate":"2022-10-02"},{"lineNumber":254,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":255,"author":{"gitId":"Vinodjayakumar124"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":256,"author":{"gitId":"Vinodjayakumar124"},"content":"* `listEvents`","lastModifiedDate":"2022-10-02"},{"lineNumber":257,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":258,"author":{"gitId":"Qiaoran-M"},"content":"### Tag persons to an event : `tagEvent`","lastModifiedDate":"2022-10-19"},{"lineNumber":259,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":260,"author":{"gitId":"Qiaoran-M"},"content":"Format: `tagEvent EVENT_INDEX p/PERSON_INDEX [MORE_PERSON_INDEXES] ...`","lastModifiedDate":"2022-10-25"},{"lineNumber":261,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":262,"author":{"gitId":"Qiaoran-M"},"content":"* The `EVENT_INDEX` refers to the index number shown in the displayed event list.","lastModifiedDate":"2022-10-19"},{"lineNumber":263,"author":{"gitId":"Qiaoran-M"},"content":"* The `EVENT_INDEX` must be a positive integer 1, 2, 3, …, and it must be within the range of the event list index.","lastModifiedDate":"2022-10-19"},{"lineNumber":264,"author":{"gitId":"Qiaoran-M"},"content":"* The `PERSON_INDEX` refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-10-19"},{"lineNumber":265,"author":{"gitId":"Qiaoran-M"},"content":"* The `PERSON_INDEX` must be a positive integer 1, 2, 3, …, and it must be within the range of the person list index.","lastModifiedDate":"2022-10-19"},{"lineNumber":266,"author":{"gitId":"Qiaoran-M"},"content":"* The `PERSON_INDEX` must refer to a person that is not currently tagged to the event.","lastModifiedDate":"2022-10-19"},{"lineNumber":267,"author":{"gitId":"Qiaoran-M"},"content":"* Multiple `PERSON_INDEX` should be separated by white space. At least one `PERSON_INDEX` must be provided.","lastModifiedDate":"2022-10-19"},{"lineNumber":268,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":269,"author":{"gitId":"Qiaoran-M"},"content":"Example:","lastModifiedDate":"2022-10-19"},{"lineNumber":270,"author":{"gitId":"Qiaoran-M"},"content":"* `tagEvent 1 p/2` tags the 2nd person in the contact list to the 1st event in the event list","lastModifiedDate":"2022-10-25"},{"lineNumber":271,"author":{"gitId":"Qiaoran-M"},"content":"* `tagEvent 2 p/2 4 5` tags the 2nd, 4th, 5th person to in the contact list the 2nd event in the event list","lastModifiedDate":"2022-10-25"},{"lineNumber":272,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":273,"author":{"gitId":"Qiaoran-M"},"content":"### Untag persons from an event : `untagEvent`","lastModifiedDate":"2022-10-19"},{"lineNumber":274,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":275,"author":{"gitId":"Qiaoran-M"},"content":"Format: `untagEvent EVENT_INDEX p/PERSON_INDEX [MORE_PERSON_INDEXES] ...`","lastModifiedDate":"2022-10-25"},{"lineNumber":276,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":277,"author":{"gitId":"Qiaoran-M"},"content":"* The `EVENT_INDEX` refers to the index number shown in the displayed event list.","lastModifiedDate":"2022-10-19"},{"lineNumber":278,"author":{"gitId":"Qiaoran-M"},"content":"* The `EVENT_INDEX` must be a positive integer 1, 2, 3, …, and it must be within the range of the event list index.","lastModifiedDate":"2022-10-19"},{"lineNumber":279,"author":{"gitId":"Qiaoran-M"},"content":"* The `PERSON_INDEX` refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-10-19"},{"lineNumber":280,"author":{"gitId":"Qiaoran-M"},"content":"* The `PERSON_INDEX` must be a positive integer 1, 2, 3, …, and it must be within the range of the person list index.","lastModifiedDate":"2022-10-19"},{"lineNumber":281,"author":{"gitId":"Qiaoran-M"},"content":"* The `PERSON_INDEX` must refer to a person that is currently tagged to the event.","lastModifiedDate":"2022-10-19"},{"lineNumber":282,"author":{"gitId":"Qiaoran-M"},"content":"* Multiple `PERSON_INDEX` should be separated by white space. At least one `PERSON_INDEX` must be provided.","lastModifiedDate":"2022-10-19"},{"lineNumber":283,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":284,"author":{"gitId":"Qiaoran-M"},"content":"Example:","lastModifiedDate":"2022-10-19"},{"lineNumber":285,"author":{"gitId":"Qiaoran-M"},"content":"* `untagEvent 1 p/2` untags the 2nd person in the contact list from the 1st event in the event list","lastModifiedDate":"2022-10-25"},{"lineNumber":286,"author":{"gitId":"Qiaoran-M"},"content":"* `untagEvent 2 p/2 4 5` untags the 2nd, 4th, 5th person in the contact list from the 2nd event in the event list","lastModifiedDate":"2022-10-25"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":288,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"Vinodjayakumar124"},"content":"Clears all entries from the application.","lastModifiedDate":"2022-10-02"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":302,"author":{"gitId":"Vinodjayakumar124"},"content":"The application\u0027s data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":304,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":305,"author":{"gitId":"Vinodjayakumar124"},"content":"If your changes to the data file makes its format invalid, the application will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-10-02"},{"lineNumber":306,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"Qiaoran-M"},"content":"| Action           | Format, Examples                                                                                                                                                                       |","lastModifiedDate":"2022-09-22"},{"lineNumber":324,"author":{"gitId":"Qiaoran-M"},"content":"|------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-24"},{"lineNumber":325,"author":{"gitId":"Vinodjayakumar124"},"content":"| **Add**          | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [g/GENDER] [d/DOB] [t/TAG]` \u003cbr\u003e e.g., `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 g/m d/20 MAR 2002` |","lastModifiedDate":"2022-10-02"},{"lineNumber":326,"author":{"gitId":"Qiaoran-M"},"content":"| **Clear**        | `clear`                                                                                                                                                                                |","lastModifiedDate":"2022-09-22"},{"lineNumber":327,"author":{"gitId":"Qiaoran-M"},"content":"| **DeletePerson** | `deletePerson INDEX`\u003cbr\u003e e.g., `deletePerson 3`                                                                                                                                        |","lastModifiedDate":"2022-10-24"},{"lineNumber":328,"author":{"gitId":"Vinodjayakumar124"},"content":"| **Edit**         | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [g/GENDER] [d/DOB] [t/TAG]`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                  |","lastModifiedDate":"2022-10-02"},{"lineNumber":329,"author":{"gitId":"Qiaoran-M"},"content":"| **Find**         | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                                             |","lastModifiedDate":"2022-09-22"},{"lineNumber":330,"author":{"gitId":"Vinodjayakumar124"},"content":"| **List**         | `list  [s/FIELD]` \u003cbr\u003e e.g., `list s/n`                                                                                                                                                |","lastModifiedDate":"2022-10-03"},{"lineNumber":331,"author":{"gitId":"Vinodjayakumar124"},"content":"| **AddEvent**     | `addEvent n/EVENT_TITLE d/DATE t/TIME p/PURPOSE`\u003cbr\u003e e.g.,`addEvent n/Shoe Sale 30% d/30-05-2022 t/11:00 p/Discount on all shoes for up to 30%`                                        |","lastModifiedDate":"2022-10-02"},{"lineNumber":332,"author":{"gitId":"Vinodjayakumar124"},"content":"| **DeleteEvent**  | `deleteEvent INDEX`\u003cbr\u003e e.g., `deleteEvent 2`                                                                                                                                          |","lastModifiedDate":"2022-10-02"},{"lineNumber":333,"author":{"gitId":"Vinodjayakumar124"},"content":"| **ListEvents**   | `listEvents`                                                                                                                                                                           |","lastModifiedDate":"2022-10-02"},{"lineNumber":334,"author":{"gitId":"Qiaoran-M"},"content":"| **TagEvent**     | `tagEvent EVENT_INDEX PERSON_INDEX [MORE_PERSON_INDEXES]` \u003cbr\u003e e.g., `tagEvent 2 p/1 3`                                                                                                |","lastModifiedDate":"2022-10-25"},{"lineNumber":335,"author":{"gitId":"Qiaoran-M"},"content":"| **UntagEvent**   | `untagEvent EVENT_INDEX PERSON_INDEX [MORE_PERSON_INDEXES]` \u003cbr\u003e e.g., `untagEvent 3 p/4 5`                                                                                            |","lastModifiedDate":"2022-10-25"},{"lineNumber":336,"author":{"gitId":"Qiaoran-M"},"content":"| **Help**         | `help`                                                                                                                                                                                 |","lastModifiedDate":"2022-09-22"}],"authorContributionMap":{"Vinodjayakumar124":67,"tanhl2000":21,"Benjamin-Sim":15,"Qiaoran-M":77,"lfrostbytee":7,"-":149}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Benjamin-Sim"},"content":"    content: \"Duke The Market\";","lastModifiedDate":"2022-09-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Benjamin-Sim":1,"-":294}},{"path":"docs/diagrams/AddEventSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Vinodjayakumar124"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"Vinodjayakumar124"},"content":"!include style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"Vinodjayakumar124"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"Vinodjayakumar124"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"Vinodjayakumar124"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"Vinodjayakumar124"},"content":"participant \":AddEventCommandParser\" as AddEventCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"Vinodjayakumar124"},"content":"participant \"a:AddEventCommand\" as AddEventCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"Vinodjayakumar124"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"Vinodjayakumar124"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"Vinodjayakumar124"},"content":"participant \"b:ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"Vinodjayakumar124"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"Vinodjayakumar124"},"content":"participant \":UniqueEventList\" as UniqueEventList MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Vinodjayakumar124"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"Vinodjayakumar124"},"content":"-\u003e LogicManager : execute(cmd)","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"Vinodjayakumar124"},"content":"activate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Vinodjayakumar124"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(cmd)","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"Vinodjayakumar124"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Vinodjayakumar124"},"content":"create AddEventCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Vinodjayakumar124"},"content":"AddressBookParser -\u003e AddEventCommandParser : parse(cmd)","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Vinodjayakumar124"},"content":"activate AddEventCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Vinodjayakumar124"},"content":"create AddEventCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"Vinodjayakumar124"},"content":"AddEventCommandParser -\u003e AddEventCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Vinodjayakumar124"},"content":"activate AddEventCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Vinodjayakumar124"},"content":"AddEventCommand --\u003e AddEventCommandParser : a","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate AddEventCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"Vinodjayakumar124"},"content":"AddEventCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate AddEventCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Vinodjayakumar124"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Vinodjayakumar124"},"content":"destroy AddEventCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Vinodjayakumar124"},"content":"LogicManager -\u003e AddEventCommand : execute(b)","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Vinodjayakumar124"},"content":"activate AddEventCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"Vinodjayakumar124"},"content":"AddEventCommand -\u003e ModelManager : addEvent(event)","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"Vinodjayakumar124"},"content":"activate ModelManager","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"Vinodjayakumar124"},"content":"ModelManager -\u003e AddressBook : addEvent(event)","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"Vinodjayakumar124"},"content":"activate AddressBook","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"Vinodjayakumar124"},"content":"AddressBook -\u003e UniqueEventList : add(event)","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"Vinodjayakumar124"},"content":"activate UniqueEventList","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"Vinodjayakumar124"},"content":"UniqueEventList --\u003e AddressBook","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate UniqueEventList","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"Vinodjayakumar124"},"content":"AddressBook --\u003e ModelManager","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate AddressBook","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"Vinodjayakumar124"},"content":"ModelManager --\u003e AddEventCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate ModelManager","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"Vinodjayakumar124"},"content":"AddEventCommand --\u003e LogicManager : CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate AddEventCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"Vinodjayakumar124"},"content":"\u003c--LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"Vinodjayakumar124"},"content":"destroy AddEventCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"Vinodjayakumar124"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"Vinodjayakumar124":68}},{"path":"docs/diagrams/AddPersonActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"start","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"repeat","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":":User enters add person command;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"if () then ([gender field is provided])","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"  if () then ([gender format is valid])","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"    if () then ([person doesn\u0027t exist","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"   in the contact list])","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"      :Person is added with valid gender field;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"      stop","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"    else ([else])","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"    endif","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"  else ([else])","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"  endif","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"else ([else])","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"endif","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"backward :System shows error message;","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"repeat while;","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"Qiaoran-M":19}},{"path":"docs/diagrams/AddPersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"participant \":AddPersonCommandParser\" as AddPersonCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"participant \"c:AddPersonCommand\" as AddPersonCommand LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"[-\u003e LogicManager : execute(cmd)","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"activate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(cmd)","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"create AddPersonCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"AddressBookParser -\u003e AddPersonCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"activate AddPersonCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"create AddPersonCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"AddPersonCommandParser -\u003e AddPersonCommand : parse(cmd)","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"activate AddPersonCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"AddPersonCommand --\u003e AddPersonCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"deactivate AddPersonCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"AddPersonCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"deactivate AddPersonCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"LogicManager -\u003e AddPersonCommand : execute()","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"activate AddPersonCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"AddPersonCommand -\u003e ModelManager : addPerson(Person)","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"activate ModelManager","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"ModelManager -\u003e AddressBook : addPerson(Person)","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"activate AddressBook","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"AddressBook --\u003e ModelManager :","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"deactivate AddressBook","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"ModelManager --\u003e AddPersonCommand :","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"deactivate ModelManager","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"AddPersonCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"deactivate AddPersonCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"AddPersonCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"destroy AddPersonCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"Qiaoran-M":61}},{"path":"docs/diagrams/DeleteEventSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Vinodjayakumar124"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"Vinodjayakumar124"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Vinodjayakumar124"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Vinodjayakumar124"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"Vinodjayakumar124"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Vinodjayakumar124"},"content":"participant \":DeleteEventCommandParser\" as DeleteEventCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"Vinodjayakumar124"},"content":"participant \"a:DeleteEventCommand\" as DeleteEventCommand LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"Vinodjayakumar124"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"Vinodjayakumar124"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"Vinodjayakumar124"},"content":"participant \"b:ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"Vinodjayakumar124"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Vinodjayakumar124"},"content":"participant \":UniqueEventList\" as UniqueEventList MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"Vinodjayakumar124"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"Vinodjayakumar124"},"content":"-\u003e LogicManager : execute(cmd)","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"Vinodjayakumar124"},"content":"activate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"Vinodjayakumar124"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(cmd)","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"Vinodjayakumar124"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"Vinodjayakumar124"},"content":"create DeleteEventCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"Vinodjayakumar124"},"content":"AddressBookParser -\u003e DeleteEventCommandParser : parse(cmd)","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"Vinodjayakumar124"},"content":"activate DeleteEventCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"Vinodjayakumar124"},"content":"create DeleteEventCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"Vinodjayakumar124"},"content":"DeleteEventCommandParser -\u003e DeleteEventCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"Vinodjayakumar124"},"content":"activate DeleteEventCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"Vinodjayakumar124"},"content":"DeleteEventCommand --\u003e DeleteEventCommandParser : a","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate DeleteEventCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"Vinodjayakumar124"},"content":"DeleteEventCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate DeleteEventCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"Vinodjayakumar124"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"Vinodjayakumar124"},"content":"destroy DeleteEventCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"Vinodjayakumar124"},"content":"LogicManager -\u003e DeleteEventCommand : execute(b)","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"Vinodjayakumar124"},"content":"activate DeleteEventCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"Vinodjayakumar124"},"content":"DeleteEventCommand -\u003e ModelManager : deleteEvent(event)","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"Vinodjayakumar124"},"content":"activate ModelManager","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"Vinodjayakumar124"},"content":"ModelManager -\u003e AddressBook : deleteEvent(event)","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"Vinodjayakumar124"},"content":"activate AddressBook","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"Vinodjayakumar124"},"content":"AddressBook -\u003e UniqueEventList : remove(event)","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"Vinodjayakumar124"},"content":"activate UniqueEventList","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"Vinodjayakumar124"},"content":"UniqueEventList --\u003e AddressBook","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate UniqueEventList","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"Vinodjayakumar124"},"content":"AddressBook --\u003e ModelManager","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate AddressBook","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"Vinodjayakumar124"},"content":"ModelManager --\u003e DeleteEventCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate ModelManager","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"Vinodjayakumar124"},"content":"DeleteEventCommand --\u003e LogicManager : CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate DeleteEventCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"Vinodjayakumar124"},"content":"\u003c--LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"Vinodjayakumar124"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"Vinodjayakumar124"},"content":"destroy DeleteEventCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"Vinodjayakumar124"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"Vinodjayakumar124":69}},{"path":"docs/diagrams/EditPersonActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"start","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"repeat","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":":User enters edit person command;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"  if () then ([gender format is valid])","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"    if () then ([person already exists","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"    in the contact list])","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"      :Person is edited with new gender field;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"      stop","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"    else ([else])","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"    endif","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"  else ([else])","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"  endif","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"backward :System shows error message;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"repeat while;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"Qiaoran-M":16}},{"path":"docs/diagrams/EditPersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"participant \":EditPersonCommandParser\" as EditPersonCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"participant \"c:EditPersonCommand\" as EditPersonCommand LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"[-\u003e LogicManager : execute(cmd)","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"activate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(cmd)","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"create EditPersonCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"AddressBookParser -\u003e EditPersonCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"activate EditPersonCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"create EditPersonCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"EditPersonCommandParser -\u003e EditPersonCommand : parse(cmd)","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"activate EditPersonCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"EditPersonCommand --\u003e EditPersonCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"deactivate EditPersonCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"EditPersonCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"deactivate EditPersonCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"LogicManager -\u003e EditPersonCommand : execute()","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"activate EditPersonCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"EditPersonCommand -\u003e ModelManager : setPerson(P1, P2)","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"activate ModelManager","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"ModelManager -\u003e AddressBook : setPerson(P1, P2)","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"activate AddressBook","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"AddressBook --\u003e ModelManager :","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"deactivate AddressBook","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"ModelManager --\u003e EditPersonCommand :","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"deactivate ModelManager","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"EditPersonCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"deactivate EditPersonCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"EditPersonCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"destroy EditPersonCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"Qiaoran-M":61}},{"path":"docs/diagrams/ListEventsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lfrostbytee"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"lfrostbytee"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"lfrostbytee"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"lfrostbytee"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":"participant \"u:ListEventsCommand\" as ListEventsCommand LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"lfrostbytee"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"lfrostbytee"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"lfrostbytee"},"content":"participant \"filteredEvents:FilteredList\" as eventList MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"lfrostbytee"},"content":"[-\u003e LogicManager : execute(\"listEvents\")","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"activate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"lfrostbytee"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"listEvents\")","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"create ListEventsCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"lfrostbytee"},"content":"AddressBookParser -\u003e ListEventsCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"lfrostbytee"},"content":"activate ListEventsCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"lfrostbytee"},"content":"ListEventsCommand --\u003e AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"lfrostbytee"},"content":"deactivate ListEventsCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"lfrostbytee"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"lfrostbytee"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"lfrostbytee"},"content":"LogicManager -\u003e ListEventsCommand : execute()","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"lfrostbytee"},"content":"activate ListEventsCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"lfrostbytee"},"content":"ListEventsCommand -\u003e ModelManager : updateFilteredEventList\\n(PREDICATE_SHOW\\n_ALL_EVENTS)","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"lfrostbytee"},"content":"activate ModelManager","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"lfrostbytee"},"content":"ModelManager -\u003e eventList : setPredicate\\n(PREDICATE_SHOW\\n_ALL_EVENTS)","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"lfrostbytee"},"content":"activate eventList","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"lfrostbytee"},"content":"eventList --\u003e ModelManager :","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"lfrostbytee"},"content":"deactivate eventList","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"lfrostbytee"},"content":"ModelManager --\u003e ListEventsCommand :","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"lfrostbytee"},"content":"deactivate ModelManager","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"lfrostbytee"},"content":"ListEventsCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"lfrostbytee"},"content":"deactivate ListEventsCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"lfrostbytee"},"content":"ListEventsCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"lfrostbytee"},"content":"destroy ListEventsCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"lfrostbytee"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"lfrostbytee"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"lfrostbytee"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"lfrostbytee":53}},{"path":"docs/diagrams/SortFieldClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Benjamin-Sim"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"Benjamin-Sim"},"content":"!include style.puml","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"Benjamin-Sim"},"content":"\u0027 Override style.puml","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"Benjamin-Sim"},"content":"show members","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"Benjamin-Sim"},"content":"hide empty members","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"Benjamin-Sim"},"content":"skinparam ClassAttributeIconSize 0","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"Benjamin-Sim"},"content":"skinparam Nodesep 100","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Benjamin-Sim"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"Benjamin-Sim"},"content":"skinparam PackageBackgroundColor #FFFFFF","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"Benjamin-Sim"},"content":"\u0027 Class definitions","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"Benjamin-Sim"},"content":"Class ListPersonsCommand LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"Benjamin-Sim"},"content":"Class SortField MODEL_COLOR {","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"Benjamin-Sim"},"content":"    -comp : Comparator\u003cPerson\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"Benjamin-Sim"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"Benjamin-Sim"},"content":"Class \"\u003c\u003cenumeration\u003e\u003e\\nSortFieldType\" as SortFieldType MODEL_COLOR {","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"Benjamin-Sim"},"content":"    NAME","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"Benjamin-Sim"},"content":"    DATE_OF_BIRTH","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"Benjamin-Sim"},"content":"    GENDER","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Benjamin-Sim"},"content":"    NO_FIELD","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"Benjamin-Sim"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"Benjamin-Sim"},"content":"package Model{","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"Benjamin-Sim"},"content":"    Class HiddenModel #FFFFFF","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Benjamin-Sim"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"Benjamin-Sim"},"content":"\u0027 Arrow definitions","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"Benjamin-Sim"},"content":"ListPersonsCommand .right[LOGIC_COLOR_T4].\u003e Model","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"Benjamin-Sim"},"content":"ListPersonsCommand -[LOGIC_COLOR_T4]-\u003e \"1\" SortField","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"Benjamin-Sim"},"content":"SortField *-[MODEL_COLOR]-\u003e \"1\" SortFieldType","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"Benjamin-Sim"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"Benjamin-Sim":38}},{"path":"docs/diagrams/SortPersonsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Benjamin-Sim"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"Benjamin-Sim"},"content":"!include style.puml","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"Benjamin-Sim"},"content":"Participant \":ListPersonsCommand\" as listPersonsCommand LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"Benjamin-Sim"},"content":"Participant \"m:Model\" as model MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"Benjamin-Sim"},"content":"Participant \":AddressBook\" as addressBook MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"Benjamin-Sim"},"content":"Participant \"persons:UniquePersonList\" as uniquePersonList MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"Benjamin-Sim"},"content":"\u0027 Operation arrows","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"Benjamin-Sim"},"content":"[-\u003e listPersonsCommand : execute(m)","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"Benjamin-Sim"},"content":"activate listPersonsCommand LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"Benjamin-Sim"},"content":"listPersonsCommand -[LOGIC_COLOR]\u003e model : sortPersons(s)","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"Benjamin-Sim"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"Benjamin-Sim"},"content":"model -[MODEL_COLOR]\u003e addressBook : sortPersons(s)","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"Benjamin-Sim"},"content":"activate addressBook MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"Benjamin-Sim"},"content":"addressBook -[MODEL_COLOR]\u003e uniquePersonList : sort(s)","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"Benjamin-Sim"},"content":"activate uniquePersonList MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Benjamin-Sim"},"content":"\u0027 Return arrows","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"Benjamin-Sim"},"content":"addressBook \u003c-[MODEL_COLOR]- uniquePersonList","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"Benjamin-Sim"},"content":"deactivate uniquePersonList","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"Benjamin-Sim"},"content":"model \u003c-[MODEL_COLOR]- addressBook","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Benjamin-Sim"},"content":"deactivate addressBook","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"Benjamin-Sim"},"content":"listPersonsCommand \u003c-[LOGIC_COLOR]- model","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"Benjamin-Sim"},"content":"deactivate model","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"Benjamin-Sim"},"content":"[\u003c-- listPersonsCommand : result","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"Benjamin-Sim"},"content":"deactivate listPersonsCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"Benjamin-Sim"},"content":"skinparam NoteTextAlignment left","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"Benjamin-Sim"},"content":"note right of model : s represents the SortField object\\nwithin the ListPersonsCommand object","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"Benjamin-Sim"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"Benjamin-Sim":41}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"Benjamin-Sim"},"content":"skinparam RoundCorner 0","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Benjamin-Sim":1,"-":75}},{"path":"docs/team/benjamin-sim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Benjamin-Sim"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":2,"author":{"gitId":"Benjamin-Sim"},"content":"layout: page","lastModifiedDate":"2022-09-22"},{"lineNumber":3,"author":{"gitId":"Benjamin-Sim"},"content":"title: Benjamin Sim\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-22"},{"lineNumber":4,"author":{"gitId":"Benjamin-Sim"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":5,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":6,"author":{"gitId":"Benjamin-Sim"},"content":"### Project: Duke The Market","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":8,"author":{"gitId":"Benjamin-Sim"},"content":"Duke The Market is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":10,"author":{"gitId":"Benjamin-Sim"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-22"},{"lineNumber":11,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":12,"author":{"gitId":"Benjamin-Sim"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-22"},{"lineNumber":13,"author":{"gitId":"Benjamin-Sim"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-22"},{"lineNumber":14,"author":{"gitId":"Benjamin-Sim"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-22"},{"lineNumber":15,"author":{"gitId":"Benjamin-Sim"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-22"},{"lineNumber":16,"author":{"gitId":"Benjamin-Sim"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-22"},{"lineNumber":17,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":18,"author":{"gitId":"Benjamin-Sim"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-22"},{"lineNumber":19,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":20,"author":{"gitId":"Benjamin-Sim"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-22"},{"lineNumber":21,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":22,"author":{"gitId":"Benjamin-Sim"},"content":"* **Project management**:","lastModifiedDate":"2022-09-22"},{"lineNumber":23,"author":{"gitId":"Benjamin-Sim"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-22"},{"lineNumber":24,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":25,"author":{"gitId":"Benjamin-Sim"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"Benjamin-Sim"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-22"},{"lineNumber":27,"author":{"gitId":"Benjamin-Sim"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-22"},{"lineNumber":28,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":29,"author":{"gitId":"Benjamin-Sim"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-22"},{"lineNumber":30,"author":{"gitId":"Benjamin-Sim"},"content":"  * User Guide:","lastModifiedDate":"2022-09-22"},{"lineNumber":31,"author":{"gitId":"Benjamin-Sim"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-22"},{"lineNumber":32,"author":{"gitId":"Benjamin-Sim"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-22"},{"lineNumber":33,"author":{"gitId":"Benjamin-Sim"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-22"},{"lineNumber":34,"author":{"gitId":"Benjamin-Sim"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-22"},{"lineNumber":35,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":36,"author":{"gitId":"Benjamin-Sim"},"content":"* **Community**:","lastModifiedDate":"2022-09-22"},{"lineNumber":37,"author":{"gitId":"Benjamin-Sim"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-22"},{"lineNumber":38,"author":{"gitId":"Benjamin-Sim"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-22"},{"lineNumber":39,"author":{"gitId":"Benjamin-Sim"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-22"},{"lineNumber":40,"author":{"gitId":"Benjamin-Sim"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-22"},{"lineNumber":41,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":42,"author":{"gitId":"Benjamin-Sim"},"content":"* **Tools**:","lastModifiedDate":"2022-09-22"},{"lineNumber":43,"author":{"gitId":"Benjamin-Sim"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-22"},{"lineNumber":44,"author":{"gitId":"Benjamin-Sim"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-22"},{"lineNumber":45,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":46,"author":{"gitId":"Benjamin-Sim"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-22"}],"authorContributionMap":{"Benjamin-Sim":46}},{"path":"docs/team/lfrostbytee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lfrostbytee"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"lfrostbytee"},"content":"layout: page","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"lfrostbytee"},"content":"title: Ong Wee Marcus\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"lfrostbytee"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":"### Project: Duke The Market","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"lfrostbytee"},"content":"Duke The Market is a desktop contact management system application ","lastModifiedDate":"2022-09-23"},{"lineNumber":9,"author":{"gitId":"lfrostbytee"},"content":"used for managing customer contacts in department stores. The user interacts with it using a CLI, ","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"lfrostbytee"},"content":"and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"lfrostbytee"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":"* **Code contributed**: to be added soon","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"  * to be added soon","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"  * Contributions to the User Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"    * to be added soon","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"lfrostbytee"},"content":"  * Contributions to the Developer Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"lfrostbytee"},"content":"    * to be added soon","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"lfrostbytee"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"lfrostbytee"},"content":"  * to be added soon","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"lfrostbytee"},"content":"* **Community**:","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"lfrostbytee"},"content":"    * Review/Mentoring contributions:","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"lfrostbytee"},"content":"      * to be added soon","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"lfrostbytee"},"content":"    * Contributions beyond the project team:","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"lfrostbytee"},"content":"      * to be added soon","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"lfrostbytee":32}},{"path":"docs/team/qiaoran-m.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"layout: page","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"title: Meng Qiaoran\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"### Project: Duke The Market","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"Duke The Market is a desktop contact management system application","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"used for managing customer contacts in department stores. The user interacts with it using a CLI,","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"* **Code contributed**: to be added soon","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"    * to be added soon","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"    * Contributions to the User Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"        * to be added soon","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"    * Contributions to the Developer Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"        * to be added soon","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-24"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"    * to be added soon","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"* **Community**:","lastModifiedDate":"2022-09-24"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"    * Review/Mentoring contributions:","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"        * to be added soon","lastModifiedDate":"2022-09-24"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"    * Contributions beyond the project team:","lastModifiedDate":"2022-09-24"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"        * to be added soon","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"Qiaoran-M":32}},{"path":"docs/team/tanhl2000.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"title: Tan Hong Liang\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"### Project: Duke The Market","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"Duke The Market is a desktop contact management system application ","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"used for managing customer contacts in department stores. The user interacts with it using a CLI, ","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"* **Code contributed**: ","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"  * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"  * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"  * Contributions to the User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"    * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"  * Contributions to the Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"    * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"  * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"    * Review/Mentoring contributions:","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"      * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"    * Contributions beyond the project team:","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"      * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"      ","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"tanhl2000":34}},{"path":"docs/team/vinodjayakumar124.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Vinodjayakumar124"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"Vinodjayakumar124"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"Vinodjayakumar124"},"content":"title: Vinod s/o Jaya Kumar\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"Vinodjayakumar124"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"Vinodjayakumar124"},"content":"### Project: Duke The Market","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"Vinodjayakumar124"},"content":"Duke The Market is a desktop contact management system application","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"Vinodjayakumar124"},"content":"used for managing customer contacts in department stores. The user interacts with it using a CLI,","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"Vinodjayakumar124"},"content":"and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"Vinodjayakumar124"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"Vinodjayakumar124"},"content":"* **Code contributed**:","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"Vinodjayakumar124"},"content":"    * to be added soon [RepoSense link]()","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"Vinodjayakumar124"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"Vinodjayakumar124"},"content":"    * to be added soon","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"Vinodjayakumar124"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"Vinodjayakumar124"},"content":"    * Contributions to the User Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"Vinodjayakumar124"},"content":"        * to be added soon","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"Vinodjayakumar124"},"content":"    * Contributions to the Developer Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"Vinodjayakumar124"},"content":"        * to be added soon","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"Vinodjayakumar124"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"Vinodjayakumar124"},"content":"    * to be added soon","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"Vinodjayakumar124"},"content":"* **Review/Mentoring contributions**:","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"Vinodjayakumar124"},"content":"    * to be added soon","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"Vinodjayakumar124"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"Vinodjayakumar124"},"content":"    * to be added soon","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"Vinodjayakumar124":33}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"lfrostbytee"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"Qiaoran-M"},"content":"        Model model \u003d new ModelManager(initialData, userPrefs);","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"Qiaoran-M"},"content":"        model.updateEventPersonReference();","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"Qiaoran-M"},"content":"        return model;","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lfrostbytee":1,"Qiaoran-M":3,"-":180}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Qiaoran-M":1,"-":12}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"lfrostbytee"},"content":"    /** Returns an unmodifiable view of the filtered list of events */","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"lfrostbytee"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lfrostbytee":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"lfrostbytee"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"lfrostbytee"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"lfrostbytee"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lfrostbytee":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vinodjayakumar124"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Vinodjayakumar124"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Vinodjayakumar124"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_TITLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Vinodjayakumar124"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PURPOSE;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Vinodjayakumar124"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Vinodjayakumar124"},"content":" * Adds an Event to the application.","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"Vinodjayakumar124"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Vinodjayakumar124"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Vinodjayakumar124"},"content":"    public static final String COMMAND_WORD \u003d \"addEvent\";","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Vinodjayakumar124"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Vinodjayakumar124"},"content":"            + \": Adds an Event to the application. \\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Vinodjayakumar124"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Vinodjayakumar124"},"content":"            + PREFIX_EVENT_TITLE + \"TITLE OF EVENT \"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"lfrostbytee"},"content":"            + PREFIX_START_DATE + \"START DATE \"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"lfrostbytee"},"content":"            + PREFIX_START_TIME + \"START TIME \"","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Vinodjayakumar124"},"content":"            + PREFIX_PURPOSE + \"PURPOSE \\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Vinodjayakumar124"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Vinodjayakumar124"},"content":"            + PREFIX_EVENT_TITLE + \"Shoe Sale \"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"lfrostbytee"},"content":"            + PREFIX_START_DATE + \"20-09-2022 \"","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"lfrostbytee"},"content":"            + PREFIX_START_TIME + \"11:00 \"","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"Vinodjayakumar124"},"content":"            + PREFIX_PURPOSE + \"50% discount on all shoes store-wide! \";","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Vinodjayakumar124"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Event added: %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Vinodjayakumar124"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This Event already exists in the application\";","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Vinodjayakumar124"},"content":"    private final Event toAdd;","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Constructor for AddEventCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @param event to be wrapped by AddEventCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Vinodjayakumar124"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Vinodjayakumar124"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Vinodjayakumar124"},"content":"        toAdd \u003d event;","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Vinodjayakumar124"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Vinodjayakumar124"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Vinodjayakumar124"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Vinodjayakumar124"},"content":"        //TODO: Add logical checks for duplicates of Event before adding","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Vinodjayakumar124"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Vinodjayakumar124"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Vinodjayakumar124"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Vinodjayakumar124":50,"lfrostbytee":6}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"    public static final String COMMAND_WORD \u003d \"addPerson\";","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"            + PREFIX_DOB + \"DATE OF BIRTH \"","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] ... \\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"            // add gender field in add command usage","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"            + PREFIX_DOB + \"03/04/2002 \"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"            + PREFIX_GENDER + \"male\";","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"tanhl2000"},"content":"                || (other instanceof AddPersonCommand // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"tanhl2000"},"content":"                \u0026\u0026 toAdd.equals(((AddPersonCommand) other).toAdd));","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanhl2000":12,"Qiaoran-M":4,"-":59}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"    /** Stats information should be shown to the user. */","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"lfrostbytee"},"content":"    private final boolean showStats;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"lfrostbytee"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean showStats, boolean exit) {","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"lfrostbytee"},"content":"        this.showStats \u003d showStats;","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"lfrostbytee"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"lfrostbytee"},"content":"    public boolean isShowStats() {","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"lfrostbytee"},"content":"        return showStats;","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"lfrostbytee"},"content":"                \u0026\u0026 showStats \u003d\u003d otherCommandResult.showStats","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"lfrostbytee"},"content":"        return Objects.hash(feedbackToUser, showHelp, showStats, exit);","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lfrostbytee":12,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vinodjayakumar124"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Vinodjayakumar124"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Vinodjayakumar124"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Vinodjayakumar124"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Vinodjayakumar124"},"content":" * Deletes an Event from the AddressBook based on the index supplied","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Vinodjayakumar124"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Vinodjayakumar124"},"content":"public class DeleteEventCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Vinodjayakumar124"},"content":"    public static final String COMMAND_WORD \u003d \"deleteEvent\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Vinodjayakumar124"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Vinodjayakumar124"},"content":"            + \": Deletes the Event based on the index number in the Event list displayed\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Vinodjayakumar124"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Vinodjayakumar124"},"content":"            + \"Example: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"Vinodjayakumar124"},"content":"            + COMMAND_WORD","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Vinodjayakumar124"},"content":"            + \" 3\";","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Vinodjayakumar124"},"content":"    public static final String MESSAGE_DELETED_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"Vinodjayakumar124"},"content":"    private final Index targetEventIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Constructor for DeleteEventCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @param targetEventIndex location of Event to be deleted","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Vinodjayakumar124"},"content":"    public DeleteEventCommand(Index targetEventIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"Vinodjayakumar124"},"content":"        this.targetEventIndex \u003d targetEventIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"Vinodjayakumar124"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"Vinodjayakumar124"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"Vinodjayakumar124"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"Vinodjayakumar124"},"content":"        List\u003cEvent\u003e currentEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"Vinodjayakumar124"},"content":"        Integer zeroBasedIndex \u003d targetEventIndex.getZeroBased();","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"Vinodjayakumar124"},"content":"        if (zeroBasedIndex \u003e\u003d currentEventList.size()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"Vinodjayakumar124"},"content":"            throw new CommandException(\"The event index supplied is invalid\");","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"Vinodjayakumar124"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"Vinodjayakumar124"},"content":"        Event toDelete \u003d currentEventList.get(zeroBasedIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"Vinodjayakumar124"},"content":"        model.deleteEvent(toDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"Vinodjayakumar124"},"content":"        return new CommandResult(String.format(MESSAGE_DELETED_EVENT_SUCCESS, toDelete));","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"Vinodjayakumar124"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"Vinodjayakumar124"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"Vinodjayakumar124"},"content":"        return other \u003d\u003d this || (other instanceof DeleteEventCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"Vinodjayakumar124"},"content":"                \u0026\u0026 targetEventIndex.equals(((DeleteEventCommand) other).targetEventIndex));","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"Vinodjayakumar124"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Vinodjayakumar124":60}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"public class DeletePersonCommand extends Command {","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String COMMAND_WORD \u003d \"deletePerson\";","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"        Person personToDelete \u003d lastShownPersonList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"        int eventIndex \u003d 0;","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"        for (Event event : lastShownEventList) {","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"            if (event.containsPerson(personToDelete)) { // use untag command to untag person for each event","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"                new UntagEventCommand(Index.fromZeroBased(eventIndex), Arrays.asList(targetIndex)).execute(model);","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"            eventIndex +\u003d 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"        model.updateEventPersonReference();","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"                || (other instanceof DeletePersonCommand // instanceof handles nulls","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePersonCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Qiaoran-M":19,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER]\"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"            + \"[\" + PREFIX_DOB + \"DATE OF BIRTH] ...\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\"","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"            + PREFIX_GENDER + \"m\";","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"Qiaoran-M"},"content":"        model.updateEventPersonReference();","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"tanhl2000"},"content":"        DateOfBirth updatedDob \u003d editPersonDescriptor.getDob().orElse(personToEdit.getDob());","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":111,"author":{"gitId":"Qiaoran-M"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2022-10-07"},{"lineNumber":112,"author":{"gitId":"Qiaoran-M"},"content":"        Uid updatedUid \u003d new Uid(personToEdit.getUid().getUid());","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"tanhl2000"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"Qiaoran-M"},"content":"                updatedDob, updatedAddress, updatedTags, updatedGender, updatedUid);","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"tanhl2000"},"content":"        private DateOfBirth dob;","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"Qiaoran-M"},"content":"        private Gender gender;","lastModifiedDate":"2022-10-07"},{"lineNumber":148,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"tanhl2000"},"content":"            setDob(toCopy.dob);","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"Qiaoran-M"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2022-10-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"tanhl2000"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, dob, address, tags, gender);","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"tanhl2000"},"content":"        public void setDob(DateOfBirth dob) {","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"tanhl2000"},"content":"            this.dob \u003d dob;","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"tanhl2000"},"content":"        public Optional\u003cDateOfBirth\u003e getDob() {","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"tanhl2000"},"content":"            return Optional.ofNullable(dob);","lastModifiedDate":"2022-10-11"},{"lineNumber":202,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"Qiaoran-M"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2022-10-07"},{"lineNumber":213,"author":{"gitId":"Qiaoran-M"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2022-10-07"},{"lineNumber":214,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":215,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":216,"author":{"gitId":"Qiaoran-M"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2022-10-07"},{"lineNumber":217,"author":{"gitId":"Qiaoran-M"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2022-10-07"},{"lineNumber":218,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":219,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":255,"author":{"gitId":"tanhl2000"},"content":"                    \u0026\u0026 getDob().equals(e.getDob())","lastModifiedDate":"2022-10-10"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":257,"author":{"gitId":"Qiaoran-M"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-10-10"},{"lineNumber":258,"author":{"gitId":"Qiaoran-M"},"content":"                    \u0026\u0026 getGender().equals(e.getGender());","lastModifiedDate":"2022-10-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"tanhl2000":18,"Qiaoran-M":23,"-":220}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"lfrostbytee":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"lfrostbytee"},"content":"public class FindPersonsCommand extends Command {","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"lfrostbytee"},"content":"    public static final String COMMAND_WORD \u003d \"findPersons\";","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"lfrostbytee"},"content":"    public FindPersonsCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"lfrostbytee"},"content":"                || (other instanceof FindPersonsCommand // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"lfrostbytee"},"content":"                \u0026\u0026 predicate.equals(((FindPersonsCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"lfrostbytee":5,"-":37}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lfrostbytee":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Benjamin-Sim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"Benjamin-Sim"},"content":"import seedu.address.model.person.SortField;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Benjamin-Sim"},"content":"    // MESSAGE_USAGE is currently unused","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Benjamin-Sim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all persons in the address book.\"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Benjamin-Sim"},"content":"            + \"Parameters: \" + \"[\" + PREFIX_SORT + \"FIELD] (must be n, N, d, D, g or G)\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Benjamin-Sim"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_SORT + \"n\";","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Benjamin-Sim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons sorted by %s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Benjamin-Sim"},"content":"    private final SortField sortField;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Benjamin-Sim"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Benjamin-Sim"},"content":"     * Creates a ListCommand to list and sort all persons.","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Benjamin-Sim"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Benjamin-Sim"},"content":"     * @param sortField Field to sort by.","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Benjamin-Sim"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Benjamin-Sim"},"content":"    public ListCommand(SortField sortField) {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Benjamin-Sim"},"content":"        requireNonNull(sortField);","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Benjamin-Sim"},"content":"        this.sortField \u003d sortField;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"Benjamin-Sim"},"content":"        model.sortPersons(sortField);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":44,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Benjamin-Sim"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, sortField.getField()));","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Benjamin-Sim"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Benjamin-Sim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Benjamin-Sim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"Benjamin-Sim"},"content":"            || (other instanceof ListCommand // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Benjamin-Sim"},"content":"            \u0026\u0026 sortField.equals(((ListCommand) other).sortField));","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Benjamin-Sim":33,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/ListEventsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lfrostbytee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"lfrostbytee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"lfrostbytee"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"lfrostbytee"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"lfrostbytee"},"content":" * Lists all events in the address book to the user.","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"lfrostbytee"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":"public class ListEventsCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"lfrostbytee"},"content":"    public static final String COMMAND_WORD \u003d \"listEvents\";","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"lfrostbytee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all events\";","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"lfrostbytee"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"lfrostbytee"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"lfrostbytee"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"lfrostbytee":24}},{"path":"src/main/java/seedu/address/logic/commands/MakeStatsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lfrostbytee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"lfrostbytee"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"lfrostbytee"},"content":"public class MakeStatsCommand extends Command {","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"lfrostbytee"},"content":"    public static final String COMMAND_WORD \u003d \"makeStats\";","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"lfrostbytee"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"lfrostbytee"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"lfrostbytee"},"content":"    public static final String SHOWING_STATS_MESSAGE \u003d \"Opened statistics window.\";","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"lfrostbytee"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"        return new CommandResult(SHOWING_STATS_MESSAGE,","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"                false, true, false);","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"lfrostbytee"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"lfrostbytee":22}},{"path":"src/main/java/seedu/address/logic/commands/TagEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSONS;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.event.UidList;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":" * Tags customers in Person List to an event.","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"public class TagEventCommand extends Command {","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String COMMAND_WORD \u003d \"tagEvent\";","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"            + \": Tags 1 or more persons to an event in the address book \"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"            + \"by the index number used in the displayed person and event lists. \"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"            + \"EVENT_INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"            + PREFIX_PERSONS + \"PERSON_INDEX_1 (must be a positive integer) \"","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"            + \"[PERSON_INDEX_2 PERSON_INDEX_3 ...]\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"            + PREFIX_PERSONS + \"1 3 4\";","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String MESSAGE_TAG_EVENT_SUCCESS \u003d \"Tagged Persons: %s to Event: %s\";","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person: %d. %s already exists in the event\";","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"    private final Index eventIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"    private final List\u003cIndex\u003e personIndexes;","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"     * @param eventIndex index of the event to be tagged with persons.","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"     * @param personIndexes index of persons to be tagged to the event.","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"    public TagEventCommand(Index eventIndex, List\u003cIndex\u003e personIndexes) {","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"        requireNonNull(eventIndex);","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"        requireNonNull(personIndexes);","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"        this.personIndexes \u003d personIndexes;","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d lastShownEventList.size()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"            throw new CommandException(MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"        Event eventToTag \u003d lastShownEventList.get(eventIndex.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"        UidList uids \u003d eventToTag.getUids();","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cString\u003e personNamesTagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"        // loop through personIndexes, raise exceptions if any (invalid index or duplicated person)","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"        for (Index personIndex : personIndexes) {","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"            if (personIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) { // index is invalid","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"                throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"            Person person \u003d lastShownPersonList.get(personIndex.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"            if (uids.contains(person.getUid())) { // person\u0027s uid already exists in the event to tag","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"                throw new CommandException(String.format(MESSAGE_DUPLICATE_PERSON, personIndex.getOneBased(),","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"                        person.getName()));","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"        for (Index personIndex : personIndexes) {","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"            Person person \u003d lastShownPersonList.get(personIndex.getZeroBased());","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"            personNamesTagged.add(person.getName().toString());","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"            uids.add(person.getUid());","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"        // create editedEvent, set event, update event list","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"        Event taggedEvent \u003d new Event(eventToTag, uids);","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"        model.setEvent(eventToTag, taggedEvent);","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"        model.updateEventPersonReference();","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"        return new CommandResult(String.format(MESSAGE_TAG_EVENT_SUCCESS, String.join(\", \", personNamesTagged),","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"Qiaoran-M"},"content":"                taggedEvent.getEventTitle()));","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Qiaoran-M":82}},{"path":"src/main/java/seedu/address/logic/commands/UntagEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSONS;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.event.UidList;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":" * Untags customers in Person List to an event.","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"public class UntagEventCommand extends Command {","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String COMMAND_WORD \u003d \"untagEvent\";","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"            + \": Untags 1 or more persons to an event in the address book \"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"            + \"by the index number used in the displayed person and event lists. \"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"            + \"EVENT_INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"            + PREFIX_PERSONS + \"PERSON_INDEX_1 (must be a positive integer) \"","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"            + \"[PERSON_INDEX_2 PERSON_INDEX_3 ...]\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"            + PREFIX_PERSONS + \"1 3 4\";","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String MESSAGE_UNTAG_EVENT_SUCCESS \u003d \"Untagged Persons: %s to Event: %s\";","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String MESSAGE_INVALID_PERSON \u003d \"This person: %d. %s doesn\u0027t exist in the event\";","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"    private final Index eventIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"    private final List\u003cIndex\u003e personIndexes;","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"     * @param eventIndex index of the event to be untagged with persons.","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"     * @param personIndexes index of persons to be untagged to the event.","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"    public UntagEventCommand(Index eventIndex, List\u003cIndex\u003e personIndexes) {","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"        requireNonNull(eventIndex);","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"        requireNonNull(personIndexes);","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"        this.personIndexes \u003d personIndexes;","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d lastShownEventList.size()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"            throw new CommandException(MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"        Event eventToUntag \u003d lastShownEventList.get(eventIndex.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"        UidList uids \u003d eventToUntag.getUids();","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cString\u003e personNamesUntagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"        // loop through personIndexes, raise exceptions if any (invalid index or duplicated person)","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"        for (Index personIndex : personIndexes) {","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"            if (personIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) { // index is invalid","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"                throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"            Person person \u003d lastShownPersonList.get(personIndex.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"            if (!uids.contains(person.getUid())) { // person\u0027s uid not in the event to untag","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"                throw new CommandException(String.format(MESSAGE_INVALID_PERSON, personIndex.getOneBased(),","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"                        person.getName()));","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"        for (Index personIndex : personIndexes) {","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"            Person person \u003d lastShownPersonList.get(personIndex.getZeroBased());","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"            personNamesUntagged.add(person.getName().toString());","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"            uids.remove(person.getUid());","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"        // create editedEvent, set event, update event list","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"        Event untaggedEvent \u003d new Event(eventToUntag, uids);","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"        model.setEvent(eventToUntag, untaggedEvent);","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"        model.updateEventPersonReference();","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"        return new CommandResult(String.format(MESSAGE_UNTAG_EVENT_SUCCESS,","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"Qiaoran-M"},"content":"                String.join(\", \", personNamesUntagged), untaggedEvent.getEventTitle()));","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Qiaoran-M":82}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vinodjayakumar124"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Vinodjayakumar124"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Vinodjayakumar124"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_TITLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Vinodjayakumar124"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PURPOSE;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Vinodjayakumar124"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.StartDate;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.StartTime;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Vinodjayakumar124"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Vinodjayakumar124"},"content":" * Parses input arguments and creates a new AddEventCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Vinodjayakumar124"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Vinodjayakumar124"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Parses the given String args for an AddEventCommand (i.e title of event;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Vinodjayakumar124"},"content":"     * date; time and purpose) and returns new AddEventCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @param args String containing all user inputs excluding the command word","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @return AddEventCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @throws ParseException if user input is not in expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Vinodjayakumar124"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Vinodjayakumar124"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"lfrostbytee"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENT_TITLE, PREFIX_START_DATE,","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"lfrostbytee"},"content":"                        PREFIX_START_TIME, PREFIX_PURPOSE);","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"lfrostbytee"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENT_TITLE, PREFIX_START_DATE, PREFIX_START_TIME, PREFIX_PURPOSE)","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"Vinodjayakumar124"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Vinodjayakumar124"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Vinodjayakumar124"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Vinodjayakumar124"},"content":"        String eventTitle \u003d ParserUtil.parseEventTitle(argMultimap.getValue(PREFIX_EVENT_TITLE).get());","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"lfrostbytee"},"content":"        StartDate startDate \u003d ParserUtil.parseStartDate(argMultimap.getValue(PREFIX_START_DATE).get());","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"lfrostbytee"},"content":"        StartTime startTime \u003d ParserUtil.parseStartTime(argMultimap.getValue(PREFIX_START_TIME).get());","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"Vinodjayakumar124"},"content":"        String purpose \u003d ParserUtil.parsePurpose(argMultimap.getValue(PREFIX_PURPOSE).get());","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"lfrostbytee"},"content":"        Event event \u003d new Event(eventTitle, startDate, startTime, purpose);","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Vinodjayakumar124"},"content":"        return new AddEventCommand(event);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Vinodjayakumar124"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Vinodjayakumar124"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Vinodjayakumar124"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Vinodjayakumar124"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Vinodjayakumar124":46,"lfrostbytee":10}},{"path":"src/main/java/seedu/address/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":" * Parses input arguments and creates a new AddPersonCommand object","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPersonCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"     * and returns an AddPersonCommand object for execution.","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"                 PREFIX_EMAIL, PREFIX_DOB, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_GENDER); // add gender prefix","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_DOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"        } // gender prefix not checked since it\u0027s optional","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"        DateOfBirth dob \u003d ParserUtil.parseDob(argMultimap.getValue(PREFIX_DOB).get());","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"        // add gender in parser","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"        Gender gender;","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GENDER)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"            gender \u003d Gender.getNoGender();","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"        } else {","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"            gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get(), Boolean.FALSE);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"        Uid uid \u003d new Uid();","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"        Person person \u003d new Person(name, phone, email, dob, address, tagList, gender, uid);","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"tanhl2000"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is NOT modified because gender is considered an optional field.","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"tanhl2000":14,"Qiaoran-M":15,"-":47}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.logic.commands.FindPersonsCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.logic.commands.ListEventsCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.logic.commands.MakeStatsCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.logic.commands.TagEventCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.logic.commands.UntagEventCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"        case AddPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"            return new AddPersonCommandParser().parse(arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"        case DeletePersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"            return new DeletePersonCommandParser().parse(arguments);","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"lfrostbytee"},"content":"        case FindPersonsCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"lfrostbytee"},"content":"            return new FindPersonsCommandParser().parse(arguments);","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"Benjamin-Sim"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"lfrostbytee"},"content":"        case MakeStatsCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"lfrostbytee"},"content":"            return new MakeStatsCommand();","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"lfrostbytee"},"content":"        case ListEventsCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"lfrostbytee"},"content":"            return new ListEventsCommand();","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"Vinodjayakumar124"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"Vinodjayakumar124"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"Vinodjayakumar124"},"content":"        case DeleteEventCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"Vinodjayakumar124"},"content":"            return new DeleteEventCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"Qiaoran-M"},"content":"        // add TagEventCommand in AddressBook parser","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"Qiaoran-M"},"content":"        case TagEventCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"Qiaoran-M"},"content":"            return new TagEventCommandParser().parse(arguments);","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"Qiaoran-M"},"content":"        //add UntagEventCommand in AddressBook parser","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"Qiaoran-M"},"content":"        case UntagEventCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"Qiaoran-M"},"content":"            return new UntagEventCommandParser().parse(arguments);","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Vinodjayakumar124":7,"tanhl2000":3,"Benjamin-Sim":1,"Qiaoran-M":12,"lfrostbytee":10,"-":65}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"Vinodjayakumar124"},"content":"    // One prefix can be used for multiple reasons because they are imported by their respective commands.","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Vinodjayakumar124"},"content":"    // Prefix associated with Person","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"    public static final Prefix PREFIX_DOB \u003d new Prefix(\"d/\"); //Added in \"d/\" prefix for DOB","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"Vinodjayakumar124"},"content":"    public static final Prefix PREFIX_SORT \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Vinodjayakumar124"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"Vinodjayakumar124"},"content":"    // Prefix associated with Event","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"    public static final Prefix PREFIX_START_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"lfrostbytee"},"content":"    public static final Prefix PREFIX_START_TIME \u003d new Prefix(\"t/\"); //same as PREFIX_TAG","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Vinodjayakumar124"},"content":"    public static final Prefix PREFIX_PURPOSE \u003d new Prefix(\"p/\"); //same as PREFIX_PHONE","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Vinodjayakumar124"},"content":"    public static final Prefix PREFIX_EVENT_TITLE \u003d new Prefix(\"e/\");","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    public static final Prefix PREFIX_PERSONS \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Vinodjayakumar124":7,"tanhl2000":1,"lfrostbytee":2,"Qiaoran-M":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vinodjayakumar124"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Vinodjayakumar124"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Vinodjayakumar124"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Vinodjayakumar124"},"content":" * Parse input index supplied and creates new DeleteEventCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Vinodjayakumar124"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Vinodjayakumar124"},"content":"public class DeleteEventCommandParser {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Parses the given String of arguments in the required format by the DeleteEventCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Vinodjayakumar124"},"content":"     * and returns a DeleteEventCommand object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Vinodjayakumar124"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Vinodjayakumar124"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Vinodjayakumar124"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Vinodjayakumar124"},"content":"            return new DeleteEventCommand(index);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"Vinodjayakumar124"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Vinodjayakumar124"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Vinodjayakumar124"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Vinodjayakumar124"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"Vinodjayakumar124"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Vinodjayakumar124":28}},{"path":"src/main/java/seedu/address/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Qiaoran-M":5,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"                PREFIX_DOB, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_GENDER);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"tanhl2000"},"content":"        if (argMultimap.getValue(PREFIX_DOB).isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"            editPersonDescriptor.setDob(ParserUtil.parseDob(argMultimap.getValue(PREFIX_DOB).get()));","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get(),","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"                    Boolean.TRUE));","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tanhl2000":6,"Qiaoran-M":5,"-":80}},{"path":"src/main/java/seedu/address/logic/parser/FindPersonsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.logic.commands.FindPersonsCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"lfrostbytee"},"content":" * Parses input arguments and creates a new FindPersonsCommand object","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":"public class FindPersonsCommandParser implements Parser\u003cFindPersonsCommand\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPersonsCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"lfrostbytee"},"content":"     * and returns a FindPersonsCommand object for execution.","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"    public FindPersonsCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"lfrostbytee"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"lfrostbytee"},"content":"        return new FindPersonsCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"lfrostbytee":8,"-":25}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjamin-Sim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Benjamin-Sim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Benjamin-Sim"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Benjamin-Sim"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Benjamin-Sim"},"content":"import seedu.address.model.person.SortField;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Benjamin-Sim"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Benjamin-Sim"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Benjamin-Sim"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Benjamin-Sim"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Benjamin-Sim"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Benjamin-Sim"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Benjamin-Sim"},"content":"     * and returns a {@code ListCommand} for execution.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Benjamin-Sim"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Benjamin-Sim"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Benjamin-Sim"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Benjamin-Sim"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Benjamin-Sim"},"content":"        SortField sortField;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Benjamin-Sim"},"content":"        ArgumentMultimap argMultiMap \u003d ArgumentTokenizer.tokenize(args, PREFIX_SORT);","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Benjamin-Sim"},"content":"        // If sort field is missing","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Benjamin-Sim"},"content":"        if (!argMultiMap.getValue(PREFIX_SORT).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Benjamin-Sim"},"content":"            // Don\u0027t perform any sorting","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Benjamin-Sim"},"content":"            sortField \u003d SortField.sortByNoField();","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Benjamin-Sim"},"content":"        // Else sort field is present","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Benjamin-Sim"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Benjamin-Sim"},"content":"            sortField \u003d ParserUtil.parseSortField(argMultiMap.getValue(PREFIX_SORT).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Benjamin-Sim"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Benjamin-Sim"},"content":"        return new ListCommand(sortField);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Benjamin-Sim"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Benjamin-Sim":39}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.StartDate;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.StartTime;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"Benjamin-Sim"},"content":"import seedu.address.model.person.SortField;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"Benjamin-Sim"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Benjamin-Sim"},"content":"     * Parses a {@code String sortFieldLetter} into a {@code SortField}.","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Benjamin-Sim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Benjamin-Sim"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Benjamin-Sim"},"content":"     * @param sortFieldLetter A valid sort field letter.","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"Benjamin-Sim"},"content":"     * @return {@code SortField} representing the sort field letter.","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Benjamin-Sim"},"content":"     * @throws ParseException if the given {@code sortFieldLetter} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Benjamin-Sim"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"Benjamin-Sim"},"content":"    public static SortField parseSortField(String sortFieldLetter) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"Benjamin-Sim"},"content":"        requireNonNull(sortFieldLetter);","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"Benjamin-Sim"},"content":"        String trimmedSortFieldLetter \u003d sortFieldLetter.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"Benjamin-Sim"},"content":"        if (!SortField.isValidSortField(trimmedSortFieldLetter)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"Benjamin-Sim"},"content":"            throw new ParseException(SortField.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"Benjamin-Sim"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"Benjamin-Sim"},"content":"        return SortField.createSortField(trimmedSortFieldLetter);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"tanhl2000"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"tanhl2000"},"content":"     * Parses a {@code String dob} into a {@code DateOfBirth}.","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"tanhl2000"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"tanhl2000"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"tanhl2000"},"content":"     * @throws ParseException if the given {@code dob} is invalid.","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"tanhl2000"},"content":"    public static DateOfBirth parseDob(String dob) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"tanhl2000"},"content":"        requireNonNull(dob);","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"tanhl2000"},"content":"        String trimmedDob \u003d dob.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"tanhl2000"},"content":"        if (!DateOfBirth.isValidDateOfBirth(dob)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"tanhl2000"},"content":"            throw new ParseException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"tanhl2000"},"content":"        return new DateOfBirth(trimmedDob);","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"Qiaoran-M"},"content":"     * Parses a {@code String gender} into an {@code Gender}.","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"Qiaoran-M"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"Qiaoran-M"},"content":"     * @param gender string containing gender.","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"Qiaoran-M"},"content":"     * @param isNaAllowed boolean value, true represents NA value is considered a valid gender, false otherwise.","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"Qiaoran-M"},"content":"     *                    For Edit gender command, NA value is considered a valid gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"Qiaoran-M"},"content":"     *                    for Add gender command, NA value is considered an invalid gender.","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"Qiaoran-M"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"Qiaoran-M"},"content":"    public static Gender parseGender(String gender, Boolean isNaAllowed) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"Qiaoran-M"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"Qiaoran-M"},"content":"        requireNonNull(isNaAllowed);","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"Qiaoran-M"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"Qiaoran-M"},"content":"        if (!Gender.isValidGender(trimmedGender, isNaAllowed)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"Qiaoran-M"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":157,"author":{"gitId":"Qiaoran-M"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2022-10-14"},{"lineNumber":158,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":186,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Returns the String eventTitle passed to it.","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"Vinodjayakumar124"},"content":"    public static String parseEventTitle(String eventTitle) {","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"Vinodjayakumar124"},"content":"        requireNonNull(eventTitle);","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":193,"author":{"gitId":"Vinodjayakumar124"},"content":"        return eventTitle;","lastModifiedDate":"2022-10-05"},{"lineNumber":194,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":195,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":196,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"lfrostbytee"},"content":"     * Parses a {@code String startDate} into a {@code StartDate}.","lastModifiedDate":"2022-10-15"},{"lineNumber":198,"author":{"gitId":"lfrostbytee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-15"},{"lineNumber":199,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"lfrostbytee"},"content":"    public static StartDate parseStartDate(String startDate) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":201,"author":{"gitId":"lfrostbytee"},"content":"        requireNonNull(startDate);","lastModifiedDate":"2022-10-15"},{"lineNumber":202,"author":{"gitId":"lfrostbytee"},"content":"        String trimmedStartDate \u003d startDate.trim();","lastModifiedDate":"2022-10-15"},{"lineNumber":203,"author":{"gitId":"lfrostbytee"},"content":"        if (!StartDate.isValidStartDate(startDate)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":204,"author":{"gitId":"lfrostbytee"},"content":"            throw new ParseException(StartDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":205,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":206,"author":{"gitId":"lfrostbytee"},"content":"        return new StartDate(trimmedStartDate);","lastModifiedDate":"2022-10-15"},{"lineNumber":207,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":208,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":209,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"lfrostbytee"},"content":"     * Parses a {@code String startTime} into a {@code StartTime}.","lastModifiedDate":"2022-10-15"},{"lineNumber":211,"author":{"gitId":"lfrostbytee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-15"},{"lineNumber":212,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"lfrostbytee"},"content":"    public static StartTime parseStartTime(String startTime) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":214,"author":{"gitId":"lfrostbytee"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2022-10-15"},{"lineNumber":215,"author":{"gitId":"lfrostbytee"},"content":"        String trimmedStartTime \u003d startTime.trim();","lastModifiedDate":"2022-10-15"},{"lineNumber":216,"author":{"gitId":"lfrostbytee"},"content":"        if (!StartTime.isValidStartTime(startTime)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":217,"author":{"gitId":"lfrostbytee"},"content":"            throw new ParseException(StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":218,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":219,"author":{"gitId":"lfrostbytee"},"content":"        return new StartTime(trimmedStartTime);","lastModifiedDate":"2022-10-15"},{"lineNumber":220,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":221,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":222,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":223,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Returns the String purpose passed to it.","lastModifiedDate":"2022-10-10"},{"lineNumber":224,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":225,"author":{"gitId":"Vinodjayakumar124"},"content":"    public static String parsePurpose(String purpose) {","lastModifiedDate":"2022-10-05"},{"lineNumber":226,"author":{"gitId":"Vinodjayakumar124"},"content":"        requireNonNull(purpose);","lastModifiedDate":"2022-10-05"},{"lineNumber":227,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":228,"author":{"gitId":"Vinodjayakumar124"},"content":"        return purpose;","lastModifiedDate":"2022-10-05"},{"lineNumber":229,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":230,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":231,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":232,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns the uid list passed to it.","lastModifiedDate":"2022-10-17"},{"lineNumber":233,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":234,"author":{"gitId":"Qiaoran-M"},"content":"    public static List\u003cIndex\u003e parseIndexes(String indexes) throws ParseException {","lastModifiedDate":"2022-10-17"},{"lineNumber":235,"author":{"gitId":"Qiaoran-M"},"content":"        requireNonNull(indexes);","lastModifiedDate":"2022-10-17"},{"lineNumber":236,"author":{"gitId":"Qiaoran-M"},"content":"        String trimmedIndexes \u003d indexes.trim();","lastModifiedDate":"2022-10-17"},{"lineNumber":237,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cString\u003e strIndexes \u003d Arrays.asList(trimmedIndexes.split(\"\\\\s+\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":238,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cIndex\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":239,"author":{"gitId":"Qiaoran-M"},"content":"        for (String index : strIndexes) {","lastModifiedDate":"2022-10-17"},{"lineNumber":240,"author":{"gitId":"Qiaoran-M"},"content":"            if (!StringUtil.isNonZeroUnsignedInteger(index)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":241,"author":{"gitId":"Qiaoran-M"},"content":"                throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":242,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":243,"author":{"gitId":"Qiaoran-M"},"content":"            indexList.add(Index.fromOneBased(Integer.parseInt(index)));","lastModifiedDate":"2022-10-17"},{"lineNumber":244,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":245,"author":{"gitId":"Qiaoran-M"},"content":"        return indexList;","lastModifiedDate":"2022-10-17"},{"lineNumber":246,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tanhl2000":16,"Benjamin-Sim":20,"Vinodjayakumar124":26,"Qiaoran-M":41,"lfrostbytee":20,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/TagEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSONS;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.logic.commands.TagEventCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":" * Parses input arguments and creates a new TagEventCommand object","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"public class TagEventCommandParser implements Parser\u003cTagEventCommand\u003e {","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"     * Parses the given {@code String} of arguments in the context of the TagEventCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"     * and returns an TagEventCommand object for execution.","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"    public TagEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PERSONS);","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"        Index eventIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"            eventIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PERSONS)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cIndex\u003e personIndexes \u003d ParserUtil.parseIndexes(argMultimap.getValue(PREFIX_PERSONS).get());","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"        return new TagEventCommand(eventIndex, personIndexes);","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Qiaoran-M":47}},{"path":"src/main/java/seedu/address/logic/parser/UntagEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSONS;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.logic.commands.UntagEventCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":" * Parses input arguments and creates a new UntagEventCommand object","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"public class UntagEventCommandParser implements Parser\u003cUntagEventCommand\u003e {","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"     * Parses the given {@code String} of arguments in the context of the UntagEventCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"     * and returns an UntagEventCommand object for execution.","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"    public UntagEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PERSONS);","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"        Index eventIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"            eventIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"                    UntagEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PERSONS)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UntagEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cIndex\u003e personIndexes \u003d ParserUtil.parseIndexes(argMultimap.getValue(PREFIX_PERSONS).get());","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"        return new UntagEventCommand(eventIndex, personIndexes);","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Qiaoran-M":47}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Benjamin-Sim"},"content":"import seedu.address.model.person.SortField;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"lfrostbytee"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"lfrostbytee"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"lfrostbytee"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"lfrostbytee"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"lfrostbytee"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":70,"author":{"gitId":"lfrostbytee"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"Benjamin-Sim"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"Benjamin-Sim"},"content":"     * Sorts the persons by the given {@code SortField}.","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"Benjamin-Sim"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"Benjamin-Sim"},"content":"     * @param sortField field to sort by.","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"Benjamin-Sim"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"Benjamin-Sim"},"content":"    public void sortPersons(SortField sortField) {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"Benjamin-Sim"},"content":"        requireNonNull(sortField);","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"Benjamin-Sim"},"content":"        persons.sort(sortField);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"Vinodjayakumar124"},"content":"    //// event-level operations","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"Vinodjayakumar124"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"Vinodjayakumar124"},"content":"        this.events.add(e);","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"Vinodjayakumar124"},"content":"    public void deleteEvent(Event e) {","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"Vinodjayakumar124"},"content":"        this.events.remove(e);","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"Qiaoran-M"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"Qiaoran-M"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2022-10-17"},{"lineNumber":135,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"Qiaoran-M"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2022-10-17"},{"lineNumber":137,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":138,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":152,"author":{"gitId":"lfrostbytee"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"lfrostbytee"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"lfrostbytee"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Benjamin-Sim":12,"Vinodjayakumar124":10,"lfrostbytee":18,"Qiaoran-M":6,"-":122}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.model.person.SortField;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Adds the given event.","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Vinodjayakumar124"},"content":"     * {@code event} must not already exist in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"Vinodjayakumar124"},"content":"    void addEvent(Event event);","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Deletes the given event.","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"Vinodjayakumar124"},"content":"     * The event must exist in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"Vinodjayakumar124"},"content":"    void deleteEvent(Event event);","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Sorts all the persons in the address book by the given {@code sortField}.","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"Vinodjayakumar124"},"content":"    void sortPersons(SortField sortField);","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"Qiaoran-M"},"content":"     * Replaces the given event {@code target} with {@code editedEvent}.","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"Qiaoran-M"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"Qiaoran-M"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"Qiaoran-M"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"lfrostbytee"},"content":"    /** Returns an unmodifiable view of the filtered event list */","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"lfrostbytee"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"lfrostbytee"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"lfrostbytee"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"lfrostbytee"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"Qiaoran-M"},"content":"     * Updates the reference to Persons from Events.","lastModifiedDate":"2022-10-17"},{"lineNumber":127,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"Qiaoran-M"},"content":"    void updateEventPersonReference();","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Vinodjayakumar124":18,"lfrostbytee":12,"Qiaoran-M":12,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.model.person.SortField;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"lfrostbytee"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"lfrostbytee"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"Vinodjayakumar124"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"Vinodjayakumar124"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"Vinodjayakumar124"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"Vinodjayakumar124"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"Vinodjayakumar124"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"Vinodjayakumar124"},"content":"    public void deleteEvent(Event event) {","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"Vinodjayakumar124"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"Vinodjayakumar124"},"content":"        addressBook.deleteEvent(event);","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"Qiaoran-M"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"Qiaoran-M"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"Qiaoran-M"},"content":"        addressBook.setEvent(target, editedEvent);","lastModifiedDate":"2022-10-17"},{"lineNumber":135,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":137,"author":{"gitId":"Vinodjayakumar124"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Event List Accessor \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Returns an unmodifiable view of the list of Events backed by the internal list present in the AddressBook","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"Vinodjayakumar124"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"Vinodjayakumar124"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"Vinodjayakumar124"},"content":"        return filteredEvents;","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"Vinodjayakumar124"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"Vinodjayakumar124"},"content":"    public void sortPersons(SortField sortField) {","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"Vinodjayakumar124"},"content":"        requireNonNull(sortField);","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"Vinodjayakumar124"},"content":"        addressBook.sortPersons(sortField);","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":163,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"Qiaoran-M"},"content":"     * Updates an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2022-10-18"},{"lineNumber":165,"author":{"gitId":"lfrostbytee"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":173,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":174,"author":{"gitId":"Qiaoran-M"},"content":"     * Updates an unmodifiable view of the list of {@code Event} backed by the internal list of","lastModifiedDate":"2022-10-18"},{"lineNumber":175,"author":{"gitId":"Qiaoran-M"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-10-18"},{"lineNumber":176,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":177,"author":{"gitId":"lfrostbytee"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"lfrostbytee"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"lfrostbytee"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"lfrostbytee"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":183,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":184,"author":{"gitId":"Qiaoran-M"},"content":"     * Updates the reference between an {@code Event} and the persons it is tagged with.","lastModifiedDate":"2022-10-24"},{"lineNumber":185,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is used after editPerson, deletePerson and tagEvent commands to provide timely GUI update.","lastModifiedDate":"2022-10-18"},{"lineNumber":186,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":187,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":188,"author":{"gitId":"Qiaoran-M"},"content":"    public void updateEventPersonReference() {","lastModifiedDate":"2022-10-17"},{"lineNumber":189,"author":{"gitId":"Qiaoran-M"},"content":"        // This predicate updates the person names in the UidList in each event","lastModifiedDate":"2022-10-25"},{"lineNumber":190,"author":{"gitId":"Qiaoran-M"},"content":"        // All events in the event list are displayed since the predicate returns true for all events","lastModifiedDate":"2022-10-25"},{"lineNumber":191,"author":{"gitId":"Qiaoran-M"},"content":"        this.updateFilteredEventList(x -\u003e x.getUids().setPersonNames(this));","lastModifiedDate":"2022-10-17"},{"lineNumber":192,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Vinodjayakumar124":28,"lfrostbytee":12,"Qiaoran-M":23,"-":150}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"lfrostbytee"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lfrostbytee":6,"-":17}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lfrostbytee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"lfrostbytee"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":" * Event represents a marketing events in the application.","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"lfrostbytee"},"content":"public class Event {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Vinodjayakumar124"},"content":"    private final String eventTitle;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"lfrostbytee"},"content":"    private final StartDate startDate;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":"    private final StartTime startTime;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"lfrostbytee"},"content":"    private final String purpose;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"    //add a list of Customers here","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"    private final UidList uids;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Constructor to create new Event object","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @param eventTitle title of marketing event","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"     * @param startDate date when marketing event begins","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"     * @param startTime time when marketing event begins","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @param purpose summary of what the marketing is about","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"lfrostbytee"},"content":"    public Event(String eventTitle, StartDate startDate, StartTime startTime, String purpose) {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Vinodjayakumar124"},"content":"        this.eventTitle \u003d eventTitle;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"lfrostbytee"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"lfrostbytee"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"lfrostbytee"},"content":"        this.purpose \u003d purpose;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"        this.uids \u003d new UidList();","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"     * Overloaded constructor to create new Event object","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"     * @param eventToCopy event to copy","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"     * @param uids new uid list","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"    public Event(Event eventToCopy, UidList uids) {","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"        this.eventTitle \u003d eventToCopy.eventTitle;","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"        this.startDate \u003d eventToCopy.startDate;","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"        this.startTime \u003d eventToCopy.startTime;","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"        this.purpose \u003d eventToCopy.purpose;","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"        this.uids \u003d uids;","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"     * Overloaded constructor to create new Event object","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"    public Event(String eventTitle, StartDate startDate, StartTime startTime, String purpose, UidList uids) {","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"        this.eventTitle \u003d eventTitle;","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"        this.purpose \u003d purpose;","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"        this.uids \u003d uids;","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"lfrostbytee"},"content":"    public String getEventTitle() {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"Vinodjayakumar124"},"content":"        return this.eventTitle;","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"lfrostbytee"},"content":"    public StartDate getStartDate() {","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"lfrostbytee"},"content":"        return this.startDate;","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"lfrostbytee"},"content":"    public StartTime getStartTime() {","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"lfrostbytee"},"content":"        return this.startTime;","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"lfrostbytee"},"content":"    public String getPurpose() {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"lfrostbytee"},"content":"        return this.purpose;","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"    public UidList getUids() {","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"        return this.uids;","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns true if the person is tagged to the event.","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"    public boolean containsPerson(Person person) {","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"        return uids.contains(person.getUid());","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"lfrostbytee"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"lfrostbytee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"lfrostbytee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"lfrostbytee"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"lfrostbytee"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"lfrostbytee"},"content":"            return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"lfrostbytee"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"lfrostbytee"},"content":"        return otherEvent.getEventTitle().equals(this.getEventTitle())","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"lfrostbytee"},"content":"                \u0026\u0026 otherEvent.getStartDate().equals(this.getStartDate())","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"lfrostbytee"},"content":"                \u0026\u0026 otherEvent.getStartTime().equals(this.getStartTime())","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"Qiaoran-M"},"content":"                \u0026\u0026 otherEvent.getPurpose().equals(this.getPurpose())","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"Qiaoran-M"},"content":"                \u0026\u0026 otherEvent.getUids().equals(this.getUids()); //add customers in equals method","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"lfrostbytee"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"lfrostbytee"},"content":"    public String toString() {","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"lfrostbytee"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"lfrostbytee"},"content":"        builder.append(\"Event Title: \")","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"lfrostbytee"},"content":"                .append(this.getEventTitle())","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"lfrostbytee"},"content":"                .append(\"; Start Date: \")","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"lfrostbytee"},"content":"                .append(this.getStartDate())","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"lfrostbytee"},"content":"                .append(\"; Start Time: \")","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"lfrostbytee"},"content":"                .append(this.getStartTime())","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"lfrostbytee"},"content":"                .append(\"; Purpose: \")","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"lfrostbytee"},"content":"                .append(this.getPurpose());","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"lfrostbytee"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"lfrostbytee"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Vinodjayakumar124":8,"lfrostbytee":65,"Qiaoran-M":39}},{"path":"src/main/java/seedu/address/model/event/StartDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lfrostbytee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"lfrostbytee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"lfrostbytee"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"lfrostbytee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"lfrostbytee"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":" * Represents an Event\u0027s starting date in the address book.","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"lfrostbytee"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStartDate(String)}","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"lfrostbytee"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":"public class StartDate {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Start date must be in format: dd/MM/yyyy\";","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"lfrostbytee"},"content":"    //for checking if valid input date format","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"    private static final DateTimeFormatter checkFormatter \u003d DateTimeFormatter","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"            .ofPattern(\"[d/M/yyyy][dd/M/yyyy][d/MM/yyyy][dd/MM/yyyy]\");","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"lfrostbytee"},"content":"    //for changing to storage friendly format","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"lfrostbytee"},"content":"    private static final DateTimeFormatter logFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"lfrostbytee"},"content":"    //for changing to user-readable format","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"lfrostbytee"},"content":"    private static final DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d, yyyy\");","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"lfrostbytee"},"content":"    public final LocalDate date;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"lfrostbytee"},"content":"     * Constructs a {@code StartDate}.","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"lfrostbytee"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"lfrostbytee"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"lfrostbytee"},"content":"    public StartDate(String date) {","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"lfrostbytee"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"lfrostbytee"},"content":"        assert !date.isBlank();","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"lfrostbytee"},"content":"        checkArgument(isValidStartDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"lfrostbytee"},"content":"        this.date \u003d LocalDate.parse(date, logFormatter);","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"lfrostbytee"},"content":"     * Returns true if a given string is a valid StartDate input.","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"lfrostbytee"},"content":"     * @return boolean","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"lfrostbytee"},"content":"    //found from https://mkyong.com/java/how-to-check-if-date-is-valid-in-java/","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"lfrostbytee"},"content":"    public static boolean isValidStartDate(String test) {","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"lfrostbytee"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"lfrostbytee"},"content":"            LocalDate.parse(test, checkFormatter);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"lfrostbytee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"lfrostbytee"},"content":"            return false;","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"lfrostbytee"},"content":"        return true;","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"lfrostbytee"},"content":"    //TODO: To be re-implemented by Benjamin for Sort By Date","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"lfrostbytee"},"content":"    ///**","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"lfrostbytee"},"content":"    // * Returns 1 if the other object is a StartDate that is later,","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"lfrostbytee"},"content":"    // * -1 if the other object is a StartDate that is earlier,","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"lfrostbytee"},"content":"    // * and 0 if the other object is a StartDate that is of the same date.","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"lfrostbytee"},"content":"    // * @param other The object to compare with","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"lfrostbytee"},"content":"    // * @return int","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"lfrostbytee"},"content":"    // */","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"lfrostbytee"},"content":"    //public int compareTo(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"lfrostbytee"},"content":"    //    if (other \u003d\u003d null) {","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"lfrostbytee"},"content":"    //        return -1;","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"lfrostbytee"},"content":"    //    }","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"lfrostbytee"},"content":"    //    if (!(other instanceof StartDate)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"lfrostbytee"},"content":"    //        throw new IllegalArgumentException(MESSAGE_ARGUMENT_CONSTRAINTS);","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"lfrostbytee"},"content":"    //    }","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"lfrostbytee"},"content":"    //    if (this.isEmpty() \u0026 ((StartDate) other).isEmpty()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"lfrostbytee"},"content":"    //        return 0;","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"lfrostbytee"},"content":"    //    }","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"lfrostbytee"},"content":"    //    return this.date.compareTo(((StartDate) other).date);","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"lfrostbytee"},"content":"    //}","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"lfrostbytee"},"content":"     * Returns the String representation of the StartDate in format suitable for storage logging","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"lfrostbytee"},"content":"     * @return String","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"lfrostbytee"},"content":"    public String toLogFormat() {","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"lfrostbytee"},"content":"        return this.date.format(logFormatter);","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"lfrostbytee"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"lfrostbytee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"lfrostbytee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"lfrostbytee"},"content":"            return true;","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"lfrostbytee"},"content":"        if (!(other instanceof StartDate)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"lfrostbytee"},"content":"            return false;","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"lfrostbytee"},"content":"        StartDate sd \u003d (StartDate) other;","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"lfrostbytee"},"content":"        return this.date.equals(sd.date);","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"lfrostbytee"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"lfrostbytee"},"content":"    public String toString() {","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"lfrostbytee"},"content":"        return this.date.format(outputFormatter);","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"lfrostbytee"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"lfrostbytee"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"lfrostbytee"},"content":"        return this.date.hashCode();","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"lfrostbytee"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"lfrostbytee":108}},{"path":"src/main/java/seedu/address/model/event/StartTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lfrostbytee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"lfrostbytee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"lfrostbytee"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"lfrostbytee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"lfrostbytee"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":" * Represents an Event\u0027s starting time in the address book.","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"lfrostbytee"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStartTime(String)}","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"lfrostbytee"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":"public class StartTime {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Start time must be in format: hh/mm/AM, hh/mm/PM or hh:mm\";","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"lfrostbytee"},"content":"    //for checking if valid input date format","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"    private static final DateTimeFormatter checkFormatter \u003d DateTimeFormatter","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"            .ofPattern(\"[HH:MM][hh/mm/a][h/mm/a][hh/m/a][h/m/a]\");","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"lfrostbytee"},"content":"    //for changing to storage friendly format","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"lfrostbytee"},"content":"    private static final DateTimeFormatter logFormatter \u003d DateTimeFormatter.ofPattern(\"hh/mm/a\");","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"lfrostbytee"},"content":"    //for changing to user-readable format","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"lfrostbytee"},"content":"    private static final DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"lfrostbytee"},"content":"    public final LocalTime time;","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"lfrostbytee"},"content":"     * Constructs a {@code StartTime}.","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"lfrostbytee"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"lfrostbytee"},"content":"     * @param startTime A valid start time.","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"lfrostbytee"},"content":"    public StartTime(String startTime) {","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"lfrostbytee"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"lfrostbytee"},"content":"        assert !startTime.isBlank();","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"lfrostbytee"},"content":"        checkArgument(isValidStartTime(startTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"lfrostbytee"},"content":"        this.time \u003d LocalTime.parse(startTime, checkFormatter);","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"lfrostbytee"},"content":"     * Returns true if a given string is a valid StartTime input.","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"lfrostbytee"},"content":"     * @return boolean","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"lfrostbytee"},"content":"    //found from https://mkyong.com/java/how-to-check-if-date-is-valid-in-java/","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"lfrostbytee"},"content":"    public static boolean isValidStartTime(String test) {","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"lfrostbytee"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"lfrostbytee"},"content":"            LocalTime.parse(test, checkFormatter);","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"lfrostbytee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"lfrostbytee"},"content":"            return false;","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"lfrostbytee"},"content":"        return true;","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"lfrostbytee"},"content":"    //TODO: To be re-implemented by Benjamin for Sort By Date","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"lfrostbytee"},"content":"    ///**","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"lfrostbytee"},"content":"    // * Returns 1 if the other object is a StartTime that is later,","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"lfrostbytee"},"content":"    // * -1 if the other object is a StartTime that is earlier,","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"lfrostbytee"},"content":"    // * and 0 if the other object is a StartTime that is of the same time.","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"lfrostbytee"},"content":"    // * @param other The object to compare with","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"lfrostbytee"},"content":"    // * @return int","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"lfrostbytee"},"content":"    // */","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"lfrostbytee"},"content":"    //public int compareTo(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"lfrostbytee"},"content":"    //    if (other \u003d\u003d null) {","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"lfrostbytee"},"content":"    //        return -1;","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"lfrostbytee"},"content":"    //    }","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"lfrostbytee"},"content":"    //    if (!(other instanceof StartTime)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"lfrostbytee"},"content":"    //        throw new IllegalArgumentException(MESSAGE_ARGUMENT_CONSTRAINTS);","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"lfrostbytee"},"content":"    //    }","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"lfrostbytee"},"content":"    //    if (this.isEmpty() \u0026 ((StartTime) other).isEmpty()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"lfrostbytee"},"content":"    //        return 0;","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"lfrostbytee"},"content":"    //    }","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"lfrostbytee"},"content":"    //    return this.startTime.compareTo(((StartTime) other).startTime);","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"lfrostbytee"},"content":"    //}","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"lfrostbytee"},"content":"     * Returns the String representation of the StartTime in format suitable for storage logging","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"lfrostbytee"},"content":"     * @return String","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"lfrostbytee"},"content":"    public String toLogFormat() {","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"lfrostbytee"},"content":"        return this.time.format(logFormatter);","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"lfrostbytee"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"lfrostbytee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"lfrostbytee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"lfrostbytee"},"content":"            return true;","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"lfrostbytee"},"content":"        if (!(other instanceof StartTime)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"lfrostbytee"},"content":"            return false;","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"lfrostbytee"},"content":"        StartTime st \u003d (StartTime) other;","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"lfrostbytee"},"content":"        return this.time.equals(st.time);","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"lfrostbytee"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"lfrostbytee"},"content":"    public String toString() {","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"lfrostbytee"},"content":"        return this.time.format(outputFormatter);","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"lfrostbytee"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"lfrostbytee"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"lfrostbytee"},"content":"        return this.time.hashCode();","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"lfrostbytee"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"lfrostbytee":108}},{"path":"src/main/java/seedu/address/model/event/UidList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package seedu.address.model.event;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import static javafx.collections.FXCollections.observableArrayList;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import static javafx.collections.FXCollections.unmodifiableObservableList;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":" * A list of uids of persons.","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":" * */","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"public class UidList implements Iterable\u003cUid\u003e {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"    private final ObservableList\u003cUid\u003e internalList \u003d observableArrayList();","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"    private final ObservableList\u003cUid\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"            unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"    private String personNames \u003d \"\";","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns true if the uid to be checked is already present in the uid list.","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"     * @param toCheck uid to be checked if a duplicate is present in the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"    public boolean contains(Uid toCheck) {","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"        return internalList.stream().anyMatch(toCheck::isSameUid);","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"     * Adds a new uid to the list of uids it stores in its list.","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"     * @param toAdd uid to be added to the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"    public void add(Uid toAdd) {","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"            // this operation will result in Duplicates Persons.","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"     * Removes the person associated with the given {@code Uid toRemove} from the list.","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"     * The person must exist in the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"    public void remove(Uid toRemove) {","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns the internal list as an observableList object.","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"    public ObservableList\u003cUid\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a list of Person object corresponding to the uids in the UidList object.","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"     * @return a list of persons.","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"    public ObservableList\u003cPerson\u003e getPersons(Model model) {","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"        ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"        ObservableList\u003cPerson\u003e modelPersons \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"        for (Person person : modelPersons) {","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"            if (this.contains(person.getUid())) {","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"                persons.add(person);","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"        return persons;","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"Qiaoran-M"},"content":"     * Update personNames corresponding to the UidList with new string of person names.","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is called after editPerson, tagEvent, untagEvent commands.","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"Qiaoran-M"},"content":"     * @return dummy return value true.","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"Qiaoran-M"},"content":"    public boolean setPersonNames(Model model) {","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cString\u003e personNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"Qiaoran-M"},"content":"        ObservableList\u003cPerson\u003e persons \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"Qiaoran-M"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"Qiaoran-M"},"content":"        for (Person person : persons) {","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"Qiaoran-M"},"content":"            if (this.contains(person.getUid())) {","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"Qiaoran-M"},"content":"                personNames.add(String.format(\"%s\", person.getName().toString()));","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"Qiaoran-M"},"content":"                count +\u003d 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"Qiaoran-M"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"Qiaoran-M"},"content":"            this.personNames \u003d \"0 people\";","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"Qiaoran-M"},"content":"        } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"Qiaoran-M"},"content":"            this.personNames \u003d String.format(\"%d people: %s\", count, String.join(\", \", personNames));","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"Qiaoran-M"},"content":"        return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"Qiaoran-M"},"content":"    public String getPersonNames() {","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"Qiaoran-M"},"content":"        return this.personNames;","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":105,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"Qiaoran-M"},"content":"    public Iterator\u003cUid\u003e iterator() {","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"Qiaoran-M"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"Qiaoran-M"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"Qiaoran-M"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"Qiaoran-M"},"content":"                || (other instanceof UidList // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"Qiaoran-M"},"content":"                \u0026\u0026 internalList.equals(((UidList) other).internalList));","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"Qiaoran-M"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"Qiaoran-M"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Qiaoran-M":121}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vinodjayakumar124"},"content":"package seedu.address.model.event;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Vinodjayakumar124"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Vinodjayakumar124"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Vinodjayakumar124"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Vinodjayakumar124"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Vinodjayakumar124"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Vinodjayakumar124"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Vinodjayakumar124"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Vinodjayakumar124"},"content":" * A list of Events that ensures that all events presents in its internal data structure are unique. Also,","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Vinodjayakumar124"},"content":" * no null are allowed.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Vinodjayakumar124"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Vinodjayakumar124"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Vinodjayakumar124"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Vinodjayakumar124"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Vinodjayakumar124"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Returns true if the events to be checked is already present in its internal list.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @param toCheck event to be checked if a duplicate is present in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Vinodjayakumar124"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Vinodjayakumar124"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Vinodjayakumar124"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Adds a new Event to the list of events it stores in its internal list.","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @param toAdd Event to be added to the internal list.","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Vinodjayakumar124"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Vinodjayakumar124"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Vinodjayakumar124"},"content":"        //TODO: add Exceptions specific to Events","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Vinodjayakumar124"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Replace the entire list with the given UniqueEventList","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @param replacementEvents UniqueEventList to replace the current internal list","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Vinodjayakumar124"},"content":"    public void setEvents(UniqueEventList replacementEvents) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Vinodjayakumar124"},"content":"        requireNonNull(replacementEvents);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Vinodjayakumar124"},"content":"        internalList.setAll(replacementEvents.internalList);","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Replace the entire list with the given list","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @param replacementEvents List to replace the current internal list","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Vinodjayakumar124"},"content":"    public void setEvents(List\u003cEvent\u003e replacementEvents) {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Vinodjayakumar124"},"content":"        requireAllNonNull(replacementEvents);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"Vinodjayakumar124"},"content":"        internalList.setAll(replacementEvents);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Edits the specific event and replaces it with the new Event\u0027s information","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @param target event to be replaced","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @param editedEvent event to replace with","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"Vinodjayakumar124"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"Vinodjayakumar124"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Vinodjayakumar124"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Vinodjayakumar124"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"Vinodjayakumar124"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"Vinodjayakumar124"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Vinodjayakumar124"},"content":"        if (!target.equals(editedEvent)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"Vinodjayakumar124"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"Vinodjayakumar124"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Vinodjayakumar124"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"Vinodjayakumar124"},"content":"    //TODO: add method for editing Event at specified index here","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Deletes an event from the internal list","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @param toRemove Event to be deleted","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"Vinodjayakumar124"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"Vinodjayakumar124"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"Vinodjayakumar124"},"content":"        internalList.remove(toRemove);","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"Vinodjayakumar124"},"content":"        //TODO: add exception handling for event not found case","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Returns the internal list as an observableList object","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"Vinodjayakumar124"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"Vinodjayakumar124"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"Vinodjayakumar124"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"Vinodjayakumar124"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"Vinodjayakumar124"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"Vinodjayakumar124"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Vinodjayakumar124":105}},{"path":"src/main/java/seedu/address/model/person/DateOfBirth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":" * Represents a Person\u0027s date of birth in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Benjamin-Sim"},"content":"public class DateOfBirth implements Comparable\u003cDateOfBirth\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date of birth must be in format: dd/mm/yyyy\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"    //for checking if valid input date format","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"    private static final DateTimeFormatter checkFormatter \u003d DateTimeFormatter","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"            .ofPattern(\"[d/M/yyyy][dd/M/yyyy][d/MM/yyyy][dd/MM/yyyy]\");","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"    //for changing to storage friendly format","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"    private static final DateTimeFormatter logFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"    //for changing to user-readable format","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"    private static final DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d, yyyy\");","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Benjamin-Sim"},"content":"    public final LocalDate date;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"     * Constructs an {@code DateOfBirth}.","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"    public DateOfBirth(String date) {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"        checkArgument(isValidDateOfBirth(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"        this.date \u003d LocalDate.parse(date, logFormatter);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"Benjamin-Sim"},"content":"     * Returns true if a given string is a valid DOB input.","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"     * @return boolean","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"    //found from https://mkyong.com/java/how-to-check-if-date-is-valid-in-java/","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"    public static boolean isValidDateOfBirth(String test) {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"            LocalDate.parse(test, checkFormatter);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"            return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"        return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"Benjamin-Sim"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Benjamin-Sim"},"content":"    public int compareTo(DateOfBirth d) {","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Benjamin-Sim"},"content":"        return this.date.compareTo(d.date);","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"tanhl2000"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"tanhl2000"},"content":"     * Returns the the String representation of the DateOfBirth in format suitable for storage logging","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"tanhl2000"},"content":"    public String toLogFormat() {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"tanhl2000"},"content":"        return this.date.format(logFormatter);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"tanhl2000"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"tanhl2000"},"content":"        return this.date.format(outputFormatter);","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"Benjamin-Sim"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"Benjamin-Sim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"Benjamin-Sim"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Benjamin-Sim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"Benjamin-Sim"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"Benjamin-Sim"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"Benjamin-Sim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"Benjamin-Sim"},"content":"        if (!(other instanceof DateOfBirth)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"Benjamin-Sim"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"Benjamin-Sim"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"Benjamin-Sim"},"content":"        // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"Benjamin-Sim"},"content":"        DateOfBirth d \u003d (DateOfBirth) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"tanhl2000"},"content":"        return this.date.equals(d.date);","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"tanhl2000"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"tanhl2000"},"content":"        return this.date.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"tanhl2000":74,"Benjamin-Sim":23}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.model.person.GenderType.NO_GENDER;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":" * Represents a Person\u0027s gender in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Benjamin-Sim"},"content":"public class Gender implements Comparable\u003cGender\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Gender is an optional field, it should be one of the following\"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"        + \" format: m, f, M, F, male, female, Male, Female\";","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"    private static final Set\u003cString\u003e VALID_GENDERS \u003d new HashSet\u003c\u003e(Arrays.asList(\"m\", \"male\", \"M\", \"Male\",","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"            \"f\", \"female\", \"F\", \"Female\", \"NA\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"    public final GenderType value;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"     * Constructs an {@code Gender}.","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"     * @param gender  A valid gender, accepted formats include F, M, f, m, Female, Male, female, male.","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"    public Gender(String gender) {","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"        this.value \u003d GenderType.getGenderType(gender);","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"    public Gender(GenderType gender) {","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"        this.value \u003d gender;","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns if a given string is a valid gender.","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"        return VALID_GENDERS.contains(test);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns if a given string is a valid gender.","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is an overloaded gender validity check method.","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"Benjamin-Sim"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"     * @param test string containing gender.","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"     * @param isNaAllowed boolean value, true represents NA value is considered a valid gender, false otherwise.","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"    public static boolean isValidGender(String test, Boolean isNaAllowed) {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"        if (isNaAllowed) {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"            return VALID_GENDERS.contains(test);","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"            return VALID_GENDERS.contains(test) \u0026\u0026 !test.equals(NO_GENDER.toString());","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns if a given gender is a valid gender.","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is an overloaded gender validity check method.","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"Benjamin-Sim"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"     * @param test a gender object.","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"     * @param isNaAllowed boolean value, true represents NA value is considered a valid gender, false otherwise.","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"    public static boolean isValidGender(Gender test, Boolean isNaAllowed) {","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"        if (isNaAllowed) {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"            return isNaAllowed;","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"            return !test.equals(Gender.getNoGender());","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"    public static Gender getNoGender() {","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"        return new Gender(NO_GENDER);","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"Benjamin-Sim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"Benjamin-Sim"},"content":"     * Compares this object with the given object for order.","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"Benjamin-Sim"},"content":"     * Genders are ordered in the following manner:","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"Benjamin-Sim"},"content":"     * NO_GENDER, FEMALE, MALE","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"Benjamin-Sim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"Benjamin-Sim"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"Benjamin-Sim"},"content":"    public int compareTo(Gender g) {","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"Benjamin-Sim"},"content":"        return this.value.compareTo(g.value);","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"Qiaoran-M"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"Qiaoran-M"},"content":"        return value.toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"Qiaoran-M"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"Qiaoran-M"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"Qiaoran-M"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"Qiaoran-M"},"content":"                \u0026\u0026 value.equals(((Gender) other).value)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"Qiaoran-M"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"Qiaoran-M"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Benjamin-Sim":17,"Qiaoran-M":88}},{"path":"src/main/java/seedu/address/model/person/GenderType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":" * Enum class of a Person\u0027s gender in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":" * The 3 types of gender enum are: MALE, FEMALE, NA","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"public enum GenderType {","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Benjamin-Sim"},"content":"    // Declaration order defines the natural order of GenderType","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Benjamin-Sim"},"content":"    // Natural order is used in the compareTo() method","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Benjamin-Sim"},"content":"    NO_GENDER(\"NA\"), //NA is the default gender option","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"    FEMALE(\"Female\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"Benjamin-Sim"},"content":"    MALE(\"Male\");","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"    private static final Set\u003cString\u003e MALE_GENDERS \u003d new HashSet\u003c\u003e(Arrays.asList(\"m\", \"male\", \"M\", \"Male\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"    private static final Set\u003cString\u003e FEMALE_GENDERS \u003d new HashSet\u003c\u003e(Arrays.asList(\"F\", \"Female\", \"f\", \"female\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"    private String gender;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    GenderType(String gender) {","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"    public static GenderType getGenderType(String gender) {","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"        if (MALE_GENDERS.contains(gender)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"            return MALE;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (FEMALE_GENDERS.contains(gender)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"            return FEMALE;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"        } else {","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"            return NO_GENDER;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"        return this.gender;","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Benjamin-Sim":7,"Qiaoran-M":36}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Benjamin-Sim"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"Benjamin-Sim"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Benjamin-Sim"},"content":"    public int compareTo(Name n) {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Benjamin-Sim"},"content":"        return this.fullName.compareToIgnoreCase(n.fullName);","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Benjamin-Sim":5,"-":58}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"    private final DateOfBirth dob;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"    private final Gender gender; // add gender attribute for person","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"    private final Uid uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"     * Overloaded constructor that takes in optional parameter gender","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"    public Person(Name name, Phone phone, Email email, DateOfBirth dob, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"                  Gender gender, Uid uid) {","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"        requireAllNonNull(name, phone, email, address, tags, gender, uid);","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"    public Person(Name name, Phone phone, Email email, DateOfBirth dob, Address address, Set\u003cTag\u003e tags, Uid uid) {","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"        this.gender \u003d Gender.getNoGender();","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"tanhl2000"},"content":"    public DateOfBirth getDob() {","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"tanhl2000"},"content":"        return dob;","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"    public Gender getGender() {","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"Qiaoran-M"},"content":"        return gender;","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"Qiaoran-M"},"content":"    public Uid getUid() {","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"Qiaoran-M"},"content":"        return uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"Qiaoran-M"},"content":"     * Uid is not included in equality check.","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":129,"author":{"gitId":"tanhl2000"},"content":"                \u0026\u0026 otherPerson.getDob().equals(getDob())","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":131,"author":{"gitId":"Qiaoran-M"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"Qiaoran-M"},"content":"                \u0026\u0026 otherPerson.getGender().equals(getGender()); // add gender field for comparison","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"Qiaoran-M"},"content":"        return Objects.hash(name, phone, email, address, tags, gender); //add gender field","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":150,"author":{"gitId":"tanhl2000"},"content":"                .append(getAddress())","lastModifiedDate":"2022-10-19"},{"lineNumber":151,"author":{"gitId":"tanhl2000"},"content":"                .append(\"; Date of birth: \")","lastModifiedDate":"2022-10-19"},{"lineNumber":152,"author":{"gitId":"tanhl2000"},"content":"                .append(getDob());","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":159,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"Qiaoran-M"},"content":"        if (!getGender().equals(Gender.getNoGender())) {","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"Qiaoran-M"},"content":"            // add gender field in toString method","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"Qiaoran-M"},"content":"            builder.append(\"; Gender: \").append(getGender());","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanhl2000":11,"Qiaoran-M":37,"-":118}},{"path":"src/main/java/seedu/address/model/person/SortField.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjamin-Sim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Benjamin-Sim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Benjamin-Sim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Benjamin-Sim"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Benjamin-Sim"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Benjamin-Sim"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Benjamin-Sim"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Benjamin-Sim"},"content":" * Represents a field to sort Persons by.","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Benjamin-Sim"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSortField(String)}","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Benjamin-Sim"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Benjamin-Sim"},"content":"public class SortField {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Benjamin-Sim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Sort field must either be n, N, d, D, g or G.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Benjamin-Sim"},"content":"    // Accept exactly one upper or lower case n, d or g","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Benjamin-Sim"},"content":"    public static final String VALIDATION_REGEX \u003d \"[nNdDgG]{1}\";","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Benjamin-Sim"},"content":"    // Comparator logic","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Benjamin-Sim"},"content":"    private static final Comparator\u003cPerson\u003e SORT_BY_NAME \u003d (p1, p2) -\u003e p1.getName().compareTo(p2.getName());","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Benjamin-Sim"},"content":"    private static final Comparator\u003cPerson\u003e SORT_BY_DATE_OF_BIRTH \u003d (p1, p2) -\u003e p1.getDob().compareTo(p2.getDob());","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Benjamin-Sim"},"content":"    private static final Comparator\u003cPerson\u003e SORT_BY_GENDER \u003d (p1, p2) -\u003e p1.getGender().compareTo(p2.getGender());","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Benjamin-Sim"},"content":"    private static final Comparator\u003cPerson\u003e SORT_BY_NO_FIELD \u003d (p1, p2) -\u003e 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Benjamin-Sim"},"content":"    private final SortFieldType field;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Benjamin-Sim"},"content":"    private final Comparator\u003cPerson\u003e comp;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Benjamin-Sim"},"content":"    private SortField(SortFieldType type, Comparator\u003cPerson\u003e c) {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Benjamin-Sim"},"content":"        requireAllNonNull(type, c);","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Benjamin-Sim"},"content":"        field \u003d type;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Benjamin-Sim"},"content":"        comp \u003d c;","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Benjamin-Sim"},"content":"    public SortFieldType getField() {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Benjamin-Sim"},"content":"        return field;","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Benjamin-Sim"},"content":"    public Comparator\u003cPerson\u003e getComparator() {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Benjamin-Sim"},"content":"        return comp;","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Benjamin-Sim"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Benjamin-Sim"},"content":"     * Constructs a {@code SortField}.","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Benjamin-Sim"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Benjamin-Sim"},"content":"     * @param sortFieldLetter A valid sort field letter.","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"Benjamin-Sim"},"content":"     * @return {@code SortField} representing the sort field letter.","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Benjamin-Sim"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Benjamin-Sim"},"content":"    public static SortField createSortField(String sortFieldLetter) {","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"Benjamin-Sim"},"content":"        requireNonNull(sortFieldLetter);","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"Benjamin-Sim"},"content":"        checkArgument(isValidSortField(sortFieldLetter), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"Benjamin-Sim"},"content":"        return mapLetterToSortField(sortFieldLetter);","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"Benjamin-Sim"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"Benjamin-Sim"},"content":"     * Constructs a {@code SortField} that doesn\u0027t sort by any field.","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"Benjamin-Sim"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"Benjamin-Sim"},"content":"     * @return {@code SortField} that doesn\u0027t sort by any field.","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"Benjamin-Sim"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"Benjamin-Sim"},"content":"    public static SortField sortByNoField() {","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"Benjamin-Sim"},"content":"        return new SortField(SortFieldType.NO_FIELD, SORT_BY_NO_FIELD);","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"Benjamin-Sim"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"Benjamin-Sim"},"content":"     * Return true if the given {@code String} is a valid sort field.","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"Benjamin-Sim"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"Benjamin-Sim"},"content":"     * @param test {@code String} to test.","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"Benjamin-Sim"},"content":"     * @return boolean result of test.","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"Benjamin-Sim"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"Benjamin-Sim"},"content":"    public static boolean isValidSortField(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"Benjamin-Sim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"Benjamin-Sim"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"Benjamin-Sim"},"content":"     * Map the given sort field letter to its corresponding {@code SortFieldType}.","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"Benjamin-Sim"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"Benjamin-Sim"},"content":"     * @param sortFieldLetter letter to map to {@code SortFieldType}","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"Benjamin-Sim"},"content":"     * @return {@code SortFieldType} of that letter","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"Benjamin-Sim"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"Benjamin-Sim"},"content":"    private static SortField mapLetterToSortField(String sortFieldLetter) {","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"Benjamin-Sim"},"content":"        switch(sortFieldLetter) {","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"Benjamin-Sim"},"content":"        case \"n\":","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"Benjamin-Sim"},"content":"        case \"N\":","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"Benjamin-Sim"},"content":"            return new SortField(SortFieldType.NAME, SORT_BY_NAME);","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"Benjamin-Sim"},"content":"        case \"d\":","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"Benjamin-Sim"},"content":"        case \"D\":","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"Benjamin-Sim"},"content":"            return new SortField(SortFieldType.DATE_OF_BIRTH, SORT_BY_DATE_OF_BIRTH);","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"Benjamin-Sim"},"content":"        case \"g\":","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"Benjamin-Sim"},"content":"        case \"G\":","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"Benjamin-Sim"},"content":"            return new SortField(SortFieldType.GENDER, SORT_BY_GENDER);","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"Benjamin-Sim"},"content":"        // Don\u0027t sort by any field by default","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"Benjamin-Sim"},"content":"        default:","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"Benjamin-Sim"},"content":"            return sortByNoField();","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"Benjamin-Sim"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"Benjamin-Sim"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"Benjamin-Sim"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"Benjamin-Sim"},"content":"        return String.format(\"Sort Field: %s\\nComparator: %s\", field.toString(), comp.toString());","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"Benjamin-Sim"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"Benjamin-Sim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"Benjamin-Sim"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"Benjamin-Sim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"Benjamin-Sim"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"Benjamin-Sim"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"Benjamin-Sim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"Benjamin-Sim"},"content":"        if (!(other instanceof SortField)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"Benjamin-Sim"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"Benjamin-Sim"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"Benjamin-Sim"},"content":"        // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"Benjamin-Sim"},"content":"        SortField s \u003d (SortField) other;","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"Benjamin-Sim"},"content":"        return this.getField().equals(s.getField())","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"Benjamin-Sim"},"content":"            \u0026\u0026 this.getComparator().equals(s.getComparator());","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"Benjamin-Sim"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"Benjamin-Sim"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"Benjamin-Sim"},"content":"        return Objects.hash(field, comp);","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"Benjamin-Sim"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Benjamin-Sim":139}},{"path":"src/main/java/seedu/address/model/person/SortFieldType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjamin-Sim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Benjamin-Sim"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Benjamin-Sim"},"content":" * Represents the possible fields of a {@code Person} to sort by.","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Benjamin-Sim"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Benjamin-Sim"},"content":"public enum SortFieldType {","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Benjamin-Sim"},"content":"    NAME, DATE_OF_BIRTH, GENDER, NO_FIELD;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Benjamin-Sim"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Benjamin-Sim":8}},{"path":"src/main/java/seedu/address/model/person/Uid.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":" * Uid that uniquely identifies a person.","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":" * Uid is an unmodifiable field that is created every time with the creation of a new Person.","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"public class Uid {","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Uid should be a string parsed from java UUID object\";","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"    public final String value;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"     * Constructor that creates a Uid Object.","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"    public Uid() {","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"        this.value \u003d String.valueOf(UUID.randomUUID());","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"     * Overloaded constructor that creates a Uid Object.","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"    public Uid(String value) {","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"        this.value \u003d value;","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"    public String getUid() {","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"        return value;","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns true if both uids have the same value. This method should always return false value.","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"    public boolean isSameUid(Uid otherUid) {","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"        if (otherUid \u003d\u003d this) {","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"            return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"        return otherUid !\u003d null \u0026\u0026 otherUid.getUid().equals(getUid());","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns true if a given string is a valid Uid.","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"    public static boolean isValidUid(String test) {","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"            UUID uuid \u003d UUID.fromString(test);","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"        } catch (IllegalArgumentException exception) {","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"            return false;","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"        return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"                || (other instanceof Uid // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"                \u0026\u0026 value.equals(((Uid) other).value)); // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Qiaoran-M":59}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"Benjamin-Sim"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"Benjamin-Sim"},"content":"     * Sorts the list in-place using the specified {@code SortField}.","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"Benjamin-Sim"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"Benjamin-Sim"},"content":"     * @param sortField field to sort by.","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"Benjamin-Sim"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"Benjamin-Sim"},"content":"    public void sort(SortField sortField) {","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"Benjamin-Sim"},"content":"        requireNonNull(sortField);","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"Benjamin-Sim"},"content":"        internalList.sort(sortField.getComparator());","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Benjamin-Sim":10,"-":137}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.StartDate;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.StartTime;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"Benjamin-Sim"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"                new DateOfBirth(\"13/2/1988\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"                getTagSet(\"friends\"), new Gender(\"male\"), new Uid()),","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"                new DateOfBirth(\"11/5/1968\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"                getTagSet(\"colleagues\", \"friends\"), new Gender(\"female\"), new Uid()),","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"                new DateOfBirth(\"4/12/2002\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"                getTagSet(\"neighbours\"), new Gender(\"female\"), new Uid()),","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"                new DateOfBirth(\"29/7/1996\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"                getTagSet(\"family\"), new Gender(\"male\"), new Uid()),","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"                new DateOfBirth(\"2/6/1984\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"                getTagSet(\"classmates\"), new Gender(\"male\"), new Uid()),","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"                new DateOfBirth(\"2/11/1954\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"                getTagSet(\"colleagues\"), new Gender(\"male\"), new Uid())","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"lfrostbytee"},"content":"    public static Event[] getSampleEvents() {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"lfrostbytee"},"content":"        return new Event[] {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"            new Event(\"2/2 Sale\", new StartDate(\"2/2/2022\"), new StartTime(\"02:00\"), \"For football fans\"),","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"            new Event(\"4/4 Sale\", new StartDate(\"4/4/2022\"), new StartTime(\"16:00\"), \"For computer scientists\"),","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"            new Event(\"6/6 Sale\", new StartDate(\"6/6/2022\"), new StartTime(\"06:00\"), \"For car enthusiasts\"),","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"            new Event(\"8/8 Sale\", new StartDate(\"8/8/2022\"), new StartTime(\"20:00\"), \"For bread lovers\"),","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"            new Event(\"10/10 Sale\", new StartDate(\"10/10/2022\"), new StartTime(\"10:00\"), \"For watch hobbyists\"),","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"            new Event(\"12/12 Sale\", new StartDate(\"12/12/2022\"), new StartTime(\"12:00\"), \"For stationery buyers\")","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"lfrostbytee"},"content":"        for (Event sampleEvent : getSampleEvents()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"lfrostbytee"},"content":"            sampleAb.addEvent(sampleEvent);","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"tanhl2000":7,"Benjamin-Sim":1,"lfrostbytee":8,"Qiaoran-M":13,"-":51}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vinodjayakumar124"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Vinodjayakumar124"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Vinodjayakumar124"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.StartDate;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.StartTime;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.event.UidList;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Vinodjayakumar124"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Vinodjayakumar124"},"content":" * Jackson-friendly version of Event","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Vinodjayakumar124"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Vinodjayakumar124"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Vinodjayakumar124"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing\";","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Vinodjayakumar124"},"content":"    private final String eventTitle;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"lfrostbytee"},"content":"    private final String startDate;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"lfrostbytee"},"content":"    private final String startTime;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Vinodjayakumar124"},"content":"    private final String purpose;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"    private final List\u003cJsonAdaptedUid\u003e uids \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"lfrostbytee"},"content":"     * Constructs a JsonAdaptedEvent with the given event details.","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @param eventTitle","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"lfrostbytee"},"content":"     * @param startDate","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"lfrostbytee"},"content":"     * @param startTime","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"Vinodjayakumar124"},"content":"     * @param purpose","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Vinodjayakumar124"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"lfrostbytee"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"eventTitle\") String eventTitle, @JsonProperty(\"startDate\") String startDate,","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"                            @JsonProperty(\"startTime\") String startTime, @JsonProperty(\"purpose\") String purpose,","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"                            @JsonProperty(\"uids\") List\u003cJsonAdaptedUid\u003e uids) {","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Vinodjayakumar124"},"content":"        this.eventTitle \u003d eventTitle;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"lfrostbytee"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"lfrostbytee"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"Vinodjayakumar124"},"content":"        this.purpose \u003d purpose;","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"        if (uids !\u003d null) {","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"            this.uids.addAll(uids);","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Vinodjayakumar124"},"content":"     * Converts a given Event into this class for use by Jackson.","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Vinodjayakumar124"},"content":"    public JsonAdaptedEvent(Event event) {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Vinodjayakumar124"},"content":"        this.eventTitle \u003d event.getEventTitle();","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"lfrostbytee"},"content":"        this.startDate \u003d event.getStartDate().toLogFormat();","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"lfrostbytee"},"content":"        this.startTime \u003d event.getStartTime().toLogFormat();","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"Vinodjayakumar124"},"content":"        this.purpose \u003d event.getPurpose();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"        Iterator\u003cUid\u003e iter \u003d event.getUids().iterator();","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"        while (iter.hasNext()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"            uids.add(new JsonAdaptedUid(iter.next()));","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"Vinodjayakumar124"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"lfrostbytee"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"Vinodjayakumar124"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"lfrostbytee"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"Vinodjayakumar124"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"Vinodjayakumar124"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"Vinodjayakumar124"},"content":"        if (this.eventTitle \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"Vinodjayakumar124"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Event Title\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Vinodjayakumar124"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"lfrostbytee"},"content":"        if (this.startDate \u003d\u003d null) {","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"lfrostbytee"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Start Date\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"lfrostbytee"},"content":"        if (!StartDate.isValidStartDate(startDate)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"lfrostbytee"},"content":"            throw new IllegalValueException(StartDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"Vinodjayakumar124"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"lfrostbytee"},"content":"        final StartDate modelStartDate \u003d new StartDate(startDate);","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"lfrostbytee"},"content":"        if (this.startTime \u003d\u003d null) {","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"lfrostbytee"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Start Time\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"Vinodjayakumar124"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"lfrostbytee"},"content":"        if (!StartTime.isValidStartTime(startTime)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"lfrostbytee"},"content":"            throw new IllegalValueException(StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"Vinodjayakumar124"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"lfrostbytee"},"content":"        final StartTime modelStartTime \u003d new StartTime(startTime);","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"Vinodjayakumar124"},"content":"        if (this.purpose \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"Vinodjayakumar124"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Purpose\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"Vinodjayakumar124"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"Qiaoran-M"},"content":"        final UidList eventUids \u003d new UidList();","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"Qiaoran-M"},"content":"        for (JsonAdaptedUid uid : uids) {","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"Qiaoran-M"},"content":"            eventUids.add(uid.toModelType());","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"Qiaoran-M"},"content":"        return new Event(this.eventTitle, modelStartDate, modelStartTime, this.purpose, eventUids);","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"Vinodjayakumar124"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"Vinodjayakumar124"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Vinodjayakumar124":52,"Qiaoran-M":21,"lfrostbytee":28}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"    private final String dob;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"    private final String gender;","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"    private final String uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"            @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"            @JsonProperty(\"dob\") String dob, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"                             @JsonProperty(\"uid\") String uid) {","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"tanhl2000"},"content":"        dob \u003d source.getDob().toLogFormat();","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"        gender \u003d source.getGender().value.toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"        uid \u003d source.getUid().value;","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"tanhl2000"},"content":"        if (dob \u003d\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"tanhl2000"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"tanhl2000"},"content":"                     DateOfBirth.class.getSimpleName()));","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"tanhl2000"},"content":"        if (!DateOfBirth.isValidDateOfBirth(dob)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"tanhl2000"},"content":"            throw new IllegalValueException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"tanhl2000"},"content":"        final DateOfBirth modelDob \u003d new DateOfBirth(dob);","lastModifiedDate":"2022-10-19"},{"lineNumber":132,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"Qiaoran-M"},"content":"        // add in optional field gender","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"Qiaoran-M"},"content":"        Gender modelGender;","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"Qiaoran-M"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"Qiaoran-M"},"content":"            modelGender \u003d Gender.getNoGender();","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"Qiaoran-M"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"Qiaoran-M"},"content":"        } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"Qiaoran-M"},"content":"            modelGender \u003d new Gender(gender);","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"Qiaoran-M"},"content":"        if (uid \u003d\u003d null) {","lastModifiedDate":"2022-10-17"},{"lineNumber":143,"author":{"gitId":"Qiaoran-M"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Uid.class.getSimpleName()));","lastModifiedDate":"2022-10-17"},{"lineNumber":144,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":145,"author":{"gitId":"Qiaoran-M"},"content":"        if (!Uid.isValidUid(uid)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":146,"author":{"gitId":"Qiaoran-M"},"content":"            throw new IllegalValueException(Uid.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":148,"author":{"gitId":"Qiaoran-M"},"content":"        Uid modelUid \u003d new Uid(uid);","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"Qiaoran-M"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelDob, modelAddress, modelTags, modelGender, modelUid);","lastModifiedDate":"2022-10-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanhl2000":17,"Qiaoran-M":31,"-":106}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedUid.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":" * Jackson-friendly version of {@link Uid}.","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"public class JsonAdaptedUid {","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"    private final String uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"     * Constructs a {@code JsonAdaptedUid} with the given {@code uidName}.","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"    public JsonAdaptedUid(String uid) {","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"    public JsonAdaptedUid(Uid source) {","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"        uid \u003d source.getUid();","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"    @JsonValue","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"    public String getUid() {","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"        return uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"     * Converts this Jackson-friendly adapted uid object into the model\u0027s {@code uid} object.","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted uid.","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"    public Uid toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"        return new Uid(uid);","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Qiaoran-M":43}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Vinodjayakumar124"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Vinodjayakumar124"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Vinodjayakumar124"},"content":"                                       @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Vinodjayakumar124"},"content":"        this.events.addAll(events);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Vinodjayakumar124"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"Vinodjayakumar124"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Vinodjayakumar124"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Vinodjayakumar124"},"content":"            addressBook.addEvent(event);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"Vinodjayakumar124"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Vinodjayakumar124":11,"-":59}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lfrostbytee"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"lfrostbytee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"lfrostbytee"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"lfrostbytee"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"lfrostbytee"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":" * An UI component that displays information of an {@code Event}.","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"lfrostbytee"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"lfrostbytee"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"lfrostbytee"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"lfrostbytee"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"lfrostbytee"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"lfrostbytee"},"content":"    public final Event event;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"lfrostbytee"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"lfrostbytee"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"lfrostbytee"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"lfrostbytee"},"content":"    private Label eventTitle;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"lfrostbytee"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"lfrostbytee"},"content":"    private Label date;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"lfrostbytee"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"lfrostbytee"},"content":"    private Label time;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"lfrostbytee"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"lfrostbytee"},"content":"    private Label purpose;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"lfrostbytee"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"lfrostbytee"},"content":"    private Label id;","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"    @FXML","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"    private Label personNames;","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"lfrostbytee"},"content":"     * Creates a {@code EventCard} with the given {@code Event} and index to display.","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"lfrostbytee"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"lfrostbytee"},"content":"        super(FXML);","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"lfrostbytee"},"content":"        this.event \u003d event;","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"lfrostbytee"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"lfrostbytee"},"content":"        eventTitle.setText(event.getEventTitle());","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"lfrostbytee"},"content":"        date.setText(event.getStartDate().toString());","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"lfrostbytee"},"content":"        time.setText(event.getStartTime().toString());","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"lfrostbytee"},"content":"        purpose.setText(event.getPurpose());","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"        personNames.setText(event.getUids().getPersonNames());","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"lfrostbytee"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"lfrostbytee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"lfrostbytee"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"lfrostbytee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"lfrostbytee"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"lfrostbytee"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"lfrostbytee"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"lfrostbytee"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"lfrostbytee"},"content":"        // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"lfrostbytee"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"lfrostbytee"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"lfrostbytee"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"lfrostbytee"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"lfrostbytee":71,"Qiaoran-M":3}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lfrostbytee"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"lfrostbytee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"lfrostbytee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"lfrostbytee"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"lfrostbytee"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"lfrostbytee"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":" * Panel containing the list of events.","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"lfrostbytee"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"lfrostbytee"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"lfrostbytee"},"content":"     * Creates an {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"lfrostbytee"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"lfrostbytee"},"content":"        super(FXML);","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"lfrostbytee"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"lfrostbytee"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"lfrostbytee"},"content":"     * Custom {@code ListCell} that displays the graphics of an {@code Event} using an {@code EventCard}.","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"lfrostbytee"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"lfrostbytee"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"lfrostbytee"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"lfrostbytee"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"lfrostbytee"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"lfrostbytee"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"lfrostbytee"},"content":"                setText(null);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"lfrostbytee"},"content":"            } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"lfrostbytee"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"lfrostbytee"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"lfrostbytee"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"lfrostbytee":49}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Benjamin-Sim"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103-f09-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Benjamin-Sim":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"lfrostbytee"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"lfrostbytee"},"content":"    private StatsWindow statsWindow;","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"lfrostbytee"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"lfrostbytee"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"lfrostbytee"},"content":"        statsWindow \u003d new StatsWindow();","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"lfrostbytee"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"lfrostbytee"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":161,"author":{"gitId":"lfrostbytee"},"content":"     * Opens the stats window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-10-25"},{"lineNumber":162,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":163,"author":{"gitId":"lfrostbytee"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"lfrostbytee"},"content":"    public void handleStats() {","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"lfrostbytee"},"content":"        if (!statsWindow.isShowing()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":166,"author":{"gitId":"lfrostbytee"},"content":"            statsWindow.show();","lastModifiedDate":"2022-10-25"},{"lineNumber":167,"author":{"gitId":"lfrostbytee"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":168,"author":{"gitId":"lfrostbytee"},"content":"            statsWindow.focus();","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":170,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":171,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"lfrostbytee"},"content":"            if (commandResult.isShowStats()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":208,"author":{"gitId":"lfrostbytee"},"content":"                handleStats();","lastModifiedDate":"2022-10-25"},{"lineNumber":209,"author":{"gitId":"lfrostbytee"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":210,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lfrostbytee":26,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"    private Label dob;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"    @FXML","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"    private Label gender;","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"lfrostbytee"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"tanhl2000"},"content":"        dob.setText(person.getDob().toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"        if (Gender.isValidGender(person.getGender(), Boolean.FALSE)) { // invalid gender (NA is considered invalid)","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"            gender.setManaged(true); //Show label","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"            gender.setText(person.getGender().value.toString());","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"            gender.setManaged(false); //Hide and minimises label","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tanhl2000":3,"Qiaoran-M":10,"lfrostbytee":1,"-":76}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"tanhl2000":1,"-":49}},{"path":"src/main/java/seedu/address/ui/StatsWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lfrostbytee"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"lfrostbytee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"lfrostbytee"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"lfrostbytee"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"lfrostbytee"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"lfrostbytee"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":" * Controller for a stats page","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"lfrostbytee"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"public class StatsWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StatsWindow.class);","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"lfrostbytee"},"content":"    private static final String FXML \u003d \"StatsWindow.fxml\";","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"    private PieChart chart;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"lfrostbytee"},"content":"     * Creates a new StatsWindow.","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"lfrostbytee"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"lfrostbytee"},"content":"     * @param root Stage to use as the root of the StatsWindow.","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"lfrostbytee"},"content":"    public StatsWindow(Stage root) {","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"lfrostbytee"},"content":"        super(FXML, root);","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"lfrostbytee"},"content":"        ObservableList\u003cPieChart.Data\u003e data \u003d FXCollections.observableArrayList(","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"lfrostbytee"},"content":"                new PieChart.Data(\"Grapefruit\", 13),","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"lfrostbytee"},"content":"                new PieChart.Data(\"Oranges\", 25),","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"lfrostbytee"},"content":"                new PieChart.Data(\"Plums\", 10),","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"lfrostbytee"},"content":"                new PieChart.Data(\"Pears\", 22),","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"lfrostbytee"},"content":"                new PieChart.Data(\"Apples\", 30));","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"lfrostbytee"},"content":"        chart.setData(data);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"lfrostbytee"},"content":"        chart.setTitle(\"Fruits\");","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"lfrostbytee"},"content":"     * Creates a new StatsWindow.","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"lfrostbytee"},"content":"    public StatsWindow() {","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"lfrostbytee"},"content":"        this(new Stage());","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"lfrostbytee"},"content":"     * Shows the stats window.","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"lfrostbytee"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"lfrostbytee"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"lfrostbytee"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"lfrostbytee"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"lfrostbytee"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"lfrostbytee"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"lfrostbytee"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"lfrostbytee"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"lfrostbytee"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"lfrostbytee"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"lfrostbytee"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"lfrostbytee"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"lfrostbytee"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"lfrostbytee"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"lfrostbytee"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"lfrostbytee"},"content":"    public void show() {","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"lfrostbytee"},"content":"        logger.fine(\"Showing the statistics page.\");","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"lfrostbytee"},"content":"        getRoot().show();","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"lfrostbytee"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"lfrostbytee"},"content":"     * Returns true if the stats window is currently being shown.","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"lfrostbytee"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"lfrostbytee"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"lfrostbytee"},"content":"     * Hides the stats window.","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"lfrostbytee"},"content":"    public void hide() {","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"lfrostbytee"},"content":"        getRoot().hide();","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"lfrostbytee"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"lfrostbytee"},"content":"     * Focuses on the stats window.","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"lfrostbytee"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"lfrostbytee"},"content":"    public void focus() {","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"lfrostbytee"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"lfrostbytee"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"lfrostbytee"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"lfrostbytee":91}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lfrostbytee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"lfrostbytee"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"lfrostbytee"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"lfrostbytee"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"lfrostbytee"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"         \u003cLabel fx:id\u003d\"phone1\" style\u003d\"-fx-background-color: midnightblue; -fx-text-fill: white;\" styleClass\u003d\"cell_small_label\" text\u003d\"Event\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"lfrostbytee"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"lfrostbytee"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"lfrostbytee"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"lfrostbytee"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"lfrostbytee"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"lfrostbytee"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"lfrostbytee"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"lfrostbytee"},"content":"        \u003cLabel fx:id\u003d\"eventTitle\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$eventTitle\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"lfrostbytee"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"lfrostbytee"},"content":"      \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"lfrostbytee"},"content":"      \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"lfrostbytee"},"content":"      \u003cLabel fx:id\u003d\"purpose\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$purpose\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"      \u003cLabel fx:id\u003d\"personNames\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$personNames\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"lfrostbytee"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"lfrostbytee"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"lfrostbytee"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"lfrostbytee"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"lfrostbytee"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"lfrostbytee"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"lfrostbytee":39,"Qiaoran-M":1}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lfrostbytee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":"  \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"lfrostbytee"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"lfrostbytee":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"lfrostbytee"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"lfrostbytee"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"lfrostbytee"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"lfrostbytee"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"lfrostbytee"},"content":"            \u003cHBox maxHeight\u003d\"100.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"lfrostbytee"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"lfrostbytee"},"content":"                  \u003cStackPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"lfrostbytee"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"lfrostbytee"},"content":"                        \u003cLabel style\u003d\"-fx-text-fill: white;\" text\u003d\"Customers\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"lfrostbytee"},"content":"                              \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"lfrostbytee"},"content":"                           \u003cStackPane.margin\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"lfrostbytee"},"content":"                              \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"lfrostbytee"},"content":"                           \u003c/StackPane.margin\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"lfrostbytee"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"lfrostbytee"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"lfrostbytee"},"content":"                  \u003c/StackPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"lfrostbytee"},"content":"                  \u003cStackPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"lfrostbytee"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"lfrostbytee"},"content":"                        \u003cLabel style\u003d\"-fx-text-fill: white;\" text\u003d\"Events\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"lfrostbytee"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"lfrostbytee"},"content":"                              \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"lfrostbytee"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"lfrostbytee"},"content":"                           \u003cStackPane.margin\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"lfrostbytee"},"content":"                              \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"lfrostbytee"},"content":"                           \u003c/StackPane.margin\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"lfrostbytee"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"lfrostbytee"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"lfrostbytee"},"content":"                  \u003c/StackPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"lfrostbytee"},"content":"               \u003c/children\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"lfrostbytee"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"lfrostbytee"},"content":"            \u003cHBox maxHeight\u003d\"10.0\" minHeight\u003d\"10.0\" minWidth\u003d\"340.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"lfrostbytee"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"lfrostbytee"},"content":"                  \u003cStackPane maxHeight\u003d\"3.0\" minHeight\u003d\"3.0\" style\u003d\"-fx-background-color: steelblue;\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"lfrostbytee"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"lfrostbytee"},"content":"                        \u003cInsets /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"lfrostbytee"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"lfrostbytee"},"content":"                  \u003c/StackPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"lfrostbytee"},"content":"                  \u003cStackPane maxHeight\u003d\"3.0\" minHeight\u003d\"3.0\" style\u003d\"-fx-background-color: midnightblue;\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"lfrostbytee"},"content":"               \u003c/children\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"lfrostbytee"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"lfrostbytee"},"content":"            \u003cHBox fx:id\u003d\"personList\" minWidth\u003d\"340.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"lfrostbytee"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"lfrostbytee"},"content":"             \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"lfrostbytee"},"content":"                  \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"lfrostbytee"},"content":"               \u003c/children\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"lfrostbytee"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"lfrostbytee"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"lfrostbytee"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"lfrostbytee"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"lfrostbytee":53,"-":47}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"lfrostbytee"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"lfrostbytee"},"content":"         \u003cLabel fx:id\u003d\"email1\" style\u003d\"-fx-background-color: steelblue; -fx-text-fill: white;\" styleClass\u003d\"cell_small_label\" text\u003d\"Customer\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"lfrostbytee"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"lfrostbytee"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"      \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"      \u003cLabel fx:id\u003d\"dob\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dob\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"lfrostbytee"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"lfrostbytee"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"lfrostbytee"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanhl2000":1,"lfrostbytee":9,"Qiaoran-M":1,"-":32}},{"path":"src/main/resources/view/StatsWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lfrostbytee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.chart.PieChart?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"lfrostbytee"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"lfrostbytee"},"content":"  \u003cicons\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"lfrostbytee"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"lfrostbytee"},"content":"  \u003cscene\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"    \u003cScene\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"lfrostbytee"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"lfrostbytee"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"      \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"lfrostbytee"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"lfrostbytee"},"content":"               \u003cPieChart fx:id\u003d\"stats\" style\u003d\"-fx-border-color: white; -fx-background-color: lightgrey;\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"lfrostbytee"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"lfrostbytee"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"lfrostbytee"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"lfrostbytee"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"lfrostbytee"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"lfrostbytee"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"lfrostbytee"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"lfrostbytee"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"lfrostbytee"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"lfrostbytee"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"lfrostbytee"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"lfrostbytee":34}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"Benjamin-Sim"},"content":"import seedu.address.model.person.SortField;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"        String deleteCommand \u003d \"deletePerson 9\";","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"Benjamin-Sim"},"content":"        SortField dummySortField \u003d SortField.sortByNoField();","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"Benjamin-Sim"},"content":"        String successMessage \u003d String.format(ListCommand.MESSAGE_SUCCESS, dummySortField.getField());","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"Benjamin-Sim"},"content":"        assertCommandSuccess(listCommand, successMessage, model);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"tanhl2000"},"content":"        String addCommand \u003d AddPersonCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"tanhl2000"},"content":"                + ADDRESS_DESC_AMY + GENDER_DESC_AMY + DOB_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"tanhl2000"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags()","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"tanhl2000"},"content":"                .withGender(VALID_GENDER_AMY).withDob(VALID_DOB_AMY).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tanhl2000":7,"Benjamin-Sim":5,"Qiaoran-M":3,"-":156}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":" * Contains integration tests (interaction with the Model) for {@code AddPersonCommand}.","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model, AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tanhl2000":5,"-":40}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"Benjamin-Sim"},"content":"import seedu.address.model.person.SortField;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"        AddPersonCommand addCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"tanhl2000"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"tanhl2000"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"tanhl2000"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"Vinodjayakumar124"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"Vinodjayakumar124"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"Vinodjayakumar124"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"Vinodjayakumar124"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"Qiaoran-M"},"content":"        @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":144,"author":{"gitId":"Qiaoran-M"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-10-17"},{"lineNumber":145,"author":{"gitId":"Qiaoran-M"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-17"},{"lineNumber":146,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"Vinodjayakumar124"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"Vinodjayakumar124"},"content":"        public void deleteEvent(Event event) {","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"Vinodjayakumar124"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"Vinodjayakumar124"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"Benjamin-Sim"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"Benjamin-Sim"},"content":"        public void sortPersons(SortField sortField) {","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"Benjamin-Sim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"Benjamin-Sim"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"Vinodjayakumar124"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"Vinodjayakumar124"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"Vinodjayakumar124"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"Vinodjayakumar124"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"lfrostbytee"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"lfrostbytee"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"lfrostbytee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"lfrostbytee"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"lfrostbytee"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"Qiaoran-M"},"content":"        @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":183,"author":{"gitId":"Qiaoran-M"},"content":"        public void updateEventPersonReference() {","lastModifiedDate":"2022-10-17"},{"lineNumber":184,"author":{"gitId":"Qiaoran-M"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-17"},{"lineNumber":185,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Vinodjayakumar124":16,"Benjamin-Sim":6,"tanhl2000":10,"Qiaoran-M":8,"lfrostbytee":5,"-":185}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"lfrostbytee"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"lfrostbytee"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true)));","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"lfrostbytee"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"lfrostbytee"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, true).hashCode());","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"lfrostbytee":5,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"    public static final String VALID_DOB_AMY \u003d \"9/9/1969\";","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"    public static final String VALID_DOB_BOB \u003d \"8/12/2000\";","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String VALID_GENDER_AMY \u003d \"Female\";","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String VALID_GENDER_BOB \u003d \"Male\";","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"    public static final String DOB_DESC_AMY \u003d \" \" + PREFIX_DOB + VALID_DOB_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"tanhl2000"},"content":"    public static final String DOB_DESC_BOB \u003d \" \" + PREFIX_DOB + VALID_DOB_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"                .withTags(VALID_TAG_FRIEND).withGender(VALID_GENDER_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"Qiaoran-M"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tanhl2000":7,"Qiaoran-M":11,"-":126}},{"path":"src/test/java/seedu/address/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"Qiaoran-M"},"content":"        DeletePersonCommand deleteFirstCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"        DeletePersonCommand deleteSecondCommand \u003d new DeletePersonCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"Qiaoran-M"},"content":"        DeletePersonCommand deleteFirstCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Qiaoran-M":14,"-":95}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"lfrostbytee":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindPersonsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"lfrostbytee"},"content":" * Contains integration tests (interaction with the Model) for {@code FindPersonsCommand}.","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"lfrostbytee"},"content":"public class FindPersonsCommandTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"lfrostbytee"},"content":"        FindPersonsCommand findPersonsFirstCommand \u003d new FindPersonsCommand(firstPredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"lfrostbytee"},"content":"        FindPersonsCommand findPersonsSecondCommand \u003d new FindPersonsCommand(secondPredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"lfrostbytee"},"content":"        assertTrue(findPersonsFirstCommand.equals(findPersonsFirstCommand));","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"lfrostbytee"},"content":"        FindPersonsCommand findFirstCommandCopy \u003d new FindPersonsCommand(firstPredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"lfrostbytee"},"content":"        assertTrue(findPersonsFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"lfrostbytee"},"content":"        assertFalse(findPersonsFirstCommand.equals(1));","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"lfrostbytee"},"content":"        assertFalse(findPersonsFirstCommand.equals(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"lfrostbytee"},"content":"        assertFalse(findPersonsFirstCommand.equals(findPersonsSecondCommand));","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"lfrostbytee"},"content":"        FindPersonsCommand command \u003d new FindPersonsCommand(predicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"lfrostbytee"},"content":"        FindPersonsCommand command \u003d new FindPersonsCommand(predicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"lfrostbytee":12,"-":71}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"lfrostbytee"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"lfrostbytee":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"Benjamin-Sim"},"content":"import seedu.address.model.person.SortField;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"Benjamin-Sim"},"content":"    private SortField dummySortField;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"Benjamin-Sim"},"content":"        dummySortField \u003d SortField.sortByNoField();","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"Benjamin-Sim"},"content":"        String successMessage \u003d String.format(ListCommand.MESSAGE_SUCCESS, dummySortField.getField());","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Benjamin-Sim"},"content":"        assertCommandSuccess(new ListCommand(dummySortField), model, successMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"Benjamin-Sim"},"content":"        String successMessage \u003d String.format(ListCommand.MESSAGE_SUCCESS, dummySortField.getField());","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":42,"author":{"gitId":"Benjamin-Sim"},"content":"        assertCommandSuccess(new ListCommand(dummySortField), model, successMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Benjamin-Sim":7,"-":37}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"tanhl2000"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"                + DOB_DESC_BOB + GENDER_DESC_BOB, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"tanhl2000"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"tanhl2000"},"content":"                + DOB_DESC_BOB + GENDER_DESC_BOB, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"tanhl2000"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"tanhl2000"},"content":"                + DOB_DESC_BOB + GENDER_DESC_BOB, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"tanhl2000"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"tanhl2000"},"content":"                + DOB_DESC_BOB + GENDER_DESC_BOB, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"tanhl2000"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"tanhl2000"},"content":"                + DOB_DESC_BOB + GENDER_DESC_BOB, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":83,"author":{"gitId":"Qiaoran-M"},"content":"                .withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"tanhl2000"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"tanhl2000"},"content":"                + DOB_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"tanhl2000"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"tanhl2000"},"content":"                + GENDER_DESC_BOB, new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"Qiaoran-M"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withGender(VALID_GENDER_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"Qiaoran-M"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"tanhl2000"},"content":"                + DOB_DESC_AMY + GENDER_DESC_AMY, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"tanhl2000"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"tanhl2000"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DOB_DESC_BOB,","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"tanhl2000"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DOB_DESC_BOB,","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"tanhl2000"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB + DOB_DESC_BOB,","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"tanhl2000"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB + DOB_DESC_BOB,","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"tanhl2000"},"content":"                + DOB_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"tanhl2000"},"content":"                + DOB_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"tanhl2000"},"content":"                + DOB_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"tanhl2000"},"content":"                + DOB_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"tanhl2000"},"content":"                + DOB_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"tanhl2000"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-19"},{"lineNumber":147,"author":{"gitId":"tanhl2000"},"content":"                + INVALID_ADDRESS_DESC + DOB_DESC_BOB,","lastModifiedDate":"2022-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"tanhl2000"},"content":"                + ADDRESS_DESC_BOB + DOB_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-19"},{"lineNumber":153,"author":{"gitId":"tanhl2000"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tanhl2000":34,"Qiaoran-M":8,"-":113}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.logic.commands.FindPersonsCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddPersonCommand(person));","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"                DeletePersonCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"        Person person \u003d new PersonBuilder().withTags(\"test\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"lfrostbytee"},"content":"    public void parseCommand_findPersons() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"lfrostbytee"},"content":"        FindPersonsCommand command \u003d (FindPersonsCommand) parser.parseCommand(","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"lfrostbytee"},"content":"                FindPersonsCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"lfrostbytee"},"content":"        assertEquals(new FindPersonsCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tanhl2000":3,"Qiaoran-M":5,"lfrostbytee":5,"-":88}},{"path":"src/test/java/seedu/address/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"    private DeletePersonCommandParser parser \u003d new DeletePersonCommandParser();","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"        assertParseSuccess(parser, \"1\", new DeletePersonCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"                DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Qiaoran-M":6,"-":27}},{"path":"src/test/java/seedu/address/logic/parser/FindPersonsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"lfrostbytee"},"content":"import seedu.address.logic.commands.FindPersonsCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"lfrostbytee"},"content":"public class FindPersonsCommandParserTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"lfrostbytee"},"content":"    private FindPersonsCommandParser parser \u003d new FindPersonsCommandParser();","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"lfrostbytee"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"lfrostbytee"},"content":"                FindPersonsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"lfrostbytee"},"content":"    public void parse_validArgs_returnsFindPersonsCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"lfrostbytee"},"content":"        FindPersonsCommand expectedFindPersonsCommand \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"lfrostbytee"},"content":"                new FindPersonsCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"lfrostbytee"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindPersonsCommand);","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"lfrostbytee"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindPersonsCommand);","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"lfrostbytee":10,"-":25}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Vinodjayakumar124"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"Vinodjayakumar124"},"content":"        List\u003cEvent\u003e newEvents \u003d Arrays.asList();","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Vinodjayakumar124"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, newEvents);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"Vinodjayakumar124"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"Vinodjayakumar124"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cEvent\u003e events) {","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"Vinodjayakumar124"},"content":"            this.events.setAll(events);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"Vinodjayakumar124"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"Vinodjayakumar124"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"Vinodjayakumar124"},"content":"            return events;","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"Vinodjayakumar124"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"Vinodjayakumar124"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Vinodjayakumar124":13,"-":100}},{"path":"src/test/java/seedu/address/model/person/SortFieldTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjamin-Sim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Benjamin-Sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Benjamin-Sim"},"content":"public class SortFieldTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Benjamin-Sim"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Benjamin-Sim"},"content":"    public void viewObject() {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Benjamin-Sim"},"content":"        SortField s \u003d SortField.createSortField(\"n\");","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Benjamin-Sim"},"content":"        System.out.println(s);","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Benjamin-Sim"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Benjamin-Sim"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Benjamin-Sim"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Benjamin-Sim":13}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"    private static final String INVALID_DOB \u003d \"10.2.2024\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"    private static final String INVALID_GENDER \u003d \"unknown\";","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"    private static final String VALID_DOB \u003d BENSON.getDob().toLogFormat();","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"    private static final String VALID_UID \u003d BENSON.getUid().getUid();","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"                        VALID_DOB, VALID_ADDRESS, VALID_TAGS, VALID_GENDER, VALID_UID);","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"tanhl2000"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"                VALID_DOB, VALID_ADDRESS, VALID_TAGS, VALID_GENDER, VALID_UID);","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"tanhl2000"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"                        VALID_DOB, VALID_ADDRESS, VALID_TAGS, VALID_GENDER, VALID_UID);","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"tanhl2000"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"                VALID_DOB, VALID_ADDRESS, VALID_TAGS, VALID_GENDER, VALID_UID);","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"tanhl2000"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"Qiaoran-M"},"content":"                        VALID_DOB, VALID_ADDRESS, VALID_TAGS, VALID_GENDER, VALID_UID);","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"tanhl2000"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"Qiaoran-M"},"content":"                VALID_DOB, VALID_ADDRESS, VALID_TAGS, VALID_GENDER, VALID_UID);","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"tanhl2000"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"tanhl2000"},"content":"    public void toModelType_invalidDob_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"tanhl2000"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"tanhl2000"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"Qiaoran-M"},"content":"                        INVALID_DOB, VALID_ADDRESS, VALID_TAGS, VALID_GENDER, VALID_UID);","lastModifiedDate":"2022-10-17"},{"lineNumber":105,"author":{"gitId":"tanhl2000"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"tanhl2000"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"tanhl2000"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"Qiaoran-M"},"content":"                        VALID_DOB, INVALID_ADDRESS, VALID_TAGS, VALID_GENDER, VALID_UID);","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"tanhl2000"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"Qiaoran-M"},"content":"                VALID_DOB, null, VALID_TAGS, VALID_GENDER, VALID_UID);","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"tanhl2000"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"Qiaoran-M"},"content":"                        VALID_DOB, VALID_ADDRESS, invalidTags, VALID_GENDER, VALID_UID);","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanhl2000":19,"Qiaoran-M":16,"-":101}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"Qiaoran-M"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"Qiaoran-M"},"content":"    public EditPersonDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"Qiaoran-M"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"Qiaoran-M"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Qiaoran-M":10,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"    public static final String DEFAULT_DOB \u003d \"1/1/2000\";","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"    public static final String DEFAULT_GENDER \u003d \"NA\";","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"    private DateOfBirth dob;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"    private Gender gender;","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"        dob \u003d new DateOfBirth(DEFAULT_DOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"        dob \u003d personToCopy.getDob();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"Qiaoran-M"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"Qiaoran-M"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"Qiaoran-M"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"Qiaoran-M"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"tanhl2000"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"tanhl2000"},"content":"     * Sets the {@code DateOfBirth} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"tanhl2000"},"content":"    public PersonBuilder withDob(String dob) {","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"tanhl2000"},"content":"        this.dob \u003d new DateOfBirth(dob);","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"tanhl2000"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":122,"author":{"gitId":"Qiaoran-M"},"content":"        return new Person(name, phone, email, dob, address, tags, gender, new Uid());","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"tanhl2000":13,"Qiaoran-M":17,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"    public static String getAddPersonCommand(Person person) {","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"        return AddPersonCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"        sb.append(PREFIX_DOB + person.getDob().toLogFormat() + \" \");","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"        descriptor.getDob().ifPresent(dob -\u003e sb.append(PREFIX_DOB).append(dob.toLogFormat()).append(\" \"));","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"            if (!tags.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"                //sb.append(PREFIX_TAG);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.value.toString())","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"                .append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"tanhl2000":6,"Qiaoran-M":5,"-":56}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"            .withTags(\"friends\").withDob(\"1/1/2000\").withGender(\"NA\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"            .withTags(\"owesMoney\", \"friends\").withDob(\"1/1/2000\").withGender(\"NA\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"            .withAddress(\"wall street\").withDob(\"1/1/2000\").withGender(\"NA\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"            .withAddress(\"10th street\").withTags(\"friends\").withDob(\"1/1/2000\").withGender(\"NA\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"            .withDob(\"1/1/2000\")","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"            .withAddress(\"michegan ave\").withGender(\"NA\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"            .withAddress(\"little tokyo\").withDob(\"1/1/2000\").withGender(\"NA\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"            .withAddress(\"4th street\").withDob(\"1/1/2000\").withGender(\"NA\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"tanhl2000"},"content":"            .withAddress(\"little india\").withDob(\"1/1/2000\").withGender(\"NA\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"tanhl2000"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"            .withAddress(\"chicago ave\").withDob(\"1/1/2000\").withGender(\"NA\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"tanhl2000"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"tanhl2000"},"content":"            .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).withDob(VALID_DOB_AMY).withGender(\"NA\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"tanhl2000"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"tanhl2000"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"tanhl2000"},"content":"            .withDob(VALID_DOB_BOB).withGender(\"NA\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"tanhl2000":24,"-":64}}]
