[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"**Yellow Pages**","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103-F13-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103-F13-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"* Yellow Pages (YP) is a desktop app for managing contacts, optimised for use via a Graphical User Interface (GUI). ","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"* If you can type fast, YP can get your contacts and scheduling done faster than traditional GUI apps.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"* It is named `Yellow Pages` as it is supposed to act like a yellow pages for uni students.","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"GenFusion122":5,"-":4}},{"path":"bin/main/view/CommandBox.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"darrentde":9}},{"path":"bin/main/view/DarkTheme.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":".background {","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":".label {","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":".label-bright {","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":".label-header {","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":".text-field {","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":".tab-pane {","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"darrentde"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"darrentde"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"darrentde"},"content":".table-view {","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"darrentde"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"darrentde"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"darrentde"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"darrentde"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"darrentde"},"content":"    -fx-padding: 5;","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"darrentde"},"content":".table-view .column-header-background {","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"darrentde"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"darrentde"},"content":"    -fx-size: 35;","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"darrentde"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"darrentde"},"content":"    -fx-border-color:","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"darrentde"},"content":"        transparent","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"darrentde"},"content":"        transparent","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"darrentde"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"darrentde"},"content":"        transparent;","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"darrentde"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"darrentde"},"content":".table-view .column-header .label {","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"darrentde"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"darrentde"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"darrentde"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"darrentde"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"darrentde"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"darrentde"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"darrentde"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"darrentde"},"content":".split-pane {","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"darrentde"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"darrentde"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"darrentde"},"content":".list-view {","lastModifiedDate":"2022-09-28"},{"lineNumber":91,"author":{"gitId":"darrentde"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":92,"author":{"gitId":"darrentde"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":96,"author":{"gitId":"darrentde"},"content":".list-cell {","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"darrentde"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"darrentde"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"darrentde"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"darrentde"},"content":".list-cell:filled:even {","lastModifiedDate":"2022-09-28"},{"lineNumber":103,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2022-09-28"},{"lineNumber":104,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"darrentde"},"content":".list-cell:filled:odd {","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"darrentde"},"content":".list-cell:filled:selected {","lastModifiedDate":"2022-09-28"},{"lineNumber":111,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"darrentde"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"darrentde"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"darrentde"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":118,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":119,"author":{"gitId":"darrentde"},"content":".list-cell .label {","lastModifiedDate":"2022-09-28"},{"lineNumber":120,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":121,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":122,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":123,"author":{"gitId":"darrentde"},"content":".cell_big_label {","lastModifiedDate":"2022-09-28"},{"lineNumber":124,"author":{"gitId":"darrentde"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-09-28"},{"lineNumber":125,"author":{"gitId":"darrentde"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-09-28"},{"lineNumber":126,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-09-28"},{"lineNumber":127,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":128,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":129,"author":{"gitId":"darrentde"},"content":".cell_small_label {","lastModifiedDate":"2022-09-28"},{"lineNumber":130,"author":{"gitId":"darrentde"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-09-28"},{"lineNumber":131,"author":{"gitId":"darrentde"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-09-28"},{"lineNumber":132,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-09-28"},{"lineNumber":133,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":134,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":135,"author":{"gitId":"darrentde"},"content":".stack-pane {","lastModifiedDate":"2022-09-28"},{"lineNumber":136,"author":{"gitId":"darrentde"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-09-28"},{"lineNumber":137,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":138,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":139,"author":{"gitId":"darrentde"},"content":".pane-with-border {","lastModifiedDate":"2022-09-28"},{"lineNumber":140,"author":{"gitId":"darrentde"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-09-28"},{"lineNumber":141,"author":{"gitId":"darrentde"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2022-09-28"},{"lineNumber":142,"author":{"gitId":"darrentde"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2022-09-28"},{"lineNumber":143,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":144,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":145,"author":{"gitId":"darrentde"},"content":".status-bar {","lastModifiedDate":"2022-09-28"},{"lineNumber":146,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-09-28"},{"lineNumber":147,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":148,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":149,"author":{"gitId":"darrentde"},"content":".result-display {","lastModifiedDate":"2022-09-28"},{"lineNumber":150,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-09-28"},{"lineNumber":151,"author":{"gitId":"darrentde"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-09-28"},{"lineNumber":152,"author":{"gitId":"darrentde"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-09-28"},{"lineNumber":153,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":154,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":155,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":156,"author":{"gitId":"darrentde"},"content":".result-display .label {","lastModifiedDate":"2022-09-28"},{"lineNumber":157,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2022-09-28"},{"lineNumber":158,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":159,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":160,"author":{"gitId":"darrentde"},"content":".status-bar .label {","lastModifiedDate":"2022-09-28"},{"lineNumber":161,"author":{"gitId":"darrentde"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-09-28"},{"lineNumber":162,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":163,"author":{"gitId":"darrentde"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2022-09-28"},{"lineNumber":164,"author":{"gitId":"darrentde"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2022-09-28"},{"lineNumber":165,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":166,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":167,"author":{"gitId":"darrentde"},"content":".status-bar-with-border {","lastModifiedDate":"2022-09-28"},{"lineNumber":168,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-09-28"},{"lineNumber":169,"author":{"gitId":"darrentde"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2022-09-28"},{"lineNumber":170,"author":{"gitId":"darrentde"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-09-28"},{"lineNumber":171,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":172,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":173,"author":{"gitId":"darrentde"},"content":".status-bar-with-border .label {","lastModifiedDate":"2022-09-28"},{"lineNumber":174,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":175,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":176,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":177,"author":{"gitId":"darrentde"},"content":".grid-pane {","lastModifiedDate":"2022-09-28"},{"lineNumber":178,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-09-28"},{"lineNumber":179,"author":{"gitId":"darrentde"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-09-28"},{"lineNumber":180,"author":{"gitId":"darrentde"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-09-28"},{"lineNumber":181,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":182,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":183,"author":{"gitId":"darrentde"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2022-09-28"},{"lineNumber":184,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-09-28"},{"lineNumber":185,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":186,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":187,"author":{"gitId":"darrentde"},"content":".context-menu {","lastModifiedDate":"2022-09-28"},{"lineNumber":188,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2022-09-28"},{"lineNumber":189,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":190,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":191,"author":{"gitId":"darrentde"},"content":".context-menu .label {","lastModifiedDate":"2022-09-28"},{"lineNumber":192,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":193,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":194,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":195,"author":{"gitId":"darrentde"},"content":".menu-bar {","lastModifiedDate":"2022-09-28"},{"lineNumber":196,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-09-28"},{"lineNumber":197,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":198,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":199,"author":{"gitId":"darrentde"},"content":".menu-bar .label {","lastModifiedDate":"2022-09-28"},{"lineNumber":200,"author":{"gitId":"darrentde"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-09-28"},{"lineNumber":201,"author":{"gitId":"darrentde"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-09-28"},{"lineNumber":202,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":203,"author":{"gitId":"darrentde"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-09-28"},{"lineNumber":204,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":205,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":206,"author":{"gitId":"darrentde"},"content":".menu .left-container {","lastModifiedDate":"2022-09-28"},{"lineNumber":207,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: black;","lastModifiedDate":"2022-09-28"},{"lineNumber":208,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":209,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":210,"author":{"gitId":"darrentde"},"content":"/*","lastModifiedDate":"2022-09-28"},{"lineNumber":211,"author":{"gitId":"darrentde"},"content":" * Metro style Push Button","lastModifiedDate":"2022-09-28"},{"lineNumber":212,"author":{"gitId":"darrentde"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2022-09-28"},{"lineNumber":213,"author":{"gitId":"darrentde"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2022-09-28"},{"lineNumber":214,"author":{"gitId":"darrentde"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":215,"author":{"gitId":"darrentde"},"content":".button {","lastModifiedDate":"2022-09-28"},{"lineNumber":216,"author":{"gitId":"darrentde"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2022-09-28"},{"lineNumber":217,"author":{"gitId":"darrentde"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2022-09-28"},{"lineNumber":218,"author":{"gitId":"darrentde"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-09-28"},{"lineNumber":219,"author":{"gitId":"darrentde"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":220,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-09-28"},{"lineNumber":221,"author":{"gitId":"darrentde"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-09-28"},{"lineNumber":222,"author":{"gitId":"darrentde"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-09-28"},{"lineNumber":223,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2022-09-28"},{"lineNumber":224,"author":{"gitId":"darrentde"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2022-09-28"},{"lineNumber":225,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":226,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":227,"author":{"gitId":"darrentde"},"content":".button:hover {","lastModifiedDate":"2022-09-28"},{"lineNumber":228,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2022-09-28"},{"lineNumber":229,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":230,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":231,"author":{"gitId":"darrentde"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2022-09-28"},{"lineNumber":232,"author":{"gitId":"darrentde"},"content":"  -fx-background-color: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":233,"author":{"gitId":"darrentde"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2022-09-28"},{"lineNumber":234,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":235,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":236,"author":{"gitId":"darrentde"},"content":".button:focused {","lastModifiedDate":"2022-09-28"},{"lineNumber":237,"author":{"gitId":"darrentde"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2022-09-28"},{"lineNumber":238,"author":{"gitId":"darrentde"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":239,"author":{"gitId":"darrentde"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2022-09-28"},{"lineNumber":240,"author":{"gitId":"darrentde"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":241,"author":{"gitId":"darrentde"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":242,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":243,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":244,"author":{"gitId":"darrentde"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2022-09-28"},{"lineNumber":245,"author":{"gitId":"darrentde"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2022-09-28"},{"lineNumber":246,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-09-28"},{"lineNumber":247,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":248,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":249,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":250,"author":{"gitId":"darrentde"},"content":".button:default {","lastModifiedDate":"2022-09-28"},{"lineNumber":251,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-09-28"},{"lineNumber":252,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-09-28"},{"lineNumber":253,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":254,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":255,"author":{"gitId":"darrentde"},"content":".button:default:hover {","lastModifiedDate":"2022-09-28"},{"lineNumber":256,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2022-09-28"},{"lineNumber":257,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":258,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":259,"author":{"gitId":"darrentde"},"content":".dialog-pane {","lastModifiedDate":"2022-09-28"},{"lineNumber":260,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-09-28"},{"lineNumber":261,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":262,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":263,"author":{"gitId":"darrentde"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2022-09-28"},{"lineNumber":264,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-09-28"},{"lineNumber":265,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":266,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":267,"author":{"gitId":"darrentde"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2022-09-28"},{"lineNumber":268,"author":{"gitId":"darrentde"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-09-28"},{"lineNumber":269,"author":{"gitId":"darrentde"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-09-28"},{"lineNumber":270,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":271,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":272,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":273,"author":{"gitId":"darrentde"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2022-09-28"},{"lineNumber":274,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2022-09-28"},{"lineNumber":275,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":276,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":277,"author":{"gitId":"darrentde"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2022-09-28"},{"lineNumber":278,"author":{"gitId":"darrentde"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2022-09-28"},{"lineNumber":279,"author":{"gitId":"darrentde"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2022-09-28"},{"lineNumber":280,"author":{"gitId":"darrentde"},"content":"    -fx-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":281,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":282,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":283,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":284,"author":{"gitId":"darrentde"},"content":".scroll-bar {","lastModifiedDate":"2022-09-28"},{"lineNumber":285,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-09-28"},{"lineNumber":286,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":287,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":288,"author":{"gitId":"darrentde"},"content":".scroll-bar .thumb {","lastModifiedDate":"2022-09-28"},{"lineNumber":289,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2022-09-28"},{"lineNumber":290,"author":{"gitId":"darrentde"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2022-09-28"},{"lineNumber":291,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":293,"author":{"gitId":"darrentde"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2022-09-28"},{"lineNumber":294,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-09-28"},{"lineNumber":295,"author":{"gitId":"darrentde"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":296,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":297,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":298,"author":{"gitId":"darrentde"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2022-09-28"},{"lineNumber":299,"author":{"gitId":"darrentde"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2022-09-28"},{"lineNumber":300,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":301,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":302,"author":{"gitId":"darrentde"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2022-09-28"},{"lineNumber":303,"author":{"gitId":"darrentde"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2022-09-28"},{"lineNumber":304,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":305,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":306,"author":{"gitId":"darrentde"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2022-09-28"},{"lineNumber":307,"author":{"gitId":"darrentde"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":308,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":309,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":310,"author":{"gitId":"darrentde"},"content":"#cardPane {","lastModifiedDate":"2022-09-28"},{"lineNumber":311,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-09-28"},{"lineNumber":312,"author":{"gitId":"darrentde"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":313,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":314,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":315,"author":{"gitId":"darrentde"},"content":"#commandTypeLabel {","lastModifiedDate":"2022-09-28"},{"lineNumber":316,"author":{"gitId":"darrentde"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2022-09-28"},{"lineNumber":317,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2022-09-28"},{"lineNumber":318,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":319,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":320,"author":{"gitId":"darrentde"},"content":"#commandTextField {","lastModifiedDate":"2022-09-28"},{"lineNumber":321,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2022-09-28"},{"lineNumber":322,"author":{"gitId":"darrentde"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":323,"author":{"gitId":"darrentde"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2022-09-28"},{"lineNumber":324,"author":{"gitId":"darrentde"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":325,"author":{"gitId":"darrentde"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":326,"author":{"gitId":"darrentde"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-09-28"},{"lineNumber":327,"author":{"gitId":"darrentde"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-09-28"},{"lineNumber":328,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":329,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":330,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":331,"author":{"gitId":"darrentde"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2022-09-28"},{"lineNumber":332,"author":{"gitId":"darrentde"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2022-09-28"},{"lineNumber":333,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":334,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":335,"author":{"gitId":"darrentde"},"content":"#resultDisplay .content {","lastModifiedDate":"2022-09-28"},{"lineNumber":336,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2022-09-28"},{"lineNumber":337,"author":{"gitId":"darrentde"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":338,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":339,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":340,"author":{"gitId":"darrentde"},"content":"#tags {","lastModifiedDate":"2022-09-28"},{"lineNumber":341,"author":{"gitId":"darrentde"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-09-28"},{"lineNumber":342,"author":{"gitId":"darrentde"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-09-28"},{"lineNumber":343,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":344,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":345,"author":{"gitId":"darrentde"},"content":"#tags .label {","lastModifiedDate":"2022-09-28"},{"lineNumber":346,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":347,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2022-09-28"},{"lineNumber":348,"author":{"gitId":"darrentde"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-09-28"},{"lineNumber":349,"author":{"gitId":"darrentde"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-09-28"},{"lineNumber":350,"author":{"gitId":"darrentde"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-09-28"},{"lineNumber":351,"author":{"gitId":"darrentde"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-09-28"},{"lineNumber":352,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"darrentde":352}},{"path":"bin/main/view/Extensions.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":".error {","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":".list-cell:empty {","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"    -fx-background: #383838;","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":".tag-selector {","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"    -fx-border-color: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":".tooltip-text {","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"darrentde":20}},{"path":"bin/main/view/HelpWindow.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"#copyButton {","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"#copyButton:hover {","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"#copyButton:armed {","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"darrentde":19}},{"path":"bin/main/view/HelpWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"  \u003cicons\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"  \u003cscene\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"    \u003cScene\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"darrentde"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"darrentde"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"darrentde"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"darrentde"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"darrentde"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"darrentde"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"darrentde"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"darrentde":44}},{"path":"bin/main/view/MainWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"mqchua"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"  \u003cicons\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"  \u003cscene\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"    \u003cScene\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"darrentde"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"darrentde"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"darrentde"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"darrentde"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"darrentde"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"darrentde"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"darrentde"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"darrentde"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"darrentde"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"darrentde"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"mqchua"},"content":"        \u003cHBox minHeight\u003d\"-Infinity\" prefHeight\u003d\"440.0\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"darrentde"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"darrentde"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"darrentde"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"darrentde"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"darrentde"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"darrentde"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"mqchua"},"content":"          \u003cVBox fx:id\u003d\"meetingList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"340\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"mqchua"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"mqchua"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"mqchua"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"mqchua"},"content":"            \u003cStackPane fx:id\u003d\"meetingListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"mqchua"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"mqchua"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"darrentde"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"darrentde"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"darrentde"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"darrentde"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"darrentde"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"darrentde":60,"mqchua":11}},{"path":"bin/main/view/PersonListCard.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"darrentde":36}},{"path":"bin/main/view/PersonListPanel.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"darrentde":8}},{"path":"bin/main/view/ResultDisplay.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"darrentde":9}},{"path":"bin/main/view/StatusBarFooter.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"darrentde":12}},{"path":"bin/test/view/UiPartTest/invalidFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"Not a valid FXML file","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"darrentde":1}},{"path":"bin/test/view/UiPartTest/validFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"\u003c?import seedu.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"darrentde":4}},{"path":"bin/test/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"darrentde":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"tinenhao"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"GenFusion122"},"content":"run {","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"GenFusion122"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"GenFusion122":4,"tinenhao":1,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"### Darren Teo","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"\u003cimg src\u003d\"images/darrentde.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"[[github](https://github.com/darrentde)]","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":"[[portfolio](team/darrentde.md)]","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"mqchua"},"content":"### Chua Ming Quan","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"\u003cimg src\u003d\"images/mqchua.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"mqchua"},"content":"[[github](https://github.com/https://github.com/mqchua)]","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"[[portfolio](team/mqchua.md)]","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"### Tin En Hao","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"\u003cimg src\u003d\"images/tinenhao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"tinenhao"},"content":"[[github](https://github.com/tinenhao)]","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"[[portfolio](team/tinenhao.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"### Justin Widodo","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"\u003cimg src\u003d\"images/genfusion122.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"[[github](https://github.com/GenFusion122)]","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"HakkaNgin"},"content":"[[portfolio](team/genfusion122.md)]","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"* Responsibilities: Development","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"HakkaNgin"},"content":"### Luo Tian You","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"GenFusion122"},"content":"\u003cimg src\u003d\"images/hakkangin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"HakkaNgin"},"content":"[github](https://github.com/HakkaNgin)","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"HakkaNgin"},"content":"[portfolio](team/hakkangin.md)","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"HakkaNgin"},"content":"* Responsibilities: Development","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"darrentde":2,"mqchua":2,"GenFusion122":9,"tinenhao":2,"HakkaNgin":9,"-":35}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"darrentde"},"content":"\u003cimg src\u003d\"images/ModifiedArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"darrentde"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object and `Meeting` object residing in the `Model`.","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"darrentde"},"content":"* stores the meeting list data i.e., all `Meeting` objects (which are contained in a `UniqueMeetingList` object).","lastModifiedDate":"2022-11-04"},{"lineNumber":127,"author":{"gitId":"darrentde"},"content":"* stores the currently \u0027selected\u0027 `Meeting` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cMeeting\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-11-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"darrentde"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"darrentde"},"content":"\u003cimg src\u003d\"images/ModifiedModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"darrentde"},"content":"\u003cimg src\u003d\"images/ModifiedStorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"darrentde"},"content":"* can save both address book data, meeting list data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"darrentde"},"content":"* inherits from both `AddressBookStorage`, `MeetingListStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"HakkaNgin"},"content":"### [Implemented] Create Meetings with Persons in the Address Book","lastModifiedDate":"2022-10-21"},{"lineNumber":160,"author":{"gitId":"HakkaNgin"},"content":"#### Implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":161,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":162,"author":{"gitId":"HakkaNgin"},"content":"The command to create meetings consists of these various classes:","lastModifiedDate":"2022-10-21"},{"lineNumber":163,"author":{"gitId":"HakkaNgin"},"content":"- Class `CreateMeetingCommand` which extends the abstract class `Command`","lastModifiedDate":"2022-10-21"},{"lineNumber":164,"author":{"gitId":"HakkaNgin"},"content":"- Class `CreateMeetingCommandParser` which implements the interface `Parser\u003cCreateMeetingCommand\u003e`","lastModifiedDate":"2022-10-21"},{"lineNumber":165,"author":{"gitId":"HakkaNgin"},"content":"- Class `Meeting`","lastModifiedDate":"2022-10-21"},{"lineNumber":166,"author":{"gitId":"HakkaNgin"},"content":"- Interface `ReadOnlyMeetingList`","lastModifiedDate":"2022-10-21"},{"lineNumber":167,"author":{"gitId":"HakkaNgin"},"content":"- Class `MeetingList` which implements the interface `ReadOnlyMeetingList`","lastModifiedDate":"2022-10-21"},{"lineNumber":168,"author":{"gitId":"HakkaNgin"},"content":"- Class `UniqueMeetingList` which implements the interface `Iterable\u003cMeeting\u003e`","lastModifiedDate":"2022-10-21"},{"lineNumber":169,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":170,"author":{"gitId":"HakkaNgin"},"content":"As with all other commands in Yellow Pages, the create meeting feature contains a subclass of `Parser` which is","lastModifiedDate":"2022-10-21"},{"lineNumber":171,"author":{"gitId":"HakkaNgin"},"content":"involved in `AddressBookParser` and a subclass of `Command` that returns an appropriate new `CommandResult` Object.","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":173,"author":{"gitId":"HakkaNgin"},"content":"Creating the `ReadOnlyMeetingList` interface and implementing it in the class `MeetingList` allows meetings to be stored","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"HakkaNgin"},"content":"can be stored in a system similar to how Persons are stored in the `Addressbook`, which involves a set of list methods","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"HakkaNgin"},"content":"similar to those in `AddressBook`. `MeetingList` allows meetings to be stored in a centralised location while the ","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"HakkaNgin"},"content":"software is running. ","lastModifiedDate":"2022-10-21"},{"lineNumber":177,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":178,"author":{"gitId":"HakkaNgin"},"content":"The class `UniqueMeetingList` mirrors the class `UniquePersonList`, where a list of distinct meetings are stored in ","lastModifiedDate":"2022-10-21"},{"lineNumber":179,"author":{"gitId":"HakkaNgin"},"content":"an `ObservableList\u003cMeeting\u003e`. Every distinct `Meeting` Object created will be stored in a `UniqueMeetingList` ","lastModifiedDate":"2022-10-21"},{"lineNumber":180,"author":{"gitId":"HakkaNgin"},"content":"encapsulated by `MeetingList`.","lastModifiedDate":"2022-10-21"},{"lineNumber":181,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"HakkaNgin"},"content":"The class `Meeting` encapsulates the information of a meeting created by the user, which includes:","lastModifiedDate":"2022-10-21"},{"lineNumber":183,"author":{"gitId":"HakkaNgin"},"content":"- `peopleToMeetArray`: an `ArrayList` of the Persons to meet","lastModifiedDate":"2022-10-21"},{"lineNumber":184,"author":{"gitId":"HakkaNgin"},"content":"- `peopleToMeetList`: a `UniquePersonList` of the Persons to meet","lastModifiedDate":"2022-10-21"},{"lineNumber":185,"author":{"gitId":"HakkaNgin"},"content":"- `meetingDescription`: a `String` containing the title/ description of the meeting","lastModifiedDate":"2022-10-21"},{"lineNumber":186,"author":{"gitId":"HakkaNgin"},"content":"- `meetingDateAndTime`: a `String` containing the date and time of the meeting","lastModifiedDate":"2022-10-21"},{"lineNumber":187,"author":{"gitId":"HakkaNgin"},"content":"- `meetingLocation`: a `String` containing the location of the meeting","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":189,"author":{"gitId":"HakkaNgin"},"content":"Command: `\u003cNames of people to meet (from address book, split names by }} )\u003e ;;; \u003cTitle of meeting\u003e ;;; ","lastModifiedDate":"2022-10-21"},{"lineNumber":190,"author":{"gitId":"HakkaNgin"},"content":"\u003cDate and time of meeting (in dd-MM-yyyy HHmm format, time is optional)\u003e ;;; \u003clocation of meeting\u003e`","lastModifiedDate":"2022-10-21"},{"lineNumber":191,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":192,"author":{"gitId":"HakkaNgin"},"content":"Example:","lastModifiedDate":"2022-10-21"},{"lineNumber":193,"author":{"gitId":"HakkaNgin"},"content":"`meet Alex Yeoh }} Bernice Yu ;;; Study Session ;;; 06-10-2022 2015 ;;; UTown`","lastModifiedDate":"2022-10-21"},{"lineNumber":194,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":195,"author":{"gitId":"HakkaNgin"},"content":"Primarily there are 6 main cases for this command:","lastModifiedDate":"2022-10-21"},{"lineNumber":196,"author":{"gitId":"HakkaNgin"},"content":"- The name(s) input by the user match existing Person(s) in the `AddressBook` ","lastModifiedDate":"2022-10-21"},{"lineNumber":197,"author":{"gitId":"HakkaNgin"},"content":"and the date and time of the meeting in the user input is in the correct format","lastModifiedDate":"2022-10-21"},{"lineNumber":198,"author":{"gitId":"HakkaNgin"},"content":"-- this is the intended usage of the command and a new Meeting object is created","lastModifiedDate":"2022-10-21"},{"lineNumber":199,"author":{"gitId":"HakkaNgin"},"content":"1. Arguments after the command word `meet` is empty","lastModifiedDate":"2022-10-21"},{"lineNumber":200,"author":{"gitId":"HakkaNgin"},"content":"-- Throws a `ParseException` and an error message will be displayed","lastModifiedDate":"2022-10-21"},{"lineNumber":201,"author":{"gitId":"HakkaNgin"},"content":"2. Name of person to meet does not match any name in the `AddressBook `","lastModifiedDate":"2022-10-21"},{"lineNumber":202,"author":{"gitId":"HakkaNgin"},"content":"-- Throws a `PersonNotFoundException` and an error message will be displayed","lastModifiedDate":"2022-10-21"},{"lineNumber":203,"author":{"gitId":"HakkaNgin"},"content":"3. The date and time of the meeting is not in `dd-MM-yyyy HHmm (time is optional) format`","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"HakkaNgin"},"content":"  -- Throws a `ParseException` and an error message will be displayed","lastModifiedDate":"2022-10-21"},{"lineNumber":205,"author":{"gitId":"HakkaNgin"},"content":"4. The user adds duplicate Persons to meet to the meeting","lastModifiedDate":"2022-10-21"},{"lineNumber":206,"author":{"gitId":"HakkaNgin"},"content":"  -- Throws a `DuplicatePersonException` and an error message will be displayed","lastModifiedDate":"2022-10-21"},{"lineNumber":207,"author":{"gitId":"HakkaNgin"},"content":"5. The user adds the wrong number of information to the create meeting command","lastModifiedDate":"2022-10-21"},{"lineNumber":208,"author":{"gitId":"HakkaNgin"},"content":"  -- Throws an `IndexOutOfBoundsException` and an error message will be displayed","lastModifiedDate":"2022-10-21"},{"lineNumber":209,"author":{"gitId":"HakkaNgin"},"content":"6. The user adds a meeting with the same Persons and at the same date and time as an existing meeting","lastModifiedDate":"2022-10-21"},{"lineNumber":210,"author":{"gitId":"HakkaNgin"},"content":"  -- Throws a `DuplicateMeetingException` and an error message will be displayed","lastModifiedDate":"2022-10-21"},{"lineNumber":211,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":212,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":213,"author":{"gitId":"HakkaNgin"},"content":"The diagrams below should sufficiently explain the main cases for the command.","lastModifiedDate":"2022-10-21"},{"lineNumber":214,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":215,"author":{"gitId":"HakkaNgin"},"content":"![FilterMeetingsActivityDiagram](images/CreateMeetingSequenceDiagram.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":216,"author":{"gitId":"HakkaNgin"},"content":"#### Sequence Diagram for Creating New Meetings","lastModifiedDate":"2022-10-21"},{"lineNumber":217,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":218,"author":{"gitId":"HakkaNgin"},"content":"![FilterMeetingsSequenceDiagram](images/CreateMeetingActivityDiagram.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":219,"author":{"gitId":"HakkaNgin"},"content":"#### Activity Diagram for Creating New Meetings","lastModifiedDate":"2022-10-21"},{"lineNumber":220,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":221,"author":{"gitId":"darrentde"},"content":"### [Implemented] Storage for meetings","lastModifiedDate":"2022-10-20"},{"lineNumber":222,"author":{"gitId":"darrentde"},"content":"#### Implementation","lastModifiedDate":"2022-10-20"},{"lineNumber":223,"author":{"gitId":"darrentde"},"content":"The implementation of the storage for meetings closely follows the way address book was implemented. There were many classes ","lastModifiedDate":"2022-10-20"},{"lineNumber":224,"author":{"gitId":"darrentde"},"content":"that had to be copied, and they included","lastModifiedDate":"2022-10-20"},{"lineNumber":225,"author":{"gitId":"darrentde"},"content":"- `MeetingList`","lastModifiedDate":"2022-10-20"},{"lineNumber":226,"author":{"gitId":"darrentde"},"content":"- `ReadOnlyMeetingList`","lastModifiedDate":"2022-10-20"},{"lineNumber":227,"author":{"gitId":"darrentde"},"content":"- `JsonMeetingListStorage`","lastModifiedDate":"2022-10-20"},{"lineNumber":228,"author":{"gitId":"darrentde"},"content":"- `JsonAdaptedMeeting`","lastModifiedDate":"2022-10-20"},{"lineNumber":229,"author":{"gitId":"darrentde"},"content":"- `JsonSerializableMeetingList`","lastModifiedDate":"2022-10-20"},{"lineNumber":230,"author":{"gitId":"darrentde"},"content":"- `MeetingListStorage`","lastModifiedDate":"2022-10-20"},{"lineNumber":231,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":232,"author":{"gitId":"darrentde"},"content":"The following classes had to be extended in order to support meeting list","lastModifiedDate":"2022-10-20"},{"lineNumber":233,"author":{"gitId":"darrentde"},"content":"- `MainApp`","lastModifiedDate":"2022-10-20"},{"lineNumber":234,"author":{"gitId":"darrentde"},"content":"- `UserPrefs`","lastModifiedDate":"2022-10-20"},{"lineNumber":235,"author":{"gitId":"darrentde"},"content":"- `ReadOnlyUserPrefs`","lastModifiedDate":"2022-10-20"},{"lineNumber":236,"author":{"gitId":"darrentde"},"content":"- `SampleDataUtil`","lastModifiedDate":"2022-10-20"},{"lineNumber":237,"author":{"gitId":"darrentde"},"content":"- `Storage`","lastModifiedDate":"2022-10-20"},{"lineNumber":238,"author":{"gitId":"darrentde"},"content":"- `StorageManager`","lastModifiedDate":"2022-10-20"},{"lineNumber":239,"author":{"gitId":"darrentde"},"content":"- `Model`","lastModifiedDate":"2022-10-20"},{"lineNumber":240,"author":{"gitId":"darrentde"},"content":"- `ModelManager`","lastModifiedDate":"2022-10-20"},{"lineNumber":241,"author":{"gitId":"darrentde"},"content":"- `Logic`","lastModifiedDate":"2022-10-20"},{"lineNumber":242,"author":{"gitId":"darrentde"},"content":"- `LogicManager`","lastModifiedDate":"2022-10-20"},{"lineNumber":243,"author":{"gitId":"darrentde"},"content":"- `AddressBookParser`","lastModifiedDate":"2022-10-20"},{"lineNumber":244,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":245,"author":{"gitId":"darrentde"},"content":"\u003cimg src\u003d\"images/ModifiedStorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":246,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":247,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":248,"author":{"gitId":"darrentde"},"content":"The app maintained its own internal list of meetings in the `ModelManager` and the ","lastModifiedDate":"2022-10-20"},{"lineNumber":249,"author":{"gitId":"darrentde"},"content":"`LogicManager` would save the current model whenever the execute function to the `meetinglist.json`. As such, there","lastModifiedDate":"2022-10-20"},{"lineNumber":250,"author":{"gitId":"darrentde"},"content":"was no need of having to create additional classes to support the model or logic classes","lastModifiedDate":"2022-10-20"},{"lineNumber":251,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":252,"author":{"gitId":"GenFusion122"},"content":"### [Implemented] Filter Meetings between Dates","lastModifiedDate":"2022-10-16"},{"lineNumber":253,"author":{"gitId":"GenFusion122"},"content":"#### Implementation","lastModifiedDate":"2022-10-16"},{"lineNumber":254,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":255,"author":{"gitId":"GenFusion122"},"content":"The filter meetings between dates command consists of these various classes:","lastModifiedDate":"2022-10-16"},{"lineNumber":256,"author":{"gitId":"GenFusion122"},"content":"- `FilterMeetingCommand` which extends `Command`","lastModifiedDate":"2022-10-16"},{"lineNumber":257,"author":{"gitId":"GenFusion122"},"content":"- `FilterMeetingCommandParser` which extends `Parser\u003cFilterMeetingCommand\u003e`","lastModifiedDate":"2022-10-16"},{"lineNumber":258,"author":{"gitId":"GenFusion122"},"content":"- `MeetingFilterPredicate` which extends `Predicate\u003cMeeting\u003e`","lastModifiedDate":"2022-10-16"},{"lineNumber":259,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":260,"author":{"gitId":"GenFusion122"},"content":"As with all other commands in Yellow Pages, find meetings has a `Parser` subclass, namely `FilterMeetingCommandParser`","lastModifiedDate":"2022-11-02"},{"lineNumber":261,"author":{"gitId":"GenFusion122"},"content":"which parses the user input and returns a `FilterMeetingCommand` object with a `new MeetingFilterPredicate` that contains the ","lastModifiedDate":"2022-11-02"},{"lineNumber":262,"author":{"gitId":"GenFusion122"},"content":"\"verified\" user inputs. Utilizing the `Predicate` system allows the ","lastModifiedDate":"2022-11-02"},{"lineNumber":263,"author":{"gitId":"GenFusion122"},"content":"command to simply offer up a new `Predicate` object. In this case, it is simply a predicate checking if each Meeting ","lastModifiedDate":"2022-11-02"},{"lineNumber":264,"author":{"gitId":"GenFusion122"},"content":"Object\u0027s date is between two given dates. This `MeetingFilterDatePredicate` is then used to update the","lastModifiedDate":"2022-11-02"},{"lineNumber":265,"author":{"gitId":"GenFusion122"},"content":"`filteredMeetings` list in the `ModelManager`, allowing it to temporarily store and display the meetings matching the `MeetingFilterDatePredicate`.","lastModifiedDate":"2022-11-02"},{"lineNumber":266,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":267,"author":{"gitId":"GenFusion122"},"content":"The `FilterMeetingCommandParser` class utilizes a utility class called `DateTimeConverter`. The `FilterMeetingCommandParser` class converts the ","lastModifiedDate":"2022-11-02"},{"lineNumber":268,"author":{"gitId":"GenFusion122"},"content":"DateTime values from the Meeting which is stored as a `String` in the `EEEE, d MMMM uuuu hh:mm a` format into a `LocalDateTime` ","lastModifiedDate":"2022-11-02"},{"lineNumber":269,"author":{"gitId":"GenFusion122"},"content":"object for comparison with other dates.","lastModifiedDate":"2022-11-02"},{"lineNumber":270,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":271,"author":{"gitId":"GenFusion122"},"content":"Command: `filtermeetingsbetween Date A ;;; Date B`, both Date A and B must be real dates that follow the ","lastModifiedDate":"2022-10-16"},{"lineNumber":272,"author":{"gitId":"GenFusion122"},"content":"dd-MM-yyyy HHmm format.","lastModifiedDate":"2022-10-16"},{"lineNumber":273,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":274,"author":{"gitId":"GenFusion122"},"content":"Primarily there are three main cases for this command,","lastModifiedDate":"2022-10-16"},{"lineNumber":275,"author":{"gitId":"GenFusion122"},"content":"- `Date A \u003c Date B` - this is the intended use of the command and will correctly display Meeting Object\u0027s whose dates ","lastModifiedDate":"2022-10-16"},{"lineNumber":276,"author":{"gitId":"GenFusion122"},"content":"are within the range of Date A and Date B. ","lastModifiedDate":"2022-10-16"},{"lineNumber":277,"author":{"gitId":"GenFusion122"},"content":"- `Date A \u003d Date B` - while not being the intended use also works, and will display Meeting Objects whose","lastModifiedDate":"2022-10-16"},{"lineNumber":278,"author":{"gitId":"GenFusion122"},"content":"  date \u003d Date A \u003d Date B.","lastModifiedDate":"2022-10-16"},{"lineNumber":279,"author":{"gitId":"GenFusion122"},"content":"- `Date A \u003e Date B` - will throw an error as this is an invalid syntax.","lastModifiedDate":"2022-10-16"},{"lineNumber":280,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":281,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":282,"author":{"gitId":"GenFusion122"},"content":"#### Sequence Diagram for Filter Meetings between Dates","lastModifiedDate":"2022-10-16"},{"lineNumber":283,"author":{"gitId":"GenFusion122"},"content":"![FilterMeetingsSequenceDiagram](images/FilterMeetingsSequenceDiagram.png)","lastModifiedDate":"2022-10-16"},{"lineNumber":284,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":285,"author":{"gitId":"GenFusion122"},"content":"### [Implemented] Find Meetings","lastModifiedDate":"2022-11-02"},{"lineNumber":286,"author":{"gitId":"GenFusion122"},"content":"#### Implementation","lastModifiedDate":"2022-11-02"},{"lineNumber":287,"author":{"gitId":"GenFusion122"},"content":"The find meetings command consists of these various classes:","lastModifiedDate":"2022-11-02"},{"lineNumber":288,"author":{"gitId":"GenFusion122"},"content":"- `FindMeetingCommand` which extends `Command`","lastModifiedDate":"2022-11-02"},{"lineNumber":289,"author":{"gitId":"GenFusion122"},"content":"- `FindMeetingCommandParser` which extends `Parser\u003cFilterMeetingCommand\u003e`","lastModifiedDate":"2022-11-02"},{"lineNumber":290,"author":{"gitId":"GenFusion122"},"content":"- `MeetingContainsKeywordsPredicate` which extends `Predicate\u003cMeeting\u003e`","lastModifiedDate":"2022-11-02"},{"lineNumber":291,"author":{"gitId":"GenFusion122"},"content":"- `FindMeetingFunctionalInterface`which acts as a Functional Interface to pass functions as parameters.","lastModifiedDate":"2022-11-02"},{"lineNumber":292,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":293,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":294,"author":{"gitId":"GenFusion122"},"content":"As with all other commands in Yellow Pages, find meetings has a `Parser` subclass, namely `FindMeetingCommandParser`","lastModifiedDate":"2022-11-02"},{"lineNumber":295,"author":{"gitId":"GenFusion122"},"content":"which parses the user input and returns a `FindMeetingCommand` object with a `new MeetingContainsKeywordsPredicate` that ","lastModifiedDate":"2022-11-02"},{"lineNumber":296,"author":{"gitId":"GenFusion122"},"content":"contains the following parameters: ","lastModifiedDate":"2022-11-02"},{"lineNumber":297,"author":{"gitId":"GenFusion122"},"content":"- Array of Keywords entered by the user","lastModifiedDate":"2022-11-02"},{"lineNumber":298,"author":{"gitId":"GenFusion122"},"content":"- One of three `static` Functional Interfaces which are:","lastModifiedDate":"2022-11-02"},{"lineNumber":299,"author":{"gitId":"GenFusion122"},"content":"  - `Meeting::getDescription`","lastModifiedDate":"2022-11-02"},{"lineNumber":300,"author":{"gitId":"GenFusion122"},"content":"  - `Meeting::getLocation`","lastModifiedDate":"2022-11-02"},{"lineNumber":301,"author":{"gitId":"GenFusion122"},"content":"  - `Meeting::getPeopleToMeetAsString`","lastModifiedDate":"2022-11-02"},{"lineNumber":302,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":303,"author":{"gitId":"GenFusion122"},"content":"Utilizing the `Predicate` system allows the command to simply offer up a new `Predicate` object. ","lastModifiedDate":"2022-11-02"},{"lineNumber":304,"author":{"gitId":"GenFusion122"},"content":"In this case, it is a predicate checking if one of a Meeting Object\u0027s fields (corresponding to the Functional Interfaces) matches a keyword. ","lastModifiedDate":"2022-11-02"},{"lineNumber":305,"author":{"gitId":"GenFusion122"},"content":"This `MeetingContainsKeywordsPredicate` is then used to update the `filteredMeetings` list in the `ModelManager`, ","lastModifiedDate":"2022-11-02"},{"lineNumber":306,"author":{"gitId":"GenFusion122"},"content":"allowing it to temporarily store and display the meetings matching the `MeetingContainsKeywordsPredicate`.","lastModifiedDate":"2022-11-02"},{"lineNumber":307,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":308,"author":{"gitId":"GenFusion122"},"content":"The aforementioned `static` Functional Interfaces exist within the `FindMeetingCommand` class, ","lastModifiedDate":"2022-11-02"},{"lineNumber":309,"author":{"gitId":"GenFusion122"},"content":"these interfaces are used to indicate which Meeting field (description, location and people) to search the keywords provided in.","lastModifiedDate":"2022-11-02"},{"lineNumber":310,"author":{"gitId":"GenFusion122"},"content":"This implementation raises two important questions:","lastModifiedDate":"2022-11-02"},{"lineNumber":311,"author":{"gitId":"GenFusion122"},"content":"#### 1. Why are they static?","lastModifiedDate":"2022-11-02"},{"lineNumber":312,"author":{"gitId":"GenFusion122"},"content":"   ","lastModifiedDate":"2022-11-02"},{"lineNumber":313,"author":{"gitId":"GenFusion122"},"content":"`static` values were used instead of creating new Functional Interface Objects each time primarily because of limitations in Java. ","lastModifiedDate":"2022-11-02"},{"lineNumber":314,"author":{"gitId":"GenFusion122"},"content":"Namely, Java is unable to compare two Functional Interface Objects unless they are the same Object. This affected Unit Testing","lastModifiedDate":"2022-11-02"},{"lineNumber":315,"author":{"gitId":"GenFusion122"},"content":"as without comparison, we would never be able to test if two `MeetingContainsKeywordsPredicate` were the same. Utilizing static","lastModifiedDate":"2022-11-02"},{"lineNumber":316,"author":{"gitId":"GenFusion122"},"content":"Functional Interfaces allowed us to compare these two of them together and provide higher quality tests.","lastModifiedDate":"2022-11-02"},{"lineNumber":317,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":318,"author":{"gitId":"GenFusion122"},"content":"#### 2. Why use functional interfaces?","lastModifiedDate":"2022-11-02"},{"lineNumber":319,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":320,"author":{"gitId":"GenFusion122"},"content":"Functional Interfaces were used as a means to parameterize various getter functions from the Meeting Class.","lastModifiedDate":"2022-11-02"},{"lineNumber":321,"author":{"gitId":"GenFusion122"},"content":"This allows the `MeetingContainsKeywordsPredicate` to directly use the function instead of relying on identities and conditional ","lastModifiedDate":"2022-11-02"},{"lineNumber":322,"author":{"gitId":"GenFusion122"},"content":"statements to locate the correct Meeting field. In way this can be seen as an application of _defensive programming_, whereby the use ","lastModifiedDate":"2022-11-02"},{"lineNumber":323,"author":{"gitId":"GenFusion122"},"content":"of Functional Interfaces limit the chances of things going wrong. Using Functional Interfaces implies that any errors/bugs that happen ","lastModifiedDate":"2022-11-02"},{"lineNumber":324,"author":{"gitId":"GenFusion122"},"content":"in regard to the wrong Meeting field to select lay solely in the `FindMeetingCommandParser` passing the wrong parameters. Furthermore, this ","lastModifiedDate":"2022-11-02"},{"lineNumber":325,"author":{"gitId":"GenFusion122"},"content":"implementation aids in scalability of the Meeting Object, adding more fields to a Meeting just requires us to declare a new ","lastModifiedDate":"2022-11-02"},{"lineNumber":326,"author":{"gitId":"GenFusion122"},"content":"`static` Functional Interface with the appropriate field and to update the `verifyParameters` function.","lastModifiedDate":"2022-11-02"},{"lineNumber":327,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":328,"author":{"gitId":"GenFusion122"},"content":"#### Sequence Diagram for Find Meeting","lastModifiedDate":"2022-11-02"},{"lineNumber":329,"author":{"gitId":"GenFusion122"},"content":"**Note**: `lambda` refers to a Functional Interface.","lastModifiedDate":"2022-11-02"},{"lineNumber":330,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":331,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":332,"author":{"gitId":"GenFusion122"},"content":"![FilterMeetingsSequenceDiagram](images/FindMeetingSequenceDiagram.png)","lastModifiedDate":"2022-11-02"},{"lineNumber":333,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":334,"author":{"gitId":"GenFusion122"},"content":"### [Implemented] Sort Meetings","lastModifiedDate":"2022-11-02"},{"lineNumber":335,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":336,"author":{"gitId":"GenFusion122"},"content":"The sort meetings command consists of these various classes:","lastModifiedDate":"2022-11-02"},{"lineNumber":337,"author":{"gitId":"GenFusion122"},"content":"- `SortMeetingCommand` which extends `Command`","lastModifiedDate":"2022-11-02"},{"lineNumber":338,"author":{"gitId":"GenFusion122"},"content":"- `SortMeetingCommandParser` which extends `Parser\u003cFilterMeetingCommand\u003e`","lastModifiedDate":"2022-11-02"},{"lineNumber":339,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":340,"author":{"gitId":"GenFusion122"},"content":"Like all other commands in Yellow Pages, sort meetings has a `Parser` subclass, namely `SortMeetingCommandParser`","lastModifiedDate":"2022-11-02"},{"lineNumber":341,"author":{"gitId":"GenFusion122"},"content":"which parses the user input and returns a `SortMeetingCommand` with a boolean parameter `isInAscending` that indicates","lastModifiedDate":"2022-11-02"},{"lineNumber":342,"author":{"gitId":"GenFusion122"},"content":"whether to sort the meeting list in Ascending or Descending order.","lastModifiedDate":"2022-11-02"},{"lineNumber":343,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":344,"author":{"gitId":"GenFusion122"},"content":"Sort Meetings primarily uses Java\u0027s `List::sort` that `SortMeetingCommand` ","lastModifiedDate":"2022-11-02"},{"lineNumber":345,"author":{"gitId":"GenFusion122"},"content":"accesses through the `ObservableList\u003cMeeting\u003e` in the `Model`. ","lastModifiedDate":"2022-11-02"},{"lineNumber":346,"author":{"gitId":"GenFusion122"},"content":"It utilizes the `compareTo` method found in Meetings to compare two Meeting Objects by date. ","lastModifiedDate":"2022-11-02"},{"lineNumber":347,"author":{"gitId":"GenFusion122"},"content":"The comparator function used in the Sort is as follows:","lastModifiedDate":"2022-11-02"},{"lineNumber":348,"author":{"gitId":"GenFusion122"},"content":"```","lastModifiedDate":"2022-11-02"},{"lineNumber":349,"author":{"gitId":"GenFusion122"},"content":"public void sortByDate(boolean isInAscending) {","lastModifiedDate":"2022-11-02"},{"lineNumber":350,"author":{"gitId":"GenFusion122"},"content":"    //Ternary operator checks if isInAscending is true and negates the results if it is false","lastModifiedDate":"2022-11-02"},{"lineNumber":351,"author":{"gitId":"GenFusion122"},"content":"    internalList.sort((Meeting m1, Meeting m2) -\u003e isInAscending","lastModifiedDate":"2022-11-02"},{"lineNumber":352,"author":{"gitId":"GenFusion122"},"content":"            ? m1.compareTo(m2)","lastModifiedDate":"2022-11-02"},{"lineNumber":353,"author":{"gitId":"GenFusion122"},"content":"            : -m1.compareTo(m2));","lastModifiedDate":"2022-11-02"},{"lineNumber":354,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":355,"author":{"gitId":"GenFusion122"},"content":"```","lastModifiedDate":"2022-11-02"},{"lineNumber":356,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":357,"author":{"gitId":"GenFusion122"},"content":"Note that the `isInAscending` value decides whether the `compareTo` result is negated. This implementation allowed","lastModifiedDate":"2022-11-02"},{"lineNumber":358,"author":{"gitId":"GenFusion122"},"content":"for the option of sorting Ascending (non-negated) and Descending (negated). Furthermore, calling the `sort` function ","lastModifiedDate":"2022-11-02"},{"lineNumber":359,"author":{"gitId":"GenFusion122"},"content":"in this manner allows us to make changes to the list **permanently** which is intended.","lastModifiedDate":"2022-11-02"},{"lineNumber":360,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":361,"author":{"gitId":"GenFusion122"},"content":"#### Sequence Diagram for Sort Meeting","lastModifiedDate":"2022-11-02"},{"lineNumber":362,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":363,"author":{"gitId":"GenFusion122"},"content":"![SortMeetingsSequenceDiagram](images/SortMeetingSequenceDiagram.png)","lastModifiedDate":"2022-11-02"},{"lineNumber":364,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":365,"author":{"gitId":"tinenhao"},"content":"### [Implemented] Edit Meeting Details","lastModifiedDate":"2022-10-19"},{"lineNumber":366,"author":{"gitId":"tinenhao"},"content":"#### Implementation","lastModifiedDate":"2022-10-19"},{"lineNumber":367,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":368,"author":{"gitId":"GenFusion122"},"content":"The edit meeting details command consists of these various classes:","lastModifiedDate":"2022-11-02"},{"lineNumber":369,"author":{"gitId":"tinenhao"},"content":"- `EditMeetingCommand` which extends `Command`","lastModifiedDate":"2022-10-19"},{"lineNumber":370,"author":{"gitId":"tinenhao"},"content":"- `EditMeetingCommandParser` which extends `Parser\u003cFilterMeetingCommand\u003e`","lastModifiedDate":"2022-10-19"},{"lineNumber":371,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":372,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":373,"author":{"gitId":"tinenhao"},"content":"As with all other commands in Yellow Pages, edit meeting has a `Parser` subclass that goes through the","lastModifiedDate":"2022-10-19"},{"lineNumber":374,"author":{"gitId":"tinenhao"},"content":"`AddressBookParser` and a `Command` subclass that returns an appropriate new `CommandResult` Object.","lastModifiedDate":"2022-10-19"},{"lineNumber":375,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":376,"author":{"gitId":"tinenhao"},"content":"`EditMeetingCommand` follows closely the implementation of the `EditCommand` where an `EditMeetingDescriptor` is created","lastModifiedDate":"2022-10-19"},{"lineNumber":377,"author":{"gitId":"tinenhao"},"content":"where only the edit fields are filled in. Next, a new `Meeting` object is created where the contents in the non-null ","lastModifiedDate":"2022-10-19"},{"lineNumber":378,"author":{"gitId":"tinenhao"},"content":"fields of the `EditMeetingDescriptor` are copied over, otherwise the contents of the field in the original `Meeting` ","lastModifiedDate":"2022-10-19"},{"lineNumber":379,"author":{"gitId":"tinenhao"},"content":"object would be copied over. Lastly, this new `Meeting` object would replace the targeted Meeting, resulting in the ","lastModifiedDate":"2022-10-19"},{"lineNumber":380,"author":{"gitId":"tinenhao"},"content":"relevant fields being updated.","lastModifiedDate":"2022-10-19"},{"lineNumber":381,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":382,"author":{"gitId":"tinenhao"},"content":"Command: `editmeeting meeting index [d/description] [dd/DateAndTime] [l/location]`, DateAndTime must follow the","lastModifiedDate":"2022-10-19"},{"lineNumber":383,"author":{"gitId":"tinenhao"},"content":"dd-MM-yyyy HHmm format. Do note that index starts from 1 starting from the first meeting listed. ","lastModifiedDate":"2022-10-19"},{"lineNumber":384,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":385,"author":{"gitId":"tinenhao"},"content":"Primarily there are 3 cases for this command,","lastModifiedDate":"2022-10-19"},{"lineNumber":386,"author":{"gitId":"tinenhao"},"content":"- all 3 fields are to be updated - e.g. `editmeeting 1 d/cs2104 dd/23-04-2022 l/nus 2334`","lastModifiedDate":"2022-10-19"},{"lineNumber":387,"author":{"gitId":"tinenhao"},"content":"- only 2 fields are to be updated - e.g. `editmeeting 1 d/cs2105 l/ntu`","lastModifiedDate":"2022-10-19"},{"lineNumber":388,"author":{"gitId":"tinenhao"},"content":"- only 1 field is to be updated - e.g. `editmeeting 1 d/cs2106`","lastModifiedDate":"2022-10-19"},{"lineNumber":389,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":390,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":391,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":481,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":482,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":483,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":484,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"GenFusion122"},"content":"* has a need to keep track of meetings with others","lastModifiedDate":"2022-10-02"},{"lineNumber":496,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":499,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"GenFusion122"},"content":"* is a member of a university/organization","lastModifiedDate":"2022-10-02"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"| Priority | As a …​                                | I want to …​                                      | So that I can…​                                                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"tinenhao"},"content":"|-------| -------------------------------------- |---------------------------------------------------|-----------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-18"},{"lineNumber":511,"author":{"gitId":"tinenhao"},"content":"| `***` | user                                   | add a new contact to my contact list              |                                                                                         |","lastModifiedDate":"2022-09-18"},{"lineNumber":512,"author":{"gitId":"tinenhao"},"content":"| `***` | user                                   | edit existing contacts in my contact list         |                                                                                         |","lastModifiedDate":"2022-09-18"},{"lineNumber":513,"author":{"gitId":"tinenhao"},"content":"| `***` | user                                   | delete contacts in my contact list                |                                                                                         |","lastModifiedDate":"2022-09-18"},{"lineNumber":514,"author":{"gitId":"tinenhao"},"content":"| `***` | user                                   | view all my contacts                              |                                                                                         |","lastModifiedDate":"2022-09-18"},{"lineNumber":515,"author":{"gitId":"tinenhao"},"content":"| `***` | user                                   | search for specific contacts                      | find particular people                                                                  |","lastModifiedDate":"2022-09-18"},{"lineNumber":516,"author":{"gitId":"tinenhao"},"content":"| `***` | user                                   | add a new meeting                                 | keep track of my meetings with the people in the database                               |","lastModifiedDate":"2022-09-18"},{"lineNumber":517,"author":{"gitId":"tinenhao"},"content":"| `***` | user                                   | edit my existing meetings                         |                                                                                         |","lastModifiedDate":"2022-09-18"},{"lineNumber":518,"author":{"gitId":"tinenhao"},"content":"| `***` | user                                   | delete my existing meetings                       |                                                                                         |","lastModifiedDate":"2022-09-18"},{"lineNumber":519,"author":{"gitId":"tinenhao"},"content":"| `***` | user                                   | view all my meetings                              | have an overview of the people I will be meeting at certain timings and plan my schedule |","lastModifiedDate":"2022-09-18"},{"lineNumber":520,"author":{"gitId":"tinenhao"},"content":"| `***` | user                                   | search for specific meetings                      |                                                                                         |","lastModifiedDate":"2022-09-18"},{"lineNumber":521,"author":{"gitId":"tinenhao"},"content":"| `***` | user                                   | add multiple tags to my contacts                  | categorise them more accurately                                                         |","lastModifiedDate":"2022-09-18"},{"lineNumber":522,"author":{"gitId":"tinenhao"},"content":"| `***` | user                                   | add meeting times with people on my contact list  | better remember these meetings                                                          |","lastModifiedDate":"2022-09-18"},{"lineNumber":523,"author":{"gitId":"tinenhao"},"content":"| `**`  | user                                   | prioritise my upcoming meetings                   | better manage my time                                                                   |","lastModifiedDate":"2022-09-18"},{"lineNumber":524,"author":{"gitId":"tinenhao"},"content":"| `**`  | user                                   | sort my meetings based on priority                | see my meetings with greater priority on the top                                        |","lastModifiedDate":"2022-09-18"},{"lineNumber":525,"author":{"gitId":"tinenhao"},"content":"| `*`  | user                                   | customise the theme                               |                                                                                         |","lastModifiedDate":"2022-09-18"},{"lineNumber":526,"author":{"gitId":"tinenhao"},"content":"| `**` | user                                   | share my contacts                                 | share with my friends                                                                   |","lastModifiedDate":"2022-09-18"},{"lineNumber":527,"author":{"gitId":"tinenhao"},"content":"| `**` | user                                   | share my meeting schedule                         | communicate with other people my availability                                           |","lastModifiedDate":"2022-09-18"},{"lineNumber":528,"author":{"gitId":"tinenhao"},"content":"| `**` | user                                   | import my meeting schedule                        |                                                                                         |","lastModifiedDate":"2022-09-18"},{"lineNumber":529,"author":{"gitId":"tinenhao"},"content":"| `*` | user                                   | view the calendar in a day/week/month/year format |                                                                  |","lastModifiedDate":"2022-09-18"},{"lineNumber":530,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"tinenhao"},"content":"(For all use cases below, the **System** is `YellowPages` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-18"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"tinenhao"},"content":"**Use case: Find all contacts taking same module**","lastModifiedDate":"2022-09-18"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"tinenhao"},"content":"1. User opens the software","lastModifiedDate":"2022-09-18"},{"lineNumber":542,"author":{"gitId":"tinenhao"},"content":"2. System displays the welcome message and makes CLI ready for user input","lastModifiedDate":"2022-09-18"},{"lineNumber":543,"author":{"gitId":"tinenhao"},"content":"3. User inputs command search for all contacts with the tag","lastModifiedDate":"2022-09-18"},{"lineNumber":544,"author":{"gitId":"tinenhao"},"content":"4. Software displays acknowledgement message","lastModifiedDate":"2022-09-18"},{"lineNumber":545,"author":{"gitId":"tinenhao"},"content":"5. Software searches for contacts associated with the tag and displays the entire list","lastModifiedDate":"2022-09-18"},{"lineNumber":546,"author":{"gitId":"tinenhao"},"content":"6. Use case ends","lastModifiedDate":"2022-09-18"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"tinenhao"},"content":"**Use case: Find all contacts taking same module**","lastModifiedDate":"2022-09-18"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"tinenhao"},"content":"**MSS**","lastModifiedDate":"2022-09-18"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"tinenhao"},"content":"1. User opens the software","lastModifiedDate":"2022-09-18"},{"lineNumber":553,"author":{"gitId":"tinenhao"},"content":"2. System displays the welcome message and makes CLI ready for user input","lastModifiedDate":"2022-09-18"},{"lineNumber":554,"author":{"gitId":"tinenhao"},"content":"3. User inputs command search for all contacts with the tag","lastModifiedDate":"2022-09-18"},{"lineNumber":555,"author":{"gitId":"tinenhao"},"content":"4. Software displays acknowledgement message","lastModifiedDate":"2022-09-18"},{"lineNumber":556,"author":{"gitId":"tinenhao"},"content":"5. Software searches for contacts associated with the tag and displays the entire list","lastModifiedDate":"2022-09-18"},{"lineNumber":557,"author":{"gitId":"tinenhao"},"content":"6. Use case ends","lastModifiedDate":"2022-09-18"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"tinenhao"},"content":"**Use case: Create meeting with 2 contacts**","lastModifiedDate":"2022-09-18"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"tinenhao"},"content":"**MSS**","lastModifiedDate":"2022-09-18"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"tinenhao"},"content":"1. User opens software","lastModifiedDate":"2022-09-18"},{"lineNumber":564,"author":{"gitId":"tinenhao"},"content":"2. System displays the welcome message and makes CLI ready for user input","lastModifiedDate":"2022-09-18"},{"lineNumber":565,"author":{"gitId":"tinenhao"},"content":"3. User inputs command to create a meeting at a specific timing with specific contacts","lastModifiedDate":"2022-09-18"},{"lineNumber":566,"author":{"gitId":"tinenhao"},"content":"4. Software displays acknowledgement message","lastModifiedDate":"2022-09-18"},{"lineNumber":567,"author":{"gitId":"tinenhao"},"content":"5. Software creates meeting object with 2 contacts associated at specified time","lastModifiedDate":"2022-09-18"},{"lineNumber":568,"author":{"gitId":"tinenhao"},"content":"6. Software displays creation message with meeting name and 2 contacts","lastModifiedDate":"2022-09-18"},{"lineNumber":569,"author":{"gitId":"tinenhao"},"content":"7. Use case ends","lastModifiedDate":"2022-09-18"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"tinenhao"},"content":"* Domain rules: User should ideally be a student or staff of NUS","lastModifiedDate":"2022-09-18"},{"lineNumber":575,"author":{"gitId":"tinenhao"},"content":"* Constraints: - Data from the original database cannot be modified","lastModifiedDate":"2022-09-18"},{"lineNumber":576,"author":{"gitId":"tinenhao"},"content":"* Technical requirements: Program should work on both Mac and Windows","lastModifiedDate":"2022-09-18"},{"lineNumber":577,"author":{"gitId":"tinenhao"},"content":"* Performance requirements: Opening the app should be within two seconds.","lastModifiedDate":"2022-09-18"},{"lineNumber":578,"author":{"gitId":"tinenhao"},"content":"* Quality requirements: System should be usable by anyone, and does not require a guide","lastModifiedDate":"2022-09-18"},{"lineNumber":579,"author":{"gitId":"tinenhao"},"content":"* Process requirements: Project expected to be completed by week 10","lastModifiedDate":"2022-09-18"},{"lineNumber":580,"author":{"gitId":"tinenhao"},"content":"* Notes about project scope: The product is not required to interface with other messaging apps","lastModifiedDate":"2022-09-18"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"GenFusion122"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample Contacts and Meetings. The window size may not be optimum.","lastModifiedDate":"2022-11-04"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"GenFusion122"},"content":"### Find by Tag","lastModifiedDate":"2022-11-04"},{"lineNumber":614,"author":{"gitId":"GenFusion122"},"content":"1. Find contact using tags ","lastModifiedDate":"2022-11-04"},{"lineNumber":615,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisite: Have at least one person with the tag `Friends`","lastModifiedDate":"2022-11-04"},{"lineNumber":616,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `findtag friends` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":617,"author":{"gitId":"GenFusion122"},"content":"      Expected: A success message should appear. Persons with the tag `friends` will appear on the contact list.","lastModifiedDate":"2022-11-04"},{"lineNumber":618,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"GenFusion122"},"content":"   1. Test Case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":625,"author":{"gitId":"GenFusion122"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated. Furthermore, if the Person is included in a meeting, they should be deleted from the meeting as well. ","lastModifiedDate":"2022-11-04"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"GenFusion122"},"content":"   1. Test Case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"GenFusion122"},"content":"2. Deleting a person while they are the last person in a meeting","lastModifiedDate":"2022-11-04"},{"lineNumber":634,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisite: Have a Person be the last person in a meeting. Assume that this \"Last Person\" has an Index of 1","lastModifiedDate":"2022-11-04"},{"lineNumber":635,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":636,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `delete 1` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":637,"author":{"gitId":"GenFusion122"},"content":"      Expected: Person is not deleted and an error message stating that the meeting Person at Index 1 is the last member of must be deleted first.","lastModifiedDate":"2022-11-04"},{"lineNumber":638,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":639,"author":{"gitId":"GenFusion122"},"content":"### Editing a person","lastModifiedDate":"2022-11-04"},{"lineNumber":640,"author":{"gitId":"GenFusion122"},"content":"1. Editing a person while all persons are being shown","lastModifiedDate":"2022-11-04"},{"lineNumber":641,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons are assumed to be in the list.","lastModifiedDate":"2022-11-04"},{"lineNumber":642,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `edit 1 n/editedName p/123456 e/email@email.com a/address land 123` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":643,"author":{"gitId":"GenFusion122"},"content":"      Expected: Person at Index 1 should be updated with the new information. ","lastModifiedDate":"2022-11-04"},{"lineNumber":644,"author":{"gitId":"GenFusion122"},"content":"   3. Test case: `edit 0 n/editedName p/123456 e/email@email.com a/address land 123`\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":645,"author":{"gitId":"GenFusion122"},"content":"   Expected: No person is edited. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-11-04"},{"lineNumber":646,"author":{"gitId":"GenFusion122"},"content":"2. Editing a person should reflect in a meeting if they are a part of it.","lastModifiedDate":"2022-11-04"},{"lineNumber":647,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisites: Person at Index 1 should belong to a meeting.","lastModifiedDate":"2022-11-04"},{"lineNumber":648,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `edit 1 n/edited name` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":649,"author":{"gitId":"GenFusion122"},"content":"      Expected: Person at Index 1 should be updated with a new name, the meeting they are in also should be updated with the new information.","lastModifiedDate":"2022-11-04"},{"lineNumber":650,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":651,"author":{"gitId":"GenFusion122"},"content":"### List Meetings","lastModifiedDate":"2022-11-04"},{"lineNumber":652,"author":{"gitId":"GenFusion122"},"content":"1. Listing out all meetings","lastModifiedDate":"2022-11-04"},{"lineNumber":653,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisites: Have at least one (recommended more) meeting objects in Yellow Pages.","lastModifiedDate":"2022-11-04"},{"lineNumber":654,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `listmeeting` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":655,"author":{"gitId":"GenFusion122"},"content":"      Expected: All meetings should be listed in the status message, as well as displayed in the UI.","lastModifiedDate":"2022-11-04"},{"lineNumber":656,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":657,"author":{"gitId":"GenFusion122"},"content":"### Create Meetings","lastModifiedDate":"2022-11-04"},{"lineNumber":658,"author":{"gitId":"GenFusion122"},"content":"1. Create Meeting","lastModifiedDate":"2022-11-04"},{"lineNumber":659,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisites: Have two Persons named `John` and `Alex` in the contact list.","lastModifiedDate":"2022-11-04"},{"lineNumber":660,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `meet John }} Alex ;;; Meeting ;;; 10-10-2022 1530 ;;; UTown`","lastModifiedDate":"2022-11-04"},{"lineNumber":661,"author":{"gitId":"GenFusion122"},"content":"      Expected: A success message should appear. A meeting with the above parameters should be created as well.","lastModifiedDate":"2022-11-04"},{"lineNumber":662,"author":{"gitId":"GenFusion122"},"content":"   ","lastModifiedDate":"2022-11-04"},{"lineNumber":663,"author":{"gitId":"GenFusion122"},"content":"2. Create Meeting with similar named persons","lastModifiedDate":"2022-11-04"},{"lineNumber":664,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisites: Have two Persons named `John Tan` and `John Doe` in the contact list.","lastModifiedDate":"2022-11-04"},{"lineNumber":665,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `meet John Tan;;; Meeting ;;; 10-10-2022 1530 ;;; UTown` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":666,"author":{"gitId":"GenFusion122"},"content":"      Expected: A success message should appear. A meeting with the above parameters should be created as well.","lastModifiedDate":"2022-11-04"},{"lineNumber":667,"author":{"gitId":"GenFusion122"},"content":"   3. Test Case: `meet John Tan;;; Meeting ;;; 10-10-2022 1530 ;;; UTown` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":668,"author":{"gitId":"GenFusion122"},"content":"      Expected: Error message should appear. Contact list should also display contacts with the keyword `John` in their names.","lastModifiedDate":"2022-11-04"},{"lineNumber":669,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":670,"author":{"gitId":"GenFusion122"},"content":"### Edit Meetings","lastModifiedDate":"2022-11-04"},{"lineNumber":671,"author":{"gitId":"GenFusion122"},"content":"1. Edit Meeting","lastModifiedDate":"2022-11-04"},{"lineNumber":672,"author":{"gitId":"GenFusion122"},"content":"    1. Prerequisites: Have at least one meeting.","lastModifiedDate":"2022-11-04"},{"lineNumber":673,"author":{"gitId":"GenFusion122"},"content":"    2. Test Case: `editmeeting 1 d/a name dd/10-10-2022 1000 l/COM3` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":674,"author":{"gitId":"GenFusion122"},"content":"       Expected: A success message should appear. Meeting at Index 1 should be updated with the parameters used.","lastModifiedDate":"2022-11-04"},{"lineNumber":675,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":676,"author":{"gitId":"GenFusion122"},"content":"### Delete Meetings","lastModifiedDate":"2022-11-04"},{"lineNumber":677,"author":{"gitId":"GenFusion122"},"content":"1. Delete Meeting","lastModifiedDate":"2022-11-04"},{"lineNumber":678,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisites: Have at least one meeting.","lastModifiedDate":"2022-11-04"},{"lineNumber":679,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `deletemeeting 1` \u003cbr\u003e ","lastModifiedDate":"2022-11-04"},{"lineNumber":680,"author":{"gitId":"GenFusion122"},"content":"      Expected: A success message should appear. Meeting at Index 1 should be deleted.","lastModifiedDate":"2022-11-04"},{"lineNumber":681,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":682,"author":{"gitId":"GenFusion122"},"content":"### Add Person to Meeting","lastModifiedDate":"2022-11-04"},{"lineNumber":683,"author":{"gitId":"GenFusion122"},"content":"1. Add Person to a Meeting","lastModifiedDate":"2022-11-04"},{"lineNumber":684,"author":{"gitId":"GenFusion122"},"content":"    1. Prerequisites: Have a person named `Alex` and at least one meeting, assuming `Alex` is not in the meeting at Index 1.","lastModifiedDate":"2022-11-04"},{"lineNumber":685,"author":{"gitId":"GenFusion122"},"content":"    2. Test Case: `addpersontomeeting 1; Alex` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":686,"author":{"gitId":"GenFusion122"},"content":"       Expected: A success message should appear. Meeting at Index 1 should have `Alex` added to it.","lastModifiedDate":"2022-11-04"},{"lineNumber":687,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":688,"author":{"gitId":"GenFusion122"},"content":"2. Add similar named persons to a meeting","lastModifiedDate":"2022-11-04"},{"lineNumber":689,"author":{"gitId":"GenFusion122"},"content":"    1. Prerequisites: Have two Persons named `John Tan` and `John Doe` in the contact list and at least one meeting, assuming `John Doe` is not in meeting at Index 1.","lastModifiedDate":"2022-11-04"},{"lineNumber":690,"author":{"gitId":"GenFusion122"},"content":"    2. Test Case: `addpersontomeeting 1; John Doe` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":691,"author":{"gitId":"GenFusion122"},"content":"       Expected: A success message should appear. `John Doe` should be added to the meeting at Index 1.","lastModifiedDate":"2022-11-04"},{"lineNumber":692,"author":{"gitId":"GenFusion122"},"content":"    3. Test Case: `addpersontomeeting 1; John` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":693,"author":{"gitId":"GenFusion122"},"content":"       Expected: Error message should appear. Person is not added to the meeting and the contact list should also display contacts with the keyword `John` in their names.","lastModifiedDate":"2022-11-04"},{"lineNumber":694,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":695,"author":{"gitId":"GenFusion122"},"content":"3. Add person already in meeting","lastModifiedDate":"2022-11-04"},{"lineNumber":696,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisites: Have a person called `Alex` and `Alex` should be in the meeting at Index 1.","lastModifiedDate":"2022-11-04"},{"lineNumber":697,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `addpersontomeeting 1; Alex` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":698,"author":{"gitId":"GenFusion122"},"content":"      Expected: Error message should appear. Person is not added to the meeting again.","lastModifiedDate":"2022-11-04"},{"lineNumber":699,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":700,"author":{"gitId":"GenFusion122"},"content":"### Delete Person from Meeting","lastModifiedDate":"2022-11-04"},{"lineNumber":701,"author":{"gitId":"GenFusion122"},"content":"1. Delete Person from Meeting","lastModifiedDate":"2022-11-04"},{"lineNumber":702,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisite: Have a persons named `John Doe` and `Mary Sue` be in the meeting at Index 1, and they are not the only two people in said meeting.","lastModifiedDate":"2022-11-04"},{"lineNumber":703,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `deletepersonfrommeeting 1; John, Mary` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":704,"author":{"gitId":"GenFusion122"},"content":"      Expected: A success message should appear. `John Doe` and `Mary Sue` should be removed from the meeting at Index 1.","lastModifiedDate":"2022-11-04"},{"lineNumber":705,"author":{"gitId":"GenFusion122"},"content":"2. Add delete similar named persons from a meeting","lastModifiedDate":"2022-11-04"},{"lineNumber":706,"author":{"gitId":"GenFusion122"},"content":"    1. Prerequisites: Have two Persons named `John Tan` and `John Doe` in the contact list and at least one meeting, assuming `John Doe` is in meeting at Index 1.","lastModifiedDate":"2022-11-04"},{"lineNumber":707,"author":{"gitId":"GenFusion122"},"content":"    2. Test Case: `deletepersonfrommeeting 1; John Doe` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":708,"author":{"gitId":"GenFusion122"},"content":"       Expected: A success message should appear. `John Doe` should be removed from the meeting at Index 1.","lastModifiedDate":"2022-11-04"},{"lineNumber":709,"author":{"gitId":"GenFusion122"},"content":"    3. Test Case: `deletepersonfrommeeting 1; John` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":710,"author":{"gitId":"GenFusion122"},"content":"       Expected: Error message should appear. Person is not removed from the meeting and the contact list should also display contacts with the keyword `John` in their names.","lastModifiedDate":"2022-11-04"},{"lineNumber":711,"author":{"gitId":"GenFusion122"},"content":"3. Deleting the last person from a meeting","lastModifiedDate":"2022-11-04"},{"lineNumber":712,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisite: Have a meeting at Index 1 with only one person, `John Doe`.","lastModifiedDate":"2022-11-04"},{"lineNumber":713,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `deletepersonfrommeeting 1; John Doe`","lastModifiedDate":"2022-11-04"},{"lineNumber":714,"author":{"gitId":"GenFusion122"},"content":"      Expected: Error message should appear. Person is not removed from the meeting.","lastModifiedDate":"2022-11-04"},{"lineNumber":715,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":716,"author":{"gitId":"GenFusion122"},"content":"### Filter Meetings","lastModifiedDate":"2022-11-04"},{"lineNumber":717,"author":{"gitId":"GenFusion122"},"content":"1. Filter meetings between two dates","lastModifiedDate":"2022-11-04"},{"lineNumber":718,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisites: Have at least one meeting that falls between the dates `10-10-2022 0000` and `15-10-2022 0000`","lastModifiedDate":"2022-11-04"},{"lineNumber":719,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `filtermeetingsbetween 10-10-2022 0000 ;;; 15-10-2022 0000` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":720,"author":{"gitId":"GenFusion122"},"content":"       Expected: A success message should appear. Only meeting(s) that fall between those two dates should be listed. All other meetings should not appear.","lastModifiedDate":"2022-11-04"},{"lineNumber":721,"author":{"gitId":"GenFusion122"},"content":"2. Filter meetings based on a single date","lastModifiedDate":"2022-11-04"},{"lineNumber":722,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisites: Have at least one meeting that falls on `10-10-2022 0000`","lastModifiedDate":"2022-11-04"},{"lineNumber":723,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `filtermeetingsbetween 10-10-2022 0000 ;;; 10-10-2022 0000` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":724,"author":{"gitId":"GenFusion122"},"content":"      Expected: A success message should appear. Only meeting(s) that fall on `10-10-2022 0000` will be listed.","lastModifiedDate":"2022-11-04"},{"lineNumber":725,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":726,"author":{"gitId":"GenFusion122"},"content":"### Sort Meetings","lastModifiedDate":"2022-11-04"},{"lineNumber":727,"author":{"gitId":"GenFusion122"},"content":"1. Sort meetings in ascending order","lastModifiedDate":"2022-11-04"},{"lineNumber":728,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisites: Have at least three meetings with different dates.","lastModifiedDate":"2022-11-04"},{"lineNumber":729,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `sortmeetings asc` or `sortmeetings desc` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":730,"author":{"gitId":"GenFusion122"},"content":"      A success message should appear. Should sort the meeting list by date in ascending or descending order (based on the command). ","lastModifiedDate":"2022-11-04"},{"lineNumber":731,"author":{"gitId":"GenFusion122"},"content":"   3. Close and open Yellow Pages again, the meeting list should still be sorted.","lastModifiedDate":"2022-11-04"},{"lineNumber":732,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":733,"author":{"gitId":"GenFusion122"},"content":"### Find Meetings","lastModifiedDate":"2022-11-04"},{"lineNumber":734,"author":{"gitId":"GenFusion122"},"content":"1. Find meeting with description","lastModifiedDate":"2022-11-04"},{"lineNumber":735,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisites: Have several meetings with at least one meeting with the description `AMeeting`.","lastModifiedDate":"2022-11-04"},{"lineNumber":736,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `findmeeting /named AMeeting` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":737,"author":{"gitId":"GenFusion122"},"content":"      Expected: A success message should appear. Meetings with descriptions containing the keyword `AMeeting` should be listed. ","lastModifiedDate":"2022-11-04"},{"lineNumber":738,"author":{"gitId":"GenFusion122"},"content":"2. Find meeting with location","lastModifiedDate":"2022-11-04"},{"lineNumber":739,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisites: Have several meetings with at least one meeting with the location `UTown`","lastModifiedDate":"2022-11-04"},{"lineNumber":740,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `findmeeting /at UTown` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":741,"author":{"gitId":"GenFusion122"},"content":"      Expected: A success message should appear. Meetings with their location set as `UTown` should be listed.","lastModifiedDate":"2022-11-04"},{"lineNumber":742,"author":{"gitId":"GenFusion122"},"content":"3. Find meeting with people","lastModifiedDate":"2022-11-04"},{"lineNumber":743,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisites: Have several meetings with at least one meeting with a Person `John`","lastModifiedDate":"2022-11-04"},{"lineNumber":744,"author":{"gitId":"GenFusion122"},"content":"   2. Test Case: `findmeeting /with John` \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":745,"author":{"gitId":"GenFusion122"},"content":"      Expected: A success message should appear. All meetings with `John` should appear, meetings with other persons with the keyword `John`","lastModifiedDate":"2022-11-04"},{"lineNumber":746,"author":{"gitId":"GenFusion122"},"content":" should also appear","lastModifiedDate":"2022-11-04"},{"lineNumber":747,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"GenFusion122"},"content":"   1. Prerequisite: `meetinglist.json` and `addressbook.json` were somehow corrupted","lastModifiedDate":"2022-11-04"},{"lineNumber":754,"author":{"gitId":"GenFusion122"},"content":"   2. Delete both files in the /data file found in the root folder of `Yellow Pages.jar`","lastModifiedDate":"2022-11-04"},{"lineNumber":755,"author":{"gitId":"GenFusion122"},"content":"   3. Run `Yellow Pages.jar` again, it will generate default information.","lastModifiedDate":"2022-11-04"},{"lineNumber":756,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":757,"author":{"gitId":"GenFusion122"},"content":"## Appendix: Effort","lastModifiedDate":"2022-11-04"},{"lineNumber":758,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":759,"author":{"gitId":"GenFusion122"},"content":"Compared to AB3, Yellow Pages makes extensive use of dates. This caused plenty of unforeseen consequences in the form of date conversion and manipulation. ","lastModifiedDate":"2022-11-04"},{"lineNumber":760,"author":{"gitId":"GenFusion122"},"content":"Creating a utility class that let us convert dates in String to actual LocalDateTime objects or converting dates in String to other formats","lastModifiedDate":"2022-11-04"},{"lineNumber":761,"author":{"gitId":"GenFusion122"},"content":"helped us to centralize and better manage this issue.","lastModifiedDate":"2022-11-04"},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"darrentde":40,"GenFusion122":251,"tinenhao":76,"HakkaNgin":62,"-":333}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"Yellow Pages (YP) is a desktop app for managing contacts, optimised for use via a Graphical User Interface (GUI). If you can type fast, YP can get your contacts and scheduling done faster than traditional GUI apps.","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2022-10-29"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"* [Features](#features)","lastModifiedDate":"2022-10-29"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"  * [Viewing help](#viewing-help-help)","lastModifiedDate":"2022-10-29"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"  * [Adding a contact](#adding-a-person-add)","lastModifiedDate":"2022-10-29"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"  * [Listing all contacts](#listing-all-persons--list)","lastModifiedDate":"2022-10-29"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"  * [Editing a contact](#editing-a-person--edit)","lastModifiedDate":"2022-10-29"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"  * [Locating contact by name](#locating-persons-by-name-find)","lastModifiedDate":"2022-10-29"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"  * [Locating contact by tag](#locating-contact-by-tag-findtag)","lastModifiedDate":"2022-10-29"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"  * [Deleting a contact](#deleting-a-person--delete)","lastModifiedDate":"2022-10-29"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"  * [Clearing all data](#clearing-all-entries--clear)","lastModifiedDate":"2022-10-29"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"  * [Creating a meeting](#creating-a-meeting--meet)","lastModifiedDate":"2022-10-29"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"  * [Deleting a meeting](#deleting-a-meeting--deletemeeting)","lastModifiedDate":"2022-10-29"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"  * [Add contact to meeting](#add-contacts-to-meeting-addpersontomeeting)","lastModifiedDate":"2022-10-29"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"  * [Delete contact from meeting](#delete-contacts-from-meeting-deletepersonfrommeeting)","lastModifiedDate":"2022-10-29"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"  * [Edit meeting details](#editing-a-meeting--editmeeting)","lastModifiedDate":"2022-10-29"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"  * [Listing all meetings](#listing-all-meetings--listmeeting)","lastModifiedDate":"2022-10-29"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"  * [Finding meetings](#finding-a-meeting-findmeeting)","lastModifiedDate":"2022-10-29"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"  * [Filtering meetings](#filtering-meetings-filtermeetingsbetween)","lastModifiedDate":"2022-10-29"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"  * [Sorting meetings](#sort-meetings-sortmeetings)","lastModifiedDate":"2022-10-29"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"  * [Exiting the program](#exiting-the-program--exit)","lastModifiedDate":"2022-10-29"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"  * [Saving the data](#saving-the-data)","lastModifiedDate":"2022-10-29"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"* [FAQ](#faq)","lastModifiedDate":"2022-10-29"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2022-10-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"1. Download the latest `.jar` from [here](https://github.com/AY2223S1-CS2103-F13-3/tp/releases).","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"    * **`add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"GenFusion122"},"content":"    * **`delete 3` : Deletes the 3rd **contact** shown in the current list.","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Viewing help: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"GenFusion122"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-10-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"GenFusion122"},"content":"![help message](images/helpMessageUpdated.png)","lastModifiedDate":"2022-10-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"GenFusion122"},"content":"* A Persons `NAME` must be **unique**.","lastModifiedDate":"2022-10-29"},{"lineNumber":103,"author":{"gitId":"GenFusion122"},"content":"* A Persons `PHONE_NUMBER` must be _at least three digits long_ ","lastModifiedDate":"2022-10-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"GenFusion122"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-11-02"},{"lineNumber":125,"author":{"gitId":"GenFusion122"},"content":"Editing a person also edits them in their respective meetings.","lastModifiedDate":"2022-11-02"},{"lineNumber":126,"author":{"gitId":"GenFusion122"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":127,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"tinenhao"},"content":"### Locating contact by tag: `findtag`","lastModifiedDate":"2022-09-18"},{"lineNumber":158,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":159,"author":{"gitId":"tinenhao"},"content":"Find persons whose tags contain the corresponding tag.","lastModifiedDate":"2022-09-18"},{"lineNumber":160,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":161,"author":{"gitId":"tinenhao"},"content":"Format: `findtag [MORE_TAG]`","lastModifiedDate":"2022-10-25"},{"lineNumber":162,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":163,"author":{"gitId":"tinenhao"},"content":"* The search is case-insensitive. e.g `Friend` will match `friend`","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"tinenhao"},"content":"* Only the Tag is searched.","lastModifiedDate":"2022-09-18"},{"lineNumber":165,"author":{"gitId":"tinenhao"},"content":"* Only full words will be matched e.g. `Friend` will not match `Friends`","lastModifiedDate":"2022-09-18"},{"lineNumber":166,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"GenFusion122"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-11-02"},{"lineNumber":174,"author":{"gitId":"GenFusion122"},"content":"Deleting a person also deletes them from their respective meeting(s)","lastModifiedDate":"2022-11-02"},{"lineNumber":175,"author":{"gitId":"GenFusion122"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":176,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"GenFusion122"},"content":"* A person cannot be deleted if they are the **last person** in a meeting, delete the corresponding meeting first.","lastModifiedDate":"2022-11-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"HakkaNgin"},"content":"### Creating a meeting : `meet`","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":194,"author":{"gitId":"HakkaNgin"},"content":"Creates a meeting and adds it to the meeting list.","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":196,"author":{"gitId":"HakkaNgin"},"content":"Format: `meet [NAMES_OF_PERSONS_TO_MEET (separated by }})] ;;; MEETING_DESCRIPTION ;;; MEETING_DATE_AND_TIME (in dd-MM-yyyy HHmm format) ;;; MEETING_LOCATION`","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":198,"author":{"gitId":"HakkaNgin"},"content":"Example: `meet Alex }} Bernice ;;; Project Meeting ;;; 29-01-2022 1530 ;;; UTown`","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":200,"author":{"gitId":"HakkaNgin"},"content":"Note: Separating names by `}` or `}}}` (or any other variation of `}}`) will likely result in errors","lastModifiedDate":"2022-11-04"},{"lineNumber":201,"author":{"gitId":"HakkaNgin"},"content":"Note: Separating each component of information by `;` or `;;` (or any other variation of `;;;`) will likely result in errors","lastModifiedDate":"2022-11-04"},{"lineNumber":202,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":203,"author":{"gitId":"HakkaNgin"},"content":"* The names of the people to meet must correspond to the names of actual contacts, otherwise an error message will be displayed ","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"HakkaNgin"},"content":"* You can choose to type in part of the contact\u0027s name (but must be in full word) and the software will match it to the closest contact","lastModifiedDate":"2022-11-04"},{"lineNumber":205,"author":{"gitId":"HakkaNgin"},"content":"  * i.e. There is only one contact called `Alex Yeoh` and inputting `meet Alex ...` will identify the `Alex Yeoh` as the person to meet","lastModifiedDate":"2022-10-27"},{"lineNumber":206,"author":{"gitId":"HakkaNgin"},"content":"  * However, inputting `meet Al ...` will not identify `Alex Yeoh` as `Al` is not a full word in the name","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"HakkaNgin"},"content":"  * NOTE: if there are multiple contacts sharing the same word(s) in their names, the ambiguity will result in an error message and you will be prompted to re-enter a more precise name","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"HakkaNgin"},"content":"  * e.g. if there are two contacts called `Alex Yeoh` and `Alex Lee`, then inputting `meet Alex ...` will result in error","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"HakkaNgin"},"content":"  * However, if there are three contacts named `Alex`, `Alex Yeoh` and `Alex Lee`, then inputting `meet Alex ...` will fetch the contact named `Alex` since it is the contact with an exact name match.","lastModifiedDate":"2022-11-04"},{"lineNumber":210,"author":{"gitId":"HakkaNgin"},"content":"* For the date and time of the meeting:","lastModifiedDate":"2022-10-27"},{"lineNumber":211,"author":{"gitId":"HakkaNgin"},"content":"  * Both the month and day have to be in double digits, e.g. `1-1-2000`, `01-9-2000`, `9-18-2000` will not be accepted, but `01-01-2000`, `01-09-2000`, `09-18-2000` will be","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"HakkaNgin"},"content":"  * Years smaller than 1000 or greater than 10000 will not be accepted as well","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"HakkaNgin"},"content":"  * Time of the meeting has to be in 24h format","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"HakkaNgin"},"content":"  * Dates in the past are allowed, if you would like to archive/ track past meetings","lastModifiedDate":"2022-11-04"},{"lineNumber":215,"author":{"gitId":"HakkaNgin"},"content":"* For duplicate meetings:","lastModifiedDate":"2022-11-04"},{"lineNumber":216,"author":{"gitId":"HakkaNgin"},"content":"  * A meeting is considered duplicate (and an error will be thrown) when you are meeting the same people at the same time.","lastModifiedDate":"2022-11-04"},{"lineNumber":217,"author":{"gitId":"HakkaNgin"},"content":"  * We allow concurrent meetings with different groups of people, as some people might want to arrange both a physical and a virtual meeting at the same time (this is not a feature bug, we have encountered such people before)","lastModifiedDate":"2022-11-04"},{"lineNumber":218,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"HakkaNgin"},"content":"### Deleting a meeting : `deletemeeting`","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"HakkaNgin"},"content":"Deletes the selected meeting from the meeting list and UI.","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"HakkaNgin"},"content":"Format: `deletemeeting INDEX_OF_MEETING_DISPLAYED_IN_MEETING_CARDS`","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":225,"author":{"gitId":"HakkaNgin"},"content":"Example: `deletemeeting 1`","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"HakkaNgin"},"content":"* The index refers to the index number of the meeting displayed in the meeting list.","lastModifiedDate":"2022-10-27"},{"lineNumber":228,"author":{"gitId":"HakkaNgin"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":230,"author":{"gitId":"tinenhao"},"content":"### Add contacts to meeting: `addpersontomeeting`","lastModifiedDate":"2022-10-25"},{"lineNumber":231,"author":{"gitId":"tinenhao"},"content":"Adds the list of contacts to the specified meeting.","lastModifiedDate":"2022-10-25"},{"lineNumber":232,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":233,"author":{"gitId":"tinenhao"},"content":"Format: `addpersontomeeting MEETING_INDEX; [NAMES]`","lastModifiedDate":"2022-10-25"},{"lineNumber":234,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":235,"author":{"gitId":"tinenhao"},"content":"* The index refers to the index number shown in the displayed meeting list.","lastModifiedDate":"2022-10-25"},{"lineNumber":236,"author":{"gitId":"tinenhao"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-25"},{"lineNumber":237,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":238,"author":{"gitId":"GenFusion122"},"content":"Examples: ","lastModifiedDate":"2022-10-29"},{"lineNumber":239,"author":{"gitId":"GenFusion122"},"content":"* `addpersontomeeting 1; John Doe, Jane Doe`","lastModifiedDate":"2022-10-29"},{"lineNumber":240,"author":{"gitId":"GenFusion122"},"content":"* `addpersontomeeting 2; Alex`","lastModifiedDate":"2022-10-29"},{"lineNumber":241,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":242,"author":{"gitId":"tinenhao"},"content":"### Delete contacts from meeting: `deletepersonfrommeeting`","lastModifiedDate":"2022-10-25"},{"lineNumber":243,"author":{"gitId":"tinenhao"},"content":"Deletes the list of contacts from the specified meeting.","lastModifiedDate":"2022-10-25"},{"lineNumber":244,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":245,"author":{"gitId":"tinenhao"},"content":"Format: `deletepersonfrommeeting MEETING_INDEX; [NAMES]`","lastModifiedDate":"2022-10-25"},{"lineNumber":246,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":247,"author":{"gitId":"tinenhao"},"content":"* Will not be able to delete person from meeting if only 1 person left in the meeting.","lastModifiedDate":"2022-10-25"},{"lineNumber":248,"author":{"gitId":"tinenhao"},"content":"* The index refers to the index number shown in the displayed meeting list.","lastModifiedDate":"2022-10-25"},{"lineNumber":249,"author":{"gitId":"tinenhao"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-25"},{"lineNumber":250,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":251,"author":{"gitId":"GenFusion122"},"content":"Examples:","lastModifiedDate":"2022-10-29"},{"lineNumber":252,"author":{"gitId":"GenFusion122"},"content":"* `deletepersonfrommeeting 1; John Doe, Jane Doe`","lastModifiedDate":"2022-10-29"},{"lineNumber":253,"author":{"gitId":"GenFusion122"},"content":"* `deletepersonfrommeeting 2; Alex`","lastModifiedDate":"2022-10-29"},{"lineNumber":254,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":255,"author":{"gitId":"tinenhao"},"content":"### Editing a meeting : `editmeeting`","lastModifiedDate":"2022-10-25"},{"lineNumber":256,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":257,"author":{"gitId":"tinenhao"},"content":"Edits an existing meeting in the address book.","lastModifiedDate":"2022-10-25"},{"lineNumber":258,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":259,"author":{"gitId":"tinenhao"},"content":"Format: `editmeeting INDEX [d/DESCRIPTION] [dd/DATE] [l/LOCATION]`","lastModifiedDate":"2022-10-25"},{"lineNumber":260,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":261,"author":{"gitId":"tinenhao"},"content":"* Edits the meeting at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-25"},{"lineNumber":262,"author":{"gitId":"tinenhao"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-10-25"},{"lineNumber":263,"author":{"gitId":"tinenhao"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-10-25"},{"lineNumber":264,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":265,"author":{"gitId":"tinenhao"},"content":"Examples:","lastModifiedDate":"2022-10-25"},{"lineNumber":266,"author":{"gitId":"tinenhao"},"content":"*  `editmeeting 1 d/test 1 l/nus` Edits the description and location of the 1st meeting to be `test 1` and `nus` respectively.","lastModifiedDate":"2022-10-25"},{"lineNumber":267,"author":{"gitId":"tinenhao"},"content":"*  `editmeeting 2 dd/23-09-2022 2359` Edits the date of the 2nd meeting to be `23-09-2022 2359`.","lastModifiedDate":"2022-10-25"},{"lineNumber":268,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":269,"author":{"gitId":"darrentde"},"content":"### Listing all meetings : `listmeeting`","lastModifiedDate":"2022-10-12"},{"lineNumber":270,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":271,"author":{"gitId":"darrentde"},"content":"Shows a list of all meetings in the address book and console.","lastModifiedDate":"2022-10-12"},{"lineNumber":272,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":273,"author":{"gitId":"GenFusion122"},"content":"### Finding a meeting: `findmeeting`","lastModifiedDate":"2022-10-29"},{"lineNumber":274,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":275,"author":{"gitId":"GenFusion122"},"content":"Finds a meeting by the meeting\u0027s description, location or people ","lastModifiedDate":"2022-10-26"},{"lineNumber":276,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":277,"author":{"gitId":"GenFusion122"},"content":"Three Formats: ","lastModifiedDate":"2022-10-26"},{"lineNumber":278,"author":{"gitId":"GenFusion122"},"content":"- Find by description: `findmeeting /named MEETING_TITLE` ","lastModifiedDate":"2022-10-26"},{"lineNumber":279,"author":{"gitId":"GenFusion122"},"content":"- Find by people: `findmeeting /with PERSON_NAME` ","lastModifiedDate":"2022-10-26"},{"lineNumber":280,"author":{"gitId":"GenFusion122"},"content":"- Find by location: `findmeeting /at LOCATION`","lastModifiedDate":"2022-10-26"},{"lineNumber":281,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":282,"author":{"gitId":"GenFusion122"},"content":"For all three formats:","lastModifiedDate":"2022-10-26"},{"lineNumber":283,"author":{"gitId":"GenFusion122"},"content":"* Only **one** format can be used at a time e.g. they **cannot** be chained like: `findmeeting /named abc /at abc`","lastModifiedDate":"2022-10-26"},{"lineNumber":284,"author":{"gitId":"GenFusion122"},"content":"* The search is case-insensitive. e.g. `project` will match `Project`","lastModifiedDate":"2022-10-26"},{"lineNumber":285,"author":{"gitId":"tinenhao"},"content":"* Only full words will be matched e.g. `Project` will not match `Projects`","lastModifiedDate":"2022-09-18"},{"lineNumber":286,"author":{"gitId":"GenFusion122"},"content":"* The order of the keywords does not matter. e.g. `Project CS2103` will match `CS2103 Project`","lastModifiedDate":"2022-10-26"},{"lineNumber":287,"author":{"gitId":"GenFusion122"},"content":"* Only the field specified by the format (description/people/location) is searched.","lastModifiedDate":"2022-10-26"},{"lineNumber":288,"author":{"gitId":"GenFusion122"},"content":"* Meeting fields matching at least one keyword will be returned (i.e. `OR` search). ","lastModifiedDate":"2022-10-26"},{"lineNumber":289,"author":{"gitId":"GenFusion122"},"content":"  e.g. `CS2100 CS2103` will return meetings with `CS2100 Project`, `CS2103 Project` and","lastModifiedDate":"2022-10-26"},{"lineNumber":290,"author":{"gitId":"GenFusion122"},"content":"  `Project` will also return meetings with  `CS2100 Project`, `CS2103 Project`","lastModifiedDate":"2022-10-26"},{"lineNumber":291,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":292,"author":{"gitId":"GenFusion122"},"content":"Examples: ","lastModifiedDate":"2022-10-26"},{"lineNumber":293,"author":{"gitId":"GenFusion122"},"content":"* `findmeeting /at UTown Com1`","lastModifiedDate":"2022-10-26"},{"lineNumber":294,"author":{"gitId":"GenFusion122"},"content":"* `findmeeting /with Jane John Simon`","lastModifiedDate":"2022-10-26"},{"lineNumber":295,"author":{"gitId":"GenFusion122"},"content":"* `findmeeting /named CS2103`","lastModifiedDate":"2022-10-26"},{"lineNumber":296,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":297,"author":{"gitId":"GenFusion122"},"content":"### Filtering Meetings: `filtermeetingsbetween`","lastModifiedDate":"2022-10-26"},{"lineNumber":298,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":299,"author":{"gitId":"GenFusion122"},"content":"Format: `filtermeetingsbetween AFTER_DATE ;;; BEFORE_DATE`","lastModifiedDate":"2022-10-26"},{"lineNumber":300,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":301,"author":{"gitId":"GenFusion122"},"content":"**Note** - all date formats must follow the `dd-MM-yyyy HHmm` format ","lastModifiedDate":"2022-10-26"},{"lineNumber":302,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":303,"author":{"gitId":"GenFusion122"},"content":"Can be split into three cases:","lastModifiedDate":"2022-10-26"},{"lineNumber":304,"author":{"gitId":"GenFusion122"},"content":"1. `AFTER_DATE` \u003c `BEFORE_DATE` - Lists out all meetings with dates between `AFTER_DATE` and `BEFORE_DATE` not inclusive ","lastModifiedDate":"2022-10-26"},{"lineNumber":305,"author":{"gitId":"GenFusion122"},"content":"2. `AFTER_DATE` \u003d `BEFORE_DATE` - Lists out all meetings with dates **matching** `AFTER_DATE` which equals to `BEFORE_DATE` ","lastModifiedDate":"2022-10-26"},{"lineNumber":306,"author":{"gitId":"GenFusion122"},"content":"3. `AFTER_DATE` \u003e `BEFORE_DATE` - Error","lastModifiedDate":"2022-10-26"},{"lineNumber":307,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":308,"author":{"gitId":"GenFusion122"},"content":"Examples: ","lastModifiedDate":"2022-10-26"},{"lineNumber":309,"author":{"gitId":"GenFusion122"},"content":"* `filtermeetingsbetween 10-10-2022 1050 ;;; 12-10-2022 1200`","lastModifiedDate":"2022-10-29"},{"lineNumber":310,"author":{"gitId":"GenFusion122"},"content":"* `filtermeetingsbetween 10-11-2022 0000 ;;; 12-11-2022 0000`","lastModifiedDate":"2022-10-29"},{"lineNumber":311,"author":{"gitId":"GenFusion122"},"content":"* `filtermeetingsbetween 10-11-2022 1000 ;;; 10-11-2022 1000`","lastModifiedDate":"2022-10-29"},{"lineNumber":312,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":313,"author":{"gitId":"GenFusion122"},"content":"### Sort Meetings: `sortmeetings`","lastModifiedDate":"2022-10-26"},{"lineNumber":314,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":315,"author":{"gitId":"GenFusion122"},"content":"Format: `sortmeetings asc` or `sortmeetings desc`","lastModifiedDate":"2022-10-26"},{"lineNumber":316,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":317,"author":{"gitId":"GenFusion122"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-10-29"},{"lineNumber":318,"author":{"gitId":"GenFusion122"},"content":"This command **PERMANENTLY** sorts the meeting list.","lastModifiedDate":"2022-10-29"},{"lineNumber":319,"author":{"gitId":"GenFusion122"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":320,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":321,"author":{"gitId":"GenFusion122"},"content":"- Sorts the list of meetings by ascending or descending date order ","lastModifiedDate":"2022-10-26"},{"lineNumber":322,"author":{"gitId":"GenFusion122"},"content":"- Has two parameter types `asc` and `desc` which sorts the list by ascending order or descending order","lastModifiedDate":"2022-10-26"},{"lineNumber":323,"author":{"gitId":"GenFusion122"},"content":"- Is case-insensitive, parameters can be `ASC` or `aSc` etc...","lastModifiedDate":"2022-10-26"},{"lineNumber":324,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":325,"author":{"gitId":"GenFusion122"},"content":"Examples:","lastModifiedDate":"2022-10-26"},{"lineNumber":326,"author":{"gitId":"GenFusion122"},"content":"- `sortmeetings ASC`","lastModifiedDate":"2022-10-26"},{"lineNumber":327,"author":{"gitId":"GenFusion122"},"content":"- `sortmeetings DESC`","lastModifiedDate":"2022-10-26"},{"lineNumber":328,"author":{"gitId":"GenFusion122"},"content":"- `sortmeetings asc`","lastModifiedDate":"2022-10-26"},{"lineNumber":329,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":342,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":344,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":345,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":346,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":348,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"GenFusion122"},"content":"| Action                          | Format, Examples                                                                                                                                                                                                                           |","lastModifiedDate":"2022-10-26"},{"lineNumber":364,"author":{"gitId":"GenFusion122"},"content":"|---------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-29"},{"lineNumber":365,"author":{"gitId":"GenFusion122"},"content":"| **Add**                         | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`                                                                      |","lastModifiedDate":"2022-10-26"},{"lineNumber":366,"author":{"gitId":"GenFusion122"},"content":"| **Clear**                       | `clear`                                                                                                                                                                                                                                    |","lastModifiedDate":"2022-10-26"},{"lineNumber":367,"author":{"gitId":"GenFusion122"},"content":"| **Delete**                      | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                                                        |","lastModifiedDate":"2022-10-26"},{"lineNumber":368,"author":{"gitId":"GenFusion122"},"content":"| **Edit**                        | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                                                                                |","lastModifiedDate":"2022-10-26"},{"lineNumber":369,"author":{"gitId":"GenFusion122"},"content":"| **Find**                        | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                                                                                                 |","lastModifiedDate":"2022-10-26"},{"lineNumber":370,"author":{"gitId":"GenFusion122"},"content":"| **Find Tag**                    | `findtag TAG [MORE_TAGS]`\u003cbr\u003e e.g., `findtag friend CS2100`                                                                                                                                                                                |","lastModifiedDate":"2022-10-29"},{"lineNumber":371,"author":{"gitId":"HakkaNgin"},"content":"| **Create Meeting**              | `meet [NAMES_OF_PERSONS_TO_MEET (separated by }})] ;;; MEETING_DESCRIPTION ;;; MEETING_DATE_AND_TIME (in dd-MM-yyyy HHmm format) ;;; MEETING_LOCATION` \u003cbr\u003e e.g., `meet Alex }} Bernice ;;; Project Meeting ;;; 29-01-2022 1530 ;;; UTown` |","lastModifiedDate":"2022-10-27"},{"lineNumber":372,"author":{"gitId":"HakkaNgin"},"content":"| **Delete Meeting**              | `deletemeeting INDEX_OF_MEETING_DISPLAYED_IN_MEETING_CARDS` \u003cbr\u003e e.g., `deletemeeting 1`                                                                                                                                                   |","lastModifiedDate":"2022-10-27"},{"lineNumber":373,"author":{"gitId":"GenFusion122"},"content":"| **Add Contact To Meeting**      | `addpersontomeeting MEETING_INDEX; [NAMES]` \u003cbr\u003e e.g., `addpersontomeeting 1; John Doe, Jane Doe`                                                                                                                                          |","lastModifiedDate":"2022-10-29"},{"lineNumber":374,"author":{"gitId":"GenFusion122"},"content":"| **Delete Contact From Meeting** | `deletepersonfrommeeting MEETING_INDEX; [NAMES]` \u003cbr\u003e e.g., `deletepersonfrommeeting 1; John Doe, Jane Doe`                                                                                                                                |","lastModifiedDate":"2022-10-29"},{"lineNumber":375,"author":{"gitId":"GenFusion122"},"content":"| **Edit Meeting**                | `editmeeting INDEX [d/DESCRIPTION] [dd/DATE] [l/LOCATION]` \u003cbr\u003e e.g., `editmeeting 1; d/cs2103 dd/10-10-2022 1010 l/UTown`                                                                                                                 |","lastModifiedDate":"2022-10-29"},{"lineNumber":376,"author":{"gitId":"GenFusion122"},"content":"| **List Meetings**               | `listmeeting`                                                                                                                                                                                                                              |","lastModifiedDate":"2022-10-29"},{"lineNumber":377,"author":{"gitId":"GenFusion122"},"content":"| **Find Meeting**                | `findmeeting /named MEETING_TITLE` \u003cbr\u003e e.g., findmeeting /named CS2103                                                                                                                                                                    |","lastModifiedDate":"2022-10-26"},{"lineNumber":378,"author":{"gitId":"GenFusion122"},"content":"| **Filter Meeting**              | `filtermeetingsbetween AFTER_DATE ;;; BEFORE_DATE` \u003cbr\u003e e.g., filtermeetingsbetween 10-10-2022 1010 ;;; 11-10-2022 1010                                                                                                                    |","lastModifiedDate":"2022-10-26"},{"lineNumber":379,"author":{"gitId":"GenFusion122"},"content":"| **Sort Meetings**               | `sortmeetings asc` or `sortmeetings desc`                                                                                                                                                                                                  |","lastModifiedDate":"2022-10-26"},{"lineNumber":380,"author":{"gitId":"GenFusion122"},"content":"| **List**                        | `list`                                                                                                                                                                                                                                     |","lastModifiedDate":"2022-10-26"},{"lineNumber":381,"author":{"gitId":"GenFusion122"},"content":"| **Help**                        | `help`                                                                                                                                                                                                                                     |","lastModifiedDate":"2022-10-26"},{"lineNumber":382,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"darrentde":4,"GenFusion122":114,"tinenhao":56,"HakkaNgin":35,"-":173}},{"path":"docs/diagrams/CreateMeetingActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"start","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":":\"meet Alex }} Yu ;;;\\nDo CS2103 Project ;;;\\n16-10-2022 1530 ;;;\\nUniversity Town\";","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"if () then (arguments are empty)","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"    :Throw ParseException;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"    :Display error message in UI;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"else (arguments are not empty)","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"    if () then ( incorrect number of \\n arguments (meeting information))","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"        :Throw IndexOutOfBoundsException;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":"        :Display error message in UI;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":"    else ( correct number of \\n arguments (meeting information) \\n Includes name of people to meet, \\n description, date and time, location)","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"        if () then ( meeting description and title \\n are empty strings)","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":"            :Display error message in UI;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"        else ( meeting description and title \\n are not empty strings)","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":"            if () then ( input name does not match \\n any person in address book)","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"HakkaNgin"},"content":"                :Throw PersonNotFoundException;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":"                :Display error message in UI;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":"            else (input name does not \\n match person in address book)","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"                if () then ( user enters duplicate names of the \\n same person in the address book)","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"                    :Throw DuplicatePersonException;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"HakkaNgin"},"content":"                    :Display error message in UI;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"                else (user enters names of distinct \\n persons in the address book)","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"HakkaNgin"},"content":"                    if () then ( date and time of the meeting \\n are in the wrong format)","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"                        :Throw java.text.ParseException;","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"                        :Display error message in UI;","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"                    else ( date and time of the meeting \\n are in the right format)","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"HakkaNgin"},"content":"                        :New Meeting is created;","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"HakkaNgin"},"content":"                        if () then ( There is another meeting in MeetingList \\n with the same Persons to meet \\n and date and time as the new Meeting)","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"HakkaNgin"},"content":"                            :Throw DuplicateMeetingException;","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"HakkaNgin"},"content":"                            :Display error message in UI;","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"HakkaNgin"},"content":"                        else ( date and time of the meeting \\n are in the right format)","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"HakkaNgin"},"content":"                            :New Meeting is added to Meeting List;","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"HakkaNgin"},"content":"                            :Display success message with meeting details;","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"HakkaNgin"},"content":"                        endif","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"HakkaNgin"},"content":"                    endif","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"HakkaNgin"},"content":"                endif","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"HakkaNgin"},"content":"            endif","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"HakkaNgin"},"content":"        endif","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"HakkaNgin"},"content":"    endif","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"HakkaNgin"},"content":"endif","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"HakkaNgin"},"content":"stop","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"HakkaNgin"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"HakkaNgin":48}},{"path":"docs/diagrams/CreateMeetingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"!include style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"participant \":CreateMeetingCommandParser\" as CreateMeetingCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"participant \"cm:CreateMeetingCommand\" as CreateMeetingCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"participant \":Meeting\\n\u003c\u003cclass\u003e\u003e\" as MeetingStatic LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"participant \"m:Meeting\" as Meeting LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"[-\u003e LogicManager : execute(\"meet Alex }} Yu ;;;\\nDo CS2103 Project ;;;\\n16-10-2022 1530 ;;;\\nUniversity Town\")","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":"activate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\\n\"meet Alex }} Yu ;;;\\nDo CS2103 Project ;;;\\n16-10-2022 1530 ;;;\\nUniversity Town\")","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"create CreateMeetingCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"HakkaNgin"},"content":"AddressBookParser -\u003e CreateMeetingCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"activate CreateMeetingCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"AddressBookParser \u003c-- CreateMeetingCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"deactivate CreateMeetingCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"HakkaNgin"},"content":"AddressBookParser -\u003e CreateMeetingCommandParser : parse(arguments)","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"HakkaNgin"},"content":"activate CreateMeetingCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"HakkaNgin"},"content":"create CreateMeetingCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"HakkaNgin"},"content":"CreateMeetingCommandParser -\u003e CreateMeetingCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"HakkaNgin"},"content":"activate CreateMeetingCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"HakkaNgin"},"content":"destroy CreateMeetingCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"HakkaNgin"},"content":"\u0027","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"HakkaNgin"},"content":"\u0027CreateMeetingCommand --\u003e CreateMeetingCommandParser : cm","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"HakkaNgin"},"content":"\u0027deactivate CreateMeetingCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"HakkaNgin"},"content":"\u0027CreateMeetingCommandParser --\u003e AddressBookParser : cm","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"HakkaNgin"},"content":"\u0027deactivate CreateMeetingCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"HakkaNgin"},"content":"\u0027\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"HakkaNgin"},"content":"\u0027CreateMeetingCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"HakkaNgin"},"content":"LogicManager -\u003e CreateMeetingCommand : execute(model)","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"HakkaNgin"},"content":"CreateMeetingCommand --\u003e LogicManager : cm","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"HakkaNgin"},"content":"CreateMeetingCommand -\u003e MeetingStatic : convertNameToPerson(model, peopleToMeet)","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"HakkaNgin"},"content":"CreateMeetingCommand \u003c-- MeetingStatic :","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"HakkaNgin"},"content":"CreateMeetingCommand -\u003e Model : createNewMeeting(\\n arrayOfPeopleToMeet,\\n meetingTitle, \\n meetingDateAndTime, \\n meetingLocation)","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"HakkaNgin"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"HakkaNgin"},"content":"CreateMeetingCommand -\u003e Model : addMeeting(newMeeting)","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"HakkaNgin"},"content":"Model -\u003e Meeting : Meeting(\\n arrayOfPeopleToMeet,\\n meetingTitle, \\n meetingDateAndTime, \\n meetingLocation)","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"HakkaNgin"},"content":"Model \u003c-- Meeting","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"HakkaNgin"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"HakkaNgin"},"content":"create CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"HakkaNgin"},"content":"CreateMeetingCommand -\u003e CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"HakkaNgin"},"content":"activate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"HakkaNgin"},"content":"CommandResult --\u003e CreateMeetingCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"HakkaNgin"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"HakkaNgin"},"content":"CreateMeetingCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"HakkaNgin"},"content":"deactivate CreateMeetingCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"HakkaNgin"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"HakkaNgin"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"HakkaNgin"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"HakkaNgin":73}},{"path":"docs/diagrams/FilterMeetingsActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"@startuml","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"start","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":":\"filtermeetingsbetween Date A ;;; Date B\";","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"if () then (Date A \u003d Date B \\nor\\nDate A \u003c Date B)","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"  :Display meetings \\nmatching predicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"else (Date A \u003e Date B)","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"  :Throw syntax error;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"endif","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"stop","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"@enduml","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"GenFusion122":14}},{"path":"docs/diagrams/FilterMeetingsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"@startuml","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"!include style.puml","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"participant \":FilterMeetingCommandParser\" as FilterMeetingCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"participant \":DateTimeConverter\\n\u003c\u003cclass\u003e\u003e\" as DateTimeConverter LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"participant \"mp:MeetingFilterDatePredicate\" as MeetingFilterDatePredicate LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"participant \"f:FilterMeetingCommand\" as FilterMeetingCommand LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"end box","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"end box","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"[-\u003e LogicManager : execute\\n(userInput)","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"activate LogicManager","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"LogicManager -\u003e AddressBookParser : parseCommand\\n(userInput)","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"create FilterMeetingCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"AddressBookParser -\u003e FilterMeetingCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"activate FilterMeetingCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"FilterMeetingCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"deactivate FilterMeetingCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"AddressBookParser -\u003e FilterMeetingCommandParser : parse(args)","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"activate FilterMeetingCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"FilterMeetingCommandParser -\u003e DateTimeConverter : stringToLocalDateTime(afterDate)","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"FilterMeetingCommandParser \u003c-- DateTimeConverter :","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"FilterMeetingCommandParser -\u003e DateTimeConverter : stringToLocalDateTime(beforeDate)","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"FilterMeetingCommandParser \u003c-- DateTimeConverter :","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"create MeetingFilterDatePredicate","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"FilterMeetingCommandParser -\u003e MeetingFilterDatePredicate : MeetingFilterDatePredicate(afterDate, beforeDate)","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"activate MeetingFilterDatePredicate","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"FilterMeetingCommandParser \u003c-- MeetingFilterDatePredicate : mp","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"deactivate MeetingFilterDatePredicate","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"create FilterMeetingCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"FilterMeetingCommandParser -\u003e FilterMeetingCommand : FilterMeetingCommand(mp)","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"deactivate FilterMeetingCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"activate FilterMeetingCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"destroy FilterMeetingCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"GenFusion122"},"content":"FilterMeetingCommand --\u003e LogicManager : f","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"GenFusion122"},"content":"FilterMeetingCommand \u003c- LogicManager : execute(model)","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"GenFusion122"},"content":"FilterMeetingCommand -\u003e Model : updateFilteredMeetingList(mp)","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"GenFusion122"},"content":"activate Model","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"GenFusion122"},"content":"Model --\u003e FilterMeetingCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"GenFusion122"},"content":"deactivate Model","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"GenFusion122"},"content":"create CommandResult","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"GenFusion122"},"content":"FilterMeetingCommand -\u003e CommandResult","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"GenFusion122"},"content":"activate CommandResult","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"GenFusion122"},"content":"CommandResult --\u003e FilterMeetingCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"GenFusion122"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"GenFusion122"},"content":"FilterMeetingCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"GenFusion122"},"content":"deactivate FilterMeetingCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"GenFusion122"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"GenFusion122"},"content":"@enduml","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"GenFusion122":70}},{"path":"docs/diagrams/FindMeetingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"@startuml","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"!include style.puml","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"participant \":FindMeetingCommandParser\" as FindMeetingCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"participant \"mk:MeetingContainsKeywordsPredicate\" as MeetingContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"participant \"fm:FindMeetingCommand\" as FindMeetingCommand LOGIC_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"end box","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"end box","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"[-\u003e LogicManager : execute\\n(userInput)","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"activate LogicManager","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"LogicManager -\u003e AddressBookParser : parseCommand\\n(userInput)","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"activate AddressBookParser","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"create FindMeetingCommandParser","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"AddressBookParser -\u003e FindMeetingCommandParser","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"activate FindMeetingCommandParser","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"FindMeetingCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"deactivate FindMeetingCommandParser","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"AddressBookParser -\u003e FindMeetingCommandParser : parse(args)","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"activate FindMeetingCommandParser","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"create MeetingContainsKeywordsPredicate","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"FindMeetingCommandParser -\u003e MeetingContainsKeywordsPredicate : MeetingContainsKeywordsPredicate\\n(keywords, lambda)","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"activate MeetingContainsKeywordsPredicate","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"FindMeetingCommandParser \u003c-- MeetingContainsKeywordsPredicate : mk","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"deactivate MeetingContainsKeywordsPredicate","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"create FindMeetingCommand","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"FindMeetingCommandParser -\u003e FindMeetingCommand : FindMeetingCommand(mk)","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"deactivate FindMeetingCommandParser","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"activate FindMeetingCommand","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"destroy FindMeetingCommandParser","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"FindMeetingCommand --\u003e LogicManager : fm","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"FindMeetingCommand \u003c- LogicManager : execute(model)","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"FindMeetingCommand -\u003e Model : updateFilteredMeetingList(mk)","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"activate Model","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"Model --\u003e FindMeetingCommand","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"deactivate Model","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":52,"author":{"gitId":"GenFusion122"},"content":"create CommandResult","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"GenFusion122"},"content":"FindMeetingCommand -\u003e CommandResult","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"GenFusion122"},"content":"activate CommandResult","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"GenFusion122"},"content":"CommandResult --\u003e FindMeetingCommand","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"GenFusion122"},"content":"deactivate CommandResult","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"GenFusion122"},"content":"FindMeetingCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"GenFusion122"},"content":"deactivate FindMeetingCommand","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"GenFusion122"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"GenFusion122"},"content":"@enduml","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"GenFusion122":64}},{"path":"docs/diagrams/ModifiedArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"@startuml","lastModifiedDate":"2022-11-04"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"!include style.puml","lastModifiedDate":"2022-11-04"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"activate ui UI_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"deactivate model","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"deactivate storage","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"deactivate storage","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveMeetingList(meetingList)","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"darrentde"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"darrentde"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"darrentde"},"content":"deactivate storage","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"darrentde"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"darrentde"},"content":"deactivate storage","lastModifiedDate":"2022-11-04"},{"lineNumber":44,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"darrentde"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"darrentde"},"content":"deactivate logic","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":48,"author":{"gitId":"darrentde"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2022-11-04"},{"lineNumber":49,"author":{"gitId":"darrentde"},"content":"deactivate ui","lastModifiedDate":"2022-11-04"},{"lineNumber":50,"author":{"gitId":"darrentde"},"content":"@enduml","lastModifiedDate":"2022-11-04"}],"authorContributionMap":{"darrentde":50}},{"path":"docs/diagrams/ModifiedModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyMeetingList\" as ReadOnlyMeetingList","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"Class AddressBook","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"Class MeetingList","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"Class ModelManager","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"Class UserPrefs","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"Class UniquePersonList","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"Class Person","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"Class Address","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"Class Email","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"Class Name","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"Class Phone","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"Class Tag","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"Class UniqueMeetingList","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"Class Meeting","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"MeetingList .up.|\u003e ReadOnlyMeetingList","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"darrentde"},"content":"Model .down.\u003e ReadOnlyAddressBook","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"darrentde"},"content":"Model .left.\u003e ReadOnlyMeetingList","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"darrentde"},"content":"ModelManager -down-\u003e \"1\" AddressBook","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"darrentde"},"content":"ModelManager -left-\u003e \"1\" MeetingList","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"darrentde"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"darrentde"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"darrentde"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"darrentde"},"content":"MeetingList *--\u003e \"1\" UniqueMeetingList","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"darrentde"},"content":"UniqueMeetingList --\u003e \"~* all\" Meeting","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"darrentde"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"darrentde"},"content":"Person *--\u003e Name","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"darrentde"},"content":"Person *--\u003e Phone","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"darrentde"},"content":"Person *--\u003e Email","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"darrentde"},"content":"Person *--\u003e Address","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"darrentde"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"darrentde"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"darrentde"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"darrentde"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"darrentde"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"darrentde"},"content":"ModelManager --\u003e\"~* filtered\" Meeting","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"darrentde"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"darrentde":61}},{"path":"docs/diagrams/ModifiedStorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"package Storage{","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"Class StorageManager","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"package \"MeetingList Storage\" #F4F6F6{","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nMeetingListStorage\" as MeetingListStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"Class JsonMeetingListStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"Class JsonSerializableMeetingList","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"Class JsonAdaptedMeeting","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"darrentde"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"darrentde"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"darrentde"},"content":"StorageManager -up-\u003e \"1\" MeetingListStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"darrentde"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"darrentde"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"darrentde"},"content":"Storage -down-|\u003e MeetingListStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"darrentde"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"darrentde"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"darrentde"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"darrentde"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"darrentde"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"darrentde"},"content":"JsonMeetingListStorage .up.|\u003e MeetingListStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"darrentde"},"content":"JsonMeetingListStorage ..\u003e JsonSerializableMeetingList","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"darrentde"},"content":"JsonSerializableMeetingList --\u003e \"*\" JsonAdaptedMeeting","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"darrentde"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"darrentde":55}},{"path":"docs/diagrams/SortMeetingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"@startuml","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"!include style.puml","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"participant \":SortMeetingCommandParser\" as SortMeetingCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"participant \"fm:SortMeetingCommand\" as SortMeetingCommand LOGIC_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"end box","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"participant \"meetingList:MeetingList\" as MeetingList MODEL_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"participant \"meetings:UniqueMeetingList\" as UniqueMeetingList MODEL_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"participant \"internalList:ObservableList\" as ObservableList MODEL_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"end box","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"[-\u003e LogicManager : execute\\n(userInput)","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"activate LogicManager","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"LogicManager -\u003e AddressBookParser : parseCommand\\n(userInput)","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"activate AddressBookParser","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"create SortMeetingCommandParser","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"AddressBookParser -\u003e SortMeetingCommandParser","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"activate SortMeetingCommandParser","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"SortMeetingCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"deactivate SortMeetingCommandParser","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"AddressBookParser -\u003e SortMeetingCommandParser : parse(args)","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"activate SortMeetingCommandParser","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"create SortMeetingCommand","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"SortMeetingCommandParser -\u003e SortMeetingCommand : SortMeetingCommand\\n(isInAscending)","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"deactivate SortMeetingCommandParser","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"activate SortMeetingCommand","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"destroy SortMeetingCommandParser","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"SortMeetingCommand --\u003e LogicManager : fm","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"SortMeetingCommand \u003c- LogicManager : execute(model)","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"SortMeetingCommand -\u003e Model : sortMeetingListByDate\\n(isInAscending)","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"activate Model","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"Model -\u003e MeetingList : sortMeetingListByDate\\n(isInAscending)","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"activate MeetingList","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"MeetingList -\u003e UniqueMeetingList : sortByDate\\n(isInAscending)","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"GenFusion122"},"content":"activate UniqueMeetingList","lastModifiedDate":"2022-11-02"},{"lineNumber":52,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"GenFusion122"},"content":"UniqueMeetingList -\u003e ObservableList : sortByDate\\n(isInAscending)","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"GenFusion122"},"content":"activate ObservableList","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"GenFusion122"},"content":"ObservableList -\u003e ObservableList : sort(comparator)","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"GenFusion122"},"content":"create CommandResult","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"GenFusion122"},"content":"SortMeetingCommand -\u003e CommandResult","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"GenFusion122"},"content":"deactivate ObservableList","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"GenFusion122"},"content":"deactivate UniqueMeetingList","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"GenFusion122"},"content":"deactivate MeetingList","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"GenFusion122"},"content":"deactivate Model","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":65,"author":{"gitId":"GenFusion122"},"content":"activate CommandResult","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"GenFusion122"},"content":"CommandResult --\u003e SortMeetingCommand","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"GenFusion122"},"content":"deactivate CommandResult","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"GenFusion122"},"content":"SortMeetingCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"GenFusion122"},"content":"deactivate SortMeetingCommand","lastModifiedDate":"2022-11-02"},{"lineNumber":70,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":71,"author":{"gitId":"GenFusion122"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-11-02"},{"lineNumber":72,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":73,"author":{"gitId":"GenFusion122"},"content":"@enduml","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"GenFusion122":73}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"title: Yellow Pages","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103-F13-3/tp/branch/master/graph/badge.svg?token\u003dKEROWHVE8S)](https://codecov.io/gh/AY2223S1-CS2103-F13-3/tp)","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"**Yellow Pages is a desktop application for managing your contact and meeting details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-10-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"* If you are interested in using Yellow Pages, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-10-29"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"* If you are interested about developing Yellow Pages, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"GenFusion122":5,"-":14}},{"path":"docs/team/darrentde.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"---","lastModifiedDate":"2022-11-03"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"layout: page","lastModifiedDate":"2022-11-03"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"title: Darren\u0027s Project Portfolio Page","lastModifiedDate":"2022-11-03"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"---","lastModifiedDate":"2022-11-03"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"### Project: Yellow Pages","lastModifiedDate":"2022-11-03"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"Yellow Pages is a desktop address book application used for students in universities. User interaction is done through CLI and its GUI is created using JavaFX","lastModifiedDate":"2022-11-03"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"- **New Feature**:","lastModifiedDate":"2022-11-03"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"  - **Meeting List Storage** [#39](https://github.com/AY2223S1-CS2103-F13-3/tp/pull/39)","lastModifiedDate":"2022-11-03"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"    - Description: Store meetings created","lastModifiedDate":"2022-11-03"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"    - Justification: There is a need to store all meetings that have been created so that the user can access them when they reopen the application.","lastModifiedDate":"2022-11-03"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"    - Highlights: The implementation for storing of meetings follows closely with how closely address book is stored. Despite following the way address book is being implemented, ","lastModifiedDate":"2022-11-03"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"    it was not as trivial to follow. Changes had to be made to the logic and model managers as that it how the user interacts with the UI. Storage manager and the main app also had to be ","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"    edited to ensure that an empty meeting list on start up could be populated with sample meetings.","lastModifiedDate":"2022-11-03"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"    - Credits: AB3 Address book","lastModifiedDate":"2022-11-03"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"    ","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"  - **List Meeting Command** [#33](https://github.com/AY2223S1-CS2103-F13-3/tp/pull/33)","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"    - Description: List all meetings that have been created in the command line","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"    - Justification: Previously before the UI cards were implemented for storage, there was no way to view all meetings","lastModifiedDate":"2022-11-03"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"    ","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003ddarrentde\u0026tabRepo\u003dAY2223S1-CS2103-F13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"  - User Guide","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"    - Added documentation for `listmeetings`","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"  - Developer Guide","lastModifiedDate":"2022-11-03"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"    - Added implementation details for storage meetings [#54](https://github.com/AY2223S1-CS2103-F13-3/tp/pull/54)","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"    - Created UML Diagrams for `ModifiedStorageClassDiagram`, `ModifiedArchitectureSequenceDiagram` and `ModifiedModelClassDiagram` ","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"  * **Community**","lastModifiedDate":"2022-11-03"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"  * Created team organization and repository in GitHub","lastModifiedDate":"2022-11-03"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"  * Opened issues for bugs [#65](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/65) [#66](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/66)","lastModifiedDate":"2022-11-03"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"  * Helped to review and close pull request [#24](https://github.com/AY2223S1-CS2103-F13-3/tp/pull/28) [#63](https://github.com/AY2223S1-CS2103-F13-3/tp/pull/63) [#67](https://github.com/AY2223S1-CS2103-F13-3/tp/pull/67)","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"  * Helped to close issues with comments [#83](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/83) [#94](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/94) [#96](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/96)","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-11-04"}],"authorContributionMap":{"darrentde":36}},{"path":"docs/team/genfusion122.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"layout: page","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"title: Justin Widodo\u0027s Project Portfolio Page","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"### Project: Yellow Pages","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"Yellow Pages is a desktop address book application used for students in universities. User interaction is done through CLI and its GUI is created using JavaFX","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"Contributions:","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"- **New Features**:","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"  - **Filter Meetings**","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"    - *Description*: Filters meetings between two dates based on the date of each meeting.","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"    - *Justifications*: Filter by date is a function that supports our idea of building an application to help university students in organizing meetings. ","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"    Filter helps the user to filter through existing meetings by date to find what meetings lay on which date etc... ","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"    - *Highlights*: In a way \"Find Meeting by Date\" is also implemented in this feature as if both dates inputted are equal, then it searches for meetings that fall on that day.","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"    The only implementation hiccups that were faced was the manipulation/conversion of LocalDateTime variables, otherwise it was pretty straightforward.","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"    Unit Tests for this feature was also implemented.","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"  - **Sort Meetings**","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"    - *Description*: Permanently sorts the list of meetings by date in ascending or descending order.","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"    - *Justifications*: Along with Filter Meetings feature, Sort Meetings goes hand in hand in helping the user manage their meetings. ","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"    Date was specifically chosen as it is the most crucial and easily overlooked information about meetings. ","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"    Hence, the ability to sort meetings by the date helps users to see which meeting they have next.   ","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"    - *Highlights*: Primary difficulty was in finding out a way to sort the list, considering its nested within Observable/ReadOnly List, which was made easier with the ObservableList\u003c\u003e\u0027s sort function. ","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"    The other difficulty was in determining the order of the sort, I utilized a lambda function to act as a comparable Functional Interface to determine the sorting order.","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"    Furthermore, enhancements had to be made in the Meeting Class, namely I added a \"compareTo\" function to compare two meetings together. Unit Tests for this feature was also implemented.","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"    - *Credits*: CS2030S for teaching me how to do comparator lambdas to sort values and compareTo functions.","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"  - **Find Meetings**","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"    - *Description*: Finds meetings based on their description, location and the people they contain.","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"    - *Justifications*: Shares a similar theme with the two other functions, that being Meeting Object Management. ","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"    Hence, its only natural to have a find meeting feature that searches meetings using other factors than their date. ","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"    - *Highlights*: This is the only function in the entirety of Yellow Pages to utilize functional interface classes (FindMeetingFunctionalInterface). ","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"    The use of functional interfaces here allows the command to easily modified in the case where Meeting adds more fields that can be searched from. Unit Tests for this feature was also implemented.","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"    - *Credits*: Again thanks to CS2030S for teaching me functional interfaces.","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dgenfusion122\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"- **Project management**: ","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"  - Managed releases of v1.2, v1.3.trial, v1.3. (and potentially v1.4)","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"  - Created and Closed milestones v1.2, v1.3. (and potentially v1.4)","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"  - Created various issues corresponding to project management/submission. ","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"  ([\\#76](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/76), ","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"  [\\#74](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/74), ","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"  [\\#73](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/73), ","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"  [\\#45](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/45),","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"  [\\#40](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/40))","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"  - Provided screenshots for v1.2 and v1.3 demo.","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"- **Enhancements to existing features**: ","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"  - Implemented the updates of Person Objects belonging to Meeting Objects when those Person Objects are edited/deleted.","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"  - Changed the link in the \"Help Command\".","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"GenFusion122"},"content":"- **Documentation**:","lastModifiedDate":"2022-09-18"},{"lineNumber":53,"author":{"gitId":"GenFusion122"},"content":"    - User Guide: ","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"GenFusion122"},"content":"      - Added documentation for the `sort`, `filter` and `find` meeting commands. ([\\#70](https://github.com/AY2223S1-CS2103-F13-3/tp/pull/70))","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"GenFusion122"},"content":"      - Implemented a table of contents with working links to various anchors within the guide. ([\\#134](https://github.com/AY2223S1-CS2103-F13-3/tp/pull/134))","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"GenFusion122"},"content":"      - Fixed a myriad of typos, missing examples and general issues found in the PE-D. (also in [\\#134](https://github.com/AY2223S1-CS2103-F13-3/tp/pull/134))","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"GenFusion122"},"content":"    - Developer Guide: ","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"GenFusion122"},"content":"      - Added implementation details of `filter`, `sort` and `find` meetings. ","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"GenFusion122"},"content":"    - Misc.","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"GenFusion122"},"content":"      - Updated various other miscellaneous documentation files such as Index.md, UI.png, About Us and README. ","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"GenFusion122"},"content":"\t  ([\\#22](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/22),","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"GenFusion122"},"content":"\t  [\\#23](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/23),","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"GenFusion122"},"content":"\t  [\\#24](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/24))","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":65,"author":{"gitId":"GenFusion122"},"content":"- **Community**:","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"GenFusion122"},"content":"  - Wrote non-trivial comments in various PE-D issues raised. (e.g. [\\#78](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/78)) ","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":68,"author":{"gitId":"GenFusion122"},"content":"- **Tools**: ","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"GenFusion122"},"content":"  - Implemented a Util class for a FunctionalInterface and a DateTimeConverter. (not sure if this counts as tools)","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"GenFusion122":69}},{"path":"docs/team/hakkangin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"---","lastModifiedDate":"2022-11-04"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"layout: page","lastModifiedDate":"2022-11-04"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"title: Tian You\u0027s Project Portfolio Page","lastModifiedDate":"2022-11-04"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"---","lastModifiedDate":"2022-11-04"},{"lineNumber":5,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"mqchua"},"content":"### Project: Yellow Pages","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"mqchua"},"content":"Yellow Pages is a desktop address book application used for students in universities. User interaction is done through CLI and its GUI is created using JavaFX","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"mqchua"},"content":"Contributions:","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"- **New Features**:","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"    - **Create Meetings**","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"        - *Description*: Create new meetings with other contacts in the address book based on the description, date and time, as well as location provided.","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"        - *Justifications*: Creating meetings is a function that supports our idea of building an application to help university students in creating and organizing meetings.","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":"          Creating a meeting enables the user to note down past and future meetings on Yellow Pages, making it more convenient to keep track and organise meetings.","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":"        - *Highlights*: The implementation here requires the creation of a new parser and command for the create meeting command,","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"          as well as a new Meeting object and a UniqueMeetingList (similar to UniquePersonsList) to store the meetings in the software.","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":"          I was able to mirror the other commands for the architecture, but at several crucial parts I was required to make my own","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"          customisations, such as creating a DateTimeProcessor class to convert the input date and time format from the user","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":"          to the desired date and time format stored in the Meeting. ","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"HakkaNgin"},"content":"          - I have also complemented these modifications with adding the corresponding methods to the Model and ModelManager. ","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":"          - Also, I implemented helper methods to match the names of the person to meet to the actual Persons ","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":"            in the address book, as well as accounting for the different cases that might raise exceptions by creating and handling custom Exception classes.","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"          - In v1.3 I Optimised the validation process of user input for the create new meeting command, such that all validation will be performed before the creation of a Meeting.","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"            This enables the storing of Meeting objects to be simplified as the date format does not need to be converted between different formats every time storage is accessed.","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"HakkaNgin"},"content":"        - *Credits*: CS2030S for teaching me the necessary programming skills.","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"  ","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"HakkaNgin"},"content":"    - **Delete Meetings**","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"       - *Description*: Permanently deletes a meeting created by the user.","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"       - *Justifications*: As an extension to our idea of enabling users to better organise and manage their meetings, ","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"         deleting meetings enable users to remove the meetings from Yellow Pages if they are cancelled or completed.","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"HakkaNgin"},"content":"         This provides greater flexibility to the user in managing their meetings.","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"HakkaNgin"},"content":"       - *Highlights*: The user command for deleting meetings implements an index-based system; thus users are only required to ","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"HakkaNgin"},"content":"         input the index of the meetings to delete according to the UI, which makes the process more convenient.","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"HakkaNgin"},"content":"        ","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"HakkaNgin"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dHakkaNgin\u0026tabRepo\u003dAY2223S1-CS2103-F13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"HakkaNgin"},"content":"- **Project management**:","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"HakkaNgin"},"content":"    - Created various issues corresponding to project management/submission.","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"HakkaNgin"},"content":"      ([\\#9](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/9),","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"HakkaNgin"},"content":"      [\\#10](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/10),","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"HakkaNgin"},"content":"      [\\#12](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/12),","lastModifiedDate":"2022-11-04"},{"lineNumber":44,"author":{"gitId":"HakkaNgin"},"content":"      [\\#61](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/61),","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"HakkaNgin"},"content":"      [\\#68](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/68))","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"HakkaNgin"},"content":"    - Created various pull requests to merge different feature branches of personal repository to the team repository. ","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"HakkaNgin"},"content":"      Descriptions for pull requests for major updates are writen in the What-Why-How format:","lastModifiedDate":"2022-11-04"},{"lineNumber":48,"author":{"gitId":"HakkaNgin"},"content":"      ([\\#11](https://github.com/AY2223S1-CS2103-F13-3/tp/pull/11),","lastModifiedDate":"2022-11-04"},{"lineNumber":49,"author":{"gitId":"HakkaNgin"},"content":"      [\\#19](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/19),","lastModifiedDate":"2022-11-04"},{"lineNumber":50,"author":{"gitId":"HakkaNgin"},"content":"      [\\#26](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/26),","lastModifiedDate":"2022-11-04"},{"lineNumber":51,"author":{"gitId":"HakkaNgin"},"content":"      [\\#27](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/27),","lastModifiedDate":"2022-11-04"},{"lineNumber":52,"author":{"gitId":"HakkaNgin"},"content":"      [\\#29](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/29)","lastModifiedDate":"2022-11-04"},{"lineNumber":53,"author":{"gitId":"HakkaNgin"},"content":"      [\\#32](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/32),","lastModifiedDate":"2022-11-04"},{"lineNumber":54,"author":{"gitId":"HakkaNgin"},"content":"      [\\#34](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/34),","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"HakkaNgin"},"content":"      [\\#56](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/56),","lastModifiedDate":"2022-11-04"},{"lineNumber":56,"author":{"gitId":"HakkaNgin"},"content":"      [\\#63](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/63),","lastModifiedDate":"2022-11-04"},{"lineNumber":57,"author":{"gitId":"HakkaNgin"},"content":"      [\\#67](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/67)","lastModifiedDate":"2022-11-04"},{"lineNumber":58,"author":{"gitId":"HakkaNgin"},"content":"      [\\#69](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/69),","lastModifiedDate":"2022-11-04"},{"lineNumber":59,"author":{"gitId":"HakkaNgin"},"content":"      [\\#72](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/72),","lastModifiedDate":"2022-11-04"},{"lineNumber":60,"author":{"gitId":"HakkaNgin"},"content":"      [\\#75](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/75),","lastModifiedDate":"2022-11-04"},{"lineNumber":61,"author":{"gitId":"HakkaNgin"},"content":"      [\\#124](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/124),","lastModifiedDate":"2022-11-04"},{"lineNumber":62,"author":{"gitId":"HakkaNgin"},"content":"      [\\#135](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/135))","lastModifiedDate":"2022-11-04"},{"lineNumber":63,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":64,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":65,"author":{"gitId":"HakkaNgin"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2022-11-04"},{"lineNumber":66,"author":{"gitId":"HakkaNgin"},"content":"    - NIL","lastModifiedDate":"2022-11-04"},{"lineNumber":67,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":68,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":69,"author":{"gitId":"HakkaNgin"},"content":"- **Documentation**:","lastModifiedDate":"2022-11-04"},{"lineNumber":70,"author":{"gitId":"HakkaNgin"},"content":"    - User Guide:","lastModifiedDate":"2022-11-04"},{"lineNumber":71,"author":{"gitId":"HakkaNgin"},"content":"        - Added documentation for the `meet` and `deletemeeting` commands. ([\\#72](https://github.com/AY2223S1-CS2103-F13-3/tp/pull/72))","lastModifiedDate":"2022-11-04"},{"lineNumber":72,"author":{"gitId":"HakkaNgin"},"content":"    - Developer Guide:","lastModifiedDate":"2022-11-04"},{"lineNumber":73,"author":{"gitId":"HakkaNgin"},"content":"        - Added implementation details the `meet` and `deletemeeting` commands. ([\\#56](https://github.com/AY2223S1-CS2103-F13-3/tp/pull/56))","lastModifiedDate":"2022-11-04"},{"lineNumber":74,"author":{"gitId":"HakkaNgin"},"content":"    - Misc.","lastModifiedDate":"2022-11-04"},{"lineNumber":75,"author":{"gitId":"HakkaNgin"},"content":"        - Updated About Us","lastModifiedDate":"2022-11-04"},{"lineNumber":76,"author":{"gitId":"HakkaNgin"},"content":"          ([\\#19](https://github.com/AY2223S1-CS2103-F13-3/tp/pull/19))","lastModifiedDate":"2022-11-04"},{"lineNumber":77,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":78,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":79,"author":{"gitId":"HakkaNgin"},"content":"- **Community**:","lastModifiedDate":"2022-11-04"},{"lineNumber":80,"author":{"gitId":"HakkaNgin"},"content":"    - Wrote non-trivial comments in various PE-D issues raised. (e.g. [\\#111](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/111))","lastModifiedDate":"2022-11-04"},{"lineNumber":81,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":82,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":83,"author":{"gitId":"HakkaNgin"},"content":"- **Tools**:","lastModifiedDate":"2022-11-04"},{"lineNumber":84,"author":{"gitId":"HakkaNgin"},"content":"    - Implemented a DateTimeProcessor class to validate the input date and time format and convert it to the desired output format.","lastModifiedDate":"2022-11-04"},{"lineNumber":85,"author":{"gitId":"HakkaNgin"},"content":"    - Implemented a UniqueMeetingList class to store and manage Meetings created.","lastModifiedDate":"2022-11-04"}],"authorContributionMap":{"mqchua":5,"HakkaNgin":80}},{"path":"docs/team/mqchua.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mqchua"},"content":"# Chua Ming Quan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"mqchua"},"content":"### Project: Yellow Pages","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"mqchua"},"content":"Yellow Pages is a desktop address book application used for students in universities. User interaction is done through CLI and its GUI is created using JavaFX","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"mqchua"},"content":"Contributions:","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"mqchua"},"content":"- **New Features**: WIP","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"mqchua"},"content":"\t- *Description*:","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"mqchua"},"content":"\t- *Justifications*:","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"mqchua"},"content":"\t- *Highlights*:","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"mqchua"},"content":"\t- *Credits*:","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"mqchua"},"content":"- **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"mqchua"},"content":"-   **Project management**: WIP","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"mqchua"},"content":"-   **Enhancements to existing features**: WIP","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"mqchua"},"content":"-   **Documentation**:","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"mqchua"},"content":"\t- User Guide: WIP","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"mqchua"},"content":"\t- Developer Guide: WIP","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"mqchua"},"content":"-   **Community**: WIP","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"mqchua"},"content":"-   **Tools**: WIP","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"mqchua":25}},{"path":"docs/team/tinenhao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"---","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"layout: page","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"title: En Hao\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"---","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"### Project: Yellow Pages","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"Yellow Pages is a desktop address book application used for students in universities. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"* **New Feature**:","lastModifiedDate":"2022-11-03"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"  * **Search Contacts By Tags**","lastModifiedDate":"2022-11-03"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"      * *Description*: Filters contacts which contains the corresponding tag.","lastModifiedDate":"2022-11-03"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"      * *Justification*: Search by contacts is a function that supports our idea of building an application which helps","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"    university students organize their contacts.","lastModifiedDate":"2022-11-03"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"      * *Highlights*: This function was implemented similar to Find Command in the original Address Book. ","lastModifiedDate":"2022-11-03"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"      * *Credits*: Find Command","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"  * **Add Person to Meeting**","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"    * *Description*: Allows users to add existing contacts to existing meetings.","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"    * *Justification*: This function would make it much more convenient for users to update the persons in their meetings ","lastModifiedDate":"2022-11-03"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"instead of deleting and recreating the meeting everytime any details needs to be updated.","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"  * **Delete Person from Meeting**","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"    * *Description*: Allows users to delete contacts from existing meetings.","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"    * *Justification*: This function would make it much more convenient for users to update the persons in their meetings","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"      instead of deleting and recreating the meeting everytime any details needs to be updated.","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"  * **Edit Meeting**","lastModifiedDate":"2022-11-03"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"    * *Description*: Edit the individual details of the specified meeting.","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"    * *Justification*: This function would make it much more convenient for users to update their meeting details","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"      instead of deleting and recreating the meeting everytime any details needs to be updated.","lastModifiedDate":"2022-11-03"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"    * *Highlights*: This function was implemented similar to Edit Command in the original Address Book.","lastModifiedDate":"2022-11-03"},{"lineNumber":32,"author":{"gitId":"tinenhao"},"content":"    * *Credits*: Edit Command","lastModifiedDate":"2022-11-03"},{"lineNumber":33,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"tinenhao"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dtinenhao\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003dtinenhao\u0026zR\u003dAY2223S1-CS2103-F13-3%2Ftp%5Bmaster%5D\u0026zACS\u003d211.56939605110338\u0026zS\u003d2022-09-16\u0026zFS\u003d\u0026zU\u003d2022-11-02\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"tinenhao"},"content":"* **Project management**:","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"tinenhao"},"content":"    * Created various issues corresponding to project management/submission","lastModifiedDate":"2022-11-03"},{"lineNumber":38,"author":{"gitId":"tinenhao"},"content":"  [\\#14](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/14),","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"tinenhao"},"content":"  [\\#30](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/30),","lastModifiedDate":"2022-11-03"},{"lineNumber":40,"author":{"gitId":"tinenhao"},"content":"  [\\#43](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/43),","lastModifiedDate":"2022-11-03"},{"lineNumber":41,"author":{"gitId":"tinenhao"},"content":"  [\\#47](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/47),","lastModifiedDate":"2022-11-03"},{"lineNumber":42,"author":{"gitId":"tinenhao"},"content":"  [\\#59](https://github.com/AY2223S1-CS2103-F13-3/tp/issues/59),","lastModifiedDate":"2022-11-03"},{"lineNumber":43,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"tinenhao"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"tinenhao"},"content":"    * User Guide:","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"tinenhao"},"content":"      * Added documentation for the `findtag`, `addpersontomeeting`, `deletepersonfrommeeting`, `editmeeting` commands.","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"tinenhao"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"tinenhao"},"content":"      * Added user stories","lastModifiedDate":"2022-11-03"},{"lineNumber":50,"author":{"gitId":"tinenhao"},"content":"      * Added use cases","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"tinenhao"},"content":"      * Added Non-Functional Requirements","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"tinenhao"},"content":"      * Added implementation details of `findtag`, `addpersontomeeting`, `deletepersonfrommeeting`, `editmeeting` commands.","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"tinenhao":54}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.MeetingList;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.ReadOnlyMeetingList;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"import seedu.address.storage.JsonMeetingListStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"import seedu.address.storage.MeetingListStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"darrentde"},"content":"        MeetingListStorage meetingListStorage \u003d new JsonMeetingListStorage(userPrefs.getMeetingListFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"darrentde"},"content":"        storage \u003d new StorageManager(addressBookStorage, meetingListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"darrentde"},"content":"        Optional\u003cReadOnlyMeetingList\u003e meetingListOptional;","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"darrentde"},"content":"        ReadOnlyAddressBook initialDataAddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"darrentde"},"content":"        ReadOnlyMeetingList initialDataMeetingList;","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"darrentde"},"content":"            initialDataAddressBook \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"darrentde"},"content":"            initialDataAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":99,"author":{"gitId":"darrentde"},"content":"            initialDataAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"darrentde"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"darrentde"},"content":"            meetingListOptional \u003d storage.readMeetingList();","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"darrentde"},"content":"            if (!meetingListOptional.isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"darrentde"},"content":"                logger.info(\"Data file not found. Will be starting with a sample MeetingList\");","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"darrentde"},"content":"            initialDataMeetingList \u003d meetingListOptional.orElseGet(SampleDataUtil::getSampleMeetingList);","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"darrentde"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"darrentde"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty MeetingList\");","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"darrentde"},"content":"            initialDataMeetingList \u003d new MeetingList();","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"darrentde"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"darrentde"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty MeetingList\");","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"darrentde"},"content":"            initialDataMeetingList \u003d new MeetingList();","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"darrentde"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"darrentde"},"content":"        return new ModelManager(initialDataAddressBook, initialDataMeetingList, userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"darrentde"},"content":"        logger.info(\"Starting AddressBook \" + \"Starting MeetingList \" + MainApp.VERSION);","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"darrentde":30,"-":177}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d \"The meeting index provided is invalid\";","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"    public static final String MESSAGE_INVALID_MEETING_ONLY_ONE_LEFT \u003d \"The meeting has only 1 person left\";","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"    public static final String MESSAGE_INVALID_DUPLICATE_NAMES \u003d \"There are at least two names in your input \"","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":"        + \"corresponding to the same person. \\nMake sure there aren\u0027t any duplicate persons\";","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"    public static final String MESSAGE_MEETINGS_LISTED_OVERVIEW \u003d \"%1$d meetings listed!\";","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"    public static final String MESSAGE_MEETINGS_SORTED \u003d \"Sorted all meetings!\";","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"GenFusion122":2,"tinenhao":2,"HakkaNgin":2,"-":13}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.ReadOnlyMeetingList;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException, java.text.ParseException;","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"    ReadOnlyMeetingList getMeetingList();","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"darrentde"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"darrentde"},"content":"    Path getMeetingListFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"darrentde":8,"tinenhao":1,"-":49}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.ReadOnlyMeetingList;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"tinenhao"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException, java.text.ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"darrentde"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"darrentde"},"content":"            storage.saveMeetingList(model.getMeetingList());","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"darrentde"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"darrentde"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"darrentde"},"content":"    public ReadOnlyMeetingList getMeetingList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"darrentde"},"content":"        return model.getMeetingList();","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":80,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"darrentde"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"darrentde"},"content":"        return model.getFilteredMeetingList();","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"darrentde"},"content":"    public Path getMeetingListFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"darrentde"},"content":"        return model.getMeetingListFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"darrentde":21,"tinenhao":1,"-":82}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonToMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.exceptions.ImpreciseMatchException;","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":" * Creates a meeting with a person in the address book","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"public class AddPersonToMeetingCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"    public static final String COMMAND_WORD \u003d \"addpersontomeeting\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"            + \": Adds the list of people into the specified meeting based on the index from the displayed meetings.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"            + \"Parameters: Meeting index ; NAMES OF PEOPLE (from address book) YOU ARE MEETING, (split names by , )\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 ; Alex Yeoh, Anna Lim\";","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"    public static final String MESSAGE_ADD_PEOPLE_TO_MEETING_SUCCESS \u003d \"Added person(s) to the meeting!\";","lastModifiedDate":"2022-10-30"},{"lineNumber":32,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"tinenhao"},"content":"    private final String info;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"tinenhao"},"content":"    private Index meetingIndex;","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"tinenhao"},"content":"    public AddPersonToMeetingCommand(String info) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"tinenhao"},"content":"        this.info \u003d info;","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"tinenhao"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"tinenhao"},"content":"    public CommandResult execute(Model model) throws CommandException, ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"tinenhao"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"tinenhao"},"content":"        String[] newPeopleInformation \u003d this.info.split(\";\");","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"tinenhao"},"content":"        if (newPeopleInformation.length !\u003d 2) {","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"HakkaNgin"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2022-10-29"},{"lineNumber":48,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"tinenhao"},"content":"        String[] newPeople \u003d newPeopleInformation[1].strip().split(\",\");","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"tinenhao"},"content":"        meetingIndex \u003d ParserUtil.parseIndex(newPeopleInformation[0].strip());","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"tinenhao"},"content":"        if (meetingIndex.getZeroBased() \u003e\u003d model.getFilteredMeetingList().size()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"tinenhao"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"tinenhao"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"tinenhao"},"content":"            ArrayList\u003cPerson\u003e arrayOfPeopleToMeet \u003d Meeting.convertNameToPerson(model, newPeople);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"tinenhao"},"content":"            Meeting meetingToUpdate \u003d model.getFilteredMeetingList().get(meetingIndex.getZeroBased());","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"tinenhao"},"content":"            meetingToUpdate.addPersons(arrayOfPeopleToMeet);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"tinenhao"},"content":"            model.deleteMeeting(meetingToUpdate);","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"tinenhao"},"content":"            model.addMeeting(meetingToUpdate, meetingIndex.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"tinenhao"},"content":"        } catch (PersonNotFoundException e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"HakkaNgin"},"content":"            throw new CommandException(e.getMessage() + \"\\n\" + CreateMeetingCommand.PERSON_NOT_FOUND);","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"tinenhao"},"content":"        } catch (DuplicatePersonException e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"tinenhao"},"content":"            throw new CommandException(CreateMeetingCommand.DUPLICATE_PERSON_TO_MEET);","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"GenFusion122"},"content":"        } catch (ImpreciseMatchException e) {","lastModifiedDate":"2022-10-30"},{"lineNumber":68,"author":{"gitId":"GenFusion122"},"content":"            throw new CommandException(CreateMeetingCommand.IMPRECISE_NAME_PREDICATE);","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"HakkaNgin"},"content":"        return new CommandResult(MESSAGE_ADD_PEOPLE_TO_MEETING_SUCCESS);","lastModifiedDate":"2022-10-29"},{"lineNumber":72,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"tinenhao"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"tinenhao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"tinenhao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"tinenhao"},"content":"                || (other instanceof AddPersonToMeetingCommand // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"tinenhao"},"content":"                \u0026\u0026 this.info.equals(((AddPersonToMeetingCommand) other).info)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"GenFusion122":4,"tinenhao":74,"HakkaNgin":3}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.MeetingList;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"        model.setMeetingList(new MeetingList());","lastModifiedDate":"2022-10-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"GenFusion122":2,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"    public abstract CommandResult execute(Model model) throws CommandException, ParseException,","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"            java.text.ParseException;","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tinenhao":3,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/CreateMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.exceptions.ImpreciseMatchException;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":" * Creates a meeting with a person in the address book","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":"public class CreateMeetingCommand extends Command {","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":"    public static final String COMMAND_WORD \u003d \"meet\";","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"        + \": Schedules a new meeting between you and another user.\\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"HakkaNgin"},"content":"        + \"Parameters: Names of people to meet (from address book, split names by }} ) ;;;\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"        + \"Title of meeting;;;\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"HakkaNgin"},"content":"        + \"Date and time of meeting (in dd-MM-yyyy HHmm format);;;\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"        + \"location of meeting\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"        + \"Example: \" + COMMAND_WORD + \" Alex Yeoh }} Bernice Yu ;;; Study Session ;;; 06-10-2022 2015 ;;; UTown\";","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"HakkaNgin"},"content":"    public static final String MESSAGE_CREATE_MEETING_SUCCESS \u003d \"Created meeting with: \\n%1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"HakkaNgin"},"content":"    public static final String INCORRECT_NUMBER_OF_ARGUMENTS \u003d \"Make sure you have entered \"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"HakkaNgin"},"content":"        + \"the correct amount of information correctly separated!\";","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"HakkaNgin"},"content":"    public static final String PERSON_NOT_FOUND \u003d \"Oops! The person you are meeting with doesn\u0027t exist \"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"HakkaNgin"},"content":"        + \"in the address book. Do check if you have entered their name correctly.\";","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"HakkaNgin"},"content":"    public static final String DUPLICATE_MEETINGS \u003d \"Oops! Seems that you have already scheduled to meet \"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"HakkaNgin"},"content":"        + \"the same person(s) at the same time\";","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"HakkaNgin"},"content":"    public static final String DUPLICATE_PERSON_TO_MEET \u003d \"It looks like you are adding the same \"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"HakkaNgin"},"content":"        + \"person to a meeting more than once!\";","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"HakkaNgin"},"content":"    public static final String IMPRECISE_NAME_PREDICATE \u003d \"Oops! The name of one of the persons you are meeting \"","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"HakkaNgin"},"content":"        + \"matches more than one person in the address book! \\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"        + \"Please use their exact name, or check if every word is separated by single spacing.\";","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"HakkaNgin"},"content":"    public static final String INVALID_DATE_AND_TIME_FORMAT \u003d \"%1$s\\nOops! Make sure the date and time of the meeting \"","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"HakkaNgin"},"content":"        + \"are in the correct format! \\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"HakkaNgin"},"content":"        + \"(note: use 0000 instead of 2400 to represent 12am)\";","lastModifiedDate":"2022-10-30"},{"lineNumber":52,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"HakkaNgin"},"content":"    private final String[] peopleToMeet;","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"HakkaNgin"},"content":"    private final String meetingTitle;","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"HakkaNgin"},"content":"    private final String processedMeetingDateAndTime;","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"HakkaNgin"},"content":"    private final String meetingLocation;","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"HakkaNgin"},"content":"     * Constructor for CreateMeetingCommand.","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"HakkaNgin"},"content":"     * Takes in the relevant information of a meeting.","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"HakkaNgin"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"HakkaNgin"},"content":"     * @param peopleToMeet Array of the names of the people to meet in String.","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"HakkaNgin"},"content":"     * @param meetingTitle The title/ description of the meeting","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"HakkaNgin"},"content":"     * @param processedMeetingDateAndTime the date and time of the meeting in \"EEEE, dd MMMM yyyy hh:mm a\" format","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"HakkaNgin"},"content":"     * @param meetingLocation the location of the meeting","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"HakkaNgin"},"content":"    public CreateMeetingCommand(String[] peopleToMeet, String meetingTitle, String processedMeetingDateAndTime,","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"HakkaNgin"},"content":"                                String meetingLocation) {","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"HakkaNgin"},"content":"        this.peopleToMeet \u003d peopleToMeet;","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"HakkaNgin"},"content":"        this.meetingTitle \u003d meetingTitle;","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"HakkaNgin"},"content":"        this.processedMeetingDateAndTime \u003d processedMeetingDateAndTime;","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"HakkaNgin"},"content":"        this.meetingLocation \u003d meetingLocation;","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"HakkaNgin"},"content":"     * Converts an ArrayList of Persons to a string of the Persons\u0027 names and tags","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"HakkaNgin"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"HakkaNgin"},"content":"     * @param arrayOfPeopleToMeet ArrayList of Persons to meet in the Meeting","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"HakkaNgin"},"content":"     * @return a String of all the Persons\u0027 names and tags, with every person separated by a line break","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"HakkaNgin"},"content":"    public static String peopleToNameAndTagList(ArrayList\u003cPerson\u003e arrayOfPeopleToMeet) {","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"HakkaNgin"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"HakkaNgin"},"content":"        for (Person personToMeet : arrayOfPeopleToMeet) {","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"HakkaNgin"},"content":"            String toAppend \u003d String.format(\"%1$s %2$s \\n\", personToMeet.getName(), personToMeet.getTags());","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"HakkaNgin"},"content":"            output.append(toAppend);","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"HakkaNgin"},"content":"        return output.toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"HakkaNgin"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"HakkaNgin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"HakkaNgin"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"HakkaNgin"},"content":"            requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"HakkaNgin"},"content":"            ArrayList\u003cPerson\u003e arrayOfPeopleToMeet \u003d Meeting.convertNameToPerson(model, peopleToMeet);","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"HakkaNgin"},"content":"            Meeting newMeeting \u003d model.createNewMeeting(arrayOfPeopleToMeet, meetingTitle,","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"HakkaNgin"},"content":"                processedMeetingDateAndTime, meetingLocation);","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"HakkaNgin"},"content":"            model.addMeeting(newMeeting);","lastModifiedDate":"2022-10-02"},{"lineNumber":99,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"HakkaNgin"},"content":"            return new CommandResult(","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"HakkaNgin"},"content":"                String.format(MESSAGE_CREATE_MEETING_SUCCESS, peopleToNameAndTagList(arrayOfPeopleToMeet))","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"HakkaNgin"},"content":"                    + String.format(\"For: %1$s\\n\", meetingTitle)","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"HakkaNgin"},"content":"                    + String.format(\"On: %1$s\\n\", newMeeting.getDateAndTime())","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"HakkaNgin"},"content":"                    + String.format(\"At: %1$s\\n\", meetingLocation)","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"HakkaNgin"},"content":"            );","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"HakkaNgin"},"content":"        } catch (PersonNotFoundException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"HakkaNgin"},"content":"            throw new CommandException(e.getMessage() + \"\\n\" + CreateMeetingCommand.PERSON_NOT_FOUND);","lastModifiedDate":"2022-10-30"},{"lineNumber":109,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"HakkaNgin"},"content":"        } catch (DuplicateMeetingException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"HakkaNgin"},"content":"            throw new CommandException(CreateMeetingCommand.DUPLICATE_MEETINGS);","lastModifiedDate":"2022-10-30"},{"lineNumber":112,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"GenFusion122"},"content":"        } catch (DuplicatePersonException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"HakkaNgin"},"content":"            throw new CommandException(CreateMeetingCommand.DUPLICATE_PERSON_TO_MEET);","lastModifiedDate":"2022-10-30"},{"lineNumber":115,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"HakkaNgin"},"content":"        } catch (ImpreciseMatchException e) {","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"HakkaNgin"},"content":"            throw new CommandException(CreateMeetingCommand.IMPRECISE_NAME_PREDICATE + \"\\n\" + e.getMessage());","lastModifiedDate":"2022-10-30"},{"lineNumber":118,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":121,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":122,"author":{"gitId":"HakkaNgin"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"HakkaNgin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"HakkaNgin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"HakkaNgin"},"content":"            || (other instanceof CreateMeetingCommand // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"HakkaNgin"},"content":"            \u0026\u0026 this.peopleToMeet.equals(((CreateMeetingCommand) other).peopleToMeet)","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"HakkaNgin"},"content":"            \u0026\u0026 this.meetingTitle.equals(((CreateMeetingCommand) other).meetingTitle)","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"HakkaNgin"},"content":"            \u0026\u0026 this.processedMeetingDateAndTime.equals(((CreateMeetingCommand) other).processedMeetingDateAndTime)","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"HakkaNgin"},"content":"            \u0026\u0026 this.meetingLocation.equals(((CreateMeetingCommand) other).meetingLocation)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"GenFusion122":3,"HakkaNgin":129}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"    public static final String MESSAGE_LAST_PERSON_IN_MEETING \u003d \"Meeting Index: %s has only this person left, \"","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"            + \"please delete the meeting before deleting this person.\";","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"        deletePersonFromAllMeetings(personToDelete, model.getFilteredMeetingList());","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"        model.updateFilteredMeetingList(Model.PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"GenFusion122"},"content":"     * deletes the person from all meetings that contains the person","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"GenFusion122"},"content":"     * @param p person to be deleted","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"GenFusion122"},"content":"     * @param meetings meeting list to iterate through","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"GenFusion122"},"content":"     * @throws CommandException exception thrown when person deleted is the last person in a meeting","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":65,"author":{"gitId":"GenFusion122"},"content":"    private void deletePersonFromAllMeetings(Person p, ObservableList\u003cMeeting\u003e meetings) throws CommandException {","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"GenFusion122"},"content":"        ArrayList\u003cPerson\u003e singlePersonList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"GenFusion122"},"content":"        singlePersonList.add(p);","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"GenFusion122"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"GenFusion122"},"content":"        for (Meeting m : meetings) {","lastModifiedDate":"2022-11-02"},{"lineNumber":70,"author":{"gitId":"GenFusion122"},"content":"            if (m.containsPerson(p) \u0026\u0026 m.getArrayListPersonToMeet().size() \u003d\u003d 1) {","lastModifiedDate":"2022-11-02"},{"lineNumber":71,"author":{"gitId":"GenFusion122"},"content":"                throw new CommandException(String.format(MESSAGE_LAST_PERSON_IN_MEETING, index));","lastModifiedDate":"2022-11-02"},{"lineNumber":72,"author":{"gitId":"GenFusion122"},"content":"            }","lastModifiedDate":"2022-11-02"},{"lineNumber":73,"author":{"gitId":"GenFusion122"},"content":"            m.deletePersons(singlePersonList);","lastModifiedDate":"2022-11-02"},{"lineNumber":74,"author":{"gitId":"GenFusion122"},"content":"            index++;","lastModifiedDate":"2022-11-02"},{"lineNumber":75,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":76,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"GenFusion122":26,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"public class DeleteMeetingCommand extends Command {","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"    public static final String COMMAND_WORD \u003d \"deletemeeting\";","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"HakkaNgin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":"        + \": Deletes the meeting identified by the index number used in the displayed meeting cards.\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"HakkaNgin"},"content":"    public static final String MESSAGE_DELETE_MEETING_SUCCESS \u003d \"Deleted Meeting: %1$s\";","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"HakkaNgin"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"    public DeleteMeetingCommand(Index targetIndex) {","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"HakkaNgin"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"HakkaNgin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"HakkaNgin"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"HakkaNgin"},"content":"        List\u003cMeeting\u003e lastShownMeetingList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"HakkaNgin"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownMeetingList.size()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"HakkaNgin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"HakkaNgin"},"content":"        Meeting meetingToDelete \u003d lastShownMeetingList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"HakkaNgin"},"content":"        model.deleteMeeting(meetingToDelete);","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"HakkaNgin"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEETING_SUCCESS, meetingToDelete));","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"HakkaNgin"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"HakkaNgin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"HakkaNgin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"HakkaNgin"},"content":"            || (other instanceof DeleteMeetingCommand // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"HakkaNgin"},"content":"            \u0026\u0026 targetIndex.equals(((DeleteMeetingCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"HakkaNgin":53}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonFromMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.exceptions.ImpreciseMatchException;","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":" * Creates a meeting with a person in the address book","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"public class DeletePersonFromMeetingCommand extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"    public static final String COMMAND_WORD \u003d \"deletepersonfrommeeting\";","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"            + \":Deletes the list of people from the specified meeting based on the index from the displayed meetings.\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"            + \"Parameters: Meeting index ; NAMES OF PEOPLE (from address book) YOU WANT TO DELETE, (split names by ,)\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 ; Alex Yeoh, Anna Lim\";","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"    public static final String MESSAGE_DELETE_PEOPLE_TO_MEETING_SUCCESS \u003d \"Deleted the list of persons\";","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"    public static final String MESSAGE_DELETE_PEOPLE_NOT_FOUND \u003d \"Oops! The person you are meeting with doesn\u0027t exist \"","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"            + \"in the address book or in the selected meeting. Do check if you have entered their name correctly.\";","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"tinenhao"},"content":"    private final String info;","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"tinenhao"},"content":"    private Index meetingIndex;","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"tinenhao"},"content":"    public DeletePersonFromMeetingCommand(String info) {","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"tinenhao"},"content":"        this.info \u003d info;","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"tinenhao"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"tinenhao"},"content":"    public CommandResult execute(Model model) throws CommandException, ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"tinenhao"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"tinenhao"},"content":"        String[] newPeopleInformation \u003d this.info.split(\";\");","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"tinenhao"},"content":"        if (newPeopleInformation.length !\u003d 2) {","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"HakkaNgin"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2022-10-29"},{"lineNumber":50,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"tinenhao"},"content":"        String[] newPeople \u003d newPeopleInformation[1].strip().split(\",\");","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"tinenhao"},"content":"        meetingIndex \u003d ParserUtil.parseIndex(newPeopleInformation[0].strip());","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"tinenhao"},"content":"        if (meetingIndex.getZeroBased() \u003e\u003d model.getFilteredMeetingList().size()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"tinenhao"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"tinenhao"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"tinenhao"},"content":"            ArrayList\u003cPerson\u003e arrayOfPeopleToDelete \u003d Meeting.convertNameToPerson(model, newPeople);","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"tinenhao"},"content":"            Meeting meetingToUpdate \u003d model.getFilteredMeetingList().get(meetingIndex.getZeroBased());","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"tinenhao"},"content":"            if (meetingToUpdate.getNumPersons() \u003c\u003d arrayOfPeopleToDelete.size()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"tinenhao"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MEETING_ONLY_ONE_LEFT);","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"tinenhao"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"tinenhao"},"content":"            meetingToUpdate.deletePersons(arrayOfPeopleToDelete);","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"tinenhao"},"content":"            model.deleteMeeting(meetingToUpdate);","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"tinenhao"},"content":"            model.addMeeting(meetingToUpdate, meetingIndex.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"tinenhao"},"content":"        } catch (PersonNotFoundException e) {","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"GenFusion122"},"content":"            throw new CommandException(e.getMessage() + \"\\n\" + MESSAGE_DELETE_PEOPLE_NOT_FOUND);","lastModifiedDate":"2022-11-02"},{"lineNumber":70,"author":{"gitId":"tinenhao"},"content":"        } catch (DuplicatePersonException e) {","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"tinenhao"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DUPLICATE_NAMES);","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"GenFusion122"},"content":"        } catch (ImpreciseMatchException e) {","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"GenFusion122"},"content":"            throw new CommandException(CreateMeetingCommand.IMPRECISE_NAME_PREDICATE);","lastModifiedDate":"2022-10-30"},{"lineNumber":74,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"tinenhao"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PEOPLE_TO_MEETING_SUCCESS));","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"tinenhao"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"tinenhao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"tinenhao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"tinenhao"},"content":"                || (other instanceof DeletePersonFromMeetingCommand // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"tinenhao"},"content":"                \u0026\u0026 this.info.equals(((DeletePersonFromMeetingCommand) other).info)); // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"GenFusion122":6,"tinenhao":79,"HakkaNgin":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"GenFusion122"},"content":"        editPersonFromAllMeetings(personToEdit, editedPerson, model.getFilteredMeetingList());","lastModifiedDate":"2022-11-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"GenFusion122"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2022-11-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":111,"author":{"gitId":"GenFusion122"},"content":"     * function to iterate through the list of meetings and edit the edited person in each one","lastModifiedDate":"2022-11-02"},{"lineNumber":112,"author":{"gitId":"GenFusion122"},"content":"     * @param originalPerson original value of person to edit","lastModifiedDate":"2022-11-02"},{"lineNumber":113,"author":{"gitId":"GenFusion122"},"content":"     * @param editedPerson new value of person","lastModifiedDate":"2022-11-02"},{"lineNumber":114,"author":{"gitId":"GenFusion122"},"content":"     * @param meetings list of meetings","lastModifiedDate":"2022-11-02"},{"lineNumber":115,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":116,"author":{"gitId":"GenFusion122"},"content":"    private void editPersonFromAllMeetings(Person originalPerson, Person editedPerson,","lastModifiedDate":"2022-11-02"},{"lineNumber":117,"author":{"gitId":"GenFusion122"},"content":"                                           ObservableList\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-11-02"},{"lineNumber":118,"author":{"gitId":"GenFusion122"},"content":"        for (Meeting m : meetings) {","lastModifiedDate":"2022-11-02"},{"lineNumber":119,"author":{"gitId":"GenFusion122"},"content":"            m.updatePerson(originalPerson, editedPerson);","lastModifiedDate":"2022-11-02"},{"lineNumber":120,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":121,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"GenFusion122":17,"-":226}},{"path":"src/main/java/seedu/address/logic/commands/EditMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":"import java.util.List;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"public class EditMeetingCommand extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"    public static final String COMMAND_WORD \u003d \"editmeeting\";","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the meeting identified \"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"            + \"by the index number used in the displayed meeting list. \"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"tinenhao"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"tinenhao"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"NAME] \"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"tinenhao"},"content":"            + \"[\" + PREFIX_DATE + \"PHONE] \"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"tinenhao"},"content":"            + \"[\" + PREFIX_LOCATION + \"EMAIL] \"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"tinenhao"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"tinenhao"},"content":"            + PREFIX_DESCRIPTION + \"91234567 \"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"tinenhao"},"content":"            + PREFIX_LOCATION + \"johndoe@example.com\";","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"tinenhao"},"content":"    public static final String MESSAGE_EDIT_MEETING_SUCCESS \u003d \"Edited Meeting: %s\";","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"tinenhao"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"tinenhao"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting already exists in the address book.\";","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"tinenhao"},"content":"    private final Index index;","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"tinenhao"},"content":"    private final EditMeetingDescriptor editMeetingDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"tinenhao"},"content":"     * @param index of the meeting in the filtered meeting list to edit","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"tinenhao"},"content":"     * @param editMeetingDescriptor details to edit the meeting with","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"tinenhao"},"content":"    public EditMeetingCommand(Index index, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"tinenhao"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"tinenhao"},"content":"        requireNonNull(editMeetingDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"tinenhao"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"tinenhao"},"content":"        this.editMeetingDescriptor \u003d new EditMeetingDescriptor(editMeetingDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"tinenhao"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"HakkaNgin"},"content":"    public CommandResult execute(Model model) throws CommandException, ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"tinenhao"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"tinenhao"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"tinenhao"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"tinenhao"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"tinenhao"},"content":"        Meeting meetingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"tinenhao"},"content":"        Meeting editedMeeting \u003d createEditedMeeting(meetingToEdit, editMeetingDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"tinenhao"},"content":"        if (!meetingToEdit.isSameMeeting(editedMeeting) \u0026\u0026 model.hasMeeting(editedMeeting)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"tinenhao"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"tinenhao"},"content":"        model.setMeeting(meetingToEdit, editedMeeting);","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"tinenhao"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"tinenhao"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting));","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"tinenhao"},"content":"     * Creates and returns a {@code Meeting} with the details of {@code meetingToEdit}","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"tinenhao"},"content":"     * edited with {@code editMeetingDescriptor}.","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"HakkaNgin"},"content":"    private static Meeting createEditedMeeting(Meeting meetingToEdit, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"tinenhao"},"content":"        assert meetingToEdit !\u003d null;","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"tinenhao"},"content":"        String updatedDescription \u003d editMeetingDescriptor.getDescription().orElse(meetingToEdit.getDescription());","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"HakkaNgin"},"content":"        String updatedDate \u003d editMeetingDescriptor.getDate().orElse(meetingToEdit.getDateAndTime());","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"tinenhao"},"content":"        String updatedLocation \u003d editMeetingDescriptor.getLocation().orElse(meetingToEdit.getLocation());","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"tinenhao"},"content":"        ArrayList\u003cPerson\u003e persons \u003d editMeetingDescriptor.getPeople().orElse(meetingToEdit.getArrayListPersonToMeet());","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"tinenhao"},"content":"        return new Meeting(persons, updatedDescription, updatedDate, updatedLocation);","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"tinenhao"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"tinenhao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"tinenhao"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"tinenhao"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"tinenhao"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"tinenhao"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"tinenhao"},"content":"        if (!(other instanceof EditMeetingCommand)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"tinenhao"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"tinenhao"},"content":"        // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"tinenhao"},"content":"        EditMeetingCommand e \u003d (EditMeetingCommand) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"tinenhao"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"tinenhao"},"content":"                \u0026\u0026 editMeetingDescriptor.equals(e.editMeetingDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"tinenhao"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"tinenhao"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"tinenhao"},"content":"    public static class EditMeetingDescriptor {","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"tinenhao"},"content":"        private String description;","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"tinenhao"},"content":"        private String date;","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"tinenhao"},"content":"        private String location;","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"tinenhao"},"content":"        private ArrayList\u003cPerson\u003e people;","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"tinenhao"},"content":"        public EditMeetingDescriptor() {}","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"tinenhao"},"content":"        /**","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"tinenhao"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"tinenhao"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"tinenhao"},"content":"         */","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"tinenhao"},"content":"        public EditMeetingDescriptor(EditMeetingDescriptor toCopy) {","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"tinenhao"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"tinenhao"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"tinenhao"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"tinenhao"},"content":"            setPeople(toCopy.people);","lastModifiedDate":"2022-10-22"},{"lineNumber":134,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"tinenhao"},"content":"        /**","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"tinenhao"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"tinenhao"},"content":"         */","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"tinenhao"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"tinenhao"},"content":"            return CollectionUtil.isAnyNonNull(description, date, location, people);","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"tinenhao"},"content":"        public void setDescription(String description) {","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"tinenhao"},"content":"            this.description \u003d description;","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"tinenhao"},"content":"        public Optional\u003cString\u003e getDescription() {","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"tinenhao"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"tinenhao"},"content":"        public void setDate(String date) {","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"tinenhao"},"content":"            this.date \u003d date;","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"tinenhao"},"content":"        public Optional\u003cString\u003e getDate() {","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"tinenhao"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"tinenhao"},"content":"        public void setLocation(String location) {","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"tinenhao"},"content":"            this.location \u003d location;","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"tinenhao"},"content":"        public Optional\u003cString\u003e getLocation() {","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"tinenhao"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"tinenhao"},"content":"        public void setPeople(ArrayList\u003cPerson\u003e people) {","lastModifiedDate":"2022-10-22"},{"lineNumber":168,"author":{"gitId":"tinenhao"},"content":"            this.people \u003d people;","lastModifiedDate":"2022-10-22"},{"lineNumber":169,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":170,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":171,"author":{"gitId":"HakkaNgin"},"content":"        public Optional\u003cArrayList\u003cPerson\u003e\u003e getPeople() {","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"HakkaNgin"},"content":"            return Optional.ofNullable(people);","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":175,"author":{"gitId":"tinenhao"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"tinenhao"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"tinenhao"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"tinenhao"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"tinenhao"},"content":"                return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"tinenhao"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":181,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":182,"author":{"gitId":"tinenhao"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"tinenhao"},"content":"            if (!(other instanceof EditMeetingDescriptor)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"tinenhao"},"content":"                return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"tinenhao"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":186,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"tinenhao"},"content":"            // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":188,"author":{"gitId":"tinenhao"},"content":"            EditMeetingDescriptor e \u003d (EditMeetingDescriptor) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":190,"author":{"gitId":"tinenhao"},"content":"            return getDescription().equals(e.getDescription())","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"tinenhao"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"tinenhao"},"content":"                    \u0026\u0026 getLocation().equals(e.getLocation())","lastModifiedDate":"2022-10-22"},{"lineNumber":193,"author":{"gitId":"tinenhao"},"content":"                    \u0026\u0026 getPeople().equals(e.getPeople());","lastModifiedDate":"2022-10-22"},{"lineNumber":194,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":195,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"tinenhao":190,"HakkaNgin":6}},{"path":"src/main/java/seedu/address/logic/commands/FilterMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.MeetingFilterDatePredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":" * Finds and lists all meetings in the application whose description contains the argument keyword.","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"public class FilterMeetingCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"    public static final String COMMAND_WORD \u003d \"filtermeetingsbetween\";","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"    public static final String INVALID_DATE_FORMAT \u003d \"Invalid Date Time Format/Invalid Date Time. \\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"            + \"Please follow the (dd-MM-yyyy HHmm) format and ensure that the date entered is a valid one.\";","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"    public static final String INVALID_DATE_POSITION \u003d \"First date must be before the second date!\";","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all meetings between the given dates \"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"            + \"displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"            + \"Parameters: KEYWORD DATE1 ;;; DATE2\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"            + \"Example: \" + COMMAND_WORD + \" 10-10-2022 0000 ;;; 01-11-2022 0000\";","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"    private final MeetingFilterDatePredicate predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"    public FilterMeetingCommand(MeetingFilterDatePredicate predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"        model.updateFilteredMeetingList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW,","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"                model.getFilteredMeetingList().size()));","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"                || (other instanceof FilterMeetingCommand // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"                \u0026\u0026 predicate.equals(((FilterMeetingCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"GenFusion122":51}},{"path":"src/main/java/seedu/address/logic/commands/FindMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.MeetingContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.util.FindMeetingFunctionalInterface;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":" * Finds and lists all meetings in the application whose description contains the argument keyword.","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"public class FindMeetingCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"     * these are set to public static and final to be used in test","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"     * lambdas/functional interfaces cannot be \"equal\" unless they are the same object","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":"    public static final FindMeetingFunctionalInterface GET_DESCRIPTION \u003d Meeting::getDescription;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":"    public static final FindMeetingFunctionalInterface GET_LOCATION \u003d Meeting::getLocation;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"    public static final FindMeetingFunctionalInterface GET_PEOPLE \u003d Meeting::getPeopleToMeetAsString;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"    public static final String COMMAND_WORD \u003d \"findmeeting\";","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"    public static final String FIND_AT \u003d \"/at\";","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"    public static final String FIND_DESCRIPTION \u003d \"/named\";","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"    public static final String FIND_WITH \u003d \"/with\";","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"            + \": Finds all meetings matching the description/location/people \"","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"            + \"the specified keywords (not case sensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"            + \"Parameters: /at [KEYWORDS] or /named [KEYWORDS] or /with [KEYWORDS] \\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"            + \"Example 1: \" + COMMAND_WORD + \" /at utown\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"            + \"Example 2: \" + COMMAND_WORD + \" /named CS2103\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"            + \"Example 3: \" + COMMAND_WORD + \" /with John Doe\\n\";","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"    private final MeetingContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"    public FindMeetingCommand(MeetingContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"GenFusion122"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"GenFusion122"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"GenFusion122"},"content":"        model.updateFilteredMeetingList(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"GenFusion122"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW,","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"GenFusion122"},"content":"                model.getFilteredMeetingList().size()));","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"GenFusion122"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"GenFusion122"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"GenFusion122"},"content":"                || (other instanceof FindMeetingCommand // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"GenFusion122"},"content":"                \u0026\u0026 predicate.equals(((FindMeetingCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"GenFusion122":63,"HakkaNgin":3}},{"path":"src/main/java/seedu/address/logic/commands/FindTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.person.TagsContainKeywordPredicate;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":" * Finds and lists all persons in address book whose tag contains the argument keyword.","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"public class FindTagCommand extends Command {","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"    public static final String COMMAND_WORD \u003d \"findtag\";","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose tags contain \"","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"            + \"Parameters: KEYWORD\\n\"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"            + \"Example: \" + COMMAND_WORD + \" family \";","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"    private final TagsContainKeywordPredicate predicate;","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"    public FindTagCommand(TagsContainKeywordPredicate predicate) {","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"tinenhao"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"tinenhao"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"tinenhao"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"tinenhao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"tinenhao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"tinenhao"},"content":"                || (other instanceof FindTagCommand // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"tinenhao"},"content":"                \u0026\u0026 predicate.equals(((FindTagCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"tinenhao":42}},{"path":"src/main/java/seedu/address/logic/commands/ListMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"public class ListMeetingCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"    public static final String COMMAND_WORD \u003d \"listmeeting\";","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all meetings\";","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"        List\u003cMeeting\u003e list \u003d model.getFilteredMeetingList().stream().collect(Collectors.toList());","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"        list.forEach(str::append);","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"        return new CommandResult(MESSAGE_SUCCESS + \"\\n\" + str);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"darrentde":35}},{"path":"src/main/java/seedu/address/logic/commands/SortMeetingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":" * Sorts meetings by date in ascending or descending order","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"public class SortMeetingsCommand extends Command {","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"    public static final String COMMAND_WORD \u003d \"sortmeetings\";","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"    public static final String ASCENDING_ARGS \u003d \"ASC\";","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"    public static final String DESCENDING_ARGS \u003d \"DESC\";","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"            + \": Sorts the meeting list based on date in ascending or descending. Not Case Sensitive.\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"            + \"Parameters: asc (for ascending), desc (for descending)\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"            + \"Example: \" + COMMAND_WORD + \" asc\";","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"    private final boolean isInAscending;","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"    public SortMeetingsCommand(boolean isInAscending) {","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"        this.isInAscending \u003d isInAscending;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"        model.sortMeetingListByDate(isInAscending);","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"        return new CommandResult(Messages.MESSAGE_MEETINGS_SORTED);","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"                || (other instanceof SortMeetingsCommand // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"                \u0026\u0026 isInAscending \u003d\u003d ((SortMeetingsCommand) other).isInAscending); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"GenFusion122":46}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"     * @return a new command to add contact","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"HakkaNgin":1,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/AddPersonToMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.commands.AddPersonToMeetingCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":" * Parses input arguments and creates a new CreateMeetingCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"public class AddPersonToMeetingCommandParser implements Parser\u003cAddPersonToMeetingCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateMeetingCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"     * and returns a CreateMeetingCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"     * @return a command to create a new meeting","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"    public AddPersonToMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonToMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"        String meetingInfo \u003d trimmedArgs;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"        return new AddPersonToMeetingCommand(meetingInfo);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"tinenhao":31}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.AddPersonToMeetingCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.CreateMeetingCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.DeletePersonFromMeetingCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.EditMeetingCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.FilterMeetingCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.FindTagCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.ListMeetingCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.SortMeetingsCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"tinenhao"},"content":"        case FindTagCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"tinenhao"},"content":"            return new FindTagCommandParser().parse(arguments);","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"HakkaNgin"},"content":"        case CreateMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"HakkaNgin"},"content":"            return new CreateMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"tinenhao"},"content":"        case EditMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"tinenhao"},"content":"            return new EditMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"tinenhao"},"content":"        case AddPersonToMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"tinenhao"},"content":"            return new AddPersonToMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"tinenhao"},"content":"        case DeletePersonFromMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"tinenhao"},"content":"            return new DeletePersonFromMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":96,"author":{"gitId":"GenFusion122"},"content":"        case FindMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"GenFusion122"},"content":"            return new FindMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"darrentde"},"content":"        case ListMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"darrentde"},"content":"            return new ListMeetingCommand();","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"GenFusion122"},"content":"        case FilterMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"GenFusion122"},"content":"            return new FilterMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"GenFusion122"},"content":"        case SortMeetingsCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"GenFusion122"},"content":"            return new SortMeetingsCommandParser().parse(arguments);","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"HakkaNgin"},"content":"        case DeleteMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"HakkaNgin"},"content":"            return new DeleteMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"darrentde":3,"GenFusion122":9,"tinenhao":12,"HakkaNgin":16,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"dd/\");","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tinenhao":3,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/CreateMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"import java.util.Locale;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.CreateMeetingCommand;","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.util.DateTimeProcessor;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":" * Parses input arguments and creates a new CreateMeetingCommand object","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":"public class CreateMeetingCommandParser implements Parser\u003cCreateMeetingCommand\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\", Locale.UK)","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"HakkaNgin"},"content":"        .withResolverStyle(ResolverStyle.SMART);","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\", Locale.UK)","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":"        .withResolverStyle(ResolverStyle.SMART);","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"    public static final DateTimeProcessor DATE_TIME_VALIDATOR \u003d new DateTimeProcessor(DATE_FORMATTER, TIME_FORMATTER);","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateMeetingCommand","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"HakkaNgin"},"content":"     * and returns a CreateMeetingCommand object for execution.","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"     * @return a command to create a new meeting","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"HakkaNgin"},"content":"    public CreateMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"HakkaNgin"},"content":"        String meetingInfo \u003d args.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"HakkaNgin"},"content":"        if (meetingInfo.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"HakkaNgin"},"content":"            throw new ParseException(","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"HakkaNgin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"HakkaNgin"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"HakkaNgin"},"content":"            String[] newMeetingInformation \u003d meetingInfo.split(\";;;\");","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"HakkaNgin"},"content":"            String[] peopleToMeet \u003d newMeetingInformation[0].strip().split(\"}}\");","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"HakkaNgin"},"content":"            String meetingTitle \u003d newMeetingInformation[1].strip();","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"HakkaNgin"},"content":"            String meetingDateAndTime \u003d newMeetingInformation[2].strip();","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"HakkaNgin"},"content":"            String meetingLocation \u003d newMeetingInformation[3].strip();","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"HakkaNgin"},"content":"            if ((Objects.equals(meetingTitle, \"\")) || (Objects.equals(meetingLocation, \"\"))) {","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"HakkaNgin"},"content":"                throw new ParseException(CreateMeetingCommand.INCORRECT_NUMBER_OF_ARGUMENTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"HakkaNgin"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"HakkaNgin"},"content":"            String processedMeetingDateAndTime \u003d DATE_TIME_VALIDATOR.processDateTime(meetingDateAndTime);","lastModifiedDate":"2022-10-29"},{"lineNumber":51,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":52,"author":{"gitId":"HakkaNgin"},"content":"            return new CreateMeetingCommand(peopleToMeet, meetingTitle, processedMeetingDateAndTime, meetingLocation);","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"HakkaNgin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"HakkaNgin"},"content":"            throw new ParseException(CreateMeetingCommand.INCORRECT_NUMBER_OF_ARGUMENTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"HakkaNgin"},"content":"        } catch (java.text.ParseException e) {","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"HakkaNgin"},"content":"            throw new ParseException(String.format(CreateMeetingCommand.INVALID_DATE_AND_TIME_FORMAT, e.getMessage()));","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"HakkaNgin":63}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":"     * @return A command to delete a contact","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"HakkaNgin":1,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"public class DeleteMeetingCommandParser implements Parser\u003cDeleteMeetingCommand\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMeetingCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"     * and returns a DeleteMeetingCommand object for execution.","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":"     * @return A command to delete a Meeting","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"HakkaNgin"},"content":"    public DeleteMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"            return new DeleteMeetingCommand(index);","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"HakkaNgin"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"HakkaNgin":30}},{"path":"src/main/java/seedu/address/logic/parser/DeletePersonFromMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.commands.DeletePersonFromMeetingCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":" * Parses input arguments and creates a new CreateMeetingCommand object","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"public class DeletePersonFromMeetingCommandParser implements Parser\u003cDeletePersonFromMeetingCommand\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateMeetingCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"     * and returns a CreateMeetingCommand object for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"     * @return a command to create a new meeting","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"    public DeletePersonFromMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonFromMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"        String meetingInfo \u003d trimmedArgs;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"        return new DeletePersonFromMeetingCommand(meetingInfo);","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"tinenhao":31}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"     * @return a new command to edit a contact","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"HakkaNgin":1,"-":82}},{"path":"src/main/java/seedu/address/logic/parser/EditMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.logic.parser.CreateMeetingCommandParser.DATE_TIME_VALIDATOR;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.commands.EditMeetingCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":" * Parses input arguments and creates a new EditMeetingCommand object","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"public class EditMeetingCommandParser implements Parser\u003cEditMeetingCommand\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"     * Parses the given {@code String} of arguments in the context of the EditMeetingCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"     * and returns an EditMeetingCommand object for execution.","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"     * @return a new command to edit a contact","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"    public EditMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_DATE, PREFIX_LOCATION);","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"        Index index;","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"tinenhao"},"content":"        try {","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"tinenhao"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"tinenhao"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"tinenhao"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditMeetingCommand.MESSAGE_USAGE),","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"tinenhao"},"content":"                     pe);","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"tinenhao"},"content":"        EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"tinenhao"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"tinenhao"},"content":"            editMeetingDescriptor.setDescription(ParserUtil","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"tinenhao"},"content":"                    .parseMeetingDetails(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"tinenhao"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"HakkaNgin"},"content":"            String processedEditedDateAndTime;","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"HakkaNgin"},"content":"            try {","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"HakkaNgin"},"content":"                processedEditedDateAndTime \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"HakkaNgin"},"content":"                    DATE_TIME_VALIDATOR.processDateTime(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"HakkaNgin"},"content":"            } catch (java.text.ParseException e) {","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"HakkaNgin"},"content":"                throw new ParseException(e.getMessage());","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"HakkaNgin"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"HakkaNgin"},"content":"            editMeetingDescriptor.setDate(processedEditedDateAndTime);","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"tinenhao"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"tinenhao"},"content":"            editMeetingDescriptor.setLocation(ParserUtil","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"tinenhao"},"content":"                    .parseMeetingDetails(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"tinenhao"},"content":"        if (!editMeetingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"tinenhao"},"content":"            throw new ParseException(EditMeetingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"tinenhao"},"content":"        return new EditMeetingCommand(index, editMeetingDescriptor);","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"tinenhao":57,"HakkaNgin":10}},{"path":"src/main/java/seedu/address/logic/parser/FilterMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.commands.FilterMeetingCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.MeetingFilterDatePredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.util.DateTimeConverter;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":" * Parses input arguments and creates a new FilterMeetingCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"public class FilterMeetingCommandParser implements Parser\u003cFilterMeetingCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"     * Parses {@param args} into a command and returns it.","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"     * @param args userInput\u0027s arguments","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"     * @return a new command","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"     * @throws ParseException if {@param args} does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime afterDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime beforeDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\";;;\");","lastModifiedDate":"2022-10-30"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"        if (!trimmedArgs.contains(\";;;\") || nameKeywords.length \u003d\u003d 0) {","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"            afterDate \u003d DateTimeConverter.stringToLocalDateTime(nameKeywords[0].trim());","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"            beforeDate \u003d DateTimeConverter.stringToLocalDateTime(nameKeywords[1].trim());","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterMeetingCommand.INVALID_DATE_FORMAT));","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"        if (beforeDate.isBefore(afterDate)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterMeetingCommand.INVALID_DATE_POSITION));","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"        return new FilterMeetingCommand(new MeetingFilterDatePredicate(afterDate, beforeDate));","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"GenFusion122":49}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":"     * @return A new command to find a contact","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"HakkaNgin":1,"-":33}},{"path":"src/main/java/seedu/address/logic/parser/FindMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.logic.commands.FindMeetingCommand.GET_DESCRIPTION;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.logic.commands.FindMeetingCommand.GET_LOCATION;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.logic.commands.FindMeetingCommand.GET_PEOPLE;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.MeetingContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.util.FindMeetingFunctionalInterface;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":" * Parses input arguments and creates a new FindMeetingCommand object","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"public class FindMeetingCommandParser implements Parser\u003cFindMeetingCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"     * Parses the given {@code String} of arguments in the context of the FindMeetingCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"     * and returns a FindMeetingCommand object for execution.","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"     * @param args arguments of the command, IE the user input","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"     * @return A new command to find a contact","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"        String parameter \u003d nameKeywords[0];","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"        ArrayList\u003cString\u003e stringList \u003d new ArrayList\u003c\u003e(Arrays.asList(nameKeywords));","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"        stringList.remove(0);","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"        return new FindMeetingCommand(new MeetingContainsKeywordsPredicate(stringList, verifyParameters(parameter)));","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"     * verifies the parameters and returns the appropriate meeting field","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"     * @param parameter user input to be parsed","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"     * @return returns a FindMeetingFunctionalInterface which encapsulates a method","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"     * @throws ParseException when parameter is wrong","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"    private FindMeetingFunctionalInterface verifyParameters(String parameter) throws ParseException {","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"        switch (parameter) {","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"        case FindMeetingCommand.FIND_AT:","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"HakkaNgin"},"content":"            return GET_LOCATION;","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"GenFusion122"},"content":"        case FindMeetingCommand.FIND_DESCRIPTION:","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"HakkaNgin"},"content":"            return GET_DESCRIPTION;","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"GenFusion122"},"content":"        case FindMeetingCommand.FIND_WITH:","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"HakkaNgin"},"content":"            return GET_PEOPLE;","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"GenFusion122"},"content":"        default:","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"GenFusion122"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"GenFusion122"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"GenFusion122":58,"HakkaNgin":6}},{"path":"src/main/java/seedu/address/logic/parser/FindTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.commands.FindTagCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.person.TagsContainKeywordPredicate;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"public class FindTagCommandParser implements Parser\u003cFindTagCommand\u003e {","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"     * and returns a FindTagCommand object for execution.","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"     * @return A new command to find a contact","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"    public FindTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"        return new FindTagCommand(new TagsContainKeywordPredicate(trimmedArgs));","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"tinenhao":30}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"     * @return a new command","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"    Command parse(String userInput) throws ParseException;","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"HakkaNgin":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"    public static final String MESSAGE_INVALID_NON_EMPTY \u003d \"Message must not be blank\";","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"tinenhao"},"content":"     * Leading and trailing whitespaces will be trimmed","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"tinenhao"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"tinenhao"},"content":"     * @param info","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"tinenhao"},"content":"     * @return trimmed info","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"tinenhao"},"content":"     * @throws ParseException if the given string only contains white spaces","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"tinenhao"},"content":"    public static String parseMeetingDetails(String info) throws ParseException {","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"tinenhao"},"content":"        requireNonNull(info);","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"tinenhao"},"content":"        String trimmedInfo \u003d info.trim();","lastModifiedDate":"2022-11-02"},{"lineNumber":65,"author":{"gitId":"tinenhao"},"content":"        if (info.equals(\"\")) {","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"tinenhao"},"content":"            throw new ParseException(MESSAGE_INVALID_NON_EMPTY);","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"tinenhao"},"content":"        return trimmedInfo;","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":70,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"GenFusion122":1,"tinenhao":18,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/SortMeetingsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.commands.SortMeetingsCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":" * Parses input argument and creates a new SortMeetingCommand object","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"public class SortMeetingsCommandParser implements Parser\u003cSortMeetingsCommand\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"     * @param userInput asc or desc depending user input","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"     * @return a new command","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"    public Command parse(String userInput) throws ParseException {","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"        String upperCaseInput \u003d userInput.strip().toUpperCase();","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"        if (upperCaseInput.equals(SortMeetingsCommand.ASCENDING_ARGS)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"            return new SortMeetingsCommand(true);","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"        } else if (upperCaseInput.equals(SortMeetingsCommand.DESCENDING_ARGS)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"            return new SortMeetingsCommand(false);","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"        } else {","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortMeetingsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"GenFusion122":32}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"//import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"//import seedu.address.model.meeting.UniqueMeetingList;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"HakkaNgin"},"content":"    // May need to change this to iterable list","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":113,"author":{"gitId":"darrentde"},"content":"    //    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"darrentde"},"content":"    //    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"darrentde"},"content":"    //        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"darrentde"},"content":"    //    }","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"darrentde":6,"HakkaNgin":3,"-":120}},{"path":"src/main/java/seedu/address/model/MeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.meeting.UniqueMeetingList;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"public class MeetingList implements ReadOnlyMeetingList {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"    // May need to change this to iterable list","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"    private final UniqueMeetingList meetings;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"    /*","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"     *   among constructors.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"    {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"        meetings \u003d new UniqueMeetingList();","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"    public MeetingList() {}","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"    public MeetingList(ReadOnlyMeetingList toBeCopied) {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"        this();","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"darrentde"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"darrentde"},"content":"    public void resetData(ReadOnlyMeetingList newData) {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"darrentde"},"content":"        setMeetings(newData.getMeetingList());","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"darrentde"},"content":"    //// meeting-level operations","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"darrentde"},"content":"     * Returns true if a Meeting with the same person to meet","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"darrentde"},"content":"     * and date and time as {@code meeting} exists in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"darrentde"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"darrentde"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"darrentde"},"content":"        return meetings.contains(meeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"darrentde"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"darrentde"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"darrentde"},"content":"    public void addMeeting(Meeting newMeeting) {","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"darrentde"},"content":"        this.meetings.add(newMeeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"tinenhao"},"content":"     * Adds a meeting to the meeting list.","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"tinenhao"},"content":"     * The meeting must not already exist in the meeting list.","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"tinenhao"},"content":"    public void addMeeting(Meeting newMeeting, int idx) {","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"tinenhao"},"content":"        this.meetings.add(newMeeting, idx);","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"darrentde"},"content":"     * Replaces the given Meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"darrentde"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"darrentde"},"content":"     * {@code editedMeeting} must not be the same","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"darrentde"},"content":"     * as another existing Meeting in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"darrentde"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"darrentde"},"content":"        requireNonNull(editedMeeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"darrentde"},"content":"        meetings.setMeeting(target, editedMeeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"darrentde"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"darrentde"},"content":"        this.meetings.setMeetings(meetings);","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"darrentde"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"darrentde"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"darrentde"},"content":"    public void removeMeeting(Meeting key) {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"darrentde"},"content":"        meetings.remove(key);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"GenFusion122"},"content":"     * calls meetings.sortByDate()","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"GenFusion122"},"content":"     * @param isInAscending sorts in ascending if true, descending otherwise","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"GenFusion122"},"content":"    public void sortByDate(boolean isInAscending) {","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"GenFusion122"},"content":"        meetings.sortByDate(isInAscending);","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"darrentde"},"content":"    // util methods","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"darrentde"},"content":"    //    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"darrentde"},"content":"    //    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"darrentde"},"content":"    //        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"darrentde"},"content":"    ////        TODO: refine later","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"darrentde"},"content":"    //    }","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"darrentde"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"darrentde"},"content":"        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"darrentde"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"darrentde"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"darrentde"},"content":"                || (other instanceof MeetingList // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"darrentde"},"content":"                \u0026\u0026 meetings.equals(((MeetingList) other).meetings));","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"darrentde"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"darrentde"},"content":"        return meetings.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":129,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"darrentde":112,"GenFusion122":9,"tinenhao":8}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"    Predicate\u003cMeeting\u003e PREDICATE_SHOW_ALL_MEETINGS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"HakkaNgin"},"content":"     * Returns the AddressBook","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"HakkaNgin"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"tinenhao"},"content":"     * Returns an unmodifiable view of the filtered meeting list","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"tinenhao"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"HakkaNgin"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"HakkaNgin"},"content":"     * Creates a new meeting with a person in the address book.","lastModifiedDate":"2022-10-02"},{"lineNumber":107,"author":{"gitId":"HakkaNgin"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"HakkaNgin"},"content":"     * @param peopleToMeet the contacts in the address book to create a meeting with","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"HakkaNgin"},"content":"     * @param meetingTitle the title/ description of meeting","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"HakkaNgin"},"content":"     * @param meetingDateAndTime the date and time of meeting","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"HakkaNgin"},"content":"     * @param meetingLocation the location of meeting","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"HakkaNgin"},"content":"     * @return a new meeting","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"HakkaNgin"},"content":"    Meeting createNewMeeting(ArrayList\u003cPerson\u003e peopleToMeet, String meetingTitle,","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"HakkaNgin"},"content":"                             String meetingDateAndTime, String meetingLocation);","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":117,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"HakkaNgin"},"content":"     * Checks if a meeting exists in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"HakkaNgin"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"HakkaNgin"},"content":"     * @param meeting the new meeting to check","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"HakkaNgin"},"content":"    boolean hasMeeting(Meeting meeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":125,"author":{"gitId":"HakkaNgin"},"content":"     * Adds a new meeting to the address book.","lastModifiedDate":"2022-10-02"},{"lineNumber":126,"author":{"gitId":"HakkaNgin"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":127,"author":{"gitId":"HakkaNgin"},"content":"     * @param newMeeting the new meeting to add to address book","lastModifiedDate":"2022-10-02"},{"lineNumber":128,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":129,"author":{"gitId":"HakkaNgin"},"content":"    void addMeeting(Meeting newMeeting);","lastModifiedDate":"2022-10-02"},{"lineNumber":130,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":131,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"tinenhao"},"content":"     * Adds a new meeting to the address book to the specified index.","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"tinenhao"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"tinenhao"},"content":"     * @param newMeeting the new meeting to add to address book","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"tinenhao"},"content":"    void addMeeting(Meeting newMeeting, int idx);","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"tinenhao"},"content":"    /*","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"tinenhao"},"content":"     * Replaces the given meeting {@code target} with {@code editedMeeting}.","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"tinenhao"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"tinenhao"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as","lastModifiedDate":"2022-10-18"},{"lineNumber":142,"author":{"gitId":"tinenhao"},"content":"     * another existing meeting in the address book.","lastModifiedDate":"2022-10-18"},{"lineNumber":143,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"tinenhao"},"content":"    void setMeeting(Meeting target, Meeting editedMeeting);","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"GenFusion122"},"content":"     * Updates the filter of the filtered meeting list to filter by implementation.","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"GenFusion122"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"GenFusion122"},"content":"     * @throws NullPointerException if {@param predicate} is null.","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"GenFusion122"},"content":"    void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"tinenhao"},"content":"    void deleteMeeting(Meeting target);","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"darrentde"},"content":"    void setMeetingList(ReadOnlyMeetingList meetingList);","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"darrentde"},"content":"    ReadOnlyMeetingList getMeetingList();","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"darrentde"},"content":"    Path getMeetingListFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"darrentde"},"content":"    void setMeetingListFilePath(Path meetingListFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"GenFusion122"},"content":"    void sortMeetingListByDate(boolean isInAscending);","lastModifiedDate":"2022-10-19"},{"lineNumber":164,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"darrentde":12,"GenFusion122":8,"tinenhao":22,"HakkaNgin":39,"-":84}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"mqchua"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"mqchua"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"mqchua"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"//import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"mqchua"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"    private final MeetingList meetingList;","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"    private final FilteredList\u003cMeeting\u003e filteredMeetings;","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"darrentde"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyMeetingList meetingList, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"darrentde"},"content":"        requireAllNonNull(addressBook, meetingList, userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"darrentde"},"content":"        this.meetingList \u003d new MeetingList(meetingList);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"darrentde"},"content":"        filteredMeetings \u003d new FilteredList\u003c\u003e(this.meetingList.getMeetingList());","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"darrentde"},"content":"        this(new AddressBook(), new MeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"mqchua"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"mqchua"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"mqchua"},"content":"                .map(Tag::new)","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"mqchua"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"darrentde"},"content":"    public Path getMeetingListFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"darrentde"},"content":"        return userPrefs.getMeetingListFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":156,"author":{"gitId":"HakkaNgin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Meetings \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-09-28"},{"lineNumber":157,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"darrentde"},"content":"    public void setMeetingList(ReadOnlyMeetingList meetingList) {","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"darrentde"},"content":"        this.meetingList.resetData(meetingList);","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"tinenhao"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"tinenhao"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"tinenhao"},"content":"        requireNonNull(editedMeeting);","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"tinenhao"},"content":"        meetingList.setMeeting(target, editedMeeting);","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"tinenhao"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"tinenhao"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"tinenhao"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"tinenhao"},"content":"        return meetingList.hasMeeting(meeting);","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"darrentde"},"content":"    public void setMeetingListFilePath(Path meetingListFilePath) {","lastModifiedDate":"2022-10-14"},{"lineNumber":177,"author":{"gitId":"darrentde"},"content":"        requireNonNull(meetingListFilePath);","lastModifiedDate":"2022-10-14"},{"lineNumber":178,"author":{"gitId":"darrentde"},"content":"        userPrefs.setMeetingListFilePath(meetingListFilePath);","lastModifiedDate":"2022-10-14"},{"lineNumber":179,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":180,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":181,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"darrentde"},"content":"    public ReadOnlyMeetingList getMeetingList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"darrentde"},"content":"        return meetingList;","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"HakkaNgin"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":187,"author":{"gitId":"HakkaNgin"},"content":"    public Meeting createNewMeeting(ArrayList\u003cPerson\u003e peopleToMeet, String meetingTitle,","lastModifiedDate":"2022-10-09"},{"lineNumber":188,"author":{"gitId":"HakkaNgin"},"content":"                                    String processedMeetingDateAndTime, String meetingLocation) {","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"HakkaNgin"},"content":"        return new Meeting(peopleToMeet, meetingTitle, processedMeetingDateAndTime, meetingLocation);","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":191,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":192,"author":{"gitId":"HakkaNgin"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":193,"author":{"gitId":"HakkaNgin"},"content":"    public void addMeeting(Meeting newMeeting) {","lastModifiedDate":"2022-10-02"},{"lineNumber":194,"author":{"gitId":"darrentde"},"content":"        meetingList.addMeeting(newMeeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"HakkaNgin"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-02"},{"lineNumber":196,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":197,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":198,"author":{"gitId":"tinenhao"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":199,"author":{"gitId":"tinenhao"},"content":"    public void addMeeting(Meeting newMeeting, int idx) {","lastModifiedDate":"2022-10-21"},{"lineNumber":200,"author":{"gitId":"tinenhao"},"content":"        meetingList.addMeeting(newMeeting, idx);","lastModifiedDate":"2022-10-21"},{"lineNumber":201,"author":{"gitId":"tinenhao"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-21"},{"lineNumber":202,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":203,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":205,"author":{"gitId":"GenFusion122"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2022-10-09"},{"lineNumber":206,"author":{"gitId":"GenFusion122"},"content":"        requireAllNonNull(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":207,"author":{"gitId":"GenFusion122"},"content":"        filteredMeetings.setPredicate(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":208,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":209,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":210,"author":{"gitId":"tinenhao"},"content":"    public void deleteMeeting(Meeting target) {","lastModifiedDate":"2022-10-10"},{"lineNumber":211,"author":{"gitId":"darrentde"},"content":"        meetingList.removeMeeting(target);","lastModifiedDate":"2022-10-12"},{"lineNumber":212,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":215,"author":{"gitId":"GenFusion122"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":216,"author":{"gitId":"GenFusion122"},"content":"        return filteredMeetings;","lastModifiedDate":"2022-10-09"},{"lineNumber":217,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":218,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":219,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":220,"author":{"gitId":"GenFusion122"},"content":"     * sorts the model\u0027s meeting list","lastModifiedDate":"2022-10-19"},{"lineNumber":221,"author":{"gitId":"GenFusion122"},"content":"     * @param isInAscending if true the list is set to ascending order, else descending","lastModifiedDate":"2022-10-19"},{"lineNumber":222,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":223,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":224,"author":{"gitId":"GenFusion122"},"content":"    public void sortMeetingListByDate(boolean isInAscending) {","lastModifiedDate":"2022-10-19"},{"lineNumber":225,"author":{"gitId":"GenFusion122"},"content":"        this.meetingList.sortByDate(isInAscending);","lastModifiedDate":"2022-10-19"},{"lineNumber":226,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":227,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":228,"author":{"gitId":"HakkaNgin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Others \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":229,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":245,"author":{"gitId":"darrentde"},"content":"                \u0026\u0026 meetingList.equals(other.meetingList)","lastModifiedDate":"2022-10-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":247,"author":{"gitId":"darrentde"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-10-12"},{"lineNumber":248,"author":{"gitId":"darrentde"},"content":"                \u0026\u0026 filteredMeetings.equals(other.filteredMeetings);","lastModifiedDate":"2022-10-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"darrentde":37,"mqchua":8,"GenFusion122":21,"tinenhao":22,"HakkaNgin":16,"-":147}},{"path":"src/main/java/seedu/address/model/ReadOnlyMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":" * Unmodifiable view of a meeting list","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"public interface ReadOnlyMeetingList {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"     * Returns an unmodifiable view of the meetings list.","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"     * This list will not contain any duplicate meetings.","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"darrentde":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"    Path getMeetingListFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"darrentde":1,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"    private Path meetingListFilePath \u003d Paths.get(\"data\" , \"meetinglist.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"darrentde"},"content":"        setMeetingListFilePath(newUserPrefs.getMeetingListFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"darrentde"},"content":"    public Path getMeetingListFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"darrentde"},"content":"        return meetingListFilePath;","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"darrentde"},"content":"    public void setMeetingListFilePath(Path meetingListFilePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"darrentde"},"content":"        requireNonNull(meetingListFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"darrentde"},"content":"        this.meetingListFilePath \u003d meetingListFilePath;","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"darrentde"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"darrentde"},"content":"                \u0026\u0026 meetingListFilePath.equals(o.meetingListFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"darrentde"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, meetingListFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"darrentde"},"content":"        sb.append(\"\\nLocal meeting list storage location : \" + meetingListFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"darrentde":15,"-":85}},{"path":"src/main/java/seedu/address/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.CreateMeetingCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.exceptions.ImpreciseMatchException;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.util.DateTimeConverter;","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"HakkaNgin"},"content":" * Class for a new Meeting","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"public class Meeting implements Comparable\u003cMeeting\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"    private final ArrayList\u003cPerson\u003e peopleToMeetArray;","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"    private final UniquePersonList peopleToMeetList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"HakkaNgin"},"content":"    private String meetingDescription;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"HakkaNgin"},"content":"    private String processedMeetingDateAndTime;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"HakkaNgin"},"content":"    private String meetingLocation;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"HakkaNgin"},"content":"     * Constructor for a new Meeting","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"HakkaNgin"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"HakkaNgin"},"content":"     * @param peopleToMeetArray the people whom the user is meeting with","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"HakkaNgin"},"content":"     * @param meetingTitle the description/ title of the meeting","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"HakkaNgin"},"content":"     * @param processedMeetingDateAndTime the date and time of meeting","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"HakkaNgin"},"content":"     * @param meetingLocation the location of the meeting","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"HakkaNgin"},"content":"    public Meeting(ArrayList\u003cPerson\u003e peopleToMeetArray, String meetingTitle,","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"HakkaNgin"},"content":"                   String processedMeetingDateAndTime, String meetingLocation) {","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"HakkaNgin"},"content":"        this.peopleToMeetArray \u003d peopleToMeetArray;","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"HakkaNgin"},"content":"        this.peopleToMeetList.setPersons(peopleToMeetArray);","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"HakkaNgin"},"content":"        this.meetingDescription \u003d meetingTitle;","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"HakkaNgin"},"content":"        this.processedMeetingDateAndTime \u003d processedMeetingDateAndTime;","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"HakkaNgin"},"content":"        this.meetingLocation \u003d meetingLocation;","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"HakkaNgin"},"content":"     * converts string array of the names of people to meet to array of Person objects","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"tinenhao"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"HakkaNgin"},"content":"     * @param model the model to implement","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"tinenhao"},"content":"     * @param peopleToMeet the array of people names","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"HakkaNgin"},"content":"    public static ArrayList\u003cPerson\u003e convertNameToPerson(Model model, String[] peopleToMeet)","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"tinenhao"},"content":"            throws PersonNotFoundException, DuplicatePersonException {","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"HakkaNgin"},"content":"        if (Objects.equals(peopleToMeet[0], \"\")) {","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"HakkaNgin"},"content":"            throw new PersonNotFoundException(PersonNotFoundException.NO_PERSON_DETECTED);","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"tinenhao"},"content":"        if (checkDuplicates(peopleToMeet)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"tinenhao"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"tinenhao"},"content":"        ArrayList\u003cPerson\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"tinenhao"},"content":"        // Takes in the name of the address book contact, split by words in the name","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"tinenhao"},"content":"        for (String personName: peopleToMeet) {","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"HakkaNgin"},"content":"            String strippedPersonName \u003d personName.strip();","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"HakkaNgin"},"content":"            String[] nameKeywords \u003d strippedPersonName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-30"},{"lineNumber":74,"author":{"gitId":"HakkaNgin"},"content":"            NameContainsKeywordsPredicate personNamePredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"HakkaNgin"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords));","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"tinenhao"},"content":"            // updates the list of persons in address book based on predicate","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"tinenhao"},"content":"            model.updateFilteredPersonList(personNamePredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"tinenhao"},"content":"            ObservableList\u003cPerson\u003e listOfPeople \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"GenFusion122"},"content":"            //predicate returns empty list, name does not match anyone","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"tinenhao"},"content":"            if (listOfPeople.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"tinenhao"},"content":"                model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"HakkaNgin"},"content":"                throw new PersonNotFoundException(String.format(PersonNotFoundException.PERSON_NOT_FOUND,","lastModifiedDate":"2022-10-30"},{"lineNumber":85,"author":{"gitId":"HakkaNgin"},"content":"                strippedPersonName));","lastModifiedDate":"2022-10-30"},{"lineNumber":86,"author":{"gitId":"tinenhao"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"GenFusion122"},"content":"            output.add(findExactMatch(listOfPeople, personName));","lastModifiedDate":"2022-10-30"},{"lineNumber":88,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":89,"author":{"gitId":"HakkaNgin"},"content":"        // resets the list of persons after every search","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"HakkaNgin"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"tinenhao"},"content":"        return output;","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":95,"author":{"gitId":"GenFusion122"},"content":"     * helper function for the convertNameToPerson function","lastModifiedDate":"2022-10-30"},{"lineNumber":96,"author":{"gitId":"GenFusion122"},"content":"     * essentially iterates through a list of people and return the correct person","lastModifiedDate":"2022-10-30"},{"lineNumber":97,"author":{"gitId":"GenFusion122"},"content":"     * @param listOfPeople list of Persons to iterate through","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"GenFusion122"},"content":"     * @param personName person to find","lastModifiedDate":"2022-10-30"},{"lineNumber":99,"author":{"gitId":"GenFusion122"},"content":"     * @return returns the correct Person object","lastModifiedDate":"2022-10-30"},{"lineNumber":100,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":101,"author":{"gitId":"GenFusion122"},"content":"    private static Person findExactMatch(ObservableList\u003cPerson\u003e listOfPeople, String personName) {","lastModifiedDate":"2022-10-30"},{"lineNumber":102,"author":{"gitId":"GenFusion122"},"content":"        // guard clause","lastModifiedDate":"2022-10-30"},{"lineNumber":103,"author":{"gitId":"GenFusion122"},"content":"        if (listOfPeople.size() \u003d\u003d 1) {","lastModifiedDate":"2022-10-30"},{"lineNumber":104,"author":{"gitId":"GenFusion122"},"content":"            return listOfPeople.get(0);","lastModifiedDate":"2022-10-30"},{"lineNumber":105,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":106,"author":{"gitId":"GenFusion122"},"content":"        // if guard fails, then iterate through whole list to find and return p","lastModifiedDate":"2022-10-30"},{"lineNumber":107,"author":{"gitId":"GenFusion122"},"content":"        for (Person p : listOfPeople) {","lastModifiedDate":"2022-10-30"},{"lineNumber":108,"author":{"gitId":"GenFusion122"},"content":"            if (p.getName().fullName.strip().equalsIgnoreCase(personName.strip())) {","lastModifiedDate":"2022-11-02"},{"lineNumber":109,"author":{"gitId":"GenFusion122"},"content":"                return p;","lastModifiedDate":"2022-10-30"},{"lineNumber":110,"author":{"gitId":"GenFusion122"},"content":"            }","lastModifiedDate":"2022-10-30"},{"lineNumber":111,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":112,"author":{"gitId":"GenFusion122"},"content":"        throw new ImpreciseMatchException(personName);","lastModifiedDate":"2022-11-02"},{"lineNumber":113,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":114,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"tinenhao"},"content":"     * checks for duplicate names in array","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"tinenhao"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"tinenhao"},"content":"     * @param names list of people","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"tinenhao"},"content":"    public static boolean checkDuplicates(String[] names) {","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"tinenhao"},"content":"        Set\u003cString\u003e set \u003d new HashSet\u003cString\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"tinenhao"},"content":"        for (String i : names) {","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"tinenhao"},"content":"            if (set.contains(i.strip())) {","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"tinenhao"},"content":"                return true;","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"tinenhao"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"tinenhao"},"content":"            set.add(i.strip());","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"tinenhao"},"content":"        return false;","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":131,"author":{"gitId":"HakkaNgin"},"content":"     * modifies the location of the meeting","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"HakkaNgin"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":133,"author":{"gitId":"HakkaNgin"},"content":"     * @param location of the meeting","lastModifiedDate":"2022-09-29"},{"lineNumber":134,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":135,"author":{"gitId":"HakkaNgin"},"content":"    public void setMeetingLocation(String location) {","lastModifiedDate":"2022-09-29"},{"lineNumber":136,"author":{"gitId":"HakkaNgin"},"content":"        this.meetingLocation \u003d location;","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":138,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":139,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"tinenhao"},"content":"     * Adds the array of persons to the unique persons list","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"HakkaNgin"},"content":"     * @param people the array list of people to be added to the meeting","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"tinenhao"},"content":"    public void addPersons(ArrayList\u003cPerson\u003e people) {","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"HakkaNgin"},"content":"        for (Person person : people) {","lastModifiedDate":"2022-10-30"},{"lineNumber":145,"author":{"gitId":"HakkaNgin"},"content":"            this.peopleToMeetList.add(person);","lastModifiedDate":"2022-10-30"},{"lineNumber":146,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"tinenhao"},"content":"     * Deletes the array of persons from the unique persons list","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"HakkaNgin"},"content":"     * @param people the people to remove from the meeting","lastModifiedDate":"2022-10-30"},{"lineNumber":152,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"tinenhao"},"content":"    public void deletePersons(ArrayList\u003cPerson\u003e people) {","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"HakkaNgin"},"content":"        for (Person person : people) {","lastModifiedDate":"2022-10-30"},{"lineNumber":155,"author":{"gitId":"GenFusion122"},"content":"            if (peopleToMeetList.contains(person)) {","lastModifiedDate":"2022-11-02"},{"lineNumber":156,"author":{"gitId":"HakkaNgin"},"content":"                this.peopleToMeetList.remove(person);","lastModifiedDate":"2022-10-30"},{"lineNumber":157,"author":{"gitId":"tinenhao"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":160,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":161,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":162,"author":{"gitId":"GenFusion122"},"content":"     * updates a found person in the meeting list","lastModifiedDate":"2022-11-02"},{"lineNumber":163,"author":{"gitId":"GenFusion122"},"content":"     * @param originalPerson original person to find","lastModifiedDate":"2022-11-02"},{"lineNumber":164,"author":{"gitId":"GenFusion122"},"content":"     * @param editedPerson edited person to replace with","lastModifiedDate":"2022-11-02"},{"lineNumber":165,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":166,"author":{"gitId":"GenFusion122"},"content":"    public void updatePerson(Person originalPerson, Person editedPerson) {","lastModifiedDate":"2022-11-02"},{"lineNumber":167,"author":{"gitId":"GenFusion122"},"content":"        // defensive coding clause to check if person is in the list","lastModifiedDate":"2022-11-02"},{"lineNumber":168,"author":{"gitId":"GenFusion122"},"content":"        if (peopleToMeetList.contains(originalPerson)) {","lastModifiedDate":"2022-11-02"},{"lineNumber":169,"author":{"gitId":"GenFusion122"},"content":"            peopleToMeetList.setPerson(originalPerson, editedPerson);","lastModifiedDate":"2022-11-02"},{"lineNumber":170,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":171,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":172,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"tinenhao"},"content":"    public int getNumPersons() {","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"HakkaNgin"},"content":"        return peopleToMeetList.getSize();","lastModifiedDate":"2022-10-17"},{"lineNumber":175,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"darrentde"},"content":"    public ArrayList\u003cPerson\u003e getArrayListPersonToMeet() {","lastModifiedDate":"2022-10-14"},{"lineNumber":178,"author":{"gitId":"darrentde"},"content":"        ArrayList\u003cPerson\u003e a \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":179,"author":{"gitId":"HakkaNgin"},"content":"        this.peopleToMeetList.iterator().forEachRemaining(a::add);","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"darrentde"},"content":"        return a;","lastModifiedDate":"2022-10-14"},{"lineNumber":181,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":182,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":183,"author":{"gitId":"HakkaNgin"},"content":"    public UniquePersonList getPersonToMeet() {","lastModifiedDate":"2022-10-09"},{"lineNumber":184,"author":{"gitId":"HakkaNgin"},"content":"        return this.peopleToMeetList;","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"HakkaNgin"},"content":"    public String getDateAndTime() {","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"HakkaNgin"},"content":"        return this.processedMeetingDateAndTime;","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"tinenhao"},"content":"    public String getNonProcessedDateAndTime() {","lastModifiedDate":"2022-10-18"},{"lineNumber":192,"author":{"gitId":"HakkaNgin"},"content":"        return DateTimeConverter.processFullDateToLocalDatetime(this.processedMeetingDateAndTime);","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":194,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":195,"author":{"gitId":"GenFusion122"},"content":"    public String getDescription() {","lastModifiedDate":"2022-10-09"},{"lineNumber":196,"author":{"gitId":"mqchua"},"content":"        return this.meetingDescription;","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":198,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"HakkaNgin"},"content":"    public String getLocation() {","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"darrentde"},"content":"        return this.meetingLocation;","lastModifiedDate":"2022-10-13"},{"lineNumber":201,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":202,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":203,"author":{"gitId":"HakkaNgin"},"content":"    public String getPeopleToMeetAsString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":204,"author":{"gitId":"mqchua"},"content":"        String res \u003d \"\";","lastModifiedDate":"2022-10-13"},{"lineNumber":205,"author":{"gitId":"HakkaNgin"},"content":"        for (Person p : peopleToMeetList) {","lastModifiedDate":"2022-10-16"},{"lineNumber":206,"author":{"gitId":"mqchua"},"content":"            res \u003d res + p.getName().fullName + \", \";","lastModifiedDate":"2022-10-13"},{"lineNumber":207,"author":{"gitId":"mqchua"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":208,"author":{"gitId":"mqchua"},"content":"        return res.substring(0, res.length() - 2);","lastModifiedDate":"2022-10-13"},{"lineNumber":209,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":210,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":211,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":212,"author":{"gitId":"HakkaNgin"},"content":"     * Returns true if both meetings include the same person to meet","lastModifiedDate":"2022-10-06"},{"lineNumber":213,"author":{"gitId":"HakkaNgin"},"content":"     * and are at the same time.","lastModifiedDate":"2022-10-06"},{"lineNumber":214,"author":{"gitId":"HakkaNgin"},"content":"     * This defines a weaker notion of equality between two meetings.","lastModifiedDate":"2022-10-06"},{"lineNumber":215,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":216,"author":{"gitId":"HakkaNgin"},"content":"    public boolean isSameMeeting(Meeting otherMeeting) {","lastModifiedDate":"2022-10-06"},{"lineNumber":217,"author":{"gitId":"HakkaNgin"},"content":"        if (otherMeeting \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":218,"author":{"gitId":"HakkaNgin"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":219,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":220,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":221,"author":{"gitId":"HakkaNgin"},"content":"        return otherMeeting !\u003d null","lastModifiedDate":"2022-10-06"},{"lineNumber":222,"author":{"gitId":"HakkaNgin"},"content":"            \u0026\u0026 (otherMeeting.getPersonToMeet().equals(getPersonToMeet()))","lastModifiedDate":"2022-10-06"},{"lineNumber":223,"author":{"gitId":"HakkaNgin"},"content":"            \u0026\u0026 (otherMeeting.getDateAndTime().equals(getDateAndTime()));","lastModifiedDate":"2022-10-06"},{"lineNumber":224,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":225,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":226,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":227,"author":{"gitId":"GenFusion122"},"content":"     * returns true if person is in the meeting object","lastModifiedDate":"2022-11-02"},{"lineNumber":228,"author":{"gitId":"GenFusion122"},"content":"     * @param p person to check","lastModifiedDate":"2022-11-02"},{"lineNumber":229,"author":{"gitId":"GenFusion122"},"content":"     * @return true or false depending on if a person is in the meeting or not","lastModifiedDate":"2022-11-02"},{"lineNumber":230,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":231,"author":{"gitId":"GenFusion122"},"content":"    public boolean containsPerson(Person p) {","lastModifiedDate":"2022-11-02"},{"lineNumber":232,"author":{"gitId":"GenFusion122"},"content":"        return peopleToMeetArray.contains(p);","lastModifiedDate":"2022-11-02"},{"lineNumber":233,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":234,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":235,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"HakkaNgin"},"content":"     * Returns true if both meetings have the same data fields.","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"HakkaNgin"},"content":"     * This defines a stronger notion of equality between two meetings.","lastModifiedDate":"2022-10-12"},{"lineNumber":238,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":239,"author":{"gitId":"HakkaNgin"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":240,"author":{"gitId":"HakkaNgin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":241,"author":{"gitId":"HakkaNgin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":242,"author":{"gitId":"HakkaNgin"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":243,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":244,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":245,"author":{"gitId":"HakkaNgin"},"content":"        if (!(other instanceof Meeting)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":246,"author":{"gitId":"HakkaNgin"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":247,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":248,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":249,"author":{"gitId":"HakkaNgin"},"content":"        Meeting otherMeeting \u003d (Meeting) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":250,"author":{"gitId":"HakkaNgin"},"content":"        return otherMeeting.getPersonToMeet().equals(getPersonToMeet())","lastModifiedDate":"2022-10-12"},{"lineNumber":251,"author":{"gitId":"HakkaNgin"},"content":"            \u0026\u0026 otherMeeting.getDescription().equals(getDescription())","lastModifiedDate":"2022-10-12"},{"lineNumber":252,"author":{"gitId":"HakkaNgin"},"content":"            \u0026\u0026 otherMeeting.getDateAndTime().equals(getDateAndTime())","lastModifiedDate":"2022-10-12"},{"lineNumber":253,"author":{"gitId":"HakkaNgin"},"content":"            \u0026\u0026 otherMeeting.getLocation().equals(getLocation());","lastModifiedDate":"2022-10-12"},{"lineNumber":254,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":255,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":256,"author":{"gitId":"HakkaNgin"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":257,"author":{"gitId":"HakkaNgin"},"content":"    public String toString() {","lastModifiedDate":"2022-10-08"},{"lineNumber":258,"author":{"gitId":"HakkaNgin"},"content":"        return String.format(\"%1$s\", CreateMeetingCommand.peopleToNameAndTagList(this.peopleToMeetArray))","lastModifiedDate":"2022-10-12"},{"lineNumber":259,"author":{"gitId":"HakkaNgin"},"content":"            + \"For: \" + this.meetingDescription + \"\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":260,"author":{"gitId":"HakkaNgin"},"content":"            + \"On: \" + this.processedMeetingDateAndTime + \"\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":261,"author":{"gitId":"HakkaNgin"},"content":"            + \"At: \" + this.meetingLocation + \"\\n\";","lastModifiedDate":"2022-10-12"},{"lineNumber":262,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":263,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":264,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":265,"author":{"gitId":"GenFusion122"},"content":"     * Compares this object with the specified object for order.  Returns a","lastModifiedDate":"2022-10-19"},{"lineNumber":266,"author":{"gitId":"GenFusion122"},"content":"     * negative integer, zero, or a positive integer as this object is less","lastModifiedDate":"2022-10-19"},{"lineNumber":267,"author":{"gitId":"GenFusion122"},"content":"     * than, equal to, or greater than the specified object.","lastModifiedDate":"2022-10-19"},{"lineNumber":268,"author":{"gitId":"GenFusion122"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":269,"author":{"gitId":"GenFusion122"},"content":"     * @param m the object to be compared.","lastModifiedDate":"2022-10-19"},{"lineNumber":270,"author":{"gitId":"GenFusion122"},"content":"     * @return a negative integer, zero, or a positive integer as this object","lastModifiedDate":"2022-10-19"},{"lineNumber":271,"author":{"gitId":"GenFusion122"},"content":"     *     is less than, equal to, or greater than the specified object.","lastModifiedDate":"2022-10-19"},{"lineNumber":272,"author":{"gitId":"GenFusion122"},"content":"     * @throws NullPointerException if the specified object is null","lastModifiedDate":"2022-10-19"},{"lineNumber":273,"author":{"gitId":"GenFusion122"},"content":"     * @throws ClassCastException   if the specified object\u0027s type prevents it","lastModifiedDate":"2022-10-19"},{"lineNumber":274,"author":{"gitId":"GenFusion122"},"content":"     *                              from being compared to this object.","lastModifiedDate":"2022-10-19"},{"lineNumber":275,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":276,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":277,"author":{"gitId":"GenFusion122"},"content":"    public int compareTo(Meeting m) {","lastModifiedDate":"2022-10-19"},{"lineNumber":278,"author":{"gitId":"GenFusion122"},"content":"        requireNonNull(m);","lastModifiedDate":"2022-10-19"},{"lineNumber":279,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime currObj \u003d DateTimeConverter","lastModifiedDate":"2022-10-19"},{"lineNumber":280,"author":{"gitId":"HakkaNgin"},"content":"            .processedStringToLocalDatetime(this.processedMeetingDateAndTime);","lastModifiedDate":"2022-10-26"},{"lineNumber":281,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime compObj \u003d DateTimeConverter","lastModifiedDate":"2022-10-19"},{"lineNumber":282,"author":{"gitId":"GenFusion122"},"content":"            .processedStringToLocalDatetime(m.getDateAndTime());","lastModifiedDate":"2022-10-19"},{"lineNumber":283,"author":{"gitId":"GenFusion122"},"content":"        return currObj.compareTo(compObj);","lastModifiedDate":"2022-10-19"},{"lineNumber":284,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":285,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"darrentde":7,"mqchua":6,"GenFusion122":72,"tinenhao":67,"HakkaNgin":133}},{"path":"src/main/java/seedu/address/model/meeting/MeetingContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.util.FindMeetingFunctionalInterface;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":" * Tests that a {@code Meetings}\u0027s description matches any of the keywords given.","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"public class MeetingContainsKeywordsPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"    private final FindMeetingFunctionalInterface meetingField;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"     * Constructor","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"     * @param keywords list of keywords to search for","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"     * @param meetingField meetingField to retrieve based on parameters from parser","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"    public MeetingContainsKeywordsPredicate(List\u003cString\u003e keywords, FindMeetingFunctionalInterface meetingField) {","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"        this.meetingField \u003d meetingField;","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"     * Evaluates this predicate on the given argument.","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"     * @param meeting the input argument","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"     * @return {@code true} if the input argument matches the predicate, otherwise {@code false}","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"        String searchContext \u003d meetingField.getField(meeting);","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(searchContext, keyword));","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"                || (other instanceof MeetingContainsKeywordsPredicate","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"                \u0026\u0026 keywords.equals(((MeetingContainsKeywordsPredicate) other).keywords)","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"                \u0026\u0026 meetingField.equals(((MeetingContainsKeywordsPredicate) other).meetingField));","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"GenFusion122":46}},{"path":"src/main/java/seedu/address/model/meeting/MeetingFilterDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.util.DateTimeConverter;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":" * Tests that a {@code Meetings}\u0027s date is between specified dates","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"public class MeetingFilterDatePredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"    private final LocalDateTime afterDate;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"    private final LocalDateTime beforeDate;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"     * Constructor for the object","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"     * @param afterDate checks if date is \"after\" this date","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"     * @param beforeDate checks if date is \"before\" this date","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"    public MeetingFilterDatePredicate(LocalDateTime afterDate, LocalDateTime beforeDate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"        this.afterDate \u003d afterDate;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"        this.beforeDate \u003d beforeDate;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"     * Evaluates this predicate on the given argument.","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"     * @param meeting the input argument","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"     * @return {@code true} if the meeting date is between","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"     *     date1 and date2, if the date1 is equal to date2, then","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"     *     {@code true} if meeting is on date1, {@code  false} otherwise","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime meetingDate \u003d DateTimeConverter","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"            .processedStringToLocalDatetime(meeting.getDateAndTime());","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"        if (afterDate.isEqual(beforeDate)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"            return afterDate.isEqual(meetingDate);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"        return meetingDate.isAfter(afterDate) \u0026\u0026 meetingDate.isBefore(beforeDate)","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"            || meetingDate.isEqual(afterDate) || meetingDate.isEqual(beforeDate);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"    @Override","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"                || (other instanceof MeetingFilterDatePredicate","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"                \u0026\u0026 beforeDate.equals(((MeetingFilterDatePredicate) other).beforeDate)","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"                \u0026\u0026 afterDate.equals(((MeetingFilterDatePredicate) other).afterDate));","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"GenFusion122":50}},{"path":"src/main/java/seedu/address/model/meeting/UniqueMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":" * New content added by Tian You (@HakkaNgin)","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":" * A list of meetings that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":" *","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":" * A meeting is considered unique by comparing using {@code Meeting#isSameMeeting(Meeting)}.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":" * As such, adding and updating of meetings uses Meeting#isSameMeeting(Meeting) for equality","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"HakkaNgin"},"content":" * so as to ensure the meeting being added or updated is unique in terms of identity in the UniqueMeetingList.","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":" * However, the removal of a person uses Meeting#equals(Object) so as to ensure that the meeting","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":" * with exactly the same fields will be removed.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":" *","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"HakkaNgin"},"content":" *","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":" * NOTE:","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"HakkaNgin"},"content":" * Some methods here were implemented for Person and may not be applicable for Meeting","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":" *","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":" * @see Meeting#isSameMeeting(Meeting)","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"HakkaNgin"},"content":"public class UniqueMeetingList implements Iterable\u003cMeeting\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"HakkaNgin"},"content":"    private final ObservableList\u003cMeeting\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"HakkaNgin"},"content":"    private final ObservableList\u003cMeeting\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"HakkaNgin"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"HakkaNgin"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"HakkaNgin"},"content":"    public boolean contains(Meeting toCheck) {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"HakkaNgin"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"HakkaNgin"},"content":"        return internalList.stream().anyMatch(toCheck::isSameMeeting);","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"HakkaNgin"},"content":"     * Adds a person to the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"HakkaNgin"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"HakkaNgin"},"content":"    public void add(Meeting toAdd) {","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"HakkaNgin"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"HakkaNgin"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"HakkaNgin"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"HakkaNgin"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"tinenhao"},"content":"     * Adds a person to the list to the specified index.","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"tinenhao"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"tinenhao"},"content":"    public void add(Meeting toAdd, int idx) {","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"tinenhao"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"tinenhao"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"tinenhao"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"tinenhao"},"content":"        internalList.add(idx, toAdd);","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"HakkaNgin"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"HakkaNgin"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"HakkaNgin"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"HakkaNgin"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"HakkaNgin"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"HakkaNgin"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"HakkaNgin"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"HakkaNgin"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"HakkaNgin"},"content":"        if (!target.isSameMeeting(editedMeeting) \u0026\u0026 contains(editedMeeting)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"HakkaNgin"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"HakkaNgin"},"content":"        internalList.set(index, editedMeeting);","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"tinenhao"},"content":"     * Removes the equivalent Meeting from the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"tinenhao"},"content":"     * The meeting must exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"tinenhao"},"content":"    public void remove(Meeting toRemove) {","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"HakkaNgin"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"HakkaNgin"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"HakkaNgin"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"HakkaNgin"},"content":"    public void setMeetings(seedu.address.model.meeting.UniqueMeetingList replacement) {","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"HakkaNgin"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"HakkaNgin"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"HakkaNgin"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"HakkaNgin"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"HakkaNgin"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"HakkaNgin"},"content":"        requireAllNonNull(meetings);","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"HakkaNgin"},"content":"        if (!meetingsAreUnique(meetings)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"HakkaNgin"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"HakkaNgin"},"content":"        internalList.setAll(meetings);","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"HakkaNgin"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"HakkaNgin"},"content":"    public ObservableList\u003cMeeting\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"HakkaNgin"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"HakkaNgin"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"HakkaNgin"},"content":"    public Iterator\u003cMeeting\u003e iterator() {","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"HakkaNgin"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"HakkaNgin"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"HakkaNgin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"HakkaNgin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"HakkaNgin"},"content":"            || (other instanceof seedu.address.model.meeting.UniqueMeetingList // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"HakkaNgin"},"content":"            \u0026\u0026 internalList.equals(((seedu.address.model.meeting.UniqueMeetingList) other).internalList));","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"HakkaNgin"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"HakkaNgin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"HakkaNgin"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":143,"author":{"gitId":"GenFusion122"},"content":"     * Utilizes Meeting\u0027s compareTo() function provide a comparator for ObservableList\u003c\u003e.sort","lastModifiedDate":"2022-10-19"},{"lineNumber":144,"author":{"gitId":"GenFusion122"},"content":"     * @param isInAscending sorts by ascending if true, descending otherwise","lastModifiedDate":"2022-10-19"},{"lineNumber":145,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":146,"author":{"gitId":"GenFusion122"},"content":"    public void sortByDate(boolean isInAscending) {","lastModifiedDate":"2022-10-19"},{"lineNumber":147,"author":{"gitId":"GenFusion122"},"content":"        //Ternary operator checks if isInAscending is true and negates the results if it is false","lastModifiedDate":"2022-10-19"},{"lineNumber":148,"author":{"gitId":"GenFusion122"},"content":"        internalList.sort((Meeting m1, Meeting m2) -\u003e isInAscending","lastModifiedDate":"2022-10-19"},{"lineNumber":149,"author":{"gitId":"GenFusion122"},"content":"                ? m1.compareTo(m2)","lastModifiedDate":"2022-10-19"},{"lineNumber":150,"author":{"gitId":"GenFusion122"},"content":"                : -m1.compareTo(m2));","lastModifiedDate":"2022-10-19"},{"lineNumber":151,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":152,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":153,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"HakkaNgin"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"HakkaNgin"},"content":"    private boolean meetingsAreUnique(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"HakkaNgin"},"content":"        for (int i \u003d 0; i \u003c meetings.size() - 1; i++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"HakkaNgin"},"content":"            for (int j \u003d i + 1; j \u003c meetings.size(); j++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"HakkaNgin"},"content":"                if (meetings.get(i).isSameMeeting(meetings.get(j))) {","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"HakkaNgin"},"content":"                    return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"HakkaNgin"},"content":"                }","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"HakkaNgin"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"HakkaNgin"},"content":"        return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"GenFusion122":11,"tinenhao":15,"HakkaNgin":141}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/DuplicateMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":" * Signals that the operation will result in duplicate Meeting (Meetings are considered duplicates if they have the same","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":" * identity).","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"public class DuplicateMeetingException extends RuntimeException {","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"    public DuplicateMeetingException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"        super(\"Operation would result in duplicate meetings\");","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"HakkaNgin":11}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/ImpreciseMatchException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":" * An exception that gets thrown during the creation of a new meeting when the predicate","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":" * for the name of a person to meet matches multiple contacts in the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"public class ImpreciseMatchException extends RuntimeException {","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"     * Constructor for ImpreciseMatchException","lastModifiedDate":"2022-10-30"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"     *","lastModifiedDate":"2022-10-30"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"     * @param impreciseName the name that causes ambiguity when the programme tries to find a matching contact","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":"    public ImpreciseMatchException(String impreciseName) {","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":"        super(String.format(\"Name of person to meet: %1$s matches multiple contacts\", impreciseName));","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"HakkaNgin":18}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/MeetingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":" * Signals that the operation is unable to find the specified meeting.","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"public class MeetingNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"HakkaNgin":7}},{"path":"src/main/java/seedu/address/model/person/TagsContainKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":"public class TagsContainKeywordPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"    private final String keyword;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"    public TagsContainKeywordPredicate(String keyword) {","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"        return person.getTags().stream()","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"                .anyMatch(tag -\u003e StringUtil.containsWordIgnoreCase(keyword, tag.getTagName()));","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"                || (other instanceof TagsContainKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"                \u0026\u0026 keyword.equals(((TagsContainKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"tinenhao":30}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"HakkaNgin"},"content":"            throw new PersonNotFoundException(String.format(PersonNotFoundException.PERSON_NOT_FOUND,","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"HakkaNgin"},"content":"                target.getName()));","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"HakkaNgin"},"content":"            throw new PersonNotFoundException(String.format(PersonNotFoundException.PERSON_NOT_FOUND,","lastModifiedDate":"2022-10-30"},{"lineNumber":80,"author":{"gitId":"HakkaNgin"},"content":"                toRemove.getName()));","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"tinenhao"},"content":"     * Gets the number of people in the list","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"tinenhao"},"content":"     * @return","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"tinenhao"},"content":"    public int getSize() {","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"tinenhao"},"content":"        return internalList.size();","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"HakkaNgin"},"content":"                        \u0026\u0026 internalList.sorted().equals(((UniquePersonList) other).internalList.sorted()));","lastModifiedDate":"2022-10-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tinenhao":8,"HakkaNgin":5,"-":134}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"HakkaNgin":2,"-":11}},{"path":"src/main/java/seedu/address/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"public class PersonNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-30"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"    public static final String PERSON_NOT_FOUND \u003d \"The person with the name: %1$s is not found\";","lastModifiedDate":"2022-10-30"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"    public static final String NO_PERSON_DETECTED \u003d \"Make sure if you have entered at least one name.\";","lastModifiedDate":"2022-10-30"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"    public PersonNotFoundException(String cause) {","lastModifiedDate":"2022-10-30"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"        super(cause);","lastModifiedDate":"2022-10-30"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-10-30"}],"authorContributionMap":{"HakkaNgin":9,"-":5}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"tinenhao"},"content":"    public String getTagName() {","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"tinenhao"},"content":"        return this.tagName;","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tinenhao":4,"-":54}},{"path":"src/main/java/seedu/address/model/util/DateTimeConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.model.util;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":" * class to provide static methods to convert string","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":" * into DateTime formats for manipulation","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"public class DateTimeConverter {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DateTimeConverter.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"     * Function to convert string values to LocalDateTime values","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"     * which are primarily used for comparisons","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"     * specifically, converts strings in the dd-MM-uuuu HHmm format into LocalDateTime","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"     * note that uuuu refers to proleptic-year whereas yyyy refers to yearofera(AD/BC) when ResolverStyle.Strict is used","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"     * @param date string to be converted","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"     * @return LocalDateTime value of the string","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"     * @throws DateTimeParseException if it fails to parse IE it\u0027s in the wrong format","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"    public static LocalDateTime stringToLocalDateTime(String date) throws DateTimeParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"d-MM-uuuu HHmm\")","lastModifiedDate":"2022-10-30"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"        return LocalDateTime.parse(date, format);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"     * Function to convert processed string values to LocalDateTime values","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"     * which are primarily used for comparisons","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"     * specifically, converts strings in the EEEE, dd MMMM uuuu hh:mm a format into LocalDateTime","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"     * note that uuuu refers to proleptic-year whereas yyyy refers to yearofera(AD/BC) when ResolverStyle.Strict is used","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"     * @param date string to be converted","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"     * @return LocalDateTime value of the string","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"     * @throws DateTimeParseException if it fails to parse IE it\u0027s in the wrong format","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"    public static LocalDateTime processedStringToLocalDatetime(String date) throws DateTimeParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"EEEE, d MMMM uuuu hh:mm a\")","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"        return LocalDateTime.parse(date, format);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"     * Function to convert processed string values to dd-MM-uuuu format","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"darrentde"},"content":"     * Used for storage","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"     * note that uuuu refers to proleptic-year whereas yyyy refers to yearofera(AD/BC) when ResolverStyle.Strict is used","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"darrentde"},"content":"     * @param date string to be converted","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"darrentde"},"content":"     * @return String in dd-mm-yyyy format","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"darrentde"},"content":"     * @throws DateTimeParseException if it fails to parse IE it\u0027s in the wrong format","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"darrentde"},"content":"    public static String processFullDateToLocalDatetime(String date) throws DateTimeParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"GenFusion122"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"EEEE, d MMMM uuuu hh:mm a\")","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"GenFusion122"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"GenFusion122"},"content":"        DateTimeFormatter newPattern \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu HHmm\")","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"GenFusion122"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-10-30"},{"lineNumber":60,"author":{"gitId":"darrentde"},"content":"        return LocalDateTime.parse(date, format).format(newPattern);","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"darrentde":16,"GenFusion122":47}},{"path":"src/main/java/seedu/address/model/util/DateTimeProcessor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"package seedu.address.model.util;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.logic.parser.CreateMeetingCommandParser.DATE_TIME_VALIDATOR;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":"import java.text.DateFormat;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"import java.util.Date;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"import java.util.Locale;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":" * Checks whether the format of a due is in valid date-time format","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"HakkaNgin"},"content":" * in yyyy-MM-dd HHmm","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":"public class DateTimeProcessor {","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"    private final DateTimeFormatter dateFormatter;","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"HakkaNgin"},"content":"    private final DateTimeFormatter timeFormatter;","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"     * Constructor for a new DateValidator object","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"     * @param dateFormatter determines the accepted date\u0026time format of the input string","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"HakkaNgin"},"content":"    public DateTimeProcessor(DateTimeFormatter dateFormatter, DateTimeFormatter timeFormatter) {","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"HakkaNgin"},"content":"        this.dateFormatter \u003d dateFormatter;","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"HakkaNgin"},"content":"        this.timeFormatter \u003d timeFormatter;","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"HakkaNgin"},"content":"    //Solution below adapted from https://www.baeldung.com/java-datetimeformatter","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"HakkaNgin"},"content":"     * Checks if the input string matches the accepted date format of the formatter","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"HakkaNgin"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"HakkaNgin"},"content":"     * @return Whether date format is valid","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"HakkaNgin"},"content":"    private boolean isDateValid(String dateStr) {","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"HakkaNgin"},"content":"        try {","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"HakkaNgin"},"content":"            DateFormat inputDateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2022-10-29"},{"lineNumber":46,"author":{"gitId":"HakkaNgin"},"content":"            inputDateFormat.setLenient(false);","lastModifiedDate":"2022-10-29"},{"lineNumber":47,"author":{"gitId":"HakkaNgin"},"content":"            Date inputTime \u003d inputDateFormat.parse(dateStr);","lastModifiedDate":"2022-10-29"},{"lineNumber":48,"author":{"gitId":"HakkaNgin"},"content":"            this.dateFormatter.parse(dateStr);","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"HakkaNgin"},"content":"        } catch (DateTimeParseException | java.text.ParseException e) {","lastModifiedDate":"2022-10-29"},{"lineNumber":50,"author":{"gitId":"HakkaNgin"},"content":"            return false;","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"HakkaNgin"},"content":"        return true;","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"HakkaNgin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-10-29"},{"lineNumber":56,"author":{"gitId":"HakkaNgin"},"content":"        System.out.println(DATE_TIME_VALIDATOR.isDateValid(\"30-02-2022\"));","lastModifiedDate":"2022-10-29"},{"lineNumber":57,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":58,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":59,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":60,"author":{"gitId":"HakkaNgin"},"content":"     * Checks if the input string matches the accepted time format of the formatter","lastModifiedDate":"2022-09-29"},{"lineNumber":61,"author":{"gitId":"HakkaNgin"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":62,"author":{"gitId":"HakkaNgin"},"content":"     * @return Whether time format is valid","lastModifiedDate":"2022-09-29"},{"lineNumber":63,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":64,"author":{"gitId":"HakkaNgin"},"content":"    private boolean isTimeValid(String timeStr) {","lastModifiedDate":"2022-09-29"},{"lineNumber":65,"author":{"gitId":"HakkaNgin"},"content":"        try {","lastModifiedDate":"2022-09-29"},{"lineNumber":66,"author":{"gitId":"HakkaNgin"},"content":"            this.timeFormatter.parse(timeStr);","lastModifiedDate":"2022-09-29"},{"lineNumber":67,"author":{"gitId":"HakkaNgin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":68,"author":{"gitId":"HakkaNgin"},"content":"            return false;","lastModifiedDate":"2022-09-29"},{"lineNumber":69,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":70,"author":{"gitId":"HakkaNgin"},"content":"        return true;","lastModifiedDate":"2022-09-29"},{"lineNumber":71,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":72,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":73,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"HakkaNgin"},"content":"     * converts input date\u0026time from yyyy-MM-dd HHmm to MONTH dd yyyy hh:mm aa format","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"HakkaNgin"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"HakkaNgin"},"content":"     * @param dateAndTime date and time of meeting","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"HakkaNgin"},"content":"     * @return date and time in MONTH dd yyyy hh:mm aa format","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":79,"author":{"gitId":"HakkaNgin"},"content":"    public String processDateTime(String dateAndTime) throws ParseException, java.text.ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"HakkaNgin"},"content":"        String[] tempStringArray \u003d dateAndTime.strip().split(\"\\\\s+\", 2);","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"HakkaNgin"},"content":"        String meetingDate \u003d tempStringArray[0];","lastModifiedDate":"2022-10-29"},{"lineNumber":84,"author":{"gitId":"HakkaNgin"},"content":"        String meetingTime \u003d tempStringArray.length \u003c 2 ? \"\" : tempStringArray[1];","lastModifiedDate":"2022-10-29"},{"lineNumber":85,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"HakkaNgin"},"content":"        if (Objects.equals(meetingDate, \"\")) {","lastModifiedDate":"2022-10-29"},{"lineNumber":87,"author":{"gitId":"HakkaNgin"},"content":"            throw new ParseException(\"Meeting date cannot be empty\");","lastModifiedDate":"2022-10-29"},{"lineNumber":88,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-29"},{"lineNumber":89,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":90,"author":{"gitId":"HakkaNgin"},"content":"        if (!isDateValid(meetingDate)) {","lastModifiedDate":"2022-10-29"},{"lineNumber":91,"author":{"gitId":"HakkaNgin"},"content":"            throw new ParseException(String.format(\"Meeting date: %1$s is not in dd-MM-yyyy format\", meetingDate));","lastModifiedDate":"2022-10-29"},{"lineNumber":92,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":93,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":94,"author":{"gitId":"HakkaNgin"},"content":"        //Solution below adapted from https://www.baeldung.com/java-datetimeformatter","lastModifiedDate":"2022-11-04"},{"lineNumber":95,"author":{"gitId":"HakkaNgin"},"content":"        DateTimeFormatter newFormatter \u003d DateTimeFormatter","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"HakkaNgin"},"content":"            .ofLocalizedDate(FormatStyle.FULL).withLocale(Locale.UK).withResolverStyle(ResolverStyle.SMART);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"HakkaNgin"},"content":"        LocalDate inputDueDate \u003d LocalDate.parse(meetingDate, this.dateFormatter);","lastModifiedDate":"2022-10-29"},{"lineNumber":99,"author":{"gitId":"HakkaNgin"},"content":"        String dayAndDate \u003d inputDueDate.format(newFormatter);","lastModifiedDate":"2022-10-29"},{"lineNumber":100,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":101,"author":{"gitId":"HakkaNgin"},"content":"        //time pattern of input date in 24 hour format -- HH for 24h, hh for 12h","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"HakkaNgin"},"content":"        DateFormat inputTimeFormat \u003d new SimpleDateFormat(\"HHmm\");","lastModifiedDate":"2022-09-29"},{"lineNumber":103,"author":{"gitId":"HakkaNgin"},"content":"        inputTimeFormat.setLenient(false);","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":105,"author":{"gitId":"HakkaNgin"},"content":"        //Date/time pattern of desired output date","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"HakkaNgin"},"content":"        DateFormat outputTimeFormat \u003d new SimpleDateFormat(\"hh:mm aa\"); // aa for AM/ PM","lastModifiedDate":"2022-09-29"},{"lineNumber":107,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"HakkaNgin"},"content":"        if (Objects.equals(meetingTime, \"\")) {","lastModifiedDate":"2022-10-29"},{"lineNumber":109,"author":{"gitId":"darrentde"},"content":"            throw new ParseException(\"Meeting time cannot be empty\");","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"darrentde"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":112,"author":{"gitId":"HakkaNgin"},"content":"        if (!isTimeValid(meetingTime)) {","lastModifiedDate":"2022-10-29"},{"lineNumber":113,"author":{"gitId":"HakkaNgin"},"content":"            throw new ParseException(String.format(\"Meeting time: %1$s is not in HHmm format\", meetingTime));","lastModifiedDate":"2022-10-29"},{"lineNumber":114,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"HakkaNgin"},"content":"        Date inputTime \u003d inputTimeFormat.parse(meetingTime);","lastModifiedDate":"2022-10-29"},{"lineNumber":117,"author":{"gitId":"HakkaNgin"},"content":"        String outputTime \u003d outputTimeFormat.format(inputTime);","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"HakkaNgin"},"content":"        return dayAndDate + \" \" + outputTime;","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"HakkaNgin"},"content":"    // for debugging","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"HakkaNgin"},"content":"    /*public static void main(String[] args) {","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"HakkaNgin"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\", Locale.US)","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"HakkaNgin"},"content":"            .withResolverStyle(ResolverStyle.SMART);","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"HakkaNgin"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\", Locale.US)","lastModifiedDate":"2022-09-29"},{"lineNumber":126,"author":{"gitId":"HakkaNgin"},"content":"            .withResolverStyle(ResolverStyle.SMART);","lastModifiedDate":"2022-09-29"},{"lineNumber":127,"author":{"gitId":"HakkaNgin"},"content":"        DateTimeProcessor validator \u003d new DateTimeProcessor(dateFormatter, timeFormatter);","lastModifiedDate":"2022-09-29"},{"lineNumber":128,"author":{"gitId":"HakkaNgin"},"content":"        try {","lastModifiedDate":"2022-09-29"},{"lineNumber":129,"author":{"gitId":"HakkaNgin"},"content":"            validator.processDateTime(\"asdasd\");","lastModifiedDate":"2022-09-29"},{"lineNumber":130,"author":{"gitId":"HakkaNgin"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":131,"author":{"gitId":"HakkaNgin"},"content":"            System.out.println(e);","lastModifiedDate":"2022-09-29"},{"lineNumber":132,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":133,"author":{"gitId":"HakkaNgin"},"content":"    }*/","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":135,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"darrentde":3,"HakkaNgin":132}},{"path":"src/main/java/seedu/address/model/util/FindMeetingFunctionalInterface.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.model.util;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":" * Functional interface used by FindMeeting to pass methods as a parameter","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"public interface FindMeetingFunctionalInterface {","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"    String getField(Meeting m);","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"GenFusion122":10}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.MeetingList;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.ReadOnlyMeetingList;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(SampleDataUtil.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"    private static Person alex \u003d new Person(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"            new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"            new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"            getTagSet(\"friends\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"    private static Person bernice \u003d new Person(new Name(\"Bernice Yu\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"            new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"            getTagSet(\"colleagues\", \"friends\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"    private static Person charlotte \u003d new Person(new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"darrentde"},"content":"            new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"darrentde"},"content":"            getTagSet(\"neighbours\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"darrentde"},"content":"    private static Person david \u003d new Person(new Name(\"David Li\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"darrentde"},"content":"            new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"darrentde"},"content":"            getTagSet(\"family\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"darrentde"},"content":"    private static Person irfan \u003d new Person(new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"darrentde"},"content":"            new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"darrentde"},"content":"            getTagSet(\"classmates\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"darrentde"},"content":"    private static Person roy \u003d new Person(new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"darrentde"},"content":"            new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"darrentde"},"content":"            getTagSet(\"colleagues\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"darrentde"},"content":"            alex,","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"darrentde"},"content":"            bernice,","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"darrentde"},"content":"            charlotte,","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"darrentde"},"content":"            david,","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"darrentde"},"content":"            irfan,","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"darrentde"},"content":"            roy","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"HakkaNgin"},"content":"    public static Meeting[] getSampleMeetings() throws ParseException, java.text.ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"darrentde"},"content":"        ArrayList\u003cPerson\u003e p1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"darrentde"},"content":"        ArrayList\u003cPerson\u003e p2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"darrentde"},"content":"        ArrayList\u003cPerson\u003e p3 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"darrentde"},"content":"        ArrayList\u003cPerson\u003e p4 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"darrentde"},"content":"        ArrayList\u003cPerson\u003e p5 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"darrentde"},"content":"        p1.add(alex);","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"darrentde"},"content":"        p2.add(bernice);","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"darrentde"},"content":"        p2.add(charlotte);","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"darrentde"},"content":"        p3.add(david);","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"darrentde"},"content":"        p3.add(irfan);","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"darrentde"},"content":"        p3.add(roy);","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"darrentde"},"content":"        p4.add(david);","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"darrentde"},"content":"        p4.add(alex);","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"darrentde"},"content":"        p4.add(charlotte);","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"darrentde"},"content":"        p4.add(bernice);","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"darrentde"},"content":"        p5.add(roy);","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"darrentde"},"content":"        p5.add(alex);","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"darrentde"},"content":"        p5.add(david);","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"darrentde"},"content":"        p5.add(bernice);","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"darrentde"},"content":"        p5.add(charlotte);","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"darrentde"},"content":"        return new Meeting[] {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"GenFusion122"},"content":"            new Meeting(p1, \"CS2103\", \"Saturday, 2 April 2022 03:00 PM\", \"COM3\"),","lastModifiedDate":"2022-10-30"},{"lineNumber":94,"author":{"gitId":"GenFusion122"},"content":"            new Meeting(p2, \"GEA1000\", \"Friday, 10 December 2021 08:00 AM\", \"UTOWN\"),","lastModifiedDate":"2022-10-30"},{"lineNumber":95,"author":{"gitId":"GenFusion122"},"content":"            new Meeting(p3, \"Lunch\", \"Wednesday, 2 February 2022 05:00 PM\", \"KR MRT\"),","lastModifiedDate":"2022-10-30"},{"lineNumber":96,"author":{"gitId":"GenFusion122"},"content":"            new Meeting(p4, \"Dinner\", \"Wednesday, 30 November 2022 05:00 PM\", \"Fine Food\"),","lastModifiedDate":"2022-10-30"},{"lineNumber":97,"author":{"gitId":"GenFusion122"},"content":"            new Meeting(p5, \"Supper\", \"Saturday, 1 October 2022 12:00 AM\", \"Mcdonalds\")","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":108,"author":{"gitId":"darrentde"},"content":"    public static ReadOnlyMeetingList getSampleMeetingList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"darrentde"},"content":"        MeetingList sampleML \u003d new MeetingList();","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"darrentde"},"content":"        Meeting[] m;","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"darrentde"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"darrentde"},"content":"            m \u003d getSampleMeetings();","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"darrentde"},"content":"            for (Meeting sampleMeeting :m) {","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"darrentde"},"content":"                sampleML.addMeeting(sampleMeeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"darrentde"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"HakkaNgin"},"content":"        } catch (ParseException | java.text.ParseException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"darrentde"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"darrentde"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"darrentde"},"content":"        return sampleML;","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"darrentde":73,"GenFusion122":5,"HakkaNgin":3,"-":50}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"class JsonAdaptedMeeting {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Meeting\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"    private final String meetingDescription;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"    private final String meetingDateAndTime;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"    private final String meetingLocation;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"    public JsonAdaptedMeeting(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"            @JsonProperty(\"meetingDescription\") String meetingDescription,","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"            @JsonProperty(\"meetingDateAndTime\") String meetingDateAndTime,","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"            @JsonProperty(\"meetingLocation\") String meetingLocation) {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"        this.meetingDescription \u003d meetingDescription;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"        this.meetingDateAndTime \u003d meetingDateAndTime;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"darrentde"},"content":"        this.meetingLocation \u003d meetingLocation;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"darrentde"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"darrentde"},"content":"    public JsonAdaptedMeeting(Meeting source) {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"darrentde"},"content":"        persons.addAll(source.getPersonToMeet().asUnmodifiableObservableList()","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"darrentde"},"content":"                .stream().map(JsonAdaptedPerson::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"darrentde"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"darrentde"},"content":"        meetingDescription \u003d source.getDescription();","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"darrentde"},"content":"        meetingDateAndTime \u003d source.getDateAndTime();","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"darrentde"},"content":"        meetingLocation \u003d source.getLocation();","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"darrentde"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"darrentde"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"darrentde"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"darrentde"},"content":"    public Meeting toModelType() throws IllegalValueException, ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"darrentde"},"content":"        final ArrayList\u003cPerson\u003e person \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"darrentde"},"content":"        for (JsonAdaptedPerson p : persons) {","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"darrentde"},"content":"            person.add(p.toModelType());","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"darrentde"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"darrentde"},"content":"        if (meetingDescription \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"darrentde"},"content":"            throw new IllegalValueException(MISSING_FIELD_MESSAGE_FORMAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"darrentde"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"darrentde"},"content":"        if (meetingDateAndTime \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"darrentde"},"content":"            throw new IllegalValueException(MISSING_FIELD_MESSAGE_FORMAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"darrentde"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"darrentde"},"content":"        if (meetingLocation \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"darrentde"},"content":"            throw new IllegalValueException(MISSING_FIELD_MESSAGE_FORMAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"darrentde"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"HakkaNgin"},"content":"        return new Meeting(person, meetingDescription, meetingDateAndTime, meetingLocation);","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"darrentde":78,"HakkaNgin":1}},{"path":"src/main/java/seedu/address/storage/JsonMeetingListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.ReadOnlyMeetingList;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":" * A class to access Meeting data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"public class JsonMeetingListStorage implements MeetingListStorage {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonMeetingListStorage.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"    public JsonMeetingListStorage(Path filePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"    public Path getMeetingListFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"        return filePath;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"    public Optional\u003cReadOnlyMeetingList\u003e readMeetingList() throws DataConversionException {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"        return readMeetingList(filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"darrentde"},"content":"     * Similar to {@link #readMeetingList()}.","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"darrentde"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"darrentde"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"darrentde"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"darrentde"},"content":"    public Optional\u003cReadOnlyMeetingList\u003e readMeetingList(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"darrentde"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"darrentde"},"content":"        Optional\u003cJsonSerializableMeetingList\u003e jsonMeetingList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"darrentde"},"content":"                filePath, JsonSerializableMeetingList.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"darrentde"},"content":"        if (!jsonMeetingList.isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"darrentde"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"darrentde"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"darrentde"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"darrentde"},"content":"            return Optional.of(jsonMeetingList.get().toModelType());","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"darrentde"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"darrentde"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"darrentde"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"darrentde"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"darrentde"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"darrentde"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"darrentde"},"content":"        return null;","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"darrentde"},"content":"    public void saveMeetingList(ReadOnlyMeetingList meetingList) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"darrentde"},"content":"        saveMeetingList(meetingList, filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"darrentde"},"content":"     * Similar to {@link #saveMeetingList(ReadOnlyMeetingList)}.","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"darrentde"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"darrentde"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"darrentde"},"content":"    public void saveMeetingList(ReadOnlyMeetingList meetingList, Path filePath) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"darrentde"},"content":"        requireNonNull(meetingList);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"darrentde"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"darrentde"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"darrentde"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableMeetingList(meetingList), filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"darrentde":84}},{"path":"src/main/java/seedu/address/storage/JsonSerializableMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.MeetingList;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.ReadOnlyMeetingList;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":" * An Immutable Meeting that is serializable to JSON format.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"@JsonRootName(value \u003d \"meetingList\")","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"class JsonSerializableMeetingList {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"    private final List\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"     * Constructs a {@code JsonSerializableMeeting} with the given persons.","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"    public JsonSerializableMeetingList(@JsonProperty(\"meetings\") List\u003cJsonAdaptedMeeting\u003e meetings) {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"        this.meetings.addAll(meetings);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"     * Converts a given {@code ReadOnlyMeeting} into this class for Jackson use.","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"darrentde"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableMeeting}.","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"darrentde"},"content":"    public JsonSerializableMeetingList(ReadOnlyMeetingList source) {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"darrentde"},"content":"        meetings.addAll(source.getMeetingList().stream().map(JsonAdaptedMeeting::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"darrentde"},"content":"     * Converts this address book into the model\u0027s {@code Meeting} object.","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"darrentde"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"darrentde"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"darrentde"},"content":"    public MeetingList toModelType() throws IllegalValueException, ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"darrentde"},"content":"        MeetingList meetingList \u003d new MeetingList();","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"darrentde"},"content":"        for (JsonAdaptedMeeting jsonAdaptedMeeting : meetings) {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"darrentde"},"content":"            Meeting meeting \u003d jsonAdaptedMeeting.toModelType();","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"darrentde"},"content":"            if (meetingList.hasMeeting(meeting)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"darrentde"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"darrentde"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"darrentde"},"content":"            meetingList.addMeeting(meeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"darrentde"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"darrentde"},"content":"        return meetingList;","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"darrentde":61}},{"path":"src/main/java/seedu/address/storage/MeetingListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.ReadOnlyMeetingList;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":" * Represents a storage for {@link seedu.address.model.meeting.Meeting}.","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"public interface MeetingListStorage {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"    Path getMeetingListFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"     * Returns AddressBook data as a {@link ReadOnlyMeetingList}.","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"    Optional\u003cReadOnlyMeetingList\u003e readMeetingList() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"     * @see #getMeetingListFilePath()","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"    Optional\u003cReadOnlyMeetingList\u003e readMeetingList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"     * Saves the given {@link ReadOnlyMeetingList} to the storage.","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"     * @param meetingList cannot be null.","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"darrentde"},"content":"    void saveMeetingList(ReadOnlyMeetingList meetingList) throws IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"darrentde"},"content":"     * @see #saveMeetingList(ReadOnlyMeetingList)","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"darrentde"},"content":"    void saveMeetingList(ReadOnlyMeetingList meetingList, Path filePath) throws IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"darrentde":45}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.ReadOnlyMeetingList;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"public interface Storage extends AddressBookStorage, MeetingListStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"    Path getMeetingListFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"    Optional\u003cReadOnlyMeetingList\u003e readMeetingList() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"darrentde"},"content":"    void saveMeetingList(ReadOnlyMeetingList meetingList) throws IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"darrentde":11,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.ReadOnlyMeetingList;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"    private MeetingListStorage meetingListStorage;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, MeetingListStorage meetingListStorage,","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"        this.meetingListStorage \u003d meetingListStorage;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"darrentde"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d MeetingList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"darrentde"},"content":"    public Path getMeetingListFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"darrentde"},"content":"        return meetingListStorage.getMeetingListFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"darrentde"},"content":"    public Optional\u003cReadOnlyMeetingList\u003e readMeetingList() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"darrentde"},"content":"        return readMeetingList(meetingListStorage.getMeetingListFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"darrentde"},"content":"    public Optional\u003cReadOnlyMeetingList\u003e readMeetingList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"darrentde"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"darrentde"},"content":"        return meetingListStorage.readMeetingList(filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"darrentde"},"content":"    public void saveMeetingList(ReadOnlyMeetingList meetingList) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"darrentde"},"content":"        saveMeetingList(meetingList, meetingListStorage.getMeetingListFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"darrentde"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"darrentde"},"content":"    public void saveMeetingList(ReadOnlyMeetingList meetingList, Path filePath) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"darrentde"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"darrentde"},"content":"        meetingListStorage.saveMeetingList(meetingList, filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"darrentde":34,"-":77}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"tinenhao"},"content":"        } catch (CommandException | ParseException | java.text.ParseException e) {","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"tinenhao"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException, java.text.ParseException;","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"tinenhao":2,"-":83}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103-f13-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"GenFusion122":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"mqchua"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"mqchua"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"mqchua"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"mqchua"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"mqchua"},"content":"    private MeetingListPanel meetingListPanel;","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"mqchua"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"mqchua"},"content":"    private StackPane meetingListPanelPlaceholder;","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"mqchua"},"content":"        meetingListPanel \u003d new MeetingListPanel(logic.getFilteredMeetingList());","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"mqchua"},"content":"        meetingListPanelPlaceholder.getChildren().add(meetingListPanel.getRoot());","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"mqchua"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"mqchua"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"mqchua"},"content":"                .map(Tag::new)","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"mqchua"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"mqchua"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"tinenhao"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException,","lastModifiedDate":"2022-10-18"},{"lineNumber":193,"author":{"gitId":"tinenhao"},"content":"            java.text.ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"tinenhao"},"content":"        } catch (CommandException | ParseException | java.text.ParseException e) {","lastModifiedDate":"2022-10-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"mqchua":17,"tinenhao":3,"-":194}},{"path":"src/main/java/seedu/address/ui/MeetingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mqchua"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"mqchua"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"mqchua"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"mqchua"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"mqchua"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"mqchua"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"mqchua"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"mqchua"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"mqchua"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"mqchua"},"content":"public class MeetingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"mqchua"},"content":"    private static final String FXML \u003d \"MeetingListCard.fxml\";","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"mqchua"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"mqchua"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"mqchua"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"mqchua"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"mqchua"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"mqchua"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"mqchua"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"mqchua"},"content":"    public final Meeting meeting;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"mqchua"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"mqchua"},"content":"    private HBox meetingCardPane;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"mqchua"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"mqchua"},"content":"    private Label id;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"mqchua"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"mqchua"},"content":"    private Label meetingDescription;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"mqchua"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"mqchua"},"content":"    private Label peopleToMeet;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"mqchua"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"mqchua"},"content":"    private Label meetingDateAndTime;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"mqchua"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"mqchua"},"content":"    private Label meetingLocation;","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"mqchua"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"mqchua"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"mqchua"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"mqchua"},"content":"    public MeetingCard(Meeting meeting, int displayedIndex) {","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"mqchua"},"content":"        super(FXML);","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"mqchua"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"mqchua"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"mqchua"},"content":"        meetingDescription.setText(meeting.getDescription());","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"HakkaNgin"},"content":"        peopleToMeet.setText(meeting.getPeopleToMeetAsString());","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"mqchua"},"content":"        meetingDateAndTime.setText(meeting.getDateAndTime());","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"mqchua"},"content":"        meetingLocation.setText(meeting.getLocation());","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"mqchua"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"mqchua"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"mqchua"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"mqchua"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"mqchua"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"mqchua"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"mqchua"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"mqchua"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"mqchua"},"content":"        if (!(other instanceof MeetingCard)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"mqchua"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"mqchua"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"mqchua"},"content":"        // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"mqchua"},"content":"        MeetingCard card \u003d (MeetingCard) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"mqchua"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"mqchua"},"content":"                \u0026\u0026 meeting.equals(card.meeting);","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"mqchua"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"mqchua"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"mqchua":68,"HakkaNgin":1}},{"path":"src/main/java/seedu/address/ui/MeetingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mqchua"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"mqchua"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"mqchua"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"mqchua"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"mqchua"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"mqchua"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"mqchua"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"mqchua"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"mqchua"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"mqchua"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"mqchua"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"mqchua"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"mqchua"},"content":"public class MeetingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"mqchua"},"content":"    private static final String FXML \u003d \"MeetingListPanel.fxml\";","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"mqchua"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MeetingListPanel.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"mqchua"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"mqchua"},"content":"    private ListView\u003cMeeting\u003e meetingListView;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"mqchua"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"mqchua"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"mqchua"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"mqchua"},"content":"    public MeetingListPanel(ObservableList\u003cMeeting\u003e meetingList) {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"mqchua"},"content":"        super(FXML);","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"mqchua"},"content":"        meetingListView.setItems(meetingList);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"mqchua"},"content":"        meetingListView.setCellFactory(listView -\u003e new MeetingListViewCell());","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"mqchua"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"mqchua"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"mqchua"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"mqchua"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"mqchua"},"content":"    class MeetingListViewCell extends ListCell\u003cMeeting\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"mqchua"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"mqchua"},"content":"        protected void updateItem(Meeting meeting, boolean empty) {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"mqchua"},"content":"            super.updateItem(meeting, empty);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"mqchua"},"content":"            if (empty || meeting \u003d\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"mqchua"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"mqchua"},"content":"                setText(null);","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"mqchua"},"content":"            } else {","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"mqchua"},"content":"                setGraphic(new MeetingCard(meeting, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"mqchua"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"mqchua"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"mqchua"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"mqchua"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"mqchua":46}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"mqchua"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"mqchua"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"mqchua"},"content":"        \u003cHBox minHeight\u003d\"-Infinity\" prefHeight\u003d\"440.0\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"mqchua"},"content":"            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"mqchua"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"mqchua"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":44,"author":{"gitId":"mqchua"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"mqchua"},"content":"            \u003cVBox fx:id\u003d\"meetingList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"340\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":47,"author":{"gitId":"mqchua"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":48,"author":{"gitId":"mqchua"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":49,"author":{"gitId":"mqchua"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":50,"author":{"gitId":"mqchua"},"content":"              \u003cStackPane fx:id\u003d\"meetingListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":51,"author":{"gitId":"mqchua"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":52,"author":{"gitId":"mqchua"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":53,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":54,"author":{"gitId":"mqchua"},"content":"        \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2022-09-17"},{"lineNumber":55,"author":{"gitId":"mqchua"},"content":"                   minHeight\u003d\"-Infinity\" prefHeight\u003d\"100\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":61,"author":{"gitId":"mqchua"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"mqchua":18,"-":53}},{"path":"src/main/resources/view/MeetingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mqchua"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"mqchua"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"mqchua"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"mqchua"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"mqchua"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"mqchua"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"mqchua"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"mqchua"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"mqchua"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"mqchua"},"content":"\u003cHBox id\u003d\"meetingCardPane\" fx:id\u003d\"meetingCardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"mqchua"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"mqchua"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"mqchua"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"mqchua"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"mqchua"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"mqchua"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"mqchua"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"mqchua"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"mqchua"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"mqchua"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"mqchua"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"mqchua"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"mqchua"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"mqchua"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"mqchua"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"mqchua"},"content":"                \u003cLabel fx:id\u003d\"meetingDescription\" text\u003d\"\\$meetingDescription\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"mqchua"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"mqchua"},"content":"            \u003cLabel fx:id\u003d\"peopleToMeet\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$peopleToMeet\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"mqchua"},"content":"            \u003cLabel fx:id\u003d\"meetingDateAndTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$meetingDateAndTime\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"mqchua"},"content":"            \u003cLabel fx:id\u003d\"meetingLocation\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$meetingLocation\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"mqchua"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"mqchua"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"mqchua"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"mqchua":36}},{"path":"src/main/resources/view/MeetingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mqchua"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"mqchua"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"mqchua"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"mqchua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"mqchua"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"mqchua"},"content":"    \u003cListView fx:id\u003d\"meetingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"mqchua"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"mqchua":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"import seedu.address.storage.JsonMeetingListStorage;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"darrentde"},"content":"        JsonMeetingListStorage meetingListStorage \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"darrentde"},"content":"                new JsonMeetingListStorage(temporaryFolder.resolve(\"meetinglist.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"darrentde"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, meetingListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"darrentde"},"content":"        JsonMeetingListStorage meetingListStorage \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"darrentde"},"content":"                new JsonMeetingListStorage(temporaryFolder.resolve(\"meetinglist.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"darrentde"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, meetingListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"tinenhao"},"content":"            Model expectedModel) throws CommandException, ParseException, java.text.ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"darrentde"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"darrentde":8,"tinenhao":1,"-":158}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingList;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"darrentde":3,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.ReadOnlyMeetingList;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":153,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":154,"author":{"gitId":"HakkaNgin"},"content":"        public Meeting createNewMeeting(ArrayList\u003cPerson\u003e peopleToMeet, String meetingTitle,","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"HakkaNgin"},"content":"                                        String meetingDateAndTime, String meetingLocation) {","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-09-28"},{"lineNumber":157,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":158,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":159,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"HakkaNgin"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"tinenhao"},"content":"        @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":165,"author":{"gitId":"tinenhao"},"content":"        public void setMeeting(Meeting meeting, Meeting editedMeeting) {","lastModifiedDate":"2022-10-18"},{"lineNumber":166,"author":{"gitId":"tinenhao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-18"},{"lineNumber":167,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":168,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":169,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":170,"author":{"gitId":"HakkaNgin"},"content":"        public void addMeeting(Meeting newMeeting) {","lastModifiedDate":"2022-10-02"},{"lineNumber":171,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-02"},{"lineNumber":172,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":173,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"tinenhao"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"tinenhao"},"content":"        public void addMeeting(Meeting newMeeting, int idx) {","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"tinenhao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":177,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":178,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":179,"author":{"gitId":"tinenhao"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"tinenhao"},"content":"        public void deleteMeeting(Meeting newMeeting) {","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"tinenhao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"darrentde"},"content":"        @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":185,"author":{"gitId":"darrentde"},"content":"        public void setMeetingList(ReadOnlyMeetingList meetingList) {","lastModifiedDate":"2022-10-14"},{"lineNumber":186,"author":{"gitId":"darrentde"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":187,"author":{"gitId":"darrentde"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":188,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":189,"author":{"gitId":"darrentde"},"content":"        @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":190,"author":{"gitId":"darrentde"},"content":"        public Path getMeetingListFilePath() {","lastModifiedDate":"2022-10-14"},{"lineNumber":191,"author":{"gitId":"darrentde"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":192,"author":{"gitId":"darrentde"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":193,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":194,"author":{"gitId":"darrentde"},"content":"        @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":195,"author":{"gitId":"darrentde"},"content":"        public ReadOnlyMeetingList getMeetingList() {","lastModifiedDate":"2022-10-14"},{"lineNumber":196,"author":{"gitId":"darrentde"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":197,"author":{"gitId":"darrentde"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":198,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":199,"author":{"gitId":"darrentde"},"content":"        @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":200,"author":{"gitId":"darrentde"},"content":"        public void setMeetingListFilePath(Path meetingListFilePath) {","lastModifiedDate":"2022-10-14"},{"lineNumber":201,"author":{"gitId":"darrentde"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":202,"author":{"gitId":"darrentde"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":203,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":204,"author":{"gitId":"GenFusion122"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":205,"author":{"gitId":"GenFusion122"},"content":"        public void sortMeetingListByDate(boolean isInAscending) {","lastModifiedDate":"2022-10-19"},{"lineNumber":206,"author":{"gitId":"GenFusion122"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":207,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":208,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":209,"author":{"gitId":"GenFusion122"},"content":"        /**","lastModifiedDate":"2022-10-09"},{"lineNumber":210,"author":{"gitId":"GenFusion122"},"content":"         * Updates the filter of the filtered meeting list to filter by implementation.","lastModifiedDate":"2022-10-09"},{"lineNumber":211,"author":{"gitId":"GenFusion122"},"content":"         *","lastModifiedDate":"2022-10-09"},{"lineNumber":212,"author":{"gitId":"GenFusion122"},"content":"         * @param predicate","lastModifiedDate":"2022-10-09"},{"lineNumber":213,"author":{"gitId":"GenFusion122"},"content":"         * @throws NullPointerException if {@param meetingList} is null.","lastModifiedDate":"2022-10-09"},{"lineNumber":214,"author":{"gitId":"GenFusion122"},"content":"         */","lastModifiedDate":"2022-10-09"},{"lineNumber":215,"author":{"gitId":"GenFusion122"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":216,"author":{"gitId":"GenFusion122"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2022-10-09"},{"lineNumber":217,"author":{"gitId":"GenFusion122"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-09"},{"lineNumber":218,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":219,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":220,"author":{"gitId":"GenFusion122"},"content":"        /**","lastModifiedDate":"2022-10-09"},{"lineNumber":221,"author":{"gitId":"GenFusion122"},"content":"         * Returns an unmodifiable view of the filtered meetings list","lastModifiedDate":"2022-10-09"},{"lineNumber":222,"author":{"gitId":"GenFusion122"},"content":"         */","lastModifiedDate":"2022-10-09"},{"lineNumber":223,"author":{"gitId":"GenFusion122"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":224,"author":{"gitId":"GenFusion122"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":225,"author":{"gitId":"GenFusion122"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-09"},{"lineNumber":226,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"darrentde":21,"GenFusion122":24,"tinenhao":15,"HakkaNgin":17,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonToMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingList;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"public class AddPersonToMeetingCommandTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"    public void equals() {","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"tinenhao"},"content":"        AddPersonToMeetingCommand firstCommand \u003d new AddPersonToMeetingCommand(\"test1\");","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"tinenhao"},"content":"        AddPersonToMeetingCommand secondCommand \u003d new AddPersonToMeetingCommand(\"test2\");","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"tinenhao"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"tinenhao"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"tinenhao"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"tinenhao"},"content":"        AddPersonToMeetingCommand firstCommandCopy \u003d new AddPersonToMeetingCommand(\"test1\");","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"tinenhao"},"content":"        assertTrue(firstCommand.equals(firstCommandCopy));","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"tinenhao"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"tinenhao"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"tinenhao"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"tinenhao"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"tinenhao"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"tinenhao"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"tinenhao"},"content":"    public void execute_add_onePerson() {","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"tinenhao"},"content":"        String expectedMessage \u003d AddPersonToMeetingCommand.MESSAGE_ADD_PEOPLE_TO_MEETING_SUCCESS;","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"tinenhao"},"content":"        AddPersonToMeetingCommand command \u003d new AddPersonToMeetingCommand(\"1; Benson\");","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"tinenhao"},"content":"        assertCommandSuccess(command, model, expectedMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"tinenhao"},"content":"        assertEquals(Arrays.asList(ALICE, CARL, BENSON), model.getMeetingList().getMeetingList().get(0)","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"tinenhao"},"content":"                        .getArrayListPersonToMeet());","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"tinenhao"},"content":"    public void execute_add_twoPersons() {","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"tinenhao"},"content":"        String expectedMessage \u003d AddPersonToMeetingCommand.MESSAGE_ADD_PEOPLE_TO_MEETING_SUCCESS;","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"tinenhao"},"content":"        AddPersonToMeetingCommand command \u003d new AddPersonToMeetingCommand(\"2; Benson, Daniel\");","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"tinenhao"},"content":"        assertCommandSuccess(command, model, expectedMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"tinenhao"},"content":"        assertEquals(Arrays.asList(ALICE, ELLE, FIONA, BENSON, DANIEL),","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"tinenhao"},"content":"                model.getMeetingList().getMeetingList().get(1).getArrayListPersonToMeet());","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"tinenhao"},"content":"    public void execute_add_existingPerson() {","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"tinenhao"},"content":"        String expectedMessage \u003d CreateMeetingCommand.DUPLICATE_PERSON_TO_MEET;","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"tinenhao"},"content":"        AddPersonToMeetingCommand command \u003d new AddPersonToMeetingCommand(\"1; Alice\");","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"tinenhao"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"tinenhao"},"content":"    public void execute_add_nonExistentPerson() {","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"HakkaNgin"},"content":"        String expectedMessage \u003d String.format(PersonNotFoundException.PERSON_NOT_FOUND, \"test\") + \"\\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":80,"author":{"gitId":"HakkaNgin"},"content":"            + CreateMeetingCommand.PERSON_NOT_FOUND;","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"tinenhao"},"content":"        AddPersonToMeetingCommand command \u003d new AddPersonToMeetingCommand(\"1; test\");","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"tinenhao"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"tinenhao"},"content":"    public void execute_add_duplicatePerson() {","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"tinenhao"},"content":"        String expectedMessage \u003d CreateMeetingCommand.DUPLICATE_PERSON_TO_MEET;","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"tinenhao"},"content":"        AddPersonToMeetingCommand command \u003d new AddPersonToMeetingCommand(\"1; Alice, Alice\");","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"tinenhao"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"tinenhao":88,"HakkaNgin":3}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingList;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.MeetingList;","lastModifiedDate":"2022-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"        expectedModel.setMeetingList(new MeetingList());","lastModifiedDate":"2022-10-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"darrentde":3,"GenFusion122":2,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.MeetingList;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.meeting.MeetingContainsKeywordsPredicate;","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"tinenhao"},"content":"    public static final String VALID_NAME_MEETING_1 \u003d \"Test 1\";","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"tinenhao"},"content":"    public static final String VALID_NAME_MEETING_2 \u003d \"Test 2\";","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"tinenhao"},"content":"    public static final String VALID_LOCATION_MEETING_1 \u003d \"Location 1\";","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"tinenhao"},"content":"    public static final String VALID_LOCATION_MEETING_2 \u003d \"Location 2\";","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"tinenhao"},"content":"    public static final String VALID_DATE_MEETING_1 \u003d \"23-09-2022 2359\";","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"tinenhao"},"content":"    public static final String VALID_DATE_MEETING_2 \u003d \"24-09-2022 2359\";","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"tinenhao"},"content":"    public static final String DESCRIPTION_DESC_MEETING_1 \u003d \" \" + PREFIX_DESCRIPTION + VALID_NAME_MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"tinenhao"},"content":"    public static final String DESCRIPTION_DESC_MEETING_2 \u003d \" \" + PREFIX_DESCRIPTION + VALID_NAME_MEETING_2;","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"tinenhao"},"content":"    public static final String LOCATION_DESC_MEETING_1 \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"tinenhao"},"content":"    public static final String LOCATION_DESC_MEETING_2 \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_MEETING_2;","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"tinenhao"},"content":"    public static final String DATE_DESC_MEETING_1 \u003d \" \" + PREFIX_DATE + VALID_DATE_MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"tinenhao"},"content":"    public static final String DATE_DESC_MEETING_2 \u003d \" \" + PREFIX_DATE + VALID_DATE_MEETING_2;","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"tinenhao"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE + \"GG\";","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"tinenhao"},"content":"    public static final EditMeetingCommand.EditMeetingDescriptor MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"tinenhao"},"content":"    public static final EditMeetingCommand.EditMeetingDescriptor MEETING_2;","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"tinenhao"},"content":"    static {","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"tinenhao"},"content":"        MEETING_1 \u003d new EditMeetingDescriptorBuilder().withDescription(VALID_NAME_MEETING_1)","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"tinenhao"},"content":"                .withLocation(VALID_LOCATION_MEETING_1).withDate(VALID_DATE_MEETING_1).build();","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"tinenhao"},"content":"        MEETING_2 \u003d new EditMeetingDescriptorBuilder().withDescription(VALID_NAME_MEETING_2)","lastModifiedDate":"2022-10-22"},{"lineNumber":103,"author":{"gitId":"tinenhao"},"content":"                .withLocation(VALID_LOCATION_MEETING_2).withDate(VALID_DATE_MEETING_2).build();","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"tinenhao"},"content":"        } catch (CommandException | ParseException | java.text.ParseException e) {","lastModifiedDate":"2022-10-18"},{"lineNumber":118,"author":{"gitId":"tinenhao"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2022-10-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"tinenhao"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"tinenhao"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"tinenhao"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"tinenhao"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"tinenhao"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, actualModel);","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"tinenhao"},"content":"        MeetingList expectedMeetingList \u003d new MeetingList(actualModel.getMeetingList());","lastModifiedDate":"2022-10-21"},{"lineNumber":153,"author":{"gitId":"tinenhao"},"content":"        List\u003cMeeting\u003e expectedFilteredMeetingList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredMeetingList());","lastModifiedDate":"2022-10-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"tinenhao"},"content":"        assertEquals(expectedMeetingList, actualModel.getMeetingList());","lastModifiedDate":"2022-10-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"tinenhao"},"content":"        assertEquals(expectedFilteredMeetingList, actualModel.getFilteredMeetingList());","lastModifiedDate":"2022-10-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":176,"author":{"gitId":"tinenhao"},"content":"     * Updates {@code model}\u0027s filtered list to show only the meeting at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-22"},{"lineNumber":177,"author":{"gitId":"tinenhao"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-10-22"},{"lineNumber":178,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":179,"author":{"gitId":"tinenhao"},"content":"    public static void showMeetingAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-22"},{"lineNumber":180,"author":{"gitId":"tinenhao"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredMeetingList().size());","lastModifiedDate":"2022-10-22"},{"lineNumber":181,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":182,"author":{"gitId":"tinenhao"},"content":"        Meeting meeting \u003d model.getFilteredMeetingList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-22"},{"lineNumber":183,"author":{"gitId":"tinenhao"},"content":"        final String[] splitDescription \u003d meeting.getDescription().split(\"\\\\s+\");","lastModifiedDate":"2022-10-22"},{"lineNumber":184,"author":{"gitId":"tinenhao"},"content":"        model.updateFilteredMeetingList(new MeetingContainsKeywordsPredicate(Arrays.asList(splitDescription[0]),","lastModifiedDate":"2022-10-22"},{"lineNumber":185,"author":{"gitId":"tinenhao"},"content":"                Meeting::getDescription));","lastModifiedDate":"2022-10-22"},{"lineNumber":186,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":187,"author":{"gitId":"tinenhao"},"content":"        assertEquals(1, model.getFilteredMeetingList().size());","lastModifiedDate":"2022-10-22"},{"lineNumber":188,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":189,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tinenhao":64,"-":126}},{"path":"src/test/java/seedu/address/logic/commands/CreateMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"/*","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.ReadOnlyMeetingList;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.UniqueMeetingList;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"HakkaNgin"},"content":"public class CreateMeetingCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"HakkaNgin"},"content":"    public void execute_meetingCreatedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"HakkaNgin"},"content":"        String meetingInfo \u003d \"Amy ;;; Do CS2103 Project ;;; 16-10-2022 1530 ;;; University Town\";","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommand createMeetingCommand \u003d new CreateMeetingCommand(meetingInfo);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommandTest.ModelStubAcceptingMeetingCreated modelStub \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"HakkaNgin"},"content":"            new CreateMeetingCommandTest.ModelStubAcceptingMeetingCreated();","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"HakkaNgin"},"content":"        CommandResult commandResult \u003d createMeetingCommand.execute(modelStub);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"HakkaNgin"},"content":"        Meeting validMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"HakkaNgin"},"content":"        assertEquals(String.format(CreateMeetingCommand.MESSAGE_CREATE_MEETING_SUCCESS, validMeeting),","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"HakkaNgin"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"HakkaNgin"},"content":"        assertEquals(Arrays.asList(validMeeting), modelStub.meetingsAdded);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"HakkaNgin"},"content":"    public void execute_duplicateMeeting_throwsDuplicateMeetingException() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"HakkaNgin"},"content":"        String meetingInfo \u003d \"Amy ;;; Do CS2103 Project ;;; 16-10-2022 1530 ;;; University Town\";","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommand createMeetingCommand \u003d new CreateMeetingCommand(meetingInfo);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"HakkaNgin"},"content":"        Meeting validMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommandTest.ModelStubWithMeeting modelStub \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"HakkaNgin"},"content":"            new CreateMeetingCommandTest.ModelStubWithMeeting(validMeeting);","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"HakkaNgin"},"content":"        String actualFeedBack \u003d createMeetingCommand.execute(modelStub).getFeedbackToUser();","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"HakkaNgin"},"content":"        assertEquals(CreateMeetingCommand.DUPLICATE_MEETINGS, actualFeedBack);","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"HakkaNgin"},"content":"    public void execute_personToMeetNotFound_throwsPersonNotFoundException() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"HakkaNgin"},"content":"        String meetingInfo \u003d \"Ben ;;; Do CS2103 Project ;;; 16-10-2022 1530 ;;; University Town\";","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommand createMeetingCommand \u003d new CreateMeetingCommand(meetingInfo);","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommandTest.ModelStubAcceptingMeetingCreated modelStub \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"HakkaNgin"},"content":"            new CreateMeetingCommandTest.ModelStubAcceptingMeetingCreated();","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"HakkaNgin"},"content":"        String actualFeedback \u003d createMeetingCommand.execute(modelStub).getFeedbackToUser();","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"HakkaNgin"},"content":"        assertEquals(CreateMeetingCommand.PERSON_NOT_FOUND, actualFeedback);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"HakkaNgin"},"content":"    public void execute_duplicatePersonToMeet_throwsDuplicatePersonException() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"HakkaNgin"},"content":"        String meetingInfo \u003d \"Amy }} Amy ;;; Do CS2103 Project ;;; 16-10-2022 1530 ;;; University Town\";","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommand createMeetingCommand \u003d new CreateMeetingCommand(meetingInfo);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommandTest.ModelStubAcceptingMeetingCreated modelStub \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"HakkaNgin"},"content":"            new CreateMeetingCommandTest.ModelStubAcceptingMeetingCreated();","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"HakkaNgin"},"content":"        String actualFeedback \u003d createMeetingCommand.execute(modelStub).getFeedbackToUser();","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"HakkaNgin"},"content":"        assertEquals(CreateMeetingCommand.DUPLICATE_PERSON_TO_MEET, actualFeedback);","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"HakkaNgin"},"content":"    public void execute_personToMeetIsBlank_throwsParseException() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"HakkaNgin"},"content":"        String meetingInfo \u003d \";;; Do CS2103 Project ;;; 16-10-2022 1530 ;;; University Town\";","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommand createMeetingCommand \u003d new CreateMeetingCommand(meetingInfo);","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommandTest.ModelStubAcceptingMeetingCreated modelStub \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"HakkaNgin"},"content":"            new CreateMeetingCommandTest.ModelStubAcceptingMeetingCreated();","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"HakkaNgin"},"content":"        String actualFeedback \u003d createMeetingCommand.execute(modelStub).getFeedbackToUser();","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"HakkaNgin"},"content":"        assertEquals(CreateMeetingCommand.PERSON_NOT_FOUND, actualFeedback);","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"HakkaNgin"},"content":"    public void execute_wrongNumberOfArguments_throwsIndexOutOfBoundsException() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"HakkaNgin"},"content":"        String meetingInfo \u003d \"Amy ;;; Do CS2103 Project\";","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommand createMeetingCommand \u003d new CreateMeetingCommand(meetingInfo);","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommandTest.ModelStubAcceptingMeetingCreated modelStub \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"HakkaNgin"},"content":"            new CreateMeetingCommandTest.ModelStubAcceptingMeetingCreated();","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"HakkaNgin"},"content":"        String actualFeedback \u003d createMeetingCommand.execute(modelStub).getFeedbackToUser();","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"HakkaNgin"},"content":"        assertEquals(CreateMeetingCommand.INCORRECT_NUMBER_OF_ARGUMENTS, actualFeedback);","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"HakkaNgin"},"content":"    public void execute_dateAndTimeInWrongFormat_throwsParseException() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"HakkaNgin"},"content":"        String meetingInfo \u003d \"Amy ;;; Do CS2103 Project ;;; tomorrow ;;; University Town\";","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommand createMeetingCommand \u003d new CreateMeetingCommand(meetingInfo);","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommandTest.ModelStubAcceptingMeetingCreated modelStub \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"HakkaNgin"},"content":"            new CreateMeetingCommandTest.ModelStubAcceptingMeetingCreated();","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"HakkaNgin"},"content":"        String actualFeedback \u003d createMeetingCommand.execute(modelStub).getFeedbackToUser();","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"HakkaNgin"},"content":"        assertEquals(\"Meeting date: tomorrow is not in dd-MM-yyyy format\", actualFeedback);","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"HakkaNgin"},"content":"    public void equals() throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"HakkaNgin"},"content":"        String meetAlice \u003d \"Alice ;;; Do CS2103 Project ;;; 16-10-2022 1530 ;;; University Town\";","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"HakkaNgin"},"content":"        String meetAliceAgain \u003d \"Alice ;;; Do CS2103 Project ;;; 17-10-2022 1200 ;;; University Town\";","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"HakkaNgin"},"content":"        String meetBob \u003d \"Bob ;;; Do CS2103 Project ;;; 16-10-2022 1530 ;;; University Town\";","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"HakkaNgin"},"content":"        String meetAliceAndBob \u003d \"Alice }} Bob ;;; Do CS2103 Project ;;; 16-10-2022 1530 ;;; University Town\";","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"HakkaNgin"},"content":"        String meetAliceAndCharlie \u003d \"Alice }} Charlie ;;; Do CS2103 Project ;;; 16-10-2022 1530 ;;; University Town\";","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"HakkaNgin"},"content":"        String meetAliceAndCharlieConflict \u003d \"Alice }} Charlie ;;; Shopping ;;; 16-10-2022 1530 ;;; VivoCity\";","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommand createMeetingWithAlice \u003d new CreateMeetingCommand(meetAlice);","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommand createMeetingWithAliceAgain \u003d new CreateMeetingCommand(meetAliceAgain);","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommand createMeetingWithBob \u003d new CreateMeetingCommand(meetBob);","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommand createMeetingWithAliceAndBob \u003d new CreateMeetingCommand(meetAliceAndBob);","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommand createMeetingWithAliceAndCharlie \u003d new CreateMeetingCommand(meetAliceAndCharlie);","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommand createMeetingWithAliceAndCharlieConflict \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"HakkaNgin"},"content":"            new CreateMeetingCommand(meetAliceAndCharlieConflict);","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"HakkaNgin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"HakkaNgin"},"content":"        assertTrue(createMeetingWithAlice.equals(createMeetingWithAlice));","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"HakkaNgin"},"content":"        // single person meeting: same values -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommand createMeetingWithAliceCopy \u003d new CreateMeetingCommand(meetAlice);","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"HakkaNgin"},"content":"        assertTrue(createMeetingWithAlice.equals(createMeetingWithAliceCopy));","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"HakkaNgin"},"content":"        // multiple people meeting: same values -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"HakkaNgin"},"content":"        CreateMeetingCommand createMeetingWithAliceAndBobCopy \u003d new CreateMeetingCommand(meetAliceAndBob);","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"HakkaNgin"},"content":"        assertTrue(createMeetingWithAliceAndBob.equals(createMeetingWithAliceAndBobCopy));","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"HakkaNgin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(createMeetingWithAlice.equals(1));","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"HakkaNgin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(createMeetingWithAlice.equals(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"HakkaNgin"},"content":"        // single person meeting: different person -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(createMeetingWithAlice.equals(createMeetingWithBob));","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"HakkaNgin"},"content":"        // single vs multiple person meeting: different person -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(createMeetingWithAliceAndBob.equals(createMeetingWithAlice));","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"HakkaNgin"},"content":"        // multiple person meeting: different people -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(createMeetingWithAliceAndCharlie.equals(createMeetingWithAliceAndBob));","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"HakkaNgin"},"content":"        // meeting same person at different time -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(createMeetingWithAlice.equals(createMeetingWithAliceAgain));","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"HakkaNgin"},"content":"        // meeting same people at same time but at different location and different meeting title -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"HakkaNgin"},"content":"        // NOTE: Under Meeting::isSameMeeting(Meeting), the meeting objects created are equal","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"HakkaNgin"},"content":"        // under the weaker notion of equality","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"HakkaNgin"},"content":"        // Under Meeting::equals(Object), the meeting objects created are NOT equal","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"HakkaNgin"},"content":"        // under the stronger notion of equality","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(createMeetingWithAliceAndCharlie.equals(createMeetingWithAliceAndCharlieConflict));","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"HakkaNgin"},"content":"    */","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"HakkaNgin"},"content":"     * A default address book stub that has most of the methods failing.","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"HakkaNgin"},"content":"     *//*","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"HakkaNgin"},"content":"    private class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"HakkaNgin"},"content":"        private final UniquePersonList persons;","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"HakkaNgin"},"content":"        private final UniqueMeetingList meetings;","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"HakkaNgin"},"content":"        AddressBookStub() {","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"HakkaNgin"},"content":"            addPerson(new PersonBuilder().withTags(\"Classmate\", \"Dalao\").build());","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"HakkaNgin"},"content":"        */","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"HakkaNgin"},"content":"/*","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"HakkaNgin"},"content":"         * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"HakkaNgin"},"content":"         * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"HakkaNgin"},"content":"         *","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"HakkaNgin"},"content":"         * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"HakkaNgin"},"content":"         *   among constructors.","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"HakkaNgin"},"content":"         *//*","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"HakkaNgin"},"content":"        {","lastModifiedDate":"2022-10-12"},{"lineNumber":196,"author":{"gitId":"HakkaNgin"},"content":"            persons \u003d new UniquePersonList();","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"HakkaNgin"},"content":"            meetings \u003d new UniqueMeetingList();","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"HakkaNgin"},"content":"        //// list overwrite operations","lastModifiedDate":"2022-10-12"},{"lineNumber":201,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":202,"author":{"gitId":"HakkaNgin"},"content":"        */","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":204,"author":{"gitId":"HakkaNgin"},"content":"         * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2022-10-12"},{"lineNumber":205,"author":{"gitId":"HakkaNgin"},"content":"         * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2022-10-12"},{"lineNumber":206,"author":{"gitId":"HakkaNgin"},"content":"         *//*","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"HakkaNgin"},"content":"        public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2022-10-12"},{"lineNumber":209,"author":{"gitId":"HakkaNgin"},"content":"            this.persons.setPersons(persons);","lastModifiedDate":"2022-10-12"},{"lineNumber":210,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":211,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":212,"author":{"gitId":"HakkaNgin"},"content":"        //// person-level operations","lastModifiedDate":"2022-10-12"},{"lineNumber":213,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":214,"author":{"gitId":"HakkaNgin"},"content":"        */","lastModifiedDate":"2022-10-26"},{"lineNumber":215,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":216,"author":{"gitId":"HakkaNgin"},"content":"         * Adds a person to the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":217,"author":{"gitId":"HakkaNgin"},"content":"         * The person must not already exist in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":218,"author":{"gitId":"HakkaNgin"},"content":"         *//*","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"HakkaNgin"},"content":"        public void addPerson(Person p) {","lastModifiedDate":"2022-10-12"},{"lineNumber":221,"author":{"gitId":"HakkaNgin"},"content":"            persons.add(p);","lastModifiedDate":"2022-10-12"},{"lineNumber":222,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":223,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":224,"author":{"gitId":"HakkaNgin"},"content":"        */","lastModifiedDate":"2022-10-26"},{"lineNumber":225,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":226,"author":{"gitId":"HakkaNgin"},"content":"         * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":227,"author":{"gitId":"HakkaNgin"},"content":"         *//*","lastModifiedDate":"2022-10-26"},{"lineNumber":228,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":229,"author":{"gitId":"HakkaNgin"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":230,"author":{"gitId":"HakkaNgin"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-10-12"},{"lineNumber":231,"author":{"gitId":"HakkaNgin"},"content":"            return persons.contains(person);","lastModifiedDate":"2022-10-12"},{"lineNumber":232,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":233,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":234,"author":{"gitId":"HakkaNgin"},"content":"        //// meeting-level operations","lastModifiedDate":"2022-10-12"},{"lineNumber":235,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"HakkaNgin"},"content":"        */","lastModifiedDate":"2022-10-26"},{"lineNumber":237,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":238,"author":{"gitId":"HakkaNgin"},"content":"         * Returns true if a Meeting with the same person to meet","lastModifiedDate":"2022-10-12"},{"lineNumber":239,"author":{"gitId":"HakkaNgin"},"content":"         * and date and time as {@code meeting} exists in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":240,"author":{"gitId":"HakkaNgin"},"content":"         *//*","lastModifiedDate":"2022-10-26"},{"lineNumber":241,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":242,"author":{"gitId":"HakkaNgin"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-12"},{"lineNumber":243,"author":{"gitId":"HakkaNgin"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":244,"author":{"gitId":"HakkaNgin"},"content":"            return meetings.contains(meeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":245,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":246,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":247,"author":{"gitId":"HakkaNgin"},"content":"        */","lastModifiedDate":"2022-10-26"},{"lineNumber":248,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":249,"author":{"gitId":"HakkaNgin"},"content":"         * Adds a person to the address book.","lastModifiedDate":"2022-10-13"},{"lineNumber":250,"author":{"gitId":"HakkaNgin"},"content":"         * The person must not already exist in the address book.","lastModifiedDate":"2022-10-13"},{"lineNumber":251,"author":{"gitId":"HakkaNgin"},"content":"         *//*","lastModifiedDate":"2022-10-26"},{"lineNumber":252,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":253,"author":{"gitId":"HakkaNgin"},"content":"        public void addMeeting(Meeting newMeeting) {","lastModifiedDate":"2022-10-13"},{"lineNumber":254,"author":{"gitId":"HakkaNgin"},"content":"            this.meetings.add(newMeeting);","lastModifiedDate":"2022-10-13"},{"lineNumber":255,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":256,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":257,"author":{"gitId":"HakkaNgin"},"content":"        //// util methods","lastModifiedDate":"2022-10-12"},{"lineNumber":258,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":259,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":260,"author":{"gitId":"HakkaNgin"},"content":"        public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":261,"author":{"gitId":"HakkaNgin"},"content":"            return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2022-10-12"},{"lineNumber":262,"author":{"gitId":"HakkaNgin"},"content":"            // TODO: refine later","lastModifiedDate":"2022-10-12"},{"lineNumber":263,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":264,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":265,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":266,"author":{"gitId":"HakkaNgin"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":267,"author":{"gitId":"HakkaNgin"},"content":"            return persons.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-12"},{"lineNumber":268,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":269,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":270,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":271,"author":{"gitId":"HakkaNgin"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":272,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":273,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":274,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":275,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":276,"author":{"gitId":"HakkaNgin"},"content":"        public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":277,"author":{"gitId":"HakkaNgin"},"content":"            return persons.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":278,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":279,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":280,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":281,"author":{"gitId":"HakkaNgin"},"content":"    */","lastModifiedDate":"2022-10-26"},{"lineNumber":282,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":283,"author":{"gitId":"HakkaNgin"},"content":"     * A default model stub that has most of the methods failing.","lastModifiedDate":"2022-10-12"},{"lineNumber":284,"author":{"gitId":"HakkaNgin"},"content":"     *//*","lastModifiedDate":"2022-10-26"},{"lineNumber":285,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":286,"author":{"gitId":"HakkaNgin"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-10-12"},{"lineNumber":287,"author":{"gitId":"HakkaNgin"},"content":"        private AddressBookStub addressBookStub \u003d new AddressBookStub();","lastModifiedDate":"2022-10-16"},{"lineNumber":288,"author":{"gitId":"HakkaNgin"},"content":"        private final FilteredList\u003cPerson\u003e filteredPersons \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":289,"author":{"gitId":"HakkaNgin"},"content":"            new FilteredList\u003c\u003e(addressBookStub.getPersonList());","lastModifiedDate":"2022-10-16"},{"lineNumber":290,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":291,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":292,"author":{"gitId":"HakkaNgin"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-12"},{"lineNumber":293,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":294,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":295,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":296,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":297,"author":{"gitId":"HakkaNgin"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-12"},{"lineNumber":298,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":299,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":300,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":301,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":302,"author":{"gitId":"HakkaNgin"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-12"},{"lineNumber":303,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":304,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":305,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":306,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":307,"author":{"gitId":"HakkaNgin"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-12"},{"lineNumber":308,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":309,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":310,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":311,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":312,"author":{"gitId":"HakkaNgin"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":313,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":314,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":315,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":316,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":317,"author":{"gitId":"HakkaNgin"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":318,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":319,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":320,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":321,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":322,"author":{"gitId":"HakkaNgin"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":323,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":324,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":325,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":326,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":327,"author":{"gitId":"HakkaNgin"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-10-12"},{"lineNumber":328,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":329,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":330,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":331,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":332,"author":{"gitId":"HakkaNgin"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-12"},{"lineNumber":333,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":334,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":335,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":336,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":337,"author":{"gitId":"HakkaNgin"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":338,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":339,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":340,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":341,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":342,"author":{"gitId":"HakkaNgin"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-10-12"},{"lineNumber":343,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":344,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":345,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":346,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":347,"author":{"gitId":"HakkaNgin"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-10-12"},{"lineNumber":348,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":349,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":350,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":351,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":352,"author":{"gitId":"HakkaNgin"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":353,"author":{"gitId":"HakkaNgin"},"content":"            return filteredPersons;","lastModifiedDate":"2022-10-12"},{"lineNumber":354,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":355,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":356,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":357,"author":{"gitId":"HakkaNgin"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":358,"author":{"gitId":"HakkaNgin"},"content":"            requireNonNull(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":359,"author":{"gitId":"HakkaNgin"},"content":"            filteredPersons.setPredicate(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":360,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":361,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":362,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":363,"author":{"gitId":"HakkaNgin"},"content":"        public Meeting createNewMeeting(ArrayList\u003cPerson\u003e peopleToMeet, String meetingTitle,","lastModifiedDate":"2022-10-12"},{"lineNumber":364,"author":{"gitId":"HakkaNgin"},"content":"                                        String meetingDateAndTime, String meetingLocation) {","lastModifiedDate":"2022-10-26"},{"lineNumber":365,"author":{"gitId":"HakkaNgin"},"content":"            return new Meeting(peopleToMeet, meetingTitle, meetingDateAndTime, meetingLocation);","lastModifiedDate":"2022-10-12"},{"lineNumber":366,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":367,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":368,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":369,"author":{"gitId":"HakkaNgin"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-12"},{"lineNumber":370,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":371,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":372,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":373,"author":{"gitId":"tinenhao"},"content":"        @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":374,"author":{"gitId":"tinenhao"},"content":"        public void setMeeting(Meeting meeting, Meeting editedMeeting) {","lastModifiedDate":"2022-10-18"},{"lineNumber":375,"author":{"gitId":"tinenhao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-18"},{"lineNumber":376,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":377,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":378,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":379,"author":{"gitId":"HakkaNgin"},"content":"        public void addMeeting(Meeting newMeeting) {","lastModifiedDate":"2022-10-12"},{"lineNumber":380,"author":{"gitId":"HakkaNgin"},"content":"            this.addressBookStub.addMeeting(newMeeting);","lastModifiedDate":"2022-10-16"},{"lineNumber":381,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":382,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":383,"author":{"gitId":"tinenhao"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":384,"author":{"gitId":"tinenhao"},"content":"        public void addMeeting(Meeting newMeeting, int idx) {","lastModifiedDate":"2022-10-21"},{"lineNumber":385,"author":{"gitId":"tinenhao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":386,"author":{"gitId":"tinenhao"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":387,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":388,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":389,"author":{"gitId":"HakkaNgin"},"content":"        public void deleteMeeting(Meeting newMeeting) {","lastModifiedDate":"2022-10-12"},{"lineNumber":390,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":391,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":392,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":393,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":394,"author":{"gitId":"HakkaNgin"},"content":"        public void setMeetingList(ReadOnlyMeetingList meetingList) {","lastModifiedDate":"2022-10-16"},{"lineNumber":395,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":396,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":397,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":398,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":399,"author":{"gitId":"HakkaNgin"},"content":"        public ReadOnlyMeetingList getMeetingList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":400,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":401,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":402,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":403,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":404,"author":{"gitId":"HakkaNgin"},"content":"        public Path getMeetingListFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":405,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":406,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":407,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":408,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":409,"author":{"gitId":"HakkaNgin"},"content":"        public void setMeetingListFilePath(Path meetingListFilePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":410,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":411,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":412,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":413,"author":{"gitId":"GenFusion122"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":414,"author":{"gitId":"GenFusion122"},"content":"        public void sortMeetingListByDate(boolean isInAscending) {","lastModifiedDate":"2022-10-19"},{"lineNumber":415,"author":{"gitId":"GenFusion122"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":416,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":417,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":418,"author":{"gitId":"HakkaNgin"},"content":"        */","lastModifiedDate":"2022-10-26"},{"lineNumber":419,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":420,"author":{"gitId":"HakkaNgin"},"content":"         * Updates the filter of the filtered meeting list to filter by implementation.","lastModifiedDate":"2022-10-12"},{"lineNumber":421,"author":{"gitId":"HakkaNgin"},"content":"         *","lastModifiedDate":"2022-10-12"},{"lineNumber":422,"author":{"gitId":"HakkaNgin"},"content":"         * @param predicate","lastModifiedDate":"2022-10-12"},{"lineNumber":423,"author":{"gitId":"HakkaNgin"},"content":"         * @throws NullPointerException if {@param meetingList} is null.","lastModifiedDate":"2022-10-12"},{"lineNumber":424,"author":{"gitId":"HakkaNgin"},"content":"         *//*","lastModifiedDate":"2022-10-26"},{"lineNumber":425,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":426,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":427,"author":{"gitId":"HakkaNgin"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":428,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":429,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":430,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":431,"author":{"gitId":"HakkaNgin"},"content":"        */","lastModifiedDate":"2022-10-26"},{"lineNumber":432,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":433,"author":{"gitId":"HakkaNgin"},"content":"         * Returns an unmodifiable view of the filtered meetings list","lastModifiedDate":"2022-10-12"},{"lineNumber":434,"author":{"gitId":"HakkaNgin"},"content":"         *//*","lastModifiedDate":"2022-10-26"},{"lineNumber":435,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":436,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":437,"author":{"gitId":"HakkaNgin"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":438,"author":{"gitId":"HakkaNgin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":439,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":440,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":441,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":442,"author":{"gitId":"HakkaNgin"},"content":"    */","lastModifiedDate":"2022-10-26"},{"lineNumber":443,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":444,"author":{"gitId":"HakkaNgin"},"content":"     * A Model stub that contains a single Meeting.","lastModifiedDate":"2022-10-12"},{"lineNumber":445,"author":{"gitId":"HakkaNgin"},"content":"     * To test for duplicateMeetingException","lastModifiedDate":"2022-10-12"},{"lineNumber":446,"author":{"gitId":"HakkaNgin"},"content":"     *//*","lastModifiedDate":"2022-10-26"},{"lineNumber":447,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":448,"author":{"gitId":"HakkaNgin"},"content":"    private class ModelStubWithMeeting extends CreateMeetingCommandTest.ModelStub {","lastModifiedDate":"2022-10-12"},{"lineNumber":449,"author":{"gitId":"HakkaNgin"},"content":"        private final Meeting meeting;","lastModifiedDate":"2022-10-12"},{"lineNumber":450,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":451,"author":{"gitId":"HakkaNgin"},"content":"        ModelStubWithMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-12"},{"lineNumber":452,"author":{"gitId":"HakkaNgin"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":453,"author":{"gitId":"HakkaNgin"},"content":"            this.meeting \u003d meeting;","lastModifiedDate":"2022-10-12"},{"lineNumber":454,"author":{"gitId":"HakkaNgin"},"content":"            addMeeting(meeting);","lastModifiedDate":"2022-10-16"},{"lineNumber":455,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":456,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":457,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":458,"author":{"gitId":"HakkaNgin"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-12"},{"lineNumber":459,"author":{"gitId":"HakkaNgin"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":460,"author":{"gitId":"HakkaNgin"},"content":"            return this.meeting.isSameMeeting(meeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":461,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":462,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":463,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":464,"author":{"gitId":"HakkaNgin"},"content":"    */","lastModifiedDate":"2022-10-26"},{"lineNumber":465,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":466,"author":{"gitId":"HakkaNgin"},"content":"     * A Model stub that always accepts the person being added.","lastModifiedDate":"2022-10-12"},{"lineNumber":467,"author":{"gitId":"HakkaNgin"},"content":"     *//*","lastModifiedDate":"2022-10-26"},{"lineNumber":468,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":469,"author":{"gitId":"HakkaNgin"},"content":"    private class ModelStubAcceptingMeetingCreated extends CreateMeetingCommandTest.ModelStub {","lastModifiedDate":"2022-10-12"},{"lineNumber":470,"author":{"gitId":"HakkaNgin"},"content":"        final ArrayList\u003cMeeting\u003e meetingsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":471,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":472,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":473,"author":{"gitId":"HakkaNgin"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-12"},{"lineNumber":474,"author":{"gitId":"HakkaNgin"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":475,"author":{"gitId":"HakkaNgin"},"content":"            return meetingsAdded.stream().anyMatch(meeting::isSameMeeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":476,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":477,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":478,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":479,"author":{"gitId":"HakkaNgin"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-12"},{"lineNumber":480,"author":{"gitId":"HakkaNgin"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":481,"author":{"gitId":"HakkaNgin"},"content":"            if (hasMeeting(meeting)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":482,"author":{"gitId":"HakkaNgin"},"content":"                throw new DuplicateMeetingException();","lastModifiedDate":"2022-10-13"},{"lineNumber":483,"author":{"gitId":"HakkaNgin"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":484,"author":{"gitId":"HakkaNgin"},"content":"            meetingsAdded.add(meeting);","lastModifiedDate":"2022-10-12"},{"lineNumber":485,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":486,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":487,"author":{"gitId":"HakkaNgin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":488,"author":{"gitId":"HakkaNgin"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-12"},{"lineNumber":489,"author":{"gitId":"HakkaNgin"},"content":"            return new AddressBook();","lastModifiedDate":"2022-10-12"},{"lineNumber":490,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":491,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":492,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":493,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":494,"author":{"gitId":"HakkaNgin"},"content":"*/","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"GenFusion122":5,"tinenhao":8,"HakkaNgin":481}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingList;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"darrentde"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"darrentde":4,"-":106}},{"path":"src/test/java/seedu/address/logic/commands/DeletePersonFromMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingList;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"public class DeletePersonFromMeetingCommandTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"    public void equals() {","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"        DeletePersonFromMeetingCommand firstCommand \u003d new DeletePersonFromMeetingCommand(\"test1\");","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"        DeletePersonFromMeetingCommand secondCommand \u003d new DeletePersonFromMeetingCommand(\"test2\");","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"tinenhao"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"tinenhao"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"tinenhao"},"content":"        DeletePersonFromMeetingCommand firstCommandCopy \u003d new DeletePersonFromMeetingCommand(\"test1\");","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"tinenhao"},"content":"        assertTrue(firstCommand.equals(firstCommandCopy));","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"tinenhao"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"tinenhao"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"tinenhao"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"tinenhao"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"tinenhao"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"tinenhao"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"tinenhao"},"content":"    public void execute_delete_onePerson() {","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"tinenhao"},"content":"        String expectedMessage \u003d DeletePersonFromMeetingCommand.MESSAGE_DELETE_PEOPLE_TO_MEETING_SUCCESS;","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"tinenhao"},"content":"        DeletePersonFromMeetingCommand command \u003d new DeletePersonFromMeetingCommand(\"1; Carl\");","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"tinenhao"},"content":"        assertCommandSuccess(command, model, expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"tinenhao"},"content":"        assertEquals(Arrays.asList(ALICE), model.getMeetingList().getMeetingList().get(0).getArrayListPersonToMeet());","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"tinenhao"},"content":"    public void execute_delete_twoPersons() {","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"tinenhao"},"content":"        String expectedMessage \u003d DeletePersonFromMeetingCommand.MESSAGE_DELETE_PEOPLE_TO_MEETING_SUCCESS;","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"tinenhao"},"content":"        DeletePersonFromMeetingCommand command \u003d new DeletePersonFromMeetingCommand(\"2; Alice, Elle\");","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"tinenhao"},"content":"        assertCommandSuccess(command, model, expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"tinenhao"},"content":"        assertEquals(Arrays.asList(FIONA), model.getMeetingList().getMeetingList().get(1).getArrayListPersonToMeet());","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"tinenhao"},"content":"    public void execute_delete_nonExistentPerson() {","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"HakkaNgin"},"content":"        String expectedMessage \u003d String.format(PersonNotFoundException.PERSON_NOT_FOUND, \"test\") + \"\\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":67,"author":{"gitId":"GenFusion122"},"content":"            + DeletePersonFromMeetingCommand.MESSAGE_DELETE_PEOPLE_NOT_FOUND;","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"tinenhao"},"content":"        DeletePersonFromMeetingCommand command \u003d new DeletePersonFromMeetingCommand(\"1; test\");","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"tinenhao"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"tinenhao"},"content":"    public void execute_delete_moreThanMeetingSize() {","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"tinenhao"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_MEETING_ONLY_ONE_LEFT;","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"tinenhao"},"content":"        DeletePersonFromMeetingCommand command \u003d new DeletePersonFromMeetingCommand(\"1; Alice, Carl\");","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"tinenhao"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"tinenhao"},"content":"    public void execute_delete_samePerson() {","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"tinenhao"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_DUPLICATE_NAMES;","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"tinenhao"},"content":"        DeletePersonFromMeetingCommand command \u003d new DeletePersonFromMeetingCommand(\"2; Alice, Alice\");","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"tinenhao"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"GenFusion122":1,"tinenhao":82,"HakkaNgin":2}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingList;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.MeetingList;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"darrentde"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"darrentde"},"content":"                                new MeetingList(model.getMeetingList()), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"darrentde"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"darrentde"},"content":"                                new MeetingList(model.getMeetingList()), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"darrentde"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"darrentde"},"content":"                                new MeetingList(model.getMeetingList()), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"darrentde"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"darrentde"},"content":"                                new MeetingList(model.getMeetingList()), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"darrentde":11,"-":168}},{"path":"src/test/java/seedu/address/logic/commands/EditMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_1;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_2;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_MEETING_1;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_MEETING_1;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_MEETING_1;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMeetingAtIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingList;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.MeetingList;","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"HakkaNgin"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditMeetingCommand.","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"HakkaNgin"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"HakkaNgin"},"content":"public class EditMeetingCommandTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"HakkaNgin"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"HakkaNgin"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"HakkaNgin"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"HakkaNgin"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(editedMeeting).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"HakkaNgin"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"HakkaNgin"},"content":"        String expectedMessage \u003d String.format(EditMeetingCommand.MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting);","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"HakkaNgin"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"HakkaNgin"},"content":"                new MeetingList(model.getMeetingList()), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"HakkaNgin"},"content":"        expectedModel.setMeeting(model.getFilteredMeetingList().get(0), editedMeeting);","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"HakkaNgin"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"HakkaNgin"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"HakkaNgin"},"content":"        Index indexLastMeeting \u003d Index.fromOneBased(model.getFilteredMeetingList().size());","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"HakkaNgin"},"content":"        Meeting lastMeeting \u003d model.getFilteredMeetingList().get(indexLastMeeting.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"HakkaNgin"},"content":"        MeetingBuilder meetingInList \u003d new MeetingBuilder(lastMeeting);","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"HakkaNgin"},"content":"        Meeting editedMeeting \u003d meetingInList.withDescription(VALID_NAME_MEETING_1)","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"HakkaNgin"},"content":"                .withLocation(VALID_LOCATION_MEETING_1).withDateAndTime(VALID_DATE_MEETING_1).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"HakkaNgin"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withDescription(VALID_NAME_MEETING_1)","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"HakkaNgin"},"content":"                .withLocation(VALID_LOCATION_MEETING_1).withDate(VALID_DATE_MEETING_1).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"HakkaNgin"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(indexLastMeeting, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"HakkaNgin"},"content":"        String expectedMessage \u003d String.format(EditMeetingCommand.MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting);","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"HakkaNgin"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"HakkaNgin"},"content":"                new MeetingList(model.getMeetingList()), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"HakkaNgin"},"content":"        expectedModel.setMeeting(lastMeeting, editedMeeting);","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"HakkaNgin"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"HakkaNgin"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"HakkaNgin"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_FIRST_PERSON, new EditMeetingDescriptor());","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"HakkaNgin"},"content":"        Meeting editedMeeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"HakkaNgin"},"content":"        String expectedMessage \u003d String.format(EditMeetingCommand.MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting);","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"HakkaNgin"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"HakkaNgin"},"content":"                new MeetingList(model.getMeetingList()), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"HakkaNgin"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"HakkaNgin"},"content":"    public void execute_filteredList_success() throws CommandException, ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"HakkaNgin"},"content":"        showMeetingAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"HakkaNgin"},"content":"        Meeting meetingInFilteredList \u003d model.getFilteredMeetingList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"HakkaNgin"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder(meetingInFilteredList).withDescription(VALID_NAME_MEETING_1).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"HakkaNgin"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"HakkaNgin"},"content":"                new EditMeetingDescriptorBuilder().withDescription(VALID_NAME_MEETING_1).build());","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"HakkaNgin"},"content":"        String expectedMessage \u003d String.format(EditMeetingCommand.MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting);","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"HakkaNgin"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"HakkaNgin"},"content":"                new MeetingList(model.getMeetingList()), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"HakkaNgin"},"content":"        expectedModel.setMeeting(model.getFilteredMeetingList().get(0), editedMeeting);","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"HakkaNgin"},"content":"        System.out.println(editMeetingCommand.execute(model).getFeedbackToUser());","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"HakkaNgin"},"content":"        System.out.println(expectedMessage);","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"HakkaNgin"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"HakkaNgin"},"content":"    public void execute_duplicateMeetingUnfilteredList_failure() {","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"HakkaNgin"},"content":"        Meeting firstMeeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"HakkaNgin"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(firstMeeting).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"HakkaNgin"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"HakkaNgin"},"content":"        assertCommandFailure(editMeetingCommand, model, EditMeetingCommand.MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"HakkaNgin"},"content":"    public void execute_duplicateMeetingFilteredList_failure() {","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"HakkaNgin"},"content":"        showMeetingAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"HakkaNgin"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"HakkaNgin"},"content":"        Meeting meetingInList \u003d model.getMeetingList().getMeetingList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"HakkaNgin"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"HakkaNgin"},"content":"                new EditMeetingDescriptorBuilder(meetingInList).build());","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"HakkaNgin"},"content":"        assertCommandFailure(editMeetingCommand, model, EditMeetingCommand.MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"HakkaNgin"},"content":"    public void execute_invalidMeetingIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"HakkaNgin"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMeetingList().size() + 1);","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"HakkaNgin"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder()","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"HakkaNgin"},"content":"                .withDescription(VALID_NAME_MEETING_1).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"HakkaNgin"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"HakkaNgin"},"content":"        assertCommandFailure(editMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"HakkaNgin"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"HakkaNgin"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"HakkaNgin"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"HakkaNgin"},"content":"        showMeetingAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"HakkaNgin"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"HakkaNgin"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"HakkaNgin"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getMeetingList().getMeetingList().size());","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"HakkaNgin"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"HakkaNgin"},"content":"                new EditMeetingDescriptorBuilder().withDescription(VALID_NAME_MEETING_1).build());","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"HakkaNgin"},"content":"        assertCommandFailure(editMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":159,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":160,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"HakkaNgin"},"content":"    public void equals() {","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"HakkaNgin"},"content":"        final EditMeetingCommand standardCommand \u003d new EditMeetingCommand(INDEX_FIRST_PERSON, MEETING_1);","lastModifiedDate":"2022-10-28"},{"lineNumber":163,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":164,"author":{"gitId":"HakkaNgin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-28"},{"lineNumber":165,"author":{"gitId":"HakkaNgin"},"content":"        EditMeetingDescriptor copyDescriptor \u003d new EditMeetingDescriptor(MEETING_1);","lastModifiedDate":"2022-10-28"},{"lineNumber":166,"author":{"gitId":"HakkaNgin"},"content":"        EditMeetingCommand commandWithSameValues \u003d new EditMeetingCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":167,"author":{"gitId":"HakkaNgin"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":169,"author":{"gitId":"HakkaNgin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"HakkaNgin"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-28"},{"lineNumber":171,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"HakkaNgin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-28"},{"lineNumber":174,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":175,"author":{"gitId":"HakkaNgin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":178,"author":{"gitId":"HakkaNgin"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":179,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(standardCommand.equals(new EditMeetingCommand(INDEX_SECOND_PERSON, MEETING_1)));","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"HakkaNgin"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(standardCommand.equals(new EditMeetingCommand(INDEX_FIRST_PERSON, MEETING_2)));","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":184,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":185,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"HakkaNgin":185}},{"path":"src/test/java/seedu/address/logic/commands/EditMeetingDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_2;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_MEETING_2;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_MEETING_2;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_MEETING_2;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"public class EditMeetingDescriptorTest {","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"    public void equals() {","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"        EditMeetingDescriptor descriptorWithSameValues \u003d new EditMeetingDescriptor(MEETING_1);","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"        assertTrue(MEETING_1.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"        assertTrue(MEETING_1.equals(MEETING_1));","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"        assertFalse(MEETING_1.equals(null));","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"        assertFalse(MEETING_1.equals(5));","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"tinenhao"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"tinenhao"},"content":"        assertFalse(MEETING_1.equals(MEETING_2));","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"tinenhao"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"tinenhao"},"content":"        EditMeetingDescriptor editedMeeting1 \u003d new EditMeetingDescriptorBuilder(MEETING_1)","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"tinenhao"},"content":"                .withDescription(VALID_NAME_MEETING_2).build();","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"tinenhao"},"content":"        assertFalse(MEETING_1.equals(editedMeeting1));","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"tinenhao"},"content":"        // different location -\u003e returns false","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"tinenhao"},"content":"        editedMeeting1 \u003d new EditMeetingDescriptorBuilder(MEETING_1).withLocation(VALID_LOCATION_MEETING_2).build();","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"tinenhao"},"content":"        assertFalse(MEETING_1.equals(editedMeeting1));","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"tinenhao"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"tinenhao"},"content":"        editedMeeting1 \u003d new EditMeetingDescriptorBuilder(MEETING_1).withDate(VALID_DATE_MEETING_2).build();","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"tinenhao"},"content":"        assertFalse(MEETING_1.equals(editedMeeting1));","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"tinenhao":49}},{"path":"src/test/java/seedu/address/logic/commands/FilterMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW;","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_TYPICAL_1;","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_TYPICAL_3;","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingList;","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"import java.util.Collections;","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"import java.util.List;","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.MeetingFilterDatePredicate;","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"public class FilterMeetingCommandTest {","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"    public void equals() {","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime date1 \u003d LocalDateTime.of(2020, 1, 8, 10, 12, 10);","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime date2 \u003d LocalDateTime.of(2021, 2, 11, 21, 11, 3);","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime date3 \u003d LocalDateTime.of(2022, 4, 1, 22, 5, 7);","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime date4 \u003d LocalDateTime.of(2023, 8, 24, 11, 15, 1);","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"        MeetingFilterDatePredicate filterDatePredicate \u003d new MeetingFilterDatePredicate(date1, date2);","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"        MeetingFilterDatePredicate filterDatePredicate2 \u003d new MeetingFilterDatePredicate(date3, date4);","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"        FilterMeetingCommand filterMeetingCommand \u003d new FilterMeetingCommand(filterDatePredicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(filterMeetingCommand, filterMeetingCommand);","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"        // same text and same functional interface -\u003e returns true","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"        FilterMeetingCommand filterMeetingCommandCopy \u003d new FilterMeetingCommand(filterDatePredicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(filterMeetingCommand, filterMeetingCommandCopy);","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(0, filterMeetingCommand);","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"GenFusion122"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-02"},{"lineNumber":52,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(null, filterMeetingCommand);","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"GenFusion122"},"content":"        // different dates -\u003e returns false","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(filterMeetingCommand, new FilterMeetingCommand(filterDatePredicate2));","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"GenFusion122"},"content":"    public void execute_outOfScopeFilter_noMeetingFound() {","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"GenFusion122"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"GenFusion122"},"content":"        // dates are in 9999 where it\u0027s for sure out of scope","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime date1 \u003d LocalDateTime.of(9999, 4, 1, 22, 5, 7);","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime date2 \u003d LocalDateTime.of(9999, 8, 24, 11, 15, 1);","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"GenFusion122"},"content":"        MeetingFilterDatePredicate filterDatePredicate \u003d new MeetingFilterDatePredicate(date1, date2);","lastModifiedDate":"2022-11-02"},{"lineNumber":65,"author":{"gitId":"GenFusion122"},"content":"        expectedModel.updateFilteredMeetingList(filterDatePredicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"GenFusion122"},"content":"        FilterMeetingCommand filterMeetingCommand \u003d new FilterMeetingCommand(filterDatePredicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"GenFusion122"},"content":"        assertCommandSuccess(filterMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredMeetingList());","lastModifiedDate":"2022-11-02"},{"lineNumber":70,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":71,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":72,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-11-02"},{"lineNumber":73,"author":{"gitId":"GenFusion122"},"content":"    public void execute_filterScopeInRange_multipleMeetingsFound() {","lastModifiedDate":"2022-11-02"},{"lineNumber":74,"author":{"gitId":"GenFusion122"},"content":"        //test with two meetings TYPICAL 1 and TYPICAL 3","lastModifiedDate":"2022-11-02"},{"lineNumber":75,"author":{"gitId":"GenFusion122"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-11-02"},{"lineNumber":76,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime date1 \u003d LocalDateTime.of(2022, 1, 1, 1, 1, 1);","lastModifiedDate":"2022-11-02"},{"lineNumber":77,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime date2 \u003d LocalDateTime.of(2022, 3, 1, 1, 1, 1);","lastModifiedDate":"2022-11-02"},{"lineNumber":78,"author":{"gitId":"GenFusion122"},"content":"        MeetingFilterDatePredicate filterDatePredicate \u003d new MeetingFilterDatePredicate(date1, date2);","lastModifiedDate":"2022-11-02"},{"lineNumber":79,"author":{"gitId":"GenFusion122"},"content":"        FilterMeetingCommand filterMeetingCommand \u003d new FilterMeetingCommand(filterDatePredicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":80,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":81,"author":{"gitId":"GenFusion122"},"content":"        expectedModel.updateFilteredMeetingList(filterDatePredicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":82,"author":{"gitId":"GenFusion122"},"content":"        assertCommandSuccess(filterMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-02"},{"lineNumber":83,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(Arrays.asList(MEETING_TYPICAL_1, MEETING_TYPICAL_3),","lastModifiedDate":"2022-11-02"},{"lineNumber":84,"author":{"gitId":"GenFusion122"},"content":"                model.getFilteredMeetingList());","lastModifiedDate":"2022-11-02"},{"lineNumber":85,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":86,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-11-02"},{"lineNumber":87,"author":{"gitId":"GenFusion122"},"content":"    public void execute_filterSingleDate_singleMeetingsFound() {","lastModifiedDate":"2022-11-02"},{"lineNumber":88,"author":{"gitId":"GenFusion122"},"content":"        //test finding one meeting when date1 \u003d date2 scenario","lastModifiedDate":"2022-11-02"},{"lineNumber":89,"author":{"gitId":"GenFusion122"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-11-02"},{"lineNumber":90,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime date1 \u003d LocalDateTime.of(2022, 1, 12, 23, 59);","lastModifiedDate":"2022-11-02"},{"lineNumber":91,"author":{"gitId":"GenFusion122"},"content":"        MeetingFilterDatePredicate filterDatePredicate \u003d new MeetingFilterDatePredicate(date1, date1);","lastModifiedDate":"2022-11-02"},{"lineNumber":92,"author":{"gitId":"GenFusion122"},"content":"        FilterMeetingCommand filterMeetingCommand \u003d new FilterMeetingCommand(filterDatePredicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":93,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":94,"author":{"gitId":"GenFusion122"},"content":"        expectedModel.updateFilteredMeetingList(filterDatePredicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":95,"author":{"gitId":"GenFusion122"},"content":"        assertCommandSuccess(filterMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-02"},{"lineNumber":96,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(List.of(MEETING_TYPICAL_1), model.getFilteredMeetingList());","lastModifiedDate":"2022-11-02"},{"lineNumber":97,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":98,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"GenFusion122":98}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingList;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"darrentde":3,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/FindMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_TYPICAL_1;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_TYPICAL_2;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_TYPICAL_3;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingList;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.MeetingContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.util.FindMeetingFunctionalInterface;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"public class FindMeetingCommandTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"    public void equals() {","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"        MeetingContainsKeywordsPredicate descriptionPredicate \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"                new MeetingContainsKeywordsPredicate(Collections.singletonList(\"first\"), Meeting::getDescription);","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"        MeetingContainsKeywordsPredicate locationPredicate \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"                new MeetingContainsKeywordsPredicate(Collections.singletonList(\"second\"), Meeting::getLocation);","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"        MeetingContainsKeywordsPredicate peoplePredicate \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"                new MeetingContainsKeywordsPredicate(Collections.singletonList(\"third\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"                        Meeting::getPeopleToMeetAsString);","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"        FindMeetingCommand findDescriptionMeetingCommand \u003d new FindMeetingCommand(descriptionPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"        FindMeetingCommand findLocationMeetingCommand \u003d new FindMeetingCommand(locationPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"        FindMeetingCommand findPeopleMeetingCommand \u003d new FindMeetingCommand(peoplePredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(findDescriptionMeetingCommand, findDescriptionMeetingCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"        // same text and same functional interface -\u003e returns true","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"        FindMeetingCommand findDescriptionMeetingCommandCopy \u003d new FindMeetingCommand(descriptionPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(findDescriptionMeetingCommand, findDescriptionMeetingCommandCopy);","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"GenFusion122"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(0, findDescriptionMeetingCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"GenFusion122"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(null, findDescriptionMeetingCommandCopy);","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"GenFusion122"},"content":"        // different keywords \u0026 functional interface -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(findLocationMeetingCommand, findDescriptionMeetingCommandCopy);","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(findLocationMeetingCommand, findPeopleMeetingCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(findDescriptionMeetingCommandCopy, findPeopleMeetingCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"GenFusion122"},"content":"        // same keywords \u0026 different functional interface -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"GenFusion122"},"content":"        MeetingContainsKeywordsPredicate findFirstLocationPredicate \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"GenFusion122"},"content":"                new MeetingContainsKeywordsPredicate(Collections.singletonList(\"first\"), Meeting::getLocation);","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"GenFusion122"},"content":"        FindMeetingCommand findFirstLocationMeetingCommand \u003d new FindMeetingCommand(findFirstLocationPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(findDescriptionMeetingCommand, findFirstLocationMeetingCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"GenFusion122"},"content":"        // different keywords \u0026 same functional interface -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"GenFusion122"},"content":"        MeetingContainsKeywordsPredicate findDescriptionPredicateCopy \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"GenFusion122"},"content":"                new MeetingContainsKeywordsPredicate(Collections.singletonList(\"different\"), Meeting::getDescription);","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"GenFusion122"},"content":"        FindMeetingCommand findDescriptionMeetingCommandDiff \u003d new FindMeetingCommand(findDescriptionPredicateCopy);","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(findDescriptionMeetingCommand, findDescriptionMeetingCommandDiff);","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"GenFusion122"},"content":"    public void execute_zeroKeywords_noMeetingFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"GenFusion122"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"GenFusion122"},"content":"        MeetingContainsKeywordsPredicate descriptionPredicate \u003d preparePredicate(\" \" , \"Description\");","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"GenFusion122"},"content":"        FindMeetingCommand findMeetingCommand \u003d new FindMeetingCommand(descriptionPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"GenFusion122"},"content":"        expectedModel.updateFilteredMeetingList(descriptionPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"GenFusion122"},"content":"        assertCommandSuccess(findMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredMeetingList());","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"GenFusion122"},"content":"    public void execute_multipleKeywords_multipleMeetingsFoundDescription() {","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"GenFusion122"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"GenFusion122"},"content":"        MeetingContainsKeywordsPredicate descriptionPredicate \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"GenFusion122"},"content":"                preparePredicate(\"CS1101S CS2040S CS2103\", \"Description\");","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"GenFusion122"},"content":"        FindMeetingCommand findMeetingCommand \u003d new FindMeetingCommand(descriptionPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"GenFusion122"},"content":"        expectedModel.updateFilteredMeetingList(descriptionPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"GenFusion122"},"content":"        assertCommandSuccess(findMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(Arrays.asList(MEETING_TYPICAL_1, MEETING_TYPICAL_2, MEETING_TYPICAL_3),","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"GenFusion122"},"content":"                model.getFilteredMeetingList());","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"GenFusion122"},"content":"    public void execute_multipleKeywords_multipleMeetingsFoundLocation() {","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"GenFusion122"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"GenFusion122"},"content":"        MeetingContainsKeywordsPredicate descriptionPredicate \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"GenFusion122"},"content":"                preparePredicate(\"DECK UTOWN COM1\", \"Location\");","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"GenFusion122"},"content":"        FindMeetingCommand findMeetingCommand \u003d new FindMeetingCommand(descriptionPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"GenFusion122"},"content":"        expectedModel.updateFilteredMeetingList(descriptionPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"GenFusion122"},"content":"        assertCommandSuccess(findMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(Arrays.asList(MEETING_TYPICAL_1, MEETING_TYPICAL_2, MEETING_TYPICAL_3),","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"GenFusion122"},"content":"                model.getFilteredMeetingList());","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"GenFusion122"},"content":"    public void execute_multipleKeywords_multipleMeetingsFoundPeople() {","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"GenFusion122"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"GenFusion122"},"content":"        MeetingContainsKeywordsPredicate descriptionPredicate \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"GenFusion122"},"content":"                preparePredicate(\"ALICE ELLE DANIEL\", \"People\");","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"GenFusion122"},"content":"        FindMeetingCommand findMeetingCommand \u003d new FindMeetingCommand(descriptionPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"GenFusion122"},"content":"        expectedModel.updateFilteredMeetingList(descriptionPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"GenFusion122"},"content":"        assertCommandSuccess(findMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(Arrays.asList(MEETING_TYPICAL_1, MEETING_TYPICAL_2, MEETING_TYPICAL_3),","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"GenFusion122"},"content":"                model.getFilteredMeetingList());","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"GenFusion122"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"GenFusion122"},"content":"     * Parses {@code userInput and type} into a {@code MeetingContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"GenFusion122"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"GenFusion122"},"content":"    private MeetingContainsKeywordsPredicate preparePredicate(String userInput, String type) {","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"GenFusion122"},"content":"        FindMeetingFunctionalInterface functionalInterface;","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"GenFusion122"},"content":"        if (type.equals(\"Description\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"HakkaNgin"},"content":"            functionalInterface \u003d FindMeetingCommand.GET_DESCRIPTION;","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"GenFusion122"},"content":"        } else if (type.equals(\"Location\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"HakkaNgin"},"content":"            functionalInterface \u003d FindMeetingCommand.GET_LOCATION;","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"GenFusion122"},"content":"        } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"HakkaNgin"},"content":"            functionalInterface \u003d FindMeetingCommand.GET_PEOPLE;","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"GenFusion122"},"content":"        return new MeetingContainsKeywordsPredicate(","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"GenFusion122"},"content":"                Arrays.asList(userInput.split(\"\\\\s+\")), functionalInterface);","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"GenFusion122":134,"HakkaNgin":3}},{"path":"src/test/java/seedu/address/logic/commands/FindTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingList;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.person.TagsContainKeywordPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":" * Contains integration tests (interaction with the Model) for {@code FindTagCommand}.","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"public class FindTagCommandTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"tinenhao"},"content":"    public void equals() {","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"tinenhao"},"content":"        TagsContainKeywordPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"tinenhao"},"content":"                new TagsContainKeywordPredicate(\"first\");","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"tinenhao"},"content":"        TagsContainKeywordPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"tinenhao"},"content":"                new TagsContainKeywordPredicate(\"second\");","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"tinenhao"},"content":"        FindTagCommand findFirstCommand \u003d new FindTagCommand(firstPredicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"tinenhao"},"content":"        FindTagCommand findSecondCommand \u003d new FindTagCommand(secondPredicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"tinenhao"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"tinenhao"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"tinenhao"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"tinenhao"},"content":"        FindTagCommand findFirstCommandCopy \u003d new FindTagCommand(firstPredicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"tinenhao"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"tinenhao"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"tinenhao"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"tinenhao"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"tinenhao"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"tinenhao"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"tinenhao"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"tinenhao"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"tinenhao"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"tinenhao"},"content":"        TagsContainKeywordPredicate predicate \u003d new TagsContainKeywordPredicate(\"\");","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"tinenhao"},"content":"        FindTagCommand command \u003d new FindTagCommand(predicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"tinenhao"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"tinenhao"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"tinenhao"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"tinenhao"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"tinenhao"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"tinenhao"},"content":"        TagsContainKeywordPredicate predicate \u003d new TagsContainKeywordPredicate(\"friends\");","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"tinenhao"},"content":"        FindTagCommand command \u003d new FindTagCommand(predicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"tinenhao"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"tinenhao"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"tinenhao"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"tinenhao":78}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingList;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"darrentde":3,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/SortMeetingsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import static org.junit.Assert.assertNotEquals;","lastModifiedDate":"2022-10-30"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"import static org.junit.Assert.assertTrue;","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-30"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingList;","lastModifiedDate":"2022-10-30"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-30"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-30"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-29"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-29"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-29"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-29"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-29"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-29"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.util.DateTimeConverter;","lastModifiedDate":"2022-10-29"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"public class SortMeetingsCommandTest {","lastModifiedDate":"2022-10-29"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingList(), new UserPrefs());","lastModifiedDate":"2022-10-29"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"    public void equals() {","lastModifiedDate":"2022-10-29"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"        SortMeetingsCommand sortDescending \u003d new SortMeetingsCommand(false);","lastModifiedDate":"2022-10-29"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"        SortMeetingsCommand sortAscending \u003d new SortMeetingsCommand(true);","lastModifiedDate":"2022-10-29"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(sortAscending, sortAscending);","lastModifiedDate":"2022-10-29"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(sortAscending, sortDescending);","lastModifiedDate":"2022-10-29"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"        SortMeetingsCommand sortAscendingCopy \u003d new SortMeetingsCommand(true);","lastModifiedDate":"2022-10-29"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(sortAscending, sortAscendingCopy);","lastModifiedDate":"2022-10-29"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"    public void execute_sorted() throws CommandException {","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"        //test descending sorted","lastModifiedDate":"2022-10-29"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"        SortMeetingsCommand sortDescending \u003d new SortMeetingsCommand(false);","lastModifiedDate":"2022-10-29"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"        sortDescending.execute(model);","lastModifiedDate":"2022-10-29"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"        assertTrue(isListSorted(model.getFilteredMeetingList(), false));","lastModifiedDate":"2022-10-29"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"        //test ascending sorted","lastModifiedDate":"2022-10-29"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"        SortMeetingsCommand sortAscending \u003d new SortMeetingsCommand(true);","lastModifiedDate":"2022-10-29"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"        sortAscending.execute(model);","lastModifiedDate":"2022-10-29"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"        assertTrue(isListSorted(model.getFilteredMeetingList(), true));","lastModifiedDate":"2022-10-29"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"    private boolean isListSorted(ObservableList\u003cMeeting\u003e meetingList, boolean isInAscending) {","lastModifiedDate":"2022-10-29"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"        for (int i \u003d 1; i \u003c meetingList.size(); i++) {","lastModifiedDate":"2022-10-29"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"            LocalDateTime currDate \u003d DateTimeConverter","lastModifiedDate":"2022-10-29"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"                    .processedStringToLocalDatetime(meetingList.get(i - 1).getDateAndTime());","lastModifiedDate":"2022-10-29"},{"lineNumber":51,"author":{"gitId":"GenFusion122"},"content":"            LocalDateTime nextDate \u003d DateTimeConverter","lastModifiedDate":"2022-10-29"},{"lineNumber":52,"author":{"gitId":"GenFusion122"},"content":"                    .processedStringToLocalDatetime(meetingList.get(i).getDateAndTime());","lastModifiedDate":"2022-10-29"},{"lineNumber":53,"author":{"gitId":"GenFusion122"},"content":"            if ((isInAscending \u0026\u0026 currDate.isAfter(nextDate) || (!isInAscending \u0026\u0026 currDate.isBefore(nextDate)))) {","lastModifiedDate":"2022-10-29"},{"lineNumber":54,"author":{"gitId":"GenFusion122"},"content":"                return false;","lastModifiedDate":"2022-10-29"},{"lineNumber":55,"author":{"gitId":"GenFusion122"},"content":"            }","lastModifiedDate":"2022-10-29"},{"lineNumber":56,"author":{"gitId":"GenFusion122"},"content":"        }","lastModifiedDate":"2022-10-29"},{"lineNumber":57,"author":{"gitId":"GenFusion122"},"content":"        return true;","lastModifiedDate":"2022-10-29"},{"lineNumber":58,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":59,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-29"}],"authorContributionMap":{"GenFusion122":59}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonToMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.commands.AddPersonToMeetingCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":" * Copied over from DeleteCommandParserTest:","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":" *","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"public class AddPersonToMeetingCommandParserTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"    private AddPersonToMeetingCommandParser parser \u003d new AddPersonToMeetingCommandParser();","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"    public void parse_validArgs_returnsCreateMeetingCommand() {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"        assertParseSuccess(parser, \"  0; Alice  \",","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"                new AddPersonToMeetingCommand(\"0; Alice\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"tinenhao"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"tinenhao"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonToMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"tinenhao":35}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.CreateMeetingCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"HakkaNgin"},"content":"    public void parseCommand_createMeeting() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"HakkaNgin"},"content":"        assertTrue(parser.parseCommand(CreateMeetingCommand.COMMAND_WORD + \" Yeoh }} Yu ;;; \"","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"HakkaNgin"},"content":"            + \"Study ;;; 15-10-2022 1900 ;;; Utown\") instanceof CreateMeetingCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"HakkaNgin"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"HakkaNgin"},"content":"            \"Make sure you have entered the correct amount of information correctly separated!\", ()","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"HakkaNgin"},"content":"                -\u003e parser.parseCommand(CreateMeetingCommand.COMMAND_WORD + \" Alex\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"HakkaNgin":10,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"            boolean test \u003d command.equals(expectedCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"            throw new IllegalArgumentException(\"Invalid userInput. \" + pe.getMessage(), pe);","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"GenFusion122":1,"HakkaNgin":1,"-":38}},{"path":"src/test/java/seedu/address/logic/parser/CreateMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":"// import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.commands.CreateMeetingCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":" * Copied over from DeleteCommandParserTest:","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":" *","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"HakkaNgin"},"content":"public class CreateMeetingCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":"    private CreateMeetingCommandParser parser \u003d new CreateMeetingCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"    //    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"HakkaNgin"},"content":"    //    public void parse_validArgs_returnsCreateMeetingCommand() {","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"    //        assertParseSuccess(parser, \"  Alex }} Yu ;;; Study session ;;; 20-11-2022 1520 ;;; Central Library  \",","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"HakkaNgin"},"content":"    //            new CreateMeetingCommand(\"Alex }} Yu ;;; Study session ;;; 20-11-2022 1520 ;;; Central Library\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"    //    }","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"HakkaNgin"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"HakkaNgin"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"HakkaNgin"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"HakkaNgin":35}},{"path":"src/test/java/seedu/address/logic/parser/DeletePersonFromMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.commands.DeletePersonFromMeetingCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":" * Copied over from DeleteCommandParserTest:","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":" *","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"public class DeletePersonFromMeetingCommandParserTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"    private DeletePersonFromMeetingCommandParser parser \u003d new DeletePersonFromMeetingCommandParser();","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"    public void parse_validArgs_returnsCreateMeetingCommand() {","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"        assertParseSuccess(parser, \"  0; Alice  \",","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"                new DeletePersonFromMeetingCommand(\"0; Alice\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"tinenhao"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"tinenhao"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonFromMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"tinenhao":35}},{"path":"src/test/java/seedu/address/logic/parser/EditMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_MEETING_2;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_MEETING_2;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_MEETING_2;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_MEETING_2;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_MEETING_2;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_MEETING_2;","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":"import static seedu.address.logic.parser.CreateMeetingCommandParser.DATE_TIME_VALIDATOR;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.commands.EditMeetingCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"tinenhao"},"content":"public class EditMeetingCommandParserTest {","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"tinenhao"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"tinenhao"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"tinenhao"},"content":"    private EditMeetingCommandParser parser \u003d new EditMeetingCommandParser();","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"tinenhao"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"tinenhao"},"content":"        // no index specified","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"tinenhao"},"content":"        assertParseFailure(parser, VALID_NAME_MEETING_1, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"tinenhao"},"content":"        // no field specified","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"tinenhao"},"content":"        assertParseFailure(parser, \"1\", EditMeetingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"tinenhao"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"tinenhao"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"tinenhao"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"tinenhao"},"content":"        // negative index","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"tinenhao"},"content":"        assertParseFailure(parser, \"-5\" + DESCRIPTION_DESC_MEETING_1, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"tinenhao"},"content":"        // zero index","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"tinenhao"},"content":"        assertParseFailure(parser, \"0\" + DESCRIPTION_DESC_MEETING_1, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"tinenhao"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"tinenhao"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"tinenhao"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"tinenhao"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"HakkaNgin"},"content":"    public void parse_allFieldsSpecified_success() throws ParseException, java.text.ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"tinenhao"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"tinenhao"},"content":"        String userInput \u003d targetIndex.getOneBased() + DATE_DESC_MEETING_1 + LOCATION_DESC_MEETING_1","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"tinenhao"},"content":"                + DESCRIPTION_DESC_MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"tinenhao"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withDescription(VALID_NAME_MEETING_1)","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"HakkaNgin"},"content":"                .withLocation(VALID_LOCATION_MEETING_1)","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"HakkaNgin"},"content":"            .withDate(DATE_TIME_VALIDATOR.processDateTime(VALID_DATE_MEETING_1)).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"tinenhao"},"content":"        EditMeetingCommand expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"tinenhao"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":81,"author":{"gitId":"tinenhao"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-10-22"},{"lineNumber":82,"author":{"gitId":"tinenhao"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-22"},{"lineNumber":83,"author":{"gitId":"tinenhao"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_MEETING_1 + LOCATION_DESC_MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":84,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":85,"author":{"gitId":"tinenhao"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withDescription(VALID_NAME_MEETING_1)","lastModifiedDate":"2022-10-22"},{"lineNumber":86,"author":{"gitId":"tinenhao"},"content":"                .withLocation(VALID_LOCATION_MEETING_1).build();","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"tinenhao"},"content":"        EditMeetingCommand expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"tinenhao"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":93,"author":{"gitId":"HakkaNgin"},"content":"    public void parse_oneFieldSpecified_success() throws ParseException, java.text.ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"tinenhao"},"content":"        // description","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"tinenhao"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"tinenhao"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"tinenhao"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder()","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"tinenhao"},"content":"                .withDescription(VALID_NAME_MEETING_1).build();","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"tinenhao"},"content":"        EditMeetingCommand expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"tinenhao"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"tinenhao"},"content":"        // location","lastModifiedDate":"2022-10-22"},{"lineNumber":103,"author":{"gitId":"tinenhao"},"content":"        userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"tinenhao"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withLocation(VALID_LOCATION_MEETING_1).build();","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"tinenhao"},"content":"        expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-22"},{"lineNumber":106,"author":{"gitId":"tinenhao"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":107,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":108,"author":{"gitId":"tinenhao"},"content":"        // date","lastModifiedDate":"2022-10-22"},{"lineNumber":109,"author":{"gitId":"tinenhao"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_DESC_MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":110,"author":{"gitId":"HakkaNgin"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder()","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"HakkaNgin"},"content":"            .withDate(DATE_TIME_VALIDATOR.processDateTime(VALID_DATE_MEETING_1)).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"tinenhao"},"content":"        expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-22"},{"lineNumber":113,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"HakkaNgin"},"content":"        System.out.println(descriptor.getDate());","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"tinenhao"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":116,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":117,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":118,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":119,"author":{"gitId":"HakkaNgin"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() throws ParseException, java.text.ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"tinenhao"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-22"},{"lineNumber":121,"author":{"gitId":"tinenhao"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_MEETING_1 + LOCATION_DESC_MEETING_1","lastModifiedDate":"2022-10-22"},{"lineNumber":122,"author":{"gitId":"tinenhao"},"content":"               + DATE_DESC_MEETING_1 + DESCRIPTION_DESC_MEETING_2 + LOCATION_DESC_MEETING_2 + DATE_DESC_MEETING_2;","lastModifiedDate":"2022-10-22"},{"lineNumber":123,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":124,"author":{"gitId":"tinenhao"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withDescription(VALID_NAME_MEETING_2)","lastModifiedDate":"2022-10-22"},{"lineNumber":125,"author":{"gitId":"HakkaNgin"},"content":"                .withLocation(VALID_LOCATION_MEETING_2)","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"HakkaNgin"},"content":"            .withDate(DATE_TIME_VALIDATOR.processDateTime(VALID_DATE_MEETING_2)).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"tinenhao"},"content":"        EditMeetingCommand expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-22"},{"lineNumber":128,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":129,"author":{"gitId":"tinenhao"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":130,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":131,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":132,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":133,"author":{"gitId":"HakkaNgin"},"content":"    public void parse_invalidValueFollowedByValidValue_success() throws ParseException, java.text.ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"tinenhao"},"content":"        // no other valid values specified","lastModifiedDate":"2022-10-22"},{"lineNumber":135,"author":{"gitId":"tinenhao"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-22"},{"lineNumber":136,"author":{"gitId":"tinenhao"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_DATE_DESC + DATE_DESC_MEETING_1;","lastModifiedDate":"2022-10-22"},{"lineNumber":137,"author":{"gitId":"HakkaNgin"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder()","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"HakkaNgin"},"content":"            .withDate(DATE_TIME_VALIDATOR.processDateTime(VALID_DATE_MEETING_1)).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"tinenhao"},"content":"        EditMeetingCommand expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-22"},{"lineNumber":140,"author":{"gitId":"tinenhao"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":141,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":142,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"tinenhao":126,"HakkaNgin":16}},{"path":"src/test/java/seedu/address/logic/parser/FilterMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.commands.FilterMeetingCommand;","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.MeetingFilterDatePredicate;","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"public class FilterMeetingCommandParserTest {","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"    private FilterMeetingCommandParser parser \u003d new FilterMeetingCommandParser();","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"    public void parse_invalidParameters_throwsParseException() {","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"                FilterMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"        assertParseFailure(parser, \"nonesense\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"                FilterMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"        assertParseFailure(parser, \"a ;;; a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"                FilterMeetingCommand.INVALID_DATE_FORMAT));","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"        assertParseFailure(parser, \" ;;; \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"                FilterMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"        assertParseFailure(parser, \"10-10-2022 1000 ;;; 09-10-2022 1000\",","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterMeetingCommand.INVALID_DATE_POSITION));","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"    public void parse_validArgs_returnsFilteredMeetingCommand() {","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime date1 \u003d LocalDateTime.of(2020, 1, 8, 10, 12);","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime date2 \u003d LocalDateTime.of(2021, 2, 11, 1, 11);","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"        FilterMeetingCommand expectedFilterMeetingCommand \u003d","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"                new FilterMeetingCommand(new MeetingFilterDatePredicate(date1, date2));","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"        assertParseSuccess(parser, \"08-01-2020 1012 ;;; 11-02-2021 0111\", expectedFilterMeetingCommand);","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"        assertParseSuccess(parser, \"\\t 08-01-2020 1012 \\n ;;; 11-02-2021 0111\", expectedFilterMeetingCommand);","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"        // same date","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"        FilterMeetingCommand expectedFilterMeetingCommandSameDate \u003d","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"                new FilterMeetingCommand(new MeetingFilterDatePredicate(date1, date1));","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"        assertParseSuccess(parser, \"\\t 08-01-2020 1012 \\n ;;; 08-01-2020 1012\",","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"                expectedFilterMeetingCommandSameDate);","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"GenFusion122":50}},{"path":"src/test/java/seedu/address/logic/parser/FindMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.model.meeting.MeetingContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"public class FindMeetingCommandParserTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"    private FindMeetingCommandParser parser \u003d new FindMeetingCommandParser();","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"                FindMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"    public void parse_validArgs_returnsFindMeetingCommand() {","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"        FindMeetingCommand expectedFindMeetingCommandDescription \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"                new FindMeetingCommand(new MeetingContainsKeywordsPredicate(","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"                        Arrays.asList(\"CS2103\", \"CS1101\"), FindMeetingCommand.GET_DESCRIPTION));","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"        assertParseSuccess(parser, \"/named CS2103 CS1101\", expectedFindMeetingCommandDescription);","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"        assertParseSuccess(parser, \"/named  \\n CS2103 \\n \\t CS1101  \\t\", expectedFindMeetingCommandDescription);","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"        //testing other types","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"        FindMeetingCommand expectedFindMeetingCommandPeople \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"                new FindMeetingCommand(new MeetingContainsKeywordsPredicate(","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"HakkaNgin"},"content":"                        Arrays.asList(\"John\", \"Alex\"), FindMeetingCommand.GET_PEOPLE));","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"        assertParseSuccess(parser, \"/with John Alex\", expectedFindMeetingCommandPeople);","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"        assertParseSuccess(parser, \"/with  \\n John \\n \\t Alex  \\t\", expectedFindMeetingCommandPeople);","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"        FindMeetingCommand expectedFindMeetingCommandLocation \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"                new FindMeetingCommand(new MeetingContainsKeywordsPredicate(","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"HakkaNgin"},"content":"                        Arrays.asList(\"UTown\", \"COM1\"), FindMeetingCommand.GET_LOCATION));","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"        assertParseSuccess(parser, \"/at UTown COM1\", expectedFindMeetingCommandLocation);","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"        assertParseSuccess(parser, \"/at  \\n UTown \\n \\t COM1  \\t\", expectedFindMeetingCommandLocation);","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"GenFusion122":47,"HakkaNgin":3}},{"path":"src/test/java/seedu/address/logic/parser/FindTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.commands.FindTagCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.person.TagsContainKeywordPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"public class FindTagCommandParserTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"    private FindTagCommandParser parser \u003d new FindTagCommandParser();","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"        FindTagCommand expectedFindTagCommand \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"                new FindTagCommand(new TagsContainKeywordPredicate(\"friends\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"        assertParseSuccess(parser, \"friends\", expectedFindTagCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"tinenhao":31}},{"path":"src/test/java/seedu/address/logic/parser/SortMeetingsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-30"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-30"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-30"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.commands.SortMeetingsCommand;","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"public class SortMeetingsCommandParserTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"    private SortMeetingsCommandParser parser \u003d new SortMeetingsCommandParser();","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"                SortMeetingsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"        assertParseFailure(parser, \"invalid\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"                SortMeetingsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"        assertParseFailure(parser, \"ASc desc\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"                SortMeetingsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"        assertParseFailure(parser, \"ascc descc\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"                SortMeetingsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"    public void parse_validArgs_returnsFindMeetingCommand() {","lastModifiedDate":"2022-10-30"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-30"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"        SortMeetingsCommand expectedSortMeetingCommandDescription \u003d","lastModifiedDate":"2022-10-30"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"                new SortMeetingsCommand(true);","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"        assertParseSuccess(parser, \"asc\", expectedSortMeetingCommandDescription);","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"        // leading/trailing whitespaces","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"        assertParseSuccess(parser, \" \\t  asc \\t \\n\", expectedSortMeetingCommandDescription);","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"        // testing case-sensitive","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"        assertParseSuccess(parser, \" \\t  AsC \\t \\n\", expectedSortMeetingCommandDescription);","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"        // testing descending","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"        SortMeetingsCommand expectedSortMeetingCommandDescriptionDesc \u003d","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"                new SortMeetingsCommand(false);","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"        assertParseSuccess(parser, \"desc\", expectedSortMeetingCommandDescriptionDesc);","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"        assertParseSuccess(parser, \"DeSc\", expectedSortMeetingCommandDescriptionDesc);","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-30"}],"authorContributionMap":{"GenFusion122":43}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"HakkaNgin"},"content":"        private final ObservableList\u003cMeeting\u003e meetings \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"darrentde"},"content":"        // @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"darrentde"},"content":"        // public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"darrentde"},"content":"        //    return meetings;","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"darrentde"},"content":"        // }","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"darrentde":5,"HakkaNgin":3,"-":102}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_TYPICAL_1;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_TYPICAL_2;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"import seedu.address.testutil.MeetingListBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"        assertEquals(new MeetingList(), new MeetingList(modelManager.getMeetingList()));","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"darrentde"},"content":"        userPrefs.setMeetingListFilePath(Paths.get(\"meeting/list/file/path\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"darrentde"},"content":"        userPrefs.setMeetingListFilePath(Paths.get(\"new/meeting/list/file/path\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"darrentde"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"darrentde"},"content":"    public void setMeetingListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"darrentde"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setMeetingListFilePath(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"darrentde"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"darrentde"},"content":"    public void setMeetingListFilePath_validPath_setsMeetingListFilePath() {","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"darrentde"},"content":"        Path path \u003d Paths.get(\"meeting/list/file/path\");","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"darrentde"},"content":"        modelManager.setMeetingListFilePath(path);","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"darrentde"},"content":"        assertEquals(path, modelManager.getMeetingListFilePath());","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"darrentde"},"content":"        MeetingList meetingList \u003d new MeetingListBuilder().withMeeting(MEETING_TYPICAL_1)","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"darrentde"},"content":"                                                    .withMeeting(MEETING_TYPICAL_2).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"darrentde"},"content":"        MeetingList differentMeetingList \u003d new MeetingList();","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"darrentde"},"content":"        modelManager \u003d new ModelManager(addressBook, meetingList, userPrefs);","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"darrentde"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, meetingList, userPrefs);","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"darrentde"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, differentMeetingList, userPrefs)));","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":143,"author":{"gitId":"darrentde"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, meetingList, userPrefs)));","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":151,"author":{"gitId":"darrentde"},"content":"        differentUserPrefs.setMeetingListFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"darrentde"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, meetingList, differentUserPrefs)));","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"darrentde":27,"-":127}},{"path":"src/test/java/seedu/address/model/meeting/MeetingContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"public class MeetingContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"    public void equals() {","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"        MeetingContainsKeywordsPredicate firstPredicate \u003d new","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"                MeetingContainsKeywordsPredicate(firstPredicateKeywordList, FindMeetingCommand.GET_DESCRIPTION);","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"        MeetingContainsKeywordsPredicate secondPredicate \u003d new","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"                MeetingContainsKeywordsPredicate(secondPredicateKeywordList, FindMeetingCommand.GET_DESCRIPTION);","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"        MeetingContainsKeywordsPredicate firstPredicateCopy \u003d new","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"HakkaNgin"},"content":"                MeetingContainsKeywordsPredicate(firstPredicateKeywordList, FindMeetingCommand.GET_DESCRIPTION);","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"    public void test_meetingNameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"        // One keyword","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"GenFusion122"},"content":"        MeetingContainsKeywordsPredicate predicate \u003d new MeetingContainsKeywordsPredicate(","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"HakkaNgin"},"content":"                Collections.singletonList(\"Alice\"), FindMeetingCommand.GET_PEOPLE);","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"GenFusion122"},"content":"        assertTrue(predicate.test(new MeetingBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"GenFusion122"},"content":"                .withPersons(new PersonBuilder().withName(\"Alice Lim\").build()).build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"GenFusion122"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"HakkaNgin"},"content":"        predicate \u003d new MeetingContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"), FindMeetingCommand.GET_PEOPLE);","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"GenFusion122"},"content":"        assertTrue(predicate.test(new MeetingBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"GenFusion122"},"content":"                .withPersons(new PersonBuilder().withName(\"Alice Bob\").build()).build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"GenFusion122"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"HakkaNgin"},"content":"        predicate \u003d new MeetingContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"), FindMeetingCommand.GET_PEOPLE);","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"GenFusion122"},"content":"        assertTrue(predicate.test(new MeetingBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"GenFusion122"},"content":"                .withPersons(new PersonBuilder().withName(\"Alice Bob\").build()).build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"GenFusion122"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"HakkaNgin"},"content":"        predicate \u003d new MeetingContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"), FindMeetingCommand.GET_PEOPLE);","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"GenFusion122"},"content":"        assertTrue(predicate.test(new MeetingBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"GenFusion122"},"content":"                .withPersons(new PersonBuilder().withName(\"Alice Bob\").build()).build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"GenFusion122"},"content":"    public void test_meetingNameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"GenFusion122"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"GenFusion122"},"content":"        MeetingContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"HakkaNgin"},"content":"                new MeetingContainsKeywordsPredicate(Collections.emptyList(), FindMeetingCommand.GET_PEOPLE);","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"GenFusion122"},"content":"        assertFalse(predicate.test(new MeetingBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"GenFusion122"},"content":"                .withPersons(new PersonBuilder().withName(\"Alice\").build()).build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"GenFusion122"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"HakkaNgin"},"content":"        predicate \u003d new MeetingContainsKeywordsPredicate(List.of(\"Carol\"), FindMeetingCommand.GET_PEOPLE);","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"GenFusion122"},"content":"        assertFalse(predicate.test(new MeetingBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"GenFusion122"},"content":"                .withPersons(new PersonBuilder().withName(\"Alice Bob\").build()).build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"GenFusion122"},"content":"        // predicate searches people for COM1 and UTown, but meetings built with location of UTown","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"GenFusion122"},"content":"        predicate \u003d new MeetingContainsKeywordsPredicate(Arrays.asList(\"COM1\", \"UTown\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"HakkaNgin"},"content":"                FindMeetingCommand.GET_PEOPLE);","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"GenFusion122"},"content":"        assertFalse(predicate.test(new MeetingBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"GenFusion122"},"content":"                .withLocation(\"UTown\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"GenFusion122":82,"HakkaNgin":10}},{"path":"src/test/java/seedu/address/model/meeting/MeetingFilterPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GenFusion122"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"GenFusion122"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"GenFusion122"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"GenFusion122"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"GenFusion122"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"GenFusion122"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"GenFusion122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"GenFusion122"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"GenFusion122"},"content":"public class MeetingFilterPredicateTest {","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"GenFusion122"},"content":"    public void equals() {","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime date1 \u003d LocalDateTime.of(2020, 1, 8, 10, 12);","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime date2 \u003d LocalDateTime.of(2021, 2, 11, 1, 11);","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"GenFusion122"},"content":"        MeetingFilterDatePredicate firstPredicate \u003d new MeetingFilterDatePredicate(date1, date2);","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"GenFusion122"},"content":"        MeetingFilterDatePredicate secondPredicate \u003d new MeetingFilterDatePredicate(date2, date2);","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"GenFusion122"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"GenFusion122"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"GenFusion122"},"content":"        MeetingFilterDatePredicate firstPredicateCopy \u003d new MeetingFilterDatePredicate(date1, date2);","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"GenFusion122"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"GenFusion122"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"GenFusion122"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"GenFusion122"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"GenFusion122"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"GenFusion122"},"content":"    @Test","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"GenFusion122"},"content":"    public void test_meetingFilterFindMeeting_returnsTrue() {","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime date1 \u003d LocalDateTime.of(2022, 10, 10, 10, 10);","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"GenFusion122"},"content":"        LocalDateTime date2 \u003d LocalDateTime.of(2023, 2, 11, 1, 11);","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"GenFusion122"},"content":"        MeetingFilterDatePredicate firstPredicate \u003d new MeetingFilterDatePredicate(date1, date2);","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"        MeetingFilterDatePredicate secondPredicate \u003d new MeetingFilterDatePredicate(date1, date1);","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"GenFusion122"},"content":"        MeetingFilterDatePredicate thirdPredicate \u003d new MeetingFilterDatePredicate(date2, date1);","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"GenFusion122"},"content":"        // Normal Case","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"GenFusion122"},"content":"        assertTrue(firstPredicate.test(new MeetingBuilder()","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"GenFusion122"},"content":"                .withDateAndTime(\"Wednesday, 26 October 2022 10:10 AM\").build()));","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"GenFusion122"},"content":"        // Same Dates Case","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"GenFusion122"},"content":"        assertTrue(secondPredicate.test(new MeetingBuilder()","lastModifiedDate":"2022-11-02"},{"lineNumber":52,"author":{"gitId":"GenFusion122"},"content":"                .withDateAndTime(\"Monday, 10 October 2022 10:10 AM\").build()));","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"GenFusion122"},"content":"        // Error Case","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"GenFusion122"},"content":"        assertFalse(thirdPredicate.test(new MeetingBuilder()","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"GenFusion122"},"content":"                .withDateAndTime(\"Wednesday, 26 October 2022 10:10 AM\").build()));","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"GenFusion122"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"GenFusion122"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"GenFusion122"},"content":"}","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"GenFusion122":60}},{"path":"src/test/java/seedu/address/model/meeting/MeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"HakkaNgin"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"public class MeetingTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"    private final Meeting meetingOne \u003d new MeetingBuilder().build();","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":"    private final Meeting meetingTwo \u003d new MeetingBuilder().build();","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"HakkaNgin"},"content":"    private final Person johann \u003d new PersonBuilder().withName(\"Johann\").build();","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":"    private final Meeting meetingOneDifferentPerson \u003d new MeetingBuilder(johann).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":"    private final Meeting meetingOneDifferentTitle \u003d new MeetingBuilder().withDescription(\"Play chess\").build();","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"    private final Meeting meetingOneDifferentDateTime \u003d new MeetingBuilder().withDateAndTime(\"10-10-2022\").build();","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"    private final Meeting meetingOneDifferentLocation \u003d new MeetingBuilder().withLocation(\"in lounge\").build();","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"HakkaNgin"},"content":"     * A simplified dummy function to substitute the convertNameToPerson(Model, String[]) in CreateMeetingCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"    private ArrayList\u003cPerson\u003e dummyConvertNameToPerson(String [] peopleToMeet) {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"HakkaNgin"},"content":"        ArrayList\u003cPerson\u003e tempPeople \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"HakkaNgin"},"content":"        Person defaultAmy \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"HakkaNgin"},"content":"        tempPeople.add(defaultAmy);","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"HakkaNgin"},"content":"        if (Objects.equals(peopleToMeet[0], \"\")) {","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"HakkaNgin"},"content":"            throw new PersonNotFoundException(PersonNotFoundException.NO_PERSON_DETECTED);","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"HakkaNgin"},"content":"        ArrayList\u003cPerson\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"HakkaNgin"},"content":"        // Takes in the name of the address book contact, split by words in the name","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"HakkaNgin"},"content":"        for (String personName: peopleToMeet) {","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"HakkaNgin"},"content":"            for (Person person: tempPeople) {","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"HakkaNgin"},"content":"                if (person.getName().equals(personName)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"HakkaNgin"},"content":"                    output.add(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"HakkaNgin"},"content":"                }","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"HakkaNgin"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"HakkaNgin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"HakkaNgin"},"content":"        return output;","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"HakkaNgin"},"content":"     * Testing the stronger notion of equality","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"HakkaNgin"},"content":"    public void equals() {","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"HakkaNgin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"HakkaNgin"},"content":"        assertTrue(meetingOne.equals(meetingOne));","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"HakkaNgin"},"content":"        // same values (content) -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"HakkaNgin"},"content":"        assertTrue(meetingOne.equals(meetingTwo));","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"HakkaNgin"},"content":"        // only different people to meet -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(meetingOne.equals(meetingOneDifferentPerson));","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"HakkaNgin"},"content":"        // only different meeting title -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(meetingOne.equals(meetingOneDifferentTitle));","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"HakkaNgin"},"content":"        // only different meeting date and time -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(meetingOne.equals(meetingOneDifferentDateTime));","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"HakkaNgin"},"content":"        // only different meeting location -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(meetingOne.equals(meetingOneDifferentLocation));","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"HakkaNgin"},"content":"     * Testing the weaker notion of equality","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"HakkaNgin"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"HakkaNgin"},"content":"    public void isSameMeeting() {","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"HakkaNgin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"HakkaNgin"},"content":"        assertTrue(meetingOne.isSameMeeting(meetingOne));","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"HakkaNgin"},"content":"        // same values (content) -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"HakkaNgin"},"content":"        assertTrue(meetingOne.isSameMeeting(meetingTwo));","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"HakkaNgin"},"content":"        // only different people to meet -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(meetingOne.isSameMeeting(meetingOneDifferentPerson));","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"HakkaNgin"},"content":"        // only different meeting title -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"HakkaNgin"},"content":"        assertTrue(meetingOne.isSameMeeting(meetingOneDifferentTitle));","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"HakkaNgin"},"content":"        // only different meeting date and time -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"HakkaNgin"},"content":"        assertFalse(meetingOne.isSameMeeting(meetingOneDifferentDateTime));","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"HakkaNgin"},"content":"        // only different meeting location -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"HakkaNgin"},"content":"        assertTrue(meetingOne.isSameMeeting(meetingOneDifferentLocation));","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"HakkaNgin":99}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"        JsonMeetingListStorage meetingListStorage \u003d new JsonMeetingListStorage(getTempFilePath(\"cd\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, meetingListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"darrentde":2,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditMeetingDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tinenhao"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"tinenhao"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"tinenhao"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"tinenhao"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"tinenhao"},"content":" * A utility class to help with building EditMeetingDescriptor objects.","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"tinenhao"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"tinenhao"},"content":"public class EditMeetingDescriptorBuilder {","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"tinenhao"},"content":"    private EditMeetingDescriptor descriptor;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"tinenhao"},"content":"    public EditMeetingDescriptorBuilder() {","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"tinenhao"},"content":"        descriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"tinenhao"},"content":"    public EditMeetingDescriptorBuilder(EditMeetingDescriptor descriptor) {","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"tinenhao"},"content":"        this.descriptor \u003d new EditMeetingDescriptor(descriptor);","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"     * Returns an {@code EditMeetingDescriptor} with fields containing {@code meeting}\u0027s details","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"    public EditMeetingDescriptorBuilder(Meeting meeting) {","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"tinenhao"},"content":"        descriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"tinenhao"},"content":"        descriptor.setLocation(meeting.getLocation());","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"tinenhao"},"content":"        descriptor.setDescription(meeting.getDescription());","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"        descriptor.setDate(meeting.getDateAndTime());","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"tinenhao"},"content":"        descriptor.setPeople(meeting.getArrayListPersonToMeet());","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"tinenhao"},"content":"     * Sets the {@code Description} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"tinenhao"},"content":"    public EditMeetingDescriptorBuilder withDescription(String desc) {","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"tinenhao"},"content":"        descriptor.setDescription(desc);","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"tinenhao"},"content":"        return this;","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"tinenhao"},"content":"     * Sets the {@code Location} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"tinenhao"},"content":"    public EditMeetingDescriptorBuilder withLocation(String location) {","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"tinenhao"},"content":"        descriptor.setLocation(location);","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"tinenhao"},"content":"        return this;","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"tinenhao"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"tinenhao"},"content":"     * Sets the {@code Date} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"tinenhao"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"tinenhao"},"content":"    public EditMeetingDescriptorBuilder withDate(String date) {","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"tinenhao"},"content":"        descriptor.setDate(date);","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"tinenhao"},"content":"        return this;","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"tinenhao"},"content":"    public EditMeetingDescriptor build() {","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"tinenhao"},"content":"        return descriptor;","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"tinenhao"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"tinenhao":59,"HakkaNgin":1}},{"path":"src/test/java/seedu/address/testutil/MeetingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HakkaNgin"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"HakkaNgin"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"HakkaNgin"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"HakkaNgin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"HakkaNgin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"HakkaNgin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":" * A utility class to help with building Meeting objects.","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"HakkaNgin"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"HakkaNgin"},"content":"public class MeetingBuilder {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"HakkaNgin"},"content":"    //    public static final ArrayList\u003cPerson\u003e DEFAULT_PERSONS \u003d new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON));","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"HakkaNgin"},"content":"    //    public static final String DEFAULT_DESCRIPTION \u003d \"CS2040\";","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"HakkaNgin"},"content":"    //    public static final String DEFAULT_DATETIME \u003d \"02-12-2021\";","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"HakkaNgin"},"content":"    //    public static final String DEFAULT_LOCATION \u003d \"COM3\";","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"HakkaNgin"},"content":"    public static final Person DEFAULT_PERSON_IN_MEETING_BUILDER_TWO \u003d new PersonBuilder()","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"HakkaNgin"},"content":"        .withTags(\"Classmate\", \"Dalao\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"HakkaNgin"},"content":"    public static final String DEFAULT_DESCRIPTION_TW0 \u003d \"Do CS2103 Project\";","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"HakkaNgin"},"content":"    public static final String DEFAULT_DATE_AND_TIME_TWO \u003d \"Monday, 20 November 2000 03:30 pm\";","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"HakkaNgin"},"content":"    public static final String DEFAULT_LOCATION_TWO \u003d \"University Town\";","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"HakkaNgin"},"content":"    private ArrayList\u003cPerson\u003e personsToMeetArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"HakkaNgin"},"content":"    private String meetingDescription;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"HakkaNgin"},"content":"    private String meetingDateAndTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"HakkaNgin"},"content":"    private String meetingLocation;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"HakkaNgin"},"content":"     * Creates a {@code MeetingBuilder} with the default details.","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"HakkaNgin"},"content":"    public MeetingBuilder() {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"HakkaNgin"},"content":"        this.personsToMeetArray.add(MeetingBuilder.DEFAULT_PERSON_IN_MEETING_BUILDER_TWO);","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"HakkaNgin"},"content":"        this.meetingDescription \u003d MeetingBuilder.DEFAULT_DESCRIPTION_TW0;","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"HakkaNgin"},"content":"        this.meetingDateAndTime \u003d MeetingBuilder.DEFAULT_DATE_AND_TIME_TWO;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"HakkaNgin"},"content":"        this.meetingLocation \u003d MeetingBuilder.DEFAULT_LOCATION_TWO;","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"HakkaNgin"},"content":"     * Creates a {@code MeetingBuilder} with the data of {@code personToMeet}.","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"HakkaNgin"},"content":"    public MeetingBuilder(Person personToMeet) {","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"HakkaNgin"},"content":"        this.personsToMeetArray.add(personToMeet);","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"HakkaNgin"},"content":"        this.meetingDescription \u003d MeetingBuilder.DEFAULT_DESCRIPTION_TW0;","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"HakkaNgin"},"content":"        this.meetingDateAndTime \u003d MeetingBuilder.DEFAULT_DATE_AND_TIME_TWO;","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"HakkaNgin"},"content":"        this.meetingLocation \u003d MeetingBuilder.DEFAULT_LOCATION_TWO;","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"HakkaNgin"},"content":"    //    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"HakkaNgin"},"content":"    //     * Sets the {@code description} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"HakkaNgin"},"content":"    //     */","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"HakkaNgin"},"content":"    //    public MeetingBuilder() {","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"HakkaNgin"},"content":"    //        this.peopleToMeet \u003d DEFAULT_PERSONS;","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"HakkaNgin"},"content":"    //        this.meetingDescription \u003d DEFAULT_DESCRIPTION;","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"HakkaNgin"},"content":"    //        this.meetingDateAndTime \u003d DEFAULT_DATETIME;","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"HakkaNgin"},"content":"    //        this.meetingLocation \u003d DEFAULT_LOCATION;","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"HakkaNgin"},"content":"    //    }","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"darrentde"},"content":"     * Initializes the MeetingBuilder with the data of {@code meetingToCopy}.","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"darrentde"},"content":"    public MeetingBuilder(Meeting meetingToCopy) {","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"HakkaNgin"},"content":"        this.personsToMeetArray \u003d meetingToCopy.getArrayListPersonToMeet();","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"darrentde"},"content":"        this.meetingDescription \u003d meetingToCopy.getDescription();","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"HakkaNgin"},"content":"        this.meetingDateAndTime \u003d meetingToCopy.getDateAndTime();","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"darrentde"},"content":"        this.meetingLocation \u003d meetingToCopy.getLocation();","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"darrentde"},"content":"     * Sets the {@code ArrayList\u003cPerson\u003e} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"darrentde"},"content":"    public MeetingBuilder withPersons(Person ... persons) {","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"darrentde"},"content":"        ArrayList\u003cPerson\u003e listOfPeople \u003d new ArrayList\u003c\u003e(Arrays.asList(persons));","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"HakkaNgin"},"content":"        this.personsToMeetArray \u003d listOfPeople;","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"darrentde"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"darrentde"},"content":"     * Sets the {@code Description} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"HakkaNgin"},"content":"    public MeetingBuilder withDescription(String description) {","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"HakkaNgin"},"content":"        this.meetingDescription \u003d description;","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"HakkaNgin"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"HakkaNgin"},"content":"     * Sets the {@code dateAndTime} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"HakkaNgin"},"content":"    public MeetingBuilder withDateAndTime(String dateAndTime) {","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"HakkaNgin"},"content":"        this.meetingDateAndTime \u003d dateAndTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"HakkaNgin"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"HakkaNgin"},"content":"     * Sets the {@code location} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"HakkaNgin"},"content":"    public MeetingBuilder withLocation(String location) {","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"HakkaNgin"},"content":"        this.meetingLocation \u003d location;","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"HakkaNgin"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"HakkaNgin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"HakkaNgin"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"HakkaNgin"},"content":"     * Builds a new Meeting","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"HakkaNgin"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"HakkaNgin"},"content":"    public Meeting build() {","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"HakkaNgin"},"content":"        return new Meeting(this.personsToMeetArray, this.meetingDescription,","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"HakkaNgin"},"content":"            this.meetingDateAndTime, this.meetingLocation);","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"HakkaNgin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"HakkaNgin"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"darrentde":25,"HakkaNgin":89}},{"path":"src/test/java/seedu/address/testutil/MeetingListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.MeetingList;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":" * A utility class to help with building MeetingList objects.","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":" *     {@code MeetingList ml \u003d new MeetingListBuilder().withMeeting(\"MEETING_TYPICAL_1\", \"MEETING_TYPICAL_2\").build();}","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"public class MeetingListBuilder {","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"    private MeetingList meetingList;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"    public MeetingListBuilder() {","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"        meetingList \u003d new MeetingList();","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"    public MeetingListBuilder(MeetingList meetingList) {","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":"        this.meetingList \u003d meetingList;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"darrentde"},"content":"     * Adds a new {@code Meeting} to the {@code MeetingList} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"    public MeetingListBuilder withMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"        meetingList.addMeeting(meeting);","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"    public MeetingList build() {","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"        return meetingList;","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"darrentde":33}},{"path":"src/test/java/seedu/address/testutil/TypicalMeetings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrentde"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"darrentde"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"darrentde"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"darrentde"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"darrentde"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"darrentde"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"darrentde"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"darrentde"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"darrentde"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"darrentde"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"darrentde"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.MeetingList;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"darrentde"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"darrentde"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"darrentde"},"content":" * A utility class containing a list of {@code Meeting} objects to be used in tests.","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"darrentde"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"darrentde"},"content":"public class TypicalMeetings {","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"tinenhao"},"content":"    public static final Meeting MEETING_TYPICAL_1 \u003d createMeeting1();","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"tinenhao"},"content":"    public static final Meeting MEETING_TYPICAL_2 \u003d createMeeting2();","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"tinenhao"},"content":"    public static final Meeting MEETING_TYPICAL_3 \u003d createMeeting3();","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"darrentde"},"content":"    private TypicalMeetings() {} // prevents instantiation","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"darrentde"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"darrentde"},"content":"     * Returns an {@code MeetingList} with all the typical meetings.","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"darrentde"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"darrentde"},"content":"    public static MeetingList getTypicalMeetingList() {","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"darrentde"},"content":"        MeetingList ml \u003d new MeetingList();","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"darrentde"},"content":"        for (Meeting meeting : getTypicalMeetings()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"darrentde"},"content":"            ml.addMeeting(meeting);","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"darrentde"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"darrentde"},"content":"        return ml;","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"darrentde"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"darrentde"},"content":"    public static List\u003cMeeting\u003e getTypicalMeetings() {","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"tinenhao"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(createMeeting1(), createMeeting2(), createMeeting3()));","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"tinenhao"},"content":"    private static Meeting createMeeting1() {","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"tinenhao"},"content":"        return new MeetingBuilder().withPersons(ALICE, CARL).withDescription(\"CS1101S\")","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"GenFusion122"},"content":"                .withDateAndTime(\"Wednesday, 12 January 2022 11:59 PM\").withLocation(\"DECK\").build();","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"tinenhao"},"content":"    private static Meeting createMeeting2() {","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"tinenhao"},"content":"        return new MeetingBuilder().withPersons(ALICE, ELLE, FIONA).withDescription(\"CS2040S\")","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"GenFusion122"},"content":"                .withDateAndTime(\"Monday, 5 December 2022 11:49 PM\").withLocation(\"UTOWN\").build();","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"tinenhao"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"tinenhao"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"tinenhao"},"content":"    private static Meeting createMeeting3() {","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"tinenhao"},"content":"        return new MeetingBuilder().withPersons(BENSON, DANIEL, GEORGE).withDescription(\"CS2103\")","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"GenFusion122"},"content":"                .withDateAndTime(\"Sunday, 6 February 2022 09:00 PM\").withLocation(\"COM1\").build();","lastModifiedDate":"2022-10-30"},{"lineNumber":55,"author":{"gitId":"darrentde"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"darrentde"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"darrentde":37,"GenFusion122":3,"tinenhao":16}}]
