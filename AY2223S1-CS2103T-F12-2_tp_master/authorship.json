[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yusiangeng"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-F12-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-F12-2/tp/actions)","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"* This is **an application to manage Hackathon teams**.\u003cbr\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"  * for Hackathon team leaders to manage and assign team members to various task","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"  * for Hackathon team leaders to manage overall project workflow","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"* For the detailed documentation of this project, see the **[Address Book Product Website](https://ay2223s1-cs2103t-f12-2.github.io/tp/)**.","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"This project is based on the AddressBook-Level3 project created by the SE-EDU initiative.","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"yusiangeng":1,"ALWHgithub":9,"-":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"### Sim Zhe Feng Kenneth","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"\u003cimg src\u003d\"images/kennethsim2000.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"Kennethsim2000"},"content":"[[github](http://github.com/kennethsim2000)]","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"Kennethsim2000"},"content":"[[portfolio](team/kennethsim2000.md)]","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"* Role: Team Lead","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"* Responsibilities: Overall project coordination and code quality","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":"### Aaron Li Wen Hao","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"\u003cimg src\u003d\"images/alwhgithub.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"[[github](https://github.com/alwhgithub)]","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"Kennethsim2000"},"content":"[[portfolio](team/alwhgithub.md)]","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"paotheroo"},"content":"* Role: Testing","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"paotheroo"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"paotheroo"},"content":"### Albert Ariel Widiaatmaja","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"\u003cimg src\u003d\"images/albertarielw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Kennethsim2000"},"content":"[[github](http://github.com/albertarielw)]","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"Kennethsim2000"},"content":"[[portfolio](team/albertarielw.md)]","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"paotheroo"},"content":"* Role: Management of Deliverables","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"paotheroo"},"content":"* Responsibilities: Ensure project deliverables are defined, assigned, and done on time in the right format","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"paotheroo"},"content":"### Joe Eng Yu Siang","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"yusiangeng"},"content":"\u003cimg src\u003d\"images/yusiangeng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"yusiangeng"},"content":"[[github](http://github.com/yusiangeng)] [[portfolio](team/yusiangeng.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"paotheroo"},"content":"* Role: Integration","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"paotheroo"},"content":"* Responsibilities: Code versioning, maintaining code repository, and integrating various parts of the software to create a whole","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"paotheroo"},"content":"### Low Zan Hao","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"\u003cimg src\u003d\"images/paotheroo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"paotheroo"},"content":"[[github](http://github.com/paotheroo)]","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"Kennethsim2000"},"content":"[[portfolio](team/paotheroo.md)]","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"paotheroo"},"content":"* Role: Documentation","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"paotheroo"},"content":"* Responsibilities: Quality of various project documents","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"yusiangeng":2,"Kennethsim2000":6,"ALWHgithub":4,"-":30,"paotheroo":17}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"albertarielw"},"content":"**Target User**","lastModifiedDate":"2022-09-30"},{"lineNumber":259,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":260,"author":{"gitId":"albertarielw"},"content":"Hackathon participants - particularly team member with project management role","lastModifiedDate":"2022-09-30"},{"lineNumber":261,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"albertarielw"},"content":"* has a need to allocate and track tasks to team members","lastModifiedDate":"2022-09-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"albertarielw"},"content":"**Value proposition**: help with project management tasks and team formation in Hackathons","lastModifiedDate":"2022-09-30"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                        | So that I can…​                                                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"albertarielw"},"content":"|----------|--------------------------------------------|-------------------------------------|--------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-30"},{"lineNumber":280,"author":{"gitId":"albertarielw"},"content":"| `* * *`  | hackathon team leader                      | see all tasks                       | have an overview of what needs to be done                                            |","lastModifiedDate":"2022-09-30"},{"lineNumber":281,"author":{"gitId":"albertarielw"},"content":"| `* * *`  | hackathon team leader                      | add a task to the task list,        | include task that needs to be done                                                   |","lastModifiedDate":"2022-09-30"},{"lineNumber":282,"author":{"gitId":"albertarielw"},"content":"| `* * *`  | hackathon team leader                      | delete a task                       | remove tasks that are accidentally added                                             |","lastModifiedDate":"2022-09-30"},{"lineNumber":283,"author":{"gitId":"albertarielw"},"content":"| `* * *`  | hackathon team leader                      | edit a task                         | rectify mistakes in task details                                                     |","lastModifiedDate":"2022-09-30"},{"lineNumber":284,"author":{"gitId":"albertarielw"},"content":"| `* * *`  | hackathon team leader                      | assign a task                       | allocate task to a team member                                                       |","lastModifiedDate":"2022-09-30"},{"lineNumber":285,"author":{"gitId":"albertarielw"},"content":"| `* * *`  | hackathon team leader                      | mark task as done                   | I can keep a moving record of what we have done                                      |","lastModifiedDate":"2022-09-30"},{"lineNumber":286,"author":{"gitId":"albertarielw"},"content":"| `* * *`  | hackathon team leader                      | mark task as not done               | in case we have tasks that end up being incomplete or the task requirements modified |","lastModifiedDate":"2022-09-30"},{"lineNumber":287,"author":{"gitId":"albertarielw"},"content":"| `* *`    | hackathon team leader                      | see which tasks are done/ not done  | plan the way forward                                                                 |","lastModifiedDate":"2022-09-30"},{"lineNumber":288,"author":{"gitId":"albertarielw"},"content":"| `* *`    | hackathon team leader                      | add further descriptions to ga task | add more details to a task                                                           |                             |","lastModifiedDate":"2022-09-30"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"ALWHgithub"},"content":"**Use case: Add a new team member**","lastModifiedDate":"2022-09-28"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"ALWHgithub"},"content":"1.  User requests to add a new member","lastModifiedDate":"2022-09-30"},{"lineNumber":299,"author":{"gitId":"ALWHgithub"},"content":"2.  HackAssist shows a list of fields to input (Name, Rating of Ability, Role)","lastModifiedDate":"2022-09-28"},{"lineNumber":300,"author":{"gitId":"ALWHgithub"},"content":"3.  User inputs fields","lastModifiedDate":"2022-09-28"},{"lineNumber":301,"author":{"gitId":"ALWHgithub"},"content":"4.  HackAssist shows list of all members, including new member","lastModifiedDate":"2022-09-28"},{"lineNumber":302,"author":{"gitId":"ALWHgithub"},"content":"Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":304,"author":{"gitId":"ALWHgithub"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":305,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":306,"author":{"gitId":"ALWHgithub"},"content":"Extensions:","lastModifiedDate":"2022-09-28"},{"lineNumber":307,"author":{"gitId":"ALWHgithub"},"content":"  * 3a. HackAssist detects that the member already exists","lastModifiedDate":"2022-09-28"},{"lineNumber":308,"author":{"gitId":"ALWHgithub"},"content":"     * 3a1. Hackassist shows an error message","lastModifiedDate":"2022-09-28"},{"lineNumber":309,"author":{"gitId":"ALWHgithub"},"content":"       Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":310,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":311,"author":{"gitId":"ALWHgithub"},"content":" * *a. At any time, User chooses to cancel the process.","lastModifiedDate":"2022-09-28"},{"lineNumber":312,"author":{"gitId":"ALWHgithub"},"content":"    * *a1. HackAssist requests to confirm the cancellation.","lastModifiedDate":"2022-09-28"},{"lineNumber":313,"author":{"gitId":"ALWHgithub"},"content":"    * *a2. User confirms the cancellation.","lastModifiedDate":"2022-09-28"},{"lineNumber":314,"author":{"gitId":"ALWHgithub"},"content":"       Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":315,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":316,"author":{"gitId":"ALWHgithub"},"content":"**Use case: Add specific team member to an existing task**","lastModifiedDate":"2022-09-28"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"ALWHgithub"},"content":"1.  User requests to see all tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":321,"author":{"gitId":"ALWHgithub"},"content":"2.  HackAssist shows current list of tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":322,"author":{"gitId":"ALWHgithub"},"content":"3.  User requests specific task","lastModifiedDate":"2022-09-28"},{"lineNumber":323,"author":{"gitId":"ALWHgithub"},"content":"4.  HackAssist displays information on that task","lastModifiedDate":"2022-09-28"},{"lineNumber":324,"author":{"gitId":"ALWHgithub"},"content":"5.  User requests to add member","lastModifiedDate":"2022-09-28"},{"lineNumber":325,"author":{"gitId":"ALWHgithub"},"content":"6.  HackAssist shows list of all members","lastModifiedDate":"2022-09-28"},{"lineNumber":326,"author":{"gitId":"ALWHgithub"},"content":"7.  User selects specific member","lastModifiedDate":"2022-09-28"},{"lineNumber":327,"author":{"gitId":"ALWHgithub"},"content":"8.  HackAssist displays information about member and prompts for confirmation","lastModifiedDate":"2022-09-28"},{"lineNumber":328,"author":{"gitId":"ALWHgithub"},"content":"9.  User confirms","lastModifiedDate":"2022-09-28"},{"lineNumber":329,"author":{"gitId":"ALWHgithub"},"content":"10.  User is added to existing task","lastModifiedDate":"2022-09-28"},{"lineNumber":330,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"ALWHgithub"},"content":"Extensions:","lastModifiedDate":"2022-09-28"},{"lineNumber":335,"author":{"gitId":"ALWHgithub"},"content":"  * 2a. There are no tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":336,"author":{"gitId":"ALWHgithub"},"content":"       Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"ALWHgithub"},"content":" * 5a. There are no members","lastModifiedDate":"2022-09-28"},{"lineNumber":339,"author":{"gitId":"ALWHgithub"},"content":"    * 5a1 Hackassist shows an error message that there are no members","lastModifiedDate":"2022-09-28"},{"lineNumber":340,"author":{"gitId":"-"},"content":"       Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"ALWHgithub"},"content":"* 7a. HackAssist detects that the member\u0027s Ability Rating is lower than the given task","lastModifiedDate":"2022-09-28"},{"lineNumber":343,"author":{"gitId":"ALWHgithub"},"content":"    * 7a1. Hackassist shows a warning message for low user rating","lastModifiedDate":"2022-09-28"},{"lineNumber":344,"author":{"gitId":"ALWHgithub"},"content":"    * 7a2. Hackassist promts for confirmation","lastModifiedDate":"2022-09-28"},{"lineNumber":345,"author":{"gitId":"ALWHgithub"},"content":"    * 7a3. User ackowledges and confirms addition of member","lastModifiedDate":"2022-09-28"},{"lineNumber":346,"author":{"gitId":"ALWHgithub"},"content":"      Use case resumes from step 8.","lastModifiedDate":"2022-09-28"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":348,"author":{"gitId":"ALWHgithub"},"content":"* 7b. HackAssist detects that the member already has more than 3 tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":349,"author":{"gitId":"ALWHgithub"},"content":"    * 7b1. Hackassist shows a warning message for potentially overloaded user","lastModifiedDate":"2022-09-28"},{"lineNumber":350,"author":{"gitId":"ALWHgithub"},"content":"    * 7b2. Hackassist promts for confirmation","lastModifiedDate":"2022-09-28"},{"lineNumber":351,"author":{"gitId":"ALWHgithub"},"content":"    * 7b3. User ackowledges and confirms addition of member","lastModifiedDate":"2022-09-28"},{"lineNumber":352,"author":{"gitId":"ALWHgithub"},"content":"      Use case resumes from step 8.","lastModifiedDate":"2022-09-28"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":354,"author":{"gitId":"ALWHgithub"},"content":"* a. At any time, User chooses to cancel the process.","lastModifiedDate":"2022-09-28"},{"lineNumber":355,"author":{"gitId":"ALWHgithub"},"content":"    * a1. HackAssist requests to confirm the cancellation.","lastModifiedDate":"2022-09-28"},{"lineNumber":356,"author":{"gitId":"ALWHgithub"},"content":"    * a2. User confirms the cancellation.","lastModifiedDate":"2022-09-28"},{"lineNumber":357,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"ALWHgithub"},"content":" **Use case: Edit deadline of task**","lastModifiedDate":"2022-09-28"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"ALWHgithub"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"ALWHgithub"},"content":"1.  User requests to see all tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":364,"author":{"gitId":"ALWHgithub"},"content":"2.  HackAssist shows current list of tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":365,"author":{"gitId":"ALWHgithub"},"content":"3.  User requests specific task","lastModifiedDate":"2022-09-28"},{"lineNumber":366,"author":{"gitId":"ALWHgithub"},"content":"4.  HackAssist displays information on that task","lastModifiedDate":"2022-09-28"},{"lineNumber":367,"author":{"gitId":"ALWHgithub"},"content":"5.  User requests to edit deadline","lastModifiedDate":"2022-09-28"},{"lineNumber":368,"author":{"gitId":"ALWHgithub"},"content":"6.  HackAssist promts input for new deadline","lastModifiedDate":"2022-09-28"},{"lineNumber":369,"author":{"gitId":"ALWHgithub"},"content":"7.  User inputs deadline","lastModifiedDate":"2022-09-28"},{"lineNumber":370,"author":{"gitId":"ALWHgithub"},"content":"8.  User confirms","lastModifiedDate":"2022-09-28"},{"lineNumber":371,"author":{"gitId":"ALWHgithub"},"content":"9.  HackAssist updates deadline","lastModifiedDate":"2022-09-28"},{"lineNumber":372,"author":{"gitId":"ALWHgithub"},"content":"10.  HackAssist displays updated information about task","lastModifiedDate":"2022-09-28"},{"lineNumber":373,"author":{"gitId":"ALWHgithub"},"content":"Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"ALWHgithub"},"content":"Extensions:","lastModifiedDate":"2022-09-28"},{"lineNumber":376,"author":{"gitId":"ALWHgithub"},"content":"* 2a. There are no tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":377,"author":{"gitId":"ALWHgithub"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"ALWHgithub"},"content":"* 7a. HackAssist detects that the deadline is invalid","lastModifiedDate":"2022-09-28"},{"lineNumber":380,"author":{"gitId":"ALWHgithub"},"content":"    * 7a1. Hackassist shows an error message that the deadline is invalid","lastModifiedDate":"2022-09-28"},{"lineNumber":381,"author":{"gitId":"ALWHgithub"},"content":"    * 7a2. User enters new data","lastModifiedDate":"2022-09-28"},{"lineNumber":382,"author":{"gitId":"ALWHgithub"},"content":"    Steps 7a1-7a2 are repeated until the data entered are correct.","lastModifiedDate":"2022-09-28"},{"lineNumber":383,"author":{"gitId":"ALWHgithub"},"content":"    Use case resumes from step 8.","lastModifiedDate":"2022-09-28"},{"lineNumber":384,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":385,"author":{"gitId":"ALWHgithub"},"content":"* 7b. HackAssist detects that the deadline is already past","lastModifiedDate":"2022-09-28"},{"lineNumber":386,"author":{"gitId":"ALWHgithub"},"content":"    * 7b1. Hackassist shows an error message that the deadline has already past","lastModifiedDate":"2022-09-28"},{"lineNumber":387,"author":{"gitId":"ALWHgithub"},"content":"    * 7b2. User enters new data","lastModifiedDate":"2022-09-28"},{"lineNumber":388,"author":{"gitId":"ALWHgithub"},"content":"    Steps 7b1-7b2 are repeated until the data entered are correct.","lastModifiedDate":"2022-09-28"},{"lineNumber":389,"author":{"gitId":"ALWHgithub"},"content":"    Use case resumes from step 8.","lastModifiedDate":"2022-09-28"},{"lineNumber":390,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"paotheroo"},"content":"4.  Should be usable by hackathon team leaders of all skill levels (i.e. novices to highly experienced).","lastModifiedDate":"2022-09-28"},{"lineNumber":398,"author":{"gitId":"paotheroo"},"content":"5.  Product is not required to handle printing.","lastModifiedDate":"2022-09-28"},{"lineNumber":399,"author":{"gitId":"paotheroo"},"content":"6.  System should respond within two seconds.","lastModifiedDate":"2022-09-28"},{"lineNumber":400,"author":{"gitId":"paotheroo"},"content":"7.  Product is expected to be updated with a new set of features or bugfixes once every two weeks.","lastModifiedDate":"2022-09-28"},{"lineNumber":401,"author":{"gitId":"paotheroo"},"content":"8.  Should be able to read from local disk storage (i.e. persistent storage functionality).","lastModifiedDate":"2022-09-28"},{"lineNumber":402,"author":{"gitId":"paotheroo"},"content":"9.  Product is not designed to work between different disk storages (i.e. only can read and write to local disk storage).","lastModifiedDate":"2022-09-28"},{"lineNumber":403,"author":{"gitId":"paotheroo"},"content":"10.  Should work offline without network connectivity.","lastModifiedDate":"2022-09-30"},{"lineNumber":404,"author":{"gitId":"paotheroo"},"content":"11.  Should only be accessible by Hackathon group leaders.","lastModifiedDate":"2022-09-30"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"yusiangeng"},"content":"* **CLI**: Command Line Interface which receives commands from a user in the form of lines of text","lastModifiedDate":"2022-09-28"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yusiangeng":1,"albertarielw":16,"ALWHgithub":74,"-":366,"paotheroo":8}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"HackAssist is a desktop app for helping hackathon team leaders manage project tasks and team formation more easily.","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":"It is optimized for use via a **Command Line Interface** (CLI) while still having the benefits of a **Graphical User Interface** (GUI). If you can type fast, HackAssist can get your task management done faster than traditional GUI apps.","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"1. Download the latest `HackAssist.jar` from [here](https://github.com/AY2223S1-CS2103T-F12-2/tp/releases).","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your HackAssist.","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Kennethsim2000"},"content":"   * **`view Tasks`** : Lists all tasks in tasklist.","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Kennethsim2000"},"content":"   * **`add task coding assignment`** : Adds a task `coding assignment` to the task list.","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Kennethsim2000"},"content":"   * **`delete task`**`3` : Deletes the 3rd task from the task list.","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Kennethsim2000"},"content":"   * **`help`** : Displays help text.","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"Kennethsim2000"},"content":"Clears all entries from the task list.","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"Kennethsim2000"},"content":"HackAssist data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-10-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":96,"author":{"gitId":"Kennethsim2000"},"content":"HackASsist data are saved as a JSON file `[JAR file location]/data/HackAssist.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"Kennethsim2000"},"content":"### Adding a task: `Add Task`","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"Kennethsim2000"},"content":"Adds a task to the tasklist.","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"Kennethsim2000"},"content":"Format: `add task TASK_DESCRIPTION`","lastModifiedDate":"2022-09-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"Kennethsim2000"},"content":"* `add task laundry` add laundry to the task list","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"Kennethsim2000"},"content":"* `add task coding assignment` add coding assignment to the task list","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"Kennethsim2000"},"content":"### Deleting a task: `Delete Task`","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":118,"author":{"gitId":"Kennethsim2000"},"content":"Deletes a task from the tasklist.","lastModifiedDate":"2022-09-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":120,"author":{"gitId":"Kennethsim2000"},"content":"Format: `delete task TASK_NUMBER`","lastModifiedDate":"2022-09-28"},{"lineNumber":121,"author":{"gitId":"Kennethsim2000"},"content":"* Deletes the task at the specified `TASK_NUMBER`.","lastModifiedDate":"2022-09-28"},{"lineNumber":122,"author":{"gitId":"Kennethsim2000"},"content":"* The tasknumber refers to the task number shown in the displayed task list.","lastModifiedDate":"2022-09-28"},{"lineNumber":123,"author":{"gitId":"Kennethsim2000"},"content":"* The tasknumber **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-09-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":126,"author":{"gitId":"Kennethsim2000"},"content":"* `delete task 1` deletes the first task from the tasklist","lastModifiedDate":"2022-09-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":128,"author":{"gitId":"Kennethsim2000"},"content":"### viewing all tasks: `View Tasks`","lastModifiedDate":"2022-09-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":130,"author":{"gitId":"Kennethsim2000"},"content":"Lists out all the tasks in the tasklist.","lastModifiedDate":"2022-09-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":132,"author":{"gitId":"Kennethsim2000"},"content":"Format: `view tasks`","lastModifiedDate":"2022-09-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":134,"author":{"gitId":"Kennethsim2000"},"content":"### Assigning a task: `Assign`","lastModifiedDate":"2022-09-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":136,"author":{"gitId":"Kennethsim2000"},"content":"Assign a task to an existing person.","lastModifiedDate":"2022-09-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":138,"author":{"gitId":"Kennethsim2000"},"content":"Format: `assign TASK_NUMBER to PERSON_NAME`","lastModifiedDate":"2022-09-28"},{"lineNumber":139,"author":{"gitId":"Kennethsim2000"},"content":"* `TASK_NUMBER` must be smaller than the total number of tasks in task list.","lastModifiedDate":"2022-09-28"},{"lineNumber":140,"author":{"gitId":"Kennethsim2000"},"content":"* `PERSON_NAME` must be existing contact in contactbook.","lastModifiedDate":"2022-09-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":142,"author":{"gitId":"Kennethsim2000"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":143,"author":{"gitId":"Kennethsim2000"},"content":"* `assign 1 to John` assign tasknumber 1 to John","lastModifiedDate":"2022-09-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"Kennethsim2000"},"content":"**Add Task** | `add task TASK_DESCRIPTION` \u003cbr\u003e e.g., `add task laundry`","lastModifiedDate":"2022-09-28"},{"lineNumber":161,"author":{"gitId":"Kennethsim2000"},"content":"**Delete Task** | `delete task TASK_NUMBER` \u003cbr\u003e e.g., `delete task 1`","lastModifiedDate":"2022-09-28"},{"lineNumber":162,"author":{"gitId":"Kennethsim2000"},"content":"**View Tasks** | `view tasks`","lastModifiedDate":"2022-09-28"},{"lineNumber":163,"author":{"gitId":"Kennethsim2000"},"content":"**Assign** | `assign TASK_NUMBER to PERSON_NAME` \u003cbr\u003e e.g., `assign 1 to John`","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"Kennethsim2000":38,"-":125}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AddressBook Level-3","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yusiangeng"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-F12-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-F12-2/tp/actions)","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"yusiangeng"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-F12-2/tp/branch/master/graph/badge.svg?token\u003d0JLSTHS4IL)](https://codecov.io/gh/AY2223S1-CS2103T-F12-2/tp)","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yusiangeng":2,"-":17}},{"path":"docs/team/albertarielw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"albertarielw"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"albertarielw"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"albertarielw"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"albertarielw"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"albertarielw"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"albertarielw"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"albertarielw"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"albertarielw"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"albertarielw"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"albertarielw"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"albertarielw"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"albertarielw"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"albertarielw"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"albertarielw"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"albertarielw"},"content":"* **Project management**:","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"albertarielw"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"albertarielw"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"albertarielw"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"albertarielw"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"albertarielw"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"albertarielw"},"content":"  * User Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"albertarielw"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"albertarielw"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"albertarielw"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"albertarielw"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"albertarielw"},"content":"* **Community**:","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"albertarielw"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"albertarielw"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"albertarielw"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"albertarielw"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"albertarielw"},"content":"* **Tools**:","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"albertarielw"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"albertarielw"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"albertarielw"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"albertarielw":46}},{"path":"docs/team/alwhgithub.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"  * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"ALWHgithub"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"ALWHgithub"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"ALWHgithub"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"ALWHgithub"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"ALWHgithub"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"ALWHgithub"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"ALWHgithub"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"ALWHgithub"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"ALWHgithub"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"ALWHgithub"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"ALWHgithub"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ALWHgithub":47}},{"path":"docs/team/kennethsim2000.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"---","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"layout: page","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"title: Kenneth\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":"---","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"### Project: HackAssist","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":"HackAssist is a desktop address book and task management application used to better manage tasks allocation in Hackathons. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"Kennethsim2000"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Kennethsim2000"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Kennethsim2000"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Kennethsim2000"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Kennethsim2000"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Kennethsim2000"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Kennethsim2000"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Kennethsim2000"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Kennethsim2000"},"content":"* **Project management**:","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Kennethsim2000"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Kennethsim2000"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Kennethsim2000"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Kennethsim2000"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Kennethsim2000"},"content":"* **Documentation**:","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Kennethsim2000"},"content":"  * User Guide:","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Kennethsim2000"},"content":"    * Added documentation for the features `Add Task`, `Delete Task`, `View Tasks`, `Assign` [\\#72]()","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Kennethsim2000"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Kennethsim2000"},"content":"  * Developer Guide:","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Kennethsim2000"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Kennethsim2000"},"content":"* **Community**:","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Kennethsim2000"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Kennethsim2000"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Kennethsim2000"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Kennethsim2000"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Kennethsim2000"},"content":"* **Tools**:","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Kennethsim2000"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Kennethsim2000"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Kennethsim2000"},"content":"* _{to be updated soon}_","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"Kennethsim2000":47}},{"path":"docs/team/paotheroo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"title: Zan Hao\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":"### Project: HackAssist","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"HackAssist is a desktop address book and task management application used for managing tasks and team formations in Hackathons. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"paotheroo"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"paotheroo"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":"* **Project management**:","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"paotheroo"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"paotheroo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"paotheroo"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"paotheroo"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"paotheroo"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"paotheroo"},"content":"  * User Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"paotheroo"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"paotheroo"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"paotheroo"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"paotheroo"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"paotheroo"},"content":"* **Community**:","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"paotheroo"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"paotheroo"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"paotheroo"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"paotheroo"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"paotheroo"},"content":"* **Tools**:","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"paotheroo"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"paotheroo"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"paotheroo"},"content":"* _{to be updated soon}_","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"paotheroo":46}},{"path":"docs/team/yusiangeng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yusiangeng"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"yusiangeng"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"yusiangeng"},"content":"title: Joe\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"yusiangeng"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"yusiangeng"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"yusiangeng"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"yusiangeng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"yusiangeng"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"yusiangeng"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"yusiangeng"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"yusiangeng"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"yusiangeng"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"yusiangeng"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"yusiangeng"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"yusiangeng"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"yusiangeng"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"yusiangeng"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"yusiangeng"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"yusiangeng"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"yusiangeng"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"yusiangeng"},"content":"  * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"yusiangeng"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"yusiangeng"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"yusiangeng"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"yusiangeng"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"yusiangeng"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"yusiangeng"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"yusiangeng"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"yusiangeng"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"yusiangeng"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"yusiangeng"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"yusiangeng"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"yusiangeng"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"yusiangeng"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"yusiangeng":46}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"albertarielw":1,"-":13}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertarielw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"albertarielw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"albertarielw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"albertarielw"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"albertarielw"},"content":" * Adds a task to the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"albertarielw"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"albertarielw"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"albertarielw"},"content":"    public static final String COMMAND_WORD \u003d \"addTask\";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the address book. \"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"albertarielw"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_PRIORITY + \"PRIORITY \"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_CATEGORY + \"CATEGORY \"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_DEADLINE + \"DEADLINE\"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_PERSON + \"PERSON \"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_STATUS + \"STATUS...\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"albertarielw"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_NAME + \"Create Initial UI/UX Design\"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_DESCRIPTION + \"Use FIGMA to create initial UI/UX Design\"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_PRIORITY + \"Medium\"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_CATEGORY + \"UI/UX\"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_DEADLINE + \"2022-01-01\"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_PERSON + \"Bob\"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_STATUS + \"Not Done\\n\";","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book\";","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"albertarielw"},"content":"    private final Task toAdd;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"albertarielw"},"content":"     * Creates an AddTaskCommand to add the specified {@code Task}","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"albertarielw"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"albertarielw"},"content":"        toAdd \u003d task;","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"albertarielw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"albertarielw"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"albertarielw"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"albertarielw"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"albertarielw"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"albertarielw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"albertarielw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"albertarielw"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"albertarielw"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"albertarielw"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"albertarielw":71}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertarielw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"albertarielw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"albertarielw"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"albertarielw"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"albertarielw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"albertarielw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"albertarielw"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"albertarielw"},"content":" * Deletes a Task in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"albertarielw"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"albertarielw"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"albertarielw"},"content":"    public static final String COMMAND_WORD \u003d \"deleteTask\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"albertarielw"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"albertarielw"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"albertarielw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"albertarielw"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"albertarielw"},"content":"     * Creates an DeleteTaskCommand to add the specified {@code Task}","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"albertarielw"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"albertarielw"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"albertarielw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"albertarielw"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"albertarielw"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"albertarielw"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"albertarielw"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"albertarielw"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"albertarielw"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, personToDelete));","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"albertarielw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"albertarielw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"albertarielw"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"albertarielw"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"albertarielw"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"albertarielw":54}},{"path":"src/main/java/seedu/address/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertarielw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"albertarielw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"albertarielw"},"content":"import static java.util.Optional.ofNullable;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"albertarielw"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"albertarielw"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"albertarielw"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"albertarielw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"albertarielw"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"albertarielw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.TaskCategory;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.TaskDeadline;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"albertarielw"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"albertarielw"},"content":" * Adds a Task in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"albertarielw"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"albertarielw"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"albertarielw"},"content":"    public static final String COMMAND_WORD \u003d \"editTask\";","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"albertarielw"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"albertarielw"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"albertarielw"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"albertarielw"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"albertarielw"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"albertarielw"},"content":"            + \"[\" + PREFIX_PRIORITY + \"PRIORITY] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"albertarielw"},"content":"            + \"[\" + PREFIX_CATEGORY + \"CATEGORY] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"albertarielw"},"content":"            + \"[\" + PREFIX_DEADLINE + \"DEADLINE] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"albertarielw"},"content":"            + \"[\" + PREFIX_PERSON + \"PERSON] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"albertarielw"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS]...\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"albertarielw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_NAME + \"Create Initial UI/UX Design\"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"albertarielw"},"content":"            + PREFIX_DEADLINE + \"2022-02-02\";","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"albertarielw"},"content":"    private final Index index;","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"albertarielw"},"content":"    private final EditTaskCommand.EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"albertarielw"},"content":"     * @param index of the task in the filtered task list to edit","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"albertarielw"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"albertarielw"},"content":"    public EditTaskCommand(Index index, EditTaskCommand.EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"albertarielw"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"albertarielw"},"content":"        this.editTaskDescriptor \u003d new EditTaskCommand.EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"albertarielw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"albertarielw"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"albertarielw"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"albertarielw"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"albertarielw"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"albertarielw"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"albertarielw"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"albertarielw"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"albertarielw"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"albertarielw"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"albertarielw"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"albertarielw"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"albertarielw"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"albertarielw"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskCommand.EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"albertarielw"},"content":"        assert editTaskDescriptor !\u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"albertarielw"},"content":"        TaskName updatedName \u003d editTaskDescriptor.getName().orElse(taskToEdit.getName());","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"albertarielw"},"content":"        TaskCategory updatedCategory \u003d editTaskDescriptor.getCategory().orElse(taskToEdit.getCategory());","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"albertarielw"},"content":"        Description updatedDescription \u003d editTaskDescriptor.getDescription().orElse(taskToEdit.getDescription());","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"albertarielw"},"content":"        Priority updatedPriority \u003d editTaskDescriptor.getPriority().orElse(taskToEdit.getPriority());","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"albertarielw"},"content":"        TaskDeadline updatedDeadline \u003d editTaskDescriptor.getDeadline().orElse(taskToEdit.getDeadline());","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"albertarielw"},"content":"        Person updatedPerson \u003d editTaskDescriptor.getPerson().orElse(taskToEdit.getPerson());","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"albertarielw"},"content":"        Boolean updatedIsDone \u003d editTaskDescriptor.getIsDone().orElse(taskToEdit.isDone());","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"albertarielw"},"content":"        return new Task(updatedName, updatedCategory, updatedDescription, updatedPriority,","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"albertarielw"},"content":"                updatedDeadline, updatedPerson, updatedIsDone);","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"albertarielw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"albertarielw"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"albertarielw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"albertarielw"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"albertarielw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"albertarielw"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"albertarielw"},"content":"            return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"albertarielw"},"content":"        // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"albertarielw"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"albertarielw"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"albertarielw"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"albertarielw"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"albertarielw"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"albertarielw"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"albertarielw"},"content":"        // Identity fields","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"albertarielw"},"content":"        private TaskName name;","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"albertarielw"},"content":"        private TaskCategory category;","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"albertarielw"},"content":"        private Description description;","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"albertarielw"},"content":"        // Data fields","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"albertarielw"},"content":"        private Priority priority;","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"albertarielw"},"content":"        private TaskDeadline deadline;","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"albertarielw"},"content":"        private Person person;","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"albertarielw"},"content":"        private boolean isDone;","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"albertarielw"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"albertarielw"},"content":"        /**","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"albertarielw"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"albertarielw"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"albertarielw"},"content":"         */","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"albertarielw"},"content":"        public EditTaskDescriptor(EditTaskCommand.EditTaskDescriptor toCopy) {","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"albertarielw"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"albertarielw"},"content":"            setCategory(toCopy.category);","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"albertarielw"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"albertarielw"},"content":"            setPriority(toCopy.priority);","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"albertarielw"},"content":"            setDeadline(toCopy.deadline);","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"albertarielw"},"content":"            setPerson(toCopy.person);","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"albertarielw"},"content":"            setDone(toCopy.isDone);","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"albertarielw"},"content":"        /**","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"albertarielw"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"albertarielw"},"content":"         */","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"albertarielw"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"albertarielw"},"content":"            return CollectionUtil.isAnyNonNull(name, category, description, priority, deadline, person, isDone);","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"albertarielw"},"content":"        public void setName(TaskName name) {","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"albertarielw"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"albertarielw"},"content":"        public Optional\u003cTaskName\u003e getName() {","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"albertarielw"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"albertarielw"},"content":"        public void setCategory(TaskCategory category) {","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"albertarielw"},"content":"            this.category \u003d category;","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"albertarielw"},"content":"        public Optional\u003cTaskCategory\u003e getCategory() {","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"albertarielw"},"content":"            return ofNullable(category);","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"albertarielw"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"albertarielw"},"content":"            this.description \u003d description;","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"albertarielw"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"albertarielw"},"content":"            return ofNullable(description);","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"albertarielw"},"content":"        public void setPriority(Priority priority) {","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"albertarielw"},"content":"            this.priority \u003d priority;","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"albertarielw"},"content":"        public Optional\u003cPriority\u003e getPriority() {","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"albertarielw"},"content":"            return ofNullable(priority);","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"albertarielw"},"content":"        public void setDeadline(TaskDeadline deadline) {","lastModifiedDate":"2022-10-11"},{"lineNumber":200,"author":{"gitId":"albertarielw"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2022-10-11"},{"lineNumber":201,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":202,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":203,"author":{"gitId":"albertarielw"},"content":"        public Optional\u003cTaskDeadline\u003e getDeadline() {","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"albertarielw"},"content":"            return ofNullable(deadline);","lastModifiedDate":"2022-10-11"},{"lineNumber":205,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"albertarielw"},"content":"        public void setPerson(Person person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":207,"author":{"gitId":"albertarielw"},"content":"            this.person \u003d person;","lastModifiedDate":"2022-10-11"},{"lineNumber":208,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":209,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":210,"author":{"gitId":"albertarielw"},"content":"        public Optional\u003cPerson\u003e getPerson() {","lastModifiedDate":"2022-10-11"},{"lineNumber":211,"author":{"gitId":"albertarielw"},"content":"            return ofNullable(person);","lastModifiedDate":"2022-10-11"},{"lineNumber":212,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":213,"author":{"gitId":"albertarielw"},"content":"        public void setDone(boolean isDone) {","lastModifiedDate":"2022-10-11"},{"lineNumber":214,"author":{"gitId":"albertarielw"},"content":"            this.isDone \u003d isDone;","lastModifiedDate":"2022-10-11"},{"lineNumber":215,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":216,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":217,"author":{"gitId":"albertarielw"},"content":"        public Optional\u003cBoolean\u003e getIsDone() {","lastModifiedDate":"2022-10-11"},{"lineNumber":218,"author":{"gitId":"albertarielw"},"content":"            return ofNullable(isDone);","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":220,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":221,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":222,"author":{"gitId":"albertarielw"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":223,"author":{"gitId":"albertarielw"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":224,"author":{"gitId":"albertarielw"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":225,"author":{"gitId":"albertarielw"},"content":"                return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":226,"author":{"gitId":"albertarielw"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":227,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":228,"author":{"gitId":"albertarielw"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":229,"author":{"gitId":"albertarielw"},"content":"            if (!(other instanceof EditCommand.EditPersonDescriptor)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":230,"author":{"gitId":"albertarielw"},"content":"                return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":231,"author":{"gitId":"albertarielw"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":232,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":233,"author":{"gitId":"albertarielw"},"content":"            // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":234,"author":{"gitId":"albertarielw"},"content":"            EditTaskCommand.EditTaskDescriptor e \u003d (EditTaskCommand.EditTaskDescriptor) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":235,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":236,"author":{"gitId":"albertarielw"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-10-11"},{"lineNumber":237,"author":{"gitId":"albertarielw"},"content":"                    \u0026\u0026 getCategory().equals(e.getCategory())","lastModifiedDate":"2022-10-11"},{"lineNumber":238,"author":{"gitId":"albertarielw"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2022-10-11"},{"lineNumber":239,"author":{"gitId":"albertarielw"},"content":"                    \u0026\u0026 getPriority().equals(e.getPriority())","lastModifiedDate":"2022-10-11"},{"lineNumber":240,"author":{"gitId":"albertarielw"},"content":"                    \u0026\u0026 getDeadline().equals(e.getDeadline())","lastModifiedDate":"2022-10-11"},{"lineNumber":241,"author":{"gitId":"albertarielw"},"content":"                    \u0026\u0026 getPerson().equals(e.getPerson())","lastModifiedDate":"2022-10-11"},{"lineNumber":242,"author":{"gitId":"albertarielw"},"content":"                    \u0026\u0026 getIsDone().equals(e.getIsDone());","lastModifiedDate":"2022-10-11"},{"lineNumber":243,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":244,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":245,"author":{"gitId":"albertarielw"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"albertarielw":245}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"albertarielw"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"albertarielw"},"content":"    public static final Prefix PREFIX_PRIORITY \u003d new Prefix(\"pr/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"albertarielw"},"content":"    public static final Prefix PREFIX_CATEGORY \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"albertarielw"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"dl/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"albertarielw"},"content":"    public static final Prefix PREFIX_PERSON \u003d new Prefix(\"pe/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"albertarielw"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"albertarielw":7,"-":15}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.TaskList;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"albertarielw"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"albertarielw"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"albertarielw"},"content":"    //// task-level operations","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"albertarielw"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"albertarielw"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"albertarielw"},"content":"        return tasks.contains(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"albertarielw"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"albertarielw"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"albertarielw"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"albertarielw"},"content":"        tasks.add(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"albertarielw"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"albertarielw"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"albertarielw"},"content":"     * The person identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"albertarielw"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"albertarielw"},"content":"        tasks.edit(target, editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"albertarielw"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"albertarielw"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"albertarielw"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"albertarielw"},"content":"        tasks.delete(key);","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":150,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"albertarielw"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"albertarielw"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"albertarielw"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"albertarielw"},"content":"                \u0026\u0026 tasks.equals(((AddressBook) other).tasks));","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"albertarielw":48,"-":119}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"albertarielw"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"albertarielw"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"albertarielw"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"albertarielw"},"content":"     * The task must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"albertarielw"},"content":"    void deleteTask(Task task);","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"albertarielw"},"content":"     * Adds the given task.","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"albertarielw"},"content":"     * {@code task} must not already exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"albertarielw"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"albertarielw"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"albertarielw"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"albertarielw"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"albertarielw"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"albertarielw"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"albertarielw"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"albertarielw"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"albertarielw"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"albertarielw"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"albertarielw":35,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"albertarielw"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"albertarielw"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.addressBook.getTaskList());","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"albertarielw"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"albertarielw"},"content":"        return addressBook.hasTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"albertarielw"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"albertarielw"},"content":"        addressBook.removeTask(target);","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"albertarielw"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"albertarielw"},"content":"        addressBook.addTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"albertarielw"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS); // check this","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"albertarielw"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"albertarielw"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"albertarielw"},"content":"        addressBook.setTask(target, editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"albertarielw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"albertarielw"},"content":"     * Returns an unmodifiable view of the list of {@code Tasks} backed by the internal list of","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"albertarielw"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"albertarielw"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"albertarielw"},"content":"        return filteredTasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"albertarielw"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"albertarielw"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":189,"author":{"gitId":"albertarielw"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"albertarielw"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"albertarielw":44,"-":148}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"albertarielw"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"albertarielw"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"albertarielw"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"albertarielw":6,"-":17}},{"path":"src/main/java/seedu/address/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":" * Represents the description of the task in the task list.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTaskDescription(String)}","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Kennethsim2000"},"content":"public class Description {","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Kennethsim2000"},"content":"    private static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Kennethsim2000"},"content":"            \"Task Descriptions can take any values, and it should not be blank\";","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Kennethsim2000"},"content":"    /*","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"Kennethsim2000"},"content":"     * The first character of the taskname must not be a whitespace,","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Kennethsim2000"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"    private static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"    private final String taskDescription;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Kennethsim2000"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Kennethsim2000"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Kennethsim2000"},"content":"    public Description(String name) {","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Kennethsim2000"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Kennethsim2000"},"content":"        checkArgument(isValidTaskDescription(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Kennethsim2000"},"content":"        taskDescription \u003d name;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns the description of task.","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Kennethsim2000"},"content":"     * @return The task description.","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Kennethsim2000"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Kennethsim2000"},"content":"        return taskDescription;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns true if task description is valid.","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Kennethsim2000"},"content":"     * @param test String to test.","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Whether the string is a valid task description.","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Kennethsim2000"},"content":"    public static boolean isValidTaskDescription(String test) {","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Kennethsim2000"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns the string representation of the task description.","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Task description.","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Kennethsim2000"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Kennethsim2000"},"content":"        return taskDescription;","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"Kennethsim2000"},"content":"     * Compares another object with the Description object.","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"Kennethsim2000"},"content":"     * @param other The other object to be compared to.","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"Kennethsim2000"},"content":"     * @return If the two objects are equal.","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Kennethsim2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"Kennethsim2000"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"Kennethsim2000"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"Kennethsim2000"},"content":"                \u0026\u0026 taskDescription.equals(((Description) other).taskDescription)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns hashcode of the current object","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Hashcode of the object.","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Kennethsim2000"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"Kennethsim2000"},"content":"        return taskDescription.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"Kennethsim2000"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Kennethsim2000":86}},{"path":"src/main/java/seedu/address/model/task/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":" * Represents the priority of the task in the task list.","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":" * Guarantees: immutable;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":"public class Priority {","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Kennethsim2000"},"content":"    private final PriorityEnum priority;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"     * Constructor for priority class","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Kennethsim2000"},"content":"    public Priority(PriorityEnum priority) {","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"Kennethsim2000"},"content":"        requireNonNull(priority);","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Kennethsim2000"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns the string representation of the task priority.","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Task priority.","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Kennethsim2000"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Kennethsim2000"},"content":"        return priority.name();","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Kennethsim2000"},"content":"     * Compares another object with the Priority object.","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Kennethsim2000"},"content":"     * @param other The other object to be compared to.","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Kennethsim2000"},"content":"     * @return If the two objects are equal.","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Kennethsim2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Kennethsim2000"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Kennethsim2000"},"content":"                || (other instanceof Priority // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Kennethsim2000"},"content":"                \u0026\u0026 priority.equals(((Priority) other).priority)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns hashcode of the current object","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Hashcode of the object.","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Kennethsim2000"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Kennethsim2000"},"content":"        return priority.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns the priority of a task.","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Kennethsim2000"},"content":"     * @return The task priority.","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Kennethsim2000"},"content":"    public PriorityEnum getPriority() {","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Kennethsim2000"},"content":"        return priority;","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Kennethsim2000"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Kennethsim2000":59,"ALWHgithub":3}},{"path":"src/main/java/seedu/address/model/task/PriorityEnum.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":" * Represents the three levels of priority that a task in the task list can take.","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"public enum PriorityEnum {","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":"    LOW, MEDIUM, HIGH","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Kennethsim2000":8}},{"path":"src/main/java/seedu/address/model/task/SortByCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":" * Helper class implementing Comparator interface to sort a task list based on their respective categories.","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"public class SortByCategory implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"     * Compares two Tasks based on their Categories for order. Returns a negative integer, zero, or a positive integer","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"     * as the Category of the first Task is less than, equal to, or greater than the second.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"     * @param task1 the first Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"     * @param task2 the second Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"     * @return a negative integer, zero, or a positive integer as the Category of the first Task is less than,","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"     *         equal to, or greater than the second","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"        return task1.getCategory().getTaskCategoryType().compareTo(task2.getCategory().getTaskCategoryType());","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ALWHgithub":2,"paotheroo":19}},{"path":"src/main/java/seedu/address/model/task/SortByDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":" * Helper class implementing Comparator interface to sort a task list based on their respective deadlines.","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"public class SortByDeadline implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"     * Compares two Tasks based on their Deadlines for order. Returns a negative integer, zero, or a positive integer","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"     * as the Deadline of the first Task is less than, equal to, or greater than the second.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"     * @param task1 the first Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"     * @param task2 the second Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"     * @return a negative integer, zero, or a positive integer as the Deadline of the first Task is less than,","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"     *         equal to, or greater than the second","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"        return task1.getDeadline().getDeadline().compareTo(task2.getDeadline().getDeadline());","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ALWHgithub":2,"paotheroo":19}},{"path":"src/main/java/seedu/address/model/task/SortByPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":" * Helper class implementing Comparator interface to sort a task list based on the people they are assigned to.","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"public class SortByPerson implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"     * Compares two Tasks based on their assigned Person for order. Returns a negative integer, zero, or a positive","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"     * integer as the Person of the first Task is less than, equal to, or greater than the second.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"     * @param task1 the first Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"     * @param task2 the second Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"     * @return a negative integer, zero, or a positive integer as the Person of the first Task is less than,","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"     *         equal to, or greater than the second","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"        if (task1.getPerson().equals(task2.getPerson())) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"            return 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"paotheroo"},"content":"        return task1.getPerson().getName().toString().compareTo(task2.getPerson().getName().toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ALWHgithub":2,"paotheroo":23}},{"path":"src/main/java/seedu/address/model/task/SortByPriority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":" * Helper class implementing Comparator interface to sort a task list based on their respective priorities.","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"public class SortByPriority implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"     * Compares two Tasks based on their Priorities for order. Returns a negative integer, zero, or a positive integer","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"     * as the Priority of the first Task is less than, equal to, or greater than the second.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"     * @param task1 the first Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"     * @param task2 the second Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"     * @return a negative integer, zero, or a positive integer as the Priority of the first Task is less than,","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"     *         equal to, or greater than the second","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"        return task1.getPriority().getPriority().compareTo(task2.getPriority().getPriority());","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ALWHgithub":2,"paotheroo":19}},{"path":"src/main/java/seedu/address/model/task/SortByStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":" * Helper class implementing Comparator interface to sort a task list based on their respective statuses.","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"public class SortByStatus implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"     * Compares two Tasks based on their statuses for order. Returns a negative integer, zero, or a positive integer","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"     * as the status of the first Task is less than, equal to, or greater than the second.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"     * @param task1 the first Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"     * @param task2 the second Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"     * @return a negative integer, zero, or a positive integer as the status of the first Task is less than,","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"     *        equal to, or greater than the second","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"        if (!task1.isDone() \u0026\u0026 task2.isDone()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"            return -1;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"paotheroo"},"content":"        if (task1.isDone() \u0026\u0026 !task2.isDone()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"paotheroo"},"content":"            return 1;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"paotheroo"},"content":"        return 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ALWHgithub":2,"paotheroo":27}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":" * Represents a Task in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":" * Guarantees: details are present and not null, field values are validated.","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"public class Task {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"paotheroo"},"content":"    // Identity fields","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"paotheroo"},"content":"    private TaskName name;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"    private TaskCategory category;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"    private Description description;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"    // Data fields","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"    private Priority priority;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":"    private TaskDeadline deadline;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"paotheroo"},"content":"    private Person person;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"paotheroo"},"content":"    private boolean isDone;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"paotheroo"},"content":"     * Constructor method to instantiate a Task object. Every field must be present and not null.","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"paotheroo"},"content":"     * @param name Name of task","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"paotheroo"},"content":"     * @param category Category of task","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"paotheroo"},"content":"     * @param desc Description of task","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"paotheroo"},"content":"     * @param priority Priority of task","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"paotheroo"},"content":"     * @param deadline Deadline of task","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"paotheroo"},"content":"     * @param person Person assigned to task","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"paotheroo"},"content":"     * @param status status of task","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"paotheroo"},"content":"    public Task(TaskName name, TaskCategory category, Description desc, Priority priority,","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"paotheroo"},"content":"                TaskDeadline deadline, Person person, boolean status) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"paotheroo"},"content":"        requireAllNonNull(name, category, desc, priority, deadline, person, status);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"paotheroo"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"paotheroo"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"paotheroo"},"content":"        description \u003d desc;","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"paotheroo"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"paotheroo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"paotheroo"},"content":"        this.person \u003d person;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"paotheroo"},"content":"        isDone \u003d status;","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"paotheroo"},"content":"     * Setter method for Name field.","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"paotheroo"},"content":"     * @param newName new Name for this Task object","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"paotheroo"},"content":"    public void setName(TaskName newName) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"paotheroo"},"content":"        name \u003d newName;","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"paotheroo"},"content":"     * Setter method for Description field.","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"paotheroo"},"content":"     * @param newDesc new Description for this Task object","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"paotheroo"},"content":"    public void setDescription(Description newDesc) {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"paotheroo"},"content":"        description \u003d newDesc;","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"paotheroo"},"content":"     * Setter method for Priority field.","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"paotheroo"},"content":"     * @param newPriority new Priority for this Task object","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"paotheroo"},"content":"    public void setPriority(Priority newPriority) {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"paotheroo"},"content":"        priority \u003d newPriority;","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"paotheroo"},"content":"     * Setter method for Category field.","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"paotheroo"},"content":"     * @param newCategory new Category for this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"paotheroo"},"content":"    public void setCategory(TaskCategory newCategory) {","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"paotheroo"},"content":"        category \u003d newCategory;","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"paotheroo"},"content":"     * Setter method for Deadline field.","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"paotheroo"},"content":"     * @param newDeadline new Deadline for this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"paotheroo"},"content":"    public void setDeadline(TaskDeadline newDeadline) {","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"paotheroo"},"content":"        deadline \u003d newDeadline;","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"paotheroo"},"content":"     * Setter method for Person field.","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"paotheroo"},"content":"     * @param person new Person assigned to this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"paotheroo"},"content":"    public void assignPerson(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"paotheroo"},"content":"        this.person \u003d person;","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"paotheroo"},"content":"     * Setter method for whether this Task has been completed.","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"paotheroo"},"content":"     * @param isDone true if this Task is done, and false otherwise","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"paotheroo"},"content":"    public void isDone(boolean isDone) {","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"paotheroo"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"ALWHgithub"},"content":"     * Returns true if this Task is done, and false otherwise.","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"ALWHgithub"},"content":"     * @return true if this Task is done, and false otherwise","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"ALWHgithub"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"ALWHgithub"},"content":"        return isDone;","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"paotheroo"},"content":"     * Returns the Name of this Task.","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"paotheroo"},"content":"     * @return Name of this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"paotheroo"},"content":"    public TaskName getName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"paotheroo"},"content":"        return name;","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"paotheroo"},"content":"     * Returns the Description of this Task.","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"paotheroo"},"content":"     * @return Description of this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"paotheroo"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"paotheroo"},"content":"        return description;","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"paotheroo"},"content":"     * Returns the Priority of this Task.","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"paotheroo"},"content":"     * @return Priority of this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"paotheroo"},"content":"    public Priority getPriority() {","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"paotheroo"},"content":"        return priority;","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"paotheroo"},"content":"     * Returns the Category of this Task.","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"paotheroo"},"content":"     * @return Category of this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"paotheroo"},"content":"    public TaskCategory getCategory() {","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"paotheroo"},"content":"        return category;","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"paotheroo"},"content":"     * Returns the Deadline of this Task.","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"paotheroo"},"content":"     * @return Deadline of this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"paotheroo"},"content":"    public TaskDeadline getDeadline() {","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"paotheroo"},"content":"        return deadline;","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"paotheroo"},"content":"     * Returns the Person assigned to this Task.","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"paotheroo"},"content":"     * @return Person assigned to this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"paotheroo"},"content":"    public Person getPerson() {","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"paotheroo"},"content":"        return person;","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"paotheroo"},"content":"     * Returns true if both tasks have the same name.","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"paotheroo"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"paotheroo"},"content":"     * @param otherTask Task of comparison","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"paotheroo"},"content":"     * @return true if both tasks are the same, and false otherwise","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"paotheroo"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"paotheroo"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"paotheroo"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":169,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"paotheroo"},"content":"        return otherTask !\u003d null \u0026\u0026 otherTask.getName().equals(getName());","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"paotheroo"},"content":"     * Returns true if both tasks have the same fields.","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"paotheroo"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"paotheroo"},"content":"     * @param other Object of comparison","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"paotheroo"},"content":"     * @return true if both tasks have the same fields, and false otherwise","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"paotheroo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"paotheroo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"paotheroo"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"paotheroo"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"paotheroo"},"content":"            return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":189,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"paotheroo"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"paotheroo"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"paotheroo"},"content":"                \u0026\u0026 otherTask.getCategory().equals(getCategory())","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"paotheroo"},"content":"                \u0026\u0026 otherTask.getDeadline().equals(getDeadline())","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"paotheroo"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription())","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"paotheroo"},"content":"                \u0026\u0026 otherTask.getPerson().equals(getPerson())","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"paotheroo"},"content":"                \u0026\u0026 otherTask.getPriority().equals(getPriority())","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"paotheroo"},"content":"                \u0026\u0026 (otherTask.isDone() \u0026\u0026 this.isDone());","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":199,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"paotheroo"},"content":"     * Method for custom fields hashing.","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"paotheroo"},"content":"     * @return a hash code value for the object","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":204,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":205,"author":{"gitId":"paotheroo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":206,"author":{"gitId":"paotheroo"},"content":"        return Objects.hash(name, description, priority, category, deadline, person, isDone);","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":209,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":210,"author":{"gitId":"paotheroo"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":211,"author":{"gitId":"paotheroo"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-06"},{"lineNumber":212,"author":{"gitId":"paotheroo"},"content":"        builder.append(getName())","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"paotheroo"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"paotheroo"},"content":"                .append(getDescription())","lastModifiedDate":"2022-10-10"},{"lineNumber":215,"author":{"gitId":"paotheroo"},"content":"                .append(\"; Priority: \")","lastModifiedDate":"2022-10-10"},{"lineNumber":216,"author":{"gitId":"paotheroo"},"content":"                .append(getPriority())","lastModifiedDate":"2022-10-10"},{"lineNumber":217,"author":{"gitId":"paotheroo"},"content":"                .append(\"; Category: \")","lastModifiedDate":"2022-10-10"},{"lineNumber":218,"author":{"gitId":"paotheroo"},"content":"                .append(getCategory())","lastModifiedDate":"2022-10-10"},{"lineNumber":219,"author":{"gitId":"paotheroo"},"content":"                .append(\"; Deadline: \")","lastModifiedDate":"2022-10-10"},{"lineNumber":220,"author":{"gitId":"paotheroo"},"content":"                .append(getDeadline())","lastModifiedDate":"2022-10-10"},{"lineNumber":221,"author":{"gitId":"paotheroo"},"content":"                .append(\"; Assigned to: \")","lastModifiedDate":"2022-10-10"},{"lineNumber":222,"author":{"gitId":"paotheroo"},"content":"                .append(getPerson())","lastModifiedDate":"2022-10-10"},{"lineNumber":223,"author":{"gitId":"paotheroo"},"content":"                .append(\"; Status: \");","lastModifiedDate":"2022-10-10"},{"lineNumber":224,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":225,"author":{"gitId":"paotheroo"},"content":"        if (isDone) {","lastModifiedDate":"2022-10-10"},{"lineNumber":226,"author":{"gitId":"paotheroo"},"content":"            builder.append(\"Done\");","lastModifiedDate":"2022-10-10"},{"lineNumber":227,"author":{"gitId":"paotheroo"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":228,"author":{"gitId":"paotheroo"},"content":"            builder.append(\"Not done\");","lastModifiedDate":"2022-10-10"},{"lineNumber":229,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":230,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":231,"author":{"gitId":"paotheroo"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":232,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":233,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":234,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"ALWHgithub":8,"paotheroo":226}},{"path":"src/main/java/seedu/address/model/task/TaskCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":" * Represents the category of a task.","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"public class TaskCategory {","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"    private int level;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"    private TaskCategoryType taskCategoryType;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"     * Constructor for TaskCategory","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"    public TaskCategory(int level, TaskCategoryType taskCategoryType) {","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"        this.level \u003d level;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"        this.taskCategoryType \u003d taskCategoryType;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"     * Returns the category of a task.","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"     * @return The task category.","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"    public TaskCategoryType getTaskCategoryType() {","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"        return this.taskCategoryType;","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"     * Returns the level of a task.","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"     * @return The task level.","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"ALWHgithub"},"content":"    public int getLevel() {","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"        return this.level;","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"ALWHgithub"},"content":"     * Returns hashcode of the current object","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"ALWHgithub"},"content":"     * @return Hashcode of the object.","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"ALWHgithub"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"ALWHgithub"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"ALWHgithub"},"content":"        return taskCategoryType.hashCode();","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"ALWHgithub"},"content":"     * Returns the string representation of the task category.","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"ALWHgithub"},"content":"     * @return Task priority.","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"ALWHgithub"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"ALWHgithub"},"content":"    public String toString() {","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"ALWHgithub"},"content":"        return level + taskCategoryType.name();","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"ALWHgithub"},"content":"     * Compares another object with the Category object.","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"ALWHgithub"},"content":"     * @param other The other object to be compared to.","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"ALWHgithub"},"content":"     * @return If the two objects are equal.","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"ALWHgithub"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"ALWHgithub"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"ALWHgithub"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"ALWHgithub"},"content":"                || (other instanceof TaskCategory // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"ALWHgithub"},"content":"                \u0026\u0026 ((TaskCategory) other).level \u003d\u003d this.level","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"ALWHgithub"},"content":"                \u0026\u0026 ((TaskCategory) other).taskCategoryType.equals(this.taskCategoryType));","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"ALWHgithub":73}},{"path":"src/main/java/seedu/address/model/task/TaskCategoryType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"enum TaskCategoryType {","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"        DATABASE,","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"        BACKEND,","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"        FRONTEND,","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"        UIUX,","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"        PRESENTATION,","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"        OTHERS;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"ALWHgithub":11}},{"path":"src/main/java/seedu/address/model/task/TaskDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":" * Represents the deadline of a task","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"public class TaskDeadline {","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"    private LocalDate deadline;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"    public TaskDeadline(LocalDate level) {","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"        this.deadline \u003d level;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"     * Returns the deadline of a task.","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"     * @return The task category.","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"        return this.deadline;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"     * Returns hashcode of the current object","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"     * @return Hashcode of the object.","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"        return this.deadline.hashCode();","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"ALWHgithub"},"content":"     * Returns the string representation of the task deadline.","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"ALWHgithub"},"content":"     * @return Task priority.","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"ALWHgithub"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"ALWHgithub"},"content":"    public String toString() {","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"ALWHgithub"},"content":"        return this.deadline.toString();","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"ALWHgithub"},"content":"     * Compares another object with the Deadline object.","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"ALWHgithub"},"content":"     * @param other The other object to be compared to.","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"ALWHgithub"},"content":"     * @return If the two objects are equal.","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"ALWHgithub"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"ALWHgithub"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"ALWHgithub"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"ALWHgithub"},"content":"                || (other instanceof TaskDeadline // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"ALWHgithub"},"content":"                \u0026\u0026 ((TaskDeadline) other).deadline.equals(this.deadline));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"ALWHgithub":55}},{"path":"src/main/java/seedu/address/model/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"paotheroo"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"paotheroo"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of tasks","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":" * uses Task#isSameTask(Task) for equality to ensure that the task being added or updated is unique in terms of","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":" * identity in the TaskList. However, the removal of a task uses Task#equals(Object) to ensure that the task with","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":" * exactly the same fields will be removed.","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":" *","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":" *","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"paotheroo"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"paotheroo"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"paotheroo"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"paotheroo"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"paotheroo"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"paotheroo"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"paotheroo"},"content":"     * @param toCheck Task to check against","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"paotheroo"},"content":"     * @return true if the list contains an equivalent task as the given argument","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"paotheroo"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"paotheroo"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"paotheroo"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"paotheroo"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"paotheroo"},"content":"     * @param toAdd Task to be added to the list","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"paotheroo"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"paotheroo"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"paotheroo"},"content":"            //throw new DuplicateTaskException();","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"paotheroo"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"paotheroo"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"paotheroo"},"content":"     * The task must exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"paotheroo"},"content":"     * @param toDelete Task to be deleted from the list","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"paotheroo"},"content":"    public void delete(Task toDelete) {","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toDelete);","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"paotheroo"},"content":"        if (!internalList.remove(toDelete)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"paotheroo"},"content":"            //throw new TaskNotFoundException();","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"paotheroo"},"content":"     * Replaces the task {@code toEdit} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"paotheroo"},"content":"     * {@code toEdit} must exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"paotheroo"},"content":"     * The task fields of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"paotheroo"},"content":"     * @param toEdit Task to be replaced by the task {@code editedTask}","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"paotheroo"},"content":"     * @param editedTask Task to replace the task {@code toEdit}","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"paotheroo"},"content":"    public void edit(Task toEdit, Task editedTask) {","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"paotheroo"},"content":"        requireAllNonNull(toEdit, editedTask);","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"paotheroo"},"content":"        int index \u003d internalList.indexOf(toEdit);","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"paotheroo"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"paotheroo"},"content":"            //throw new TaskNotFoundException();","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"paotheroo"},"content":"        if (!toEdit.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"paotheroo"},"content":"            //throw new DuplicateTaskException();","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"paotheroo"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"paotheroo"},"content":"     * Returns a Task from the list which corresponds with {@code toFind}.","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"paotheroo"},"content":"     * {@code toFind} must exist in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"paotheroo"},"content":"     * @param toFind the Task to find in the list","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"paotheroo"},"content":"     * @return a Task from the list which corresponds with {@code toFind}","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"paotheroo"},"content":"    public Task find(Task toFind) {","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toFind);","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"paotheroo"},"content":"        if (!contains(toFind)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"paotheroo"},"content":"            //throw new TaskNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"paotheroo"},"content":"        return internalList.get(internalList.indexOf(toFind));","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"paotheroo"},"content":"     * Sorts the task list based on priority.","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"paotheroo"},"content":"    public void sortByPriority() {","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"paotheroo"},"content":"        internalList.sorted(new SortByPriority());","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"paotheroo"},"content":"     * Sorts the task list based on category.","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"paotheroo"},"content":"    public void sortByCategory() {","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"paotheroo"},"content":"        internalList.sorted(new SortByCategory());","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"paotheroo"},"content":"     * Sorts the task list based on deadline.","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"paotheroo"},"content":"    public void sortByDeadline() {","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"paotheroo"},"content":"        internalList.sorted(new SortByDeadline());","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"paotheroo"},"content":"     * Sorts the task list based on the respective people that the tasks are assigned to.","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"paotheroo"},"content":"    public void sortByPerson() {","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"paotheroo"},"content":"        internalList.sorted(new SortByPerson());","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"paotheroo"},"content":"     * Sorts the task list based on status.","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"paotheroo"},"content":"    public void sortByStatus() {","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"paotheroo"},"content":"        internalList.sorted(new SortByStatus());","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"paotheroo"},"content":"     * Filters the task list based on the given Priority {@code toFilter}.","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"paotheroo"},"content":"     * @param toFilter Priority to filter the task list by","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"paotheroo"},"content":"    public void filter(Priority toFilter) {","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toFilter);","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"paotheroo"},"content":"        Predicate\u003cTask\u003e filterer \u003d i -\u003e (i.getPriority().equals(toFilter));","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"paotheroo"},"content":"        internalList.filtered(filterer);","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"paotheroo"},"content":"     * Filters the task list based on the given Category {@code toFilter}.","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"paotheroo"},"content":"     * @param toFilter Category to filter the task list by","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"paotheroo"},"content":"    public void filter(TaskCategory toFilter) {","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toFilter);","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"paotheroo"},"content":"        Predicate\u003cTask\u003e filterer \u003d i -\u003e (i.getCategory().equals(toFilter));","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"paotheroo"},"content":"        internalList.filtered(filterer);","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"paotheroo"},"content":"     * Filters the task list based on the given Deadline {@code toFilter}.","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"paotheroo"},"content":"     * @param toFilter Deadline to filter the task list by","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"paotheroo"},"content":"    public void filter(TaskDeadline toFilter) {","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toFilter);","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"paotheroo"},"content":"        Predicate\u003cTask\u003e filterer \u003d i -\u003e (i.getDeadline().equals(toFilter));","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"paotheroo"},"content":"        internalList.filtered(filterer);","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"paotheroo"},"content":"     * Filters the task list based on the given assigned Person {@code toFilter}.","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"paotheroo"},"content":"     * @param toFilter Person to filter the task list by","lastModifiedDate":"2022-10-09"},{"lineNumber":170,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":171,"author":{"gitId":"paotheroo"},"content":"    public void filter(Person toFilter) {","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toFilter);","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"paotheroo"},"content":"        Predicate\u003cTask\u003e filterer \u003d i -\u003e (i.getPerson().equals(toFilter));","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"paotheroo"},"content":"        internalList.filtered(filterer);","lastModifiedDate":"2022-10-09"},{"lineNumber":175,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":176,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"paotheroo"},"content":"     * Filters the task list based on the given Status {@code toFilter}.","lastModifiedDate":"2022-10-09"},{"lineNumber":179,"author":{"gitId":"paotheroo"},"content":"     * @param toFilter Status to filter the task list by","lastModifiedDate":"2022-10-09"},{"lineNumber":180,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":181,"author":{"gitId":"paotheroo"},"content":"    public void filter(boolean toFilter) {","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toFilter);","lastModifiedDate":"2022-10-09"},{"lineNumber":183,"author":{"gitId":"paotheroo"},"content":"        Predicate\u003cTask\u003e filterer \u003d i -\u003e (i.isDone() \u003d\u003d toFilter);","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"paotheroo"},"content":"        internalList.filtered(filterer);","lastModifiedDate":"2022-10-09"},{"lineNumber":185,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"paotheroo"},"content":"    public void setTasks(TaskList replacement) {","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-06"},{"lineNumber":189,"author":{"gitId":"paotheroo"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"paotheroo"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"paotheroo"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":195,"author":{"gitId":"paotheroo"},"content":"     * @param tasks new list of tasks to replace the current list of tasks","lastModifiedDate":"2022-10-06"},{"lineNumber":196,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":197,"author":{"gitId":"paotheroo"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-06"},{"lineNumber":198,"author":{"gitId":"paotheroo"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2022-10-06"},{"lineNumber":199,"author":{"gitId":"paotheroo"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"paotheroo"},"content":"            //throw new DuplicateTaskException();","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"paotheroo"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-10-06"},{"lineNumber":204,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":205,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":206,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":207,"author":{"gitId":"paotheroo"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"paotheroo"},"content":"     * @return the backing list as an unmodifiable {@code ObservableList}","lastModifiedDate":"2022-10-06"},{"lineNumber":209,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":210,"author":{"gitId":"paotheroo"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":211,"author":{"gitId":"paotheroo"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":212,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":213,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":214,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":215,"author":{"gitId":"paotheroo"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-10-06"},{"lineNumber":216,"author":{"gitId":"paotheroo"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-06"},{"lineNumber":217,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":218,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":219,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":220,"author":{"gitId":"paotheroo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":221,"author":{"gitId":"paotheroo"},"content":"        return other \u003d\u003d this || (other instanceof TaskList \u0026\u0026 internalList.equals(((TaskList) other).internalList));","lastModifiedDate":"2022-10-06"},{"lineNumber":222,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":223,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":224,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":225,"author":{"gitId":"paotheroo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":226,"author":{"gitId":"paotheroo"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":227,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":228,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":229,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":230,"author":{"gitId":"paotheroo"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":231,"author":{"gitId":"paotheroo"},"content":"     * @param tasks List of tasks to check","lastModifiedDate":"2022-10-06"},{"lineNumber":232,"author":{"gitId":"paotheroo"},"content":"     * @return true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":233,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":234,"author":{"gitId":"paotheroo"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-06"},{"lineNumber":235,"author":{"gitId":"paotheroo"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":236,"author":{"gitId":"paotheroo"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":237,"author":{"gitId":"paotheroo"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2022-10-06"},{"lineNumber":238,"author":{"gitId":"paotheroo"},"content":"                    return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":239,"author":{"gitId":"paotheroo"},"content":"                }","lastModifiedDate":"2022-10-06"},{"lineNumber":240,"author":{"gitId":"paotheroo"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":241,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":242,"author":{"gitId":"paotheroo"},"content":"        return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":243,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":244,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"paotheroo":244}},{"path":"src/main/java/seedu/address/model/task/TaskName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":" * Represents the name of the task in the task list.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTaskName(String)}","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"public class TaskName {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Kennethsim2000"},"content":"    private static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Kennethsim2000"},"content":"            \"Task names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Kennethsim2000"},"content":"    /*","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"Kennethsim2000"},"content":"     * The first character of the taskname must not be a whitespace,","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Kennethsim2000"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"    private static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"    private final String taskName;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Kennethsim2000"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Kennethsim2000"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"paotheroo"},"content":"    public TaskName(String name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Kennethsim2000"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Kennethsim2000"},"content":"        checkArgument(isValidTaskName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Kennethsim2000"},"content":"        taskName \u003d name;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns true if task name is valid.","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Kennethsim2000"},"content":"     * @param test String to test.","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Whether the string is a valid task name.","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Kennethsim2000"},"content":"    public static boolean isValidTaskName(String test) {","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Kennethsim2000"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns the string representation of the task description.","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Task name.","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Kennethsim2000"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Kennethsim2000"},"content":"        return taskName;","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Kennethsim2000"},"content":"     * Compares another object with the Name object.","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"Kennethsim2000"},"content":"     * @param other The other object to be compared to.","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Kennethsim2000"},"content":"     * @return If the two objects are equal.","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Kennethsim2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Kennethsim2000"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"paotheroo"},"content":"                || (other instanceof TaskName // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"paotheroo"},"content":"                \u0026\u0026 taskName.equals(((TaskName) other).taskName)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns the name of a task.","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Kennethsim2000"},"content":"     * @return The task description.","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"Kennethsim2000"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"Kennethsim2000"},"content":"        return taskName;","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns hashcode of the current object","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Hashcode of the object.","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Kennethsim2000"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"Kennethsim2000"},"content":"        return taskName.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"Kennethsim2000"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Kennethsim2000":82,"paotheroo":4}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"albertarielw"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"albertarielw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"albertarielw"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"albertarielw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"albertarielw"},"content":"        public void deleteTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"albertarielw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"albertarielw"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"albertarielw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"albertarielw"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"albertarielw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"albertarielw"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"albertarielw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"albertarielw":31,"-":194}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"albertarielw"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"albertarielw"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"albertarielw"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"albertarielw"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"albertarielw"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"albertarielw"},"content":"            return tasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"albertarielw":11,"-":102}}]
