[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yusiangeng"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-F12-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-F12-2/tp/actions)","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"* This is **an application to manage Hackathon teams**.\u003cbr\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"  * for Hackathon team leaders to manage and assign team members to various task","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"  * for Hackathon team leaders to manage overall project workflow","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"* For the detailed documentation of this project, see the **[Address Book Product Website](https://ay2223s1-cs2103t-f12-2.github.io/tp/)**.","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"This project is based on the AddressBook-Level3 project created by the SE-EDU initiative.","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"yusiangeng":1,"ALWHgithub":9,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"yusiangeng"},"content":"run {","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"yusiangeng"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"yusiangeng"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"yusiangeng":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"### Sim Zhe Feng Kenneth","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"\u003cimg src\u003d\"images/kennethsim2000.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"Kennethsim2000"},"content":"[[github](http://github.com/kennethsim2000)]","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"Kennethsim2000"},"content":"[[portfolio](team/kennethsim2000.md)]","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"* Role: Team Lead","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"* Responsibilities: Overall project coordination and code quality","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":"### Aaron Li Wen Hao","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"\u003cimg src\u003d\"images/alwhgithub.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"[[github](https://github.com/alwhgithub)]","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"Kennethsim2000"},"content":"[[portfolio](team/alwhgithub.md)]","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"paotheroo"},"content":"* Role: Testing","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"paotheroo"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"paotheroo"},"content":"### Albert Ariel Widiaatmaja","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"\u003cimg src\u003d\"images/albertarielw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Kennethsim2000"},"content":"[[github](http://github.com/albertarielw)]","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"Kennethsim2000"},"content":"[[portfolio](team/albertarielw.md)]","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"paotheroo"},"content":"* Role: Management of Deliverables","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"paotheroo"},"content":"* Responsibilities: Ensure project deliverables are defined, assigned, and done on time in the right format","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"paotheroo"},"content":"### Joe Eng Yu Siang","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"yusiangeng"},"content":"\u003cimg src\u003d\"images/yusiangeng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"yusiangeng"},"content":"[[github](http://github.com/yusiangeng)] [[portfolio](team/yusiangeng.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"paotheroo"},"content":"* Role: Integration","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"paotheroo"},"content":"* Responsibilities: Code versioning, maintaining code repository, and integrating various parts of the software to create a whole","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"paotheroo"},"content":"### Low Zan Hao","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"\u003cimg src\u003d\"images/paotheroo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"paotheroo"},"content":"[[github](http://github.com/paotheroo)]","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"Kennethsim2000"},"content":"[[portfolio](team/paotheroo.md)]","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"paotheroo"},"content":"* Role: Documentation","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"paotheroo"},"content":"* Responsibilities: Quality of various project documents","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"yusiangeng":2,"Kennethsim2000":6,"ALWHgithub":4,"-":30,"paotheroo":17}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"ALWHgithub"},"content":"### \\[Proposed\\] Task and Person display each other","lastModifiedDate":"2022-10-19"},{"lineNumber":242,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":243,"author":{"gitId":"ALWHgithub"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-10-19"},{"lineNumber":244,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":245,"author":{"gitId":"ALWHgithub"},"content":"Currently, A person in the addressbook has no relation to the tasks assigned to that person. This feature will allow tasks and persons to be related to each other, and allow the UI to display which tasks are assigned to a person, and which person is in charge of a task.","lastModifiedDate":"2022-10-19"},{"lineNumber":246,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":247,"author":{"gitId":"ALWHgithub"},"content":"This will be implemented by modifying 3 already existing commands","lastModifiedDate":"2022-10-19"},{"lineNumber":248,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":249,"author":{"gitId":"ALWHgithub"},"content":"* `Add` — Whenever a person is added, any task that shares the same email as the new Person\u0027s email wil be updated to reflect the person\u0027s name.","lastModifiedDate":"2022-10-19"},{"lineNumber":250,"author":{"gitId":"ALWHgithub"},"content":"* `Delete` — Whenever a person is deleted, their tasks will be edited to reflect that they are not assigned to any person","lastModifiedDate":"2022-10-19"},{"lineNumber":251,"author":{"gitId":"ALWHgithub"},"content":"* `Edit` — Whenever a person is edited, their tasks will be edited to reflect the new changes","lastModifiedDate":"2022-10-19"},{"lineNumber":252,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":253,"author":{"gitId":"ALWHgithub"},"content":"Given below is an example usage scenario.","lastModifiedDate":"2022-10-19"},{"lineNumber":254,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":255,"author":{"gitId":"ALWHgithub"},"content":"Step 1. The user launches the application for the first time. ","lastModifiedDate":"2022-10-19"},{"lineNumber":256,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":257,"author":{"gitId":"ALWHgithub"},"content":"Step 2. A new person (John) is added, with an email of test@example.com","lastModifiedDate":"2022-10-19"},{"lineNumber":258,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":259,"author":{"gitId":"ALWHgithub"},"content":"Step 3. A new task is added, assigned to John.","lastModifiedDate":"2022-10-19"},{"lineNumber":260,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":261,"author":{"gitId":"ALWHgithub"},"content":"Step 4. John is edited to James via the Edit command. This will be reflected in the task that John/James is assigned to","lastModifiedDate":"2022-10-19"},{"lineNumber":262,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":263,"author":{"gitId":"ALWHgithub"},"content":"Step 5. James is deleted as a Person. The task is changed to be not assigned to anyone.","lastModifiedDate":"2022-10-19"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"albertarielw"},"content":"### \\[Proposed\\] Persistent Storage for Task","lastModifiedDate":"2022-10-20"},{"lineNumber":266,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":267,"author":{"gitId":"albertarielw"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-10-20"},{"lineNumber":268,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":269,"author":{"gitId":"albertarielw"},"content":"We save tasks in Json format which contains the details of the task such as the task\u0027s name, description, etc.","lastModifiedDate":"2022-10-20"},{"lineNumber":270,"author":{"gitId":"albertarielw"},"content":"We can then read the Json data file to obtain the details of each task and create a list of JsonAdaptedTask which can ","lastModifiedDate":"2022-10-20"},{"lineNumber":271,"author":{"gitId":"albertarielw"},"content":"then be converted to a list of tasks. Hence, our Json data file contains a list of task details.","lastModifiedDate":"2022-10-20"},{"lineNumber":272,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":273,"author":{"gitId":"albertarielw"},"content":"When reading Json file we also check whether the values saved are valid before converting it back to a Task object.","lastModifiedDate":"2022-10-20"},{"lineNumber":274,"author":{"gitId":"albertarielw"},"content":"This is to prevent creating a Task object with illegal values such as an empty name or name like \" \". We also check for","lastModifiedDate":"2022-10-20"},{"lineNumber":275,"author":{"gitId":"albertarielw"},"content":"such illegal values when creating a task through commands. However, they do not prevent creations of task with illegal","lastModifiedDate":"2022-10-20"},{"lineNumber":276,"author":{"gitId":"albertarielw"},"content":"values that is done by editing Json data file. Thus, the checks when creating Task from Json data file is necessary.","lastModifiedDate":"2022-10-20"},{"lineNumber":277,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":278,"author":{"gitId":"albertarielw"},"content":"We use a person\u0027s email as foreign key as it can uniquely identify a person in our person list. By implementing a","lastModifiedDate":"2022-10-20"},{"lineNumber":279,"author":{"gitId":"albertarielw"},"content":"a foreign key this way, a change in person object is reflected in the task associated to that person. An alternative ","lastModifiedDate":"2022-10-20"},{"lineNumber":280,"author":{"gitId":"albertarielw"},"content":"to this is to keep a person object in a task object but this will prevent the change in the person object that is","lastModifiedDate":"2022-10-20"},{"lineNumber":281,"author":{"gitId":"albertarielw"},"content":"supposed to be associated with the task object from being displayed in the task as they are two separate objects.","lastModifiedDate":"2022-10-20"},{"lineNumber":282,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":283,"author":{"gitId":"Kennethsim2000"},"content":"### \\[Proposed\\] Filtering of tasks by Task Category","lastModifiedDate":"2022-10-20"},{"lineNumber":284,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":285,"author":{"gitId":"Kennethsim2000"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-10-20"},{"lineNumber":286,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":287,"author":{"gitId":"Kennethsim2000"},"content":"The proposed filter mechanism allows A `Task` to be filtered based on its `Task Category`. ","lastModifiedDate":"2022-10-20"},{"lineNumber":288,"author":{"gitId":"Kennethsim2000"},"content":"The command is executed using the `FilterTaskCategoryCommand`class which extends the `Command` class and the category is determined from the `FilterTaskCategoryParser` class which parses the user input. The `TaskContainsCategoryPredicate` class will filter the existing task list based on the keyword parsed from the `FilterTaskCategoryParser` class and return the filtered tasklist, which will be displayed on the application.","lastModifiedDate":"2022-10-20"},{"lineNumber":289,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":290,"author":{"gitId":"Kennethsim2000"},"content":"Given below is an example usage scenario and how the filter mechanism behaves at each step.","lastModifiedDate":"2022-10-20"},{"lineNumber":291,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":292,"author":{"gitId":"Kennethsim2000"},"content":"Step 1. The user launches the application for the first time, with an empty tasklist.","lastModifiedDate":"2022-10-20"},{"lineNumber":293,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":294,"author":{"gitId":"Kennethsim2000"},"content":"Step 2. The user executes `addTask n/homework d/coding assignment pr/high c/backend dl/2022-12-12 pe/2` to add a task to the tasklist.","lastModifiedDate":"2022-10-20"},{"lineNumber":295,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":296,"author":{"gitId":"Kennethsim2000"},"content":"Step 3. The user repeats step 2 to add more tasks to the tasklist.","lastModifiedDate":"2022-10-20"},{"lineNumber":297,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":298,"author":{"gitId":"Kennethsim2000"},"content":"step 4. The user decides that he only wants to see the tasks that are backend related. The user executes `filter c/backend` to filter the tasks that are backend related. After this, only tasks that have TaskCategory:backend are displayed onto the application.","lastModifiedDate":"2022-10-20"},{"lineNumber":299,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":300,"author":{"gitId":"Kennethsim2000"},"content":"The following sequence diagram shows how the filter operation works:","lastModifiedDate":"2022-10-20"},{"lineNumber":301,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":302,"author":{"gitId":"Kennethsim2000"},"content":"Step 5. After looking through all the tasks that are related to backend, the user wants to revert back to the original set of tasks. The user calls `listTasks`, which will list the unfiltered tasklist.","lastModifiedDate":"2022-10-20"},{"lineNumber":303,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":304,"author":{"gitId":"Kennethsim2000"},"content":"**Design considerations**","lastModifiedDate":"2022-10-20"},{"lineNumber":305,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":306,"author":{"gitId":"Kennethsim2000"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2022-10-20"},{"lineNumber":307,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":308,"author":{"gitId":"Kennethsim2000"},"content":"* **Alternative 1 (current choice):** Filters entire tasklist","lastModifiedDate":"2022-10-20"},{"lineNumber":309,"author":{"gitId":"Kennethsim2000"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2022-10-20"},{"lineNumber":310,"author":{"gitId":"Kennethsim2000"},"content":"  * Cons: ","lastModifiedDate":"2022-10-20"},{"lineNumber":311,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":312,"author":{"gitId":"Kennethsim2000"},"content":"* **Alternative 2:** ","lastModifiedDate":"2022-10-20"},{"lineNumber":313,"author":{"gitId":"Kennethsim2000"},"content":"  itself.","lastModifiedDate":"2022-10-20"},{"lineNumber":314,"author":{"gitId":"Kennethsim2000"},"content":"  * Pros: ","lastModifiedDate":"2022-10-20"},{"lineNumber":315,"author":{"gitId":"Kennethsim2000"},"content":"  * Cons: ","lastModifiedDate":"2022-10-20"},{"lineNumber":316,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":317,"author":{"gitId":"paotheroo"},"content":"### \\[Proposed\\] Filtering of tasks by Task Deadline","lastModifiedDate":"2022-10-21"},{"lineNumber":318,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":319,"author":{"gitId":"paotheroo"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":320,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":321,"author":{"gitId":"paotheroo"},"content":"The proposed filter mechanism allows A `Task` to be filtered based on its `TaskDeadline`. ","lastModifiedDate":"2022-10-21"},{"lineNumber":322,"author":{"gitId":"paotheroo"},"content":"The command is executed using the `FilterTaskDeadlineCommand` class which extends the `Command` class and the deadline is determined from the `FilterTaskDeadlineParser` class which parses the user input. The `TaskDeadlineBeforeDatePredicate` class will filter the existing task list based on the date parsed from the `FilterTaskDeadlineParser` class and return the filtered tasklist, which will be displayed on the application.","lastModifiedDate":"2022-10-21"},{"lineNumber":323,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":324,"author":{"gitId":"paotheroo"},"content":"Given below is an example usage scenario and how the filter mechanism behaves at each step.","lastModifiedDate":"2022-10-21"},{"lineNumber":325,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":326,"author":{"gitId":"paotheroo"},"content":"Step 1. The user launches the application for the first time, with an empty tasklist.","lastModifiedDate":"2022-10-21"},{"lineNumber":327,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":328,"author":{"gitId":"paotheroo"},"content":"Step 2. The user executes `addTask n/homework d/coding assignment pr/high c/backend dl/2022-12-12 pe/2` to add a task to the tasklist.","lastModifiedDate":"2022-10-21"},{"lineNumber":329,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":330,"author":{"gitId":"paotheroo"},"content":"Step 3. The user repeats step 2 to add more tasks to the tasklist with different deadlines.","lastModifiedDate":"2022-10-21"},{"lineNumber":331,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":332,"author":{"gitId":"paotheroo"},"content":"step 4. The user decides that he only wants to see the tasks due on 12 December 2022. The user executes `filterByDeadline dl/2022-12-12` to filter the tasks that have 12 December 2022 as their deadline. After this, only tasks that have `TaskDeadline:2022-12-12` and earlier are displayed onto the application.","lastModifiedDate":"2022-10-21"},{"lineNumber":333,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":334,"author":{"gitId":"paotheroo"},"content":"The following sequence diagram shows how the filter operation works:","lastModifiedDate":"2022-10-21"},{"lineNumber":335,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":336,"author":{"gitId":"paotheroo"},"content":"Step 5. After looking through all the tasks with deadlines of 12 December 2022 and earlier, the user wants to revert back to the original set of tasks. The user calls `listTasks`, which will list the unfiltered tasklist.","lastModifiedDate":"2022-10-21"},{"lineNumber":337,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":338,"author":{"gitId":"paotheroo"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-21"},{"lineNumber":339,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":340,"author":{"gitId":"paotheroo"},"content":"**Aspect: How filtering by deadline executes:**","lastModifiedDate":"2022-10-21"},{"lineNumber":341,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":342,"author":{"gitId":"paotheroo"},"content":"* **Alternative 1 (current choice):** Filters the entire tasklist.","lastModifiedDate":"2022-10-21"},{"lineNumber":343,"author":{"gitId":"paotheroo"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2022-10-21"},{"lineNumber":344,"author":{"gitId":"paotheroo"},"content":"  * Cons: May have performance issues as the entire tasklist must be parsed.","lastModifiedDate":"2022-10-21"},{"lineNumber":345,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":346,"author":{"gitId":"paotheroo"},"content":"* **Alternative 2:** ","lastModifiedDate":"2022-10-21"},{"lineNumber":347,"author":{"gitId":"paotheroo"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2022-10-21"},{"lineNumber":348,"author":{"gitId":"paotheroo"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2022-10-21"},{"lineNumber":349,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":350,"author":{"gitId":"paotheroo"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2022-10-21"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":352,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":357,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":359,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"albertarielw"},"content":"**Target User**","lastModifiedDate":"2022-09-30"},{"lineNumber":369,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":370,"author":{"gitId":"albertarielw"},"content":"Hackathon participants - particularly team member with project management role","lastModifiedDate":"2022-09-30"},{"lineNumber":371,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":372,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"albertarielw"},"content":"* has a need to allocate and track tasks to team members","lastModifiedDate":"2022-09-30"},{"lineNumber":375,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":379,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"albertarielw"},"content":"**Value proposition**: help with project management tasks and team formation in Hackathons","lastModifiedDate":"2022-09-30"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                        | So that I can…​                                                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"albertarielw"},"content":"|----------|--------------------------------------------|-------------------------------------|--------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-30"},{"lineNumber":390,"author":{"gitId":"albertarielw"},"content":"| `* * *`  | hackathon team leader                      | see all tasks                       | have an overview of what needs to be done                                            |","lastModifiedDate":"2022-09-30"},{"lineNumber":391,"author":{"gitId":"albertarielw"},"content":"| `* * *`  | hackathon team leader                      | add a task to the task list,        | include task that needs to be done                                                   |","lastModifiedDate":"2022-09-30"},{"lineNumber":392,"author":{"gitId":"albertarielw"},"content":"| `* * *`  | hackathon team leader                      | delete a task                       | remove tasks that are accidentally added                                             |","lastModifiedDate":"2022-09-30"},{"lineNumber":393,"author":{"gitId":"albertarielw"},"content":"| `* * *`  | hackathon team leader                      | edit a task                         | rectify mistakes in task details                                                     |","lastModifiedDate":"2022-09-30"},{"lineNumber":394,"author":{"gitId":"albertarielw"},"content":"| `* * *`  | hackathon team leader                      | assign a task                       | allocate task to a team member                                                       |","lastModifiedDate":"2022-09-30"},{"lineNumber":395,"author":{"gitId":"albertarielw"},"content":"| `* * *`  | hackathon team leader                      | mark task as done                   | I can keep a moving record of what we have done                                      |","lastModifiedDate":"2022-09-30"},{"lineNumber":396,"author":{"gitId":"albertarielw"},"content":"| `* * *`  | hackathon team leader                      | mark task as not done               | in case we have tasks that end up being incomplete or the task requirements modified |","lastModifiedDate":"2022-09-30"},{"lineNumber":397,"author":{"gitId":"albertarielw"},"content":"| `* *`    | hackathon team leader                      | see which tasks are done/ not done  | plan the way forward                                                                 |","lastModifiedDate":"2022-09-30"},{"lineNumber":398,"author":{"gitId":"albertarielw"},"content":"| `* *`    | hackathon team leader                      | add further descriptions to ga task | add more details to a task                                                           |                             |","lastModifiedDate":"2022-09-30"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"ALWHgithub"},"content":"**Use case: Add a new team member**","lastModifiedDate":"2022-09-28"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"ALWHgithub"},"content":"1.  User requests to add a new member","lastModifiedDate":"2022-09-30"},{"lineNumber":409,"author":{"gitId":"ALWHgithub"},"content":"2.  HackAssist shows a list of fields to input (Name, Rating of Ability, Role)","lastModifiedDate":"2022-09-28"},{"lineNumber":410,"author":{"gitId":"ALWHgithub"},"content":"3.  User inputs fields","lastModifiedDate":"2022-09-28"},{"lineNumber":411,"author":{"gitId":"ALWHgithub"},"content":"4.  HackAssist shows list of all members, including new member","lastModifiedDate":"2022-09-28"},{"lineNumber":412,"author":{"gitId":"ALWHgithub"},"content":"Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":414,"author":{"gitId":"ALWHgithub"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":415,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":416,"author":{"gitId":"ALWHgithub"},"content":"Extensions:","lastModifiedDate":"2022-09-28"},{"lineNumber":417,"author":{"gitId":"ALWHgithub"},"content":"  * 3a. HackAssist detects that the member already exists","lastModifiedDate":"2022-09-28"},{"lineNumber":418,"author":{"gitId":"ALWHgithub"},"content":"     * 3a1. Hackassist shows an error message","lastModifiedDate":"2022-09-28"},{"lineNumber":419,"author":{"gitId":"ALWHgithub"},"content":"       Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":420,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":421,"author":{"gitId":"ALWHgithub"},"content":" * *a. At any time, User chooses to cancel the process.","lastModifiedDate":"2022-09-28"},{"lineNumber":422,"author":{"gitId":"ALWHgithub"},"content":"    * *a1. HackAssist requests to confirm the cancellation.","lastModifiedDate":"2022-09-28"},{"lineNumber":423,"author":{"gitId":"ALWHgithub"},"content":"    * *a2. User confirms the cancellation.","lastModifiedDate":"2022-09-28"},{"lineNumber":424,"author":{"gitId":"ALWHgithub"},"content":"       Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":425,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":426,"author":{"gitId":"ALWHgithub"},"content":"**Use case: Add specific team member to an existing task**","lastModifiedDate":"2022-09-28"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"ALWHgithub"},"content":"1.  User requests to see all tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":431,"author":{"gitId":"ALWHgithub"},"content":"2.  HackAssist shows current list of tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":432,"author":{"gitId":"ALWHgithub"},"content":"3.  User requests specific task","lastModifiedDate":"2022-09-28"},{"lineNumber":433,"author":{"gitId":"ALWHgithub"},"content":"4.  HackAssist displays information on that task","lastModifiedDate":"2022-09-28"},{"lineNumber":434,"author":{"gitId":"ALWHgithub"},"content":"5.  User requests to add member","lastModifiedDate":"2022-09-28"},{"lineNumber":435,"author":{"gitId":"ALWHgithub"},"content":"6.  HackAssist shows list of all members","lastModifiedDate":"2022-09-28"},{"lineNumber":436,"author":{"gitId":"ALWHgithub"},"content":"7.  User selects specific member","lastModifiedDate":"2022-09-28"},{"lineNumber":437,"author":{"gitId":"ALWHgithub"},"content":"8.  HackAssist displays information about member and prompts for confirmation","lastModifiedDate":"2022-09-28"},{"lineNumber":438,"author":{"gitId":"ALWHgithub"},"content":"9.  User confirms","lastModifiedDate":"2022-09-28"},{"lineNumber":439,"author":{"gitId":"ALWHgithub"},"content":"10.  User is added to existing task","lastModifiedDate":"2022-09-28"},{"lineNumber":440,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"ALWHgithub"},"content":"Extensions:","lastModifiedDate":"2022-09-28"},{"lineNumber":445,"author":{"gitId":"ALWHgithub"},"content":"  * 2a. There are no tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":446,"author":{"gitId":"ALWHgithub"},"content":"       Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"ALWHgithub"},"content":" * 5a. There are no members","lastModifiedDate":"2022-09-28"},{"lineNumber":449,"author":{"gitId":"ALWHgithub"},"content":"    * 5a1 Hackassist shows an error message that there are no members","lastModifiedDate":"2022-09-28"},{"lineNumber":450,"author":{"gitId":"-"},"content":"       Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"ALWHgithub"},"content":"* 7a. HackAssist detects that the member\u0027s Ability Rating is lower than the given task","lastModifiedDate":"2022-09-28"},{"lineNumber":453,"author":{"gitId":"ALWHgithub"},"content":"    * 7a1. Hackassist shows a warning message for low user rating","lastModifiedDate":"2022-09-28"},{"lineNumber":454,"author":{"gitId":"ALWHgithub"},"content":"    * 7a2. Hackassist promts for confirmation","lastModifiedDate":"2022-09-28"},{"lineNumber":455,"author":{"gitId":"ALWHgithub"},"content":"    * 7a3. User ackowledges and confirms addition of member","lastModifiedDate":"2022-09-28"},{"lineNumber":456,"author":{"gitId":"ALWHgithub"},"content":"      Use case resumes from step 8.","lastModifiedDate":"2022-09-28"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":458,"author":{"gitId":"ALWHgithub"},"content":"* 7b. HackAssist detects that the member already has more than 3 tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":459,"author":{"gitId":"ALWHgithub"},"content":"    * 7b1. Hackassist shows a warning message for potentially overloaded user","lastModifiedDate":"2022-09-28"},{"lineNumber":460,"author":{"gitId":"ALWHgithub"},"content":"    * 7b2. Hackassist promts for confirmation","lastModifiedDate":"2022-09-28"},{"lineNumber":461,"author":{"gitId":"ALWHgithub"},"content":"    * 7b3. User ackowledges and confirms addition of member","lastModifiedDate":"2022-09-28"},{"lineNumber":462,"author":{"gitId":"ALWHgithub"},"content":"      Use case resumes from step 8.","lastModifiedDate":"2022-09-28"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":464,"author":{"gitId":"ALWHgithub"},"content":"* a. At any time, User chooses to cancel the process.","lastModifiedDate":"2022-09-28"},{"lineNumber":465,"author":{"gitId":"ALWHgithub"},"content":"    * a1. HackAssist requests to confirm the cancellation.","lastModifiedDate":"2022-09-28"},{"lineNumber":466,"author":{"gitId":"ALWHgithub"},"content":"    * a2. User confirms the cancellation.","lastModifiedDate":"2022-09-28"},{"lineNumber":467,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"ALWHgithub"},"content":" **Use case: Edit deadline of task**","lastModifiedDate":"2022-09-28"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"ALWHgithub"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"ALWHgithub"},"content":"1.  User requests to see all tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":474,"author":{"gitId":"ALWHgithub"},"content":"2.  HackAssist shows current list of tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":475,"author":{"gitId":"ALWHgithub"},"content":"3.  User requests specific task","lastModifiedDate":"2022-09-28"},{"lineNumber":476,"author":{"gitId":"ALWHgithub"},"content":"4.  HackAssist displays information on that task","lastModifiedDate":"2022-09-28"},{"lineNumber":477,"author":{"gitId":"ALWHgithub"},"content":"5.  User requests to edit deadline","lastModifiedDate":"2022-09-28"},{"lineNumber":478,"author":{"gitId":"ALWHgithub"},"content":"6.  HackAssist promts input for new deadline","lastModifiedDate":"2022-09-28"},{"lineNumber":479,"author":{"gitId":"ALWHgithub"},"content":"7.  User inputs deadline","lastModifiedDate":"2022-09-28"},{"lineNumber":480,"author":{"gitId":"ALWHgithub"},"content":"8.  User confirms","lastModifiedDate":"2022-09-28"},{"lineNumber":481,"author":{"gitId":"ALWHgithub"},"content":"9.  HackAssist updates deadline","lastModifiedDate":"2022-09-28"},{"lineNumber":482,"author":{"gitId":"ALWHgithub"},"content":"10.  HackAssist displays updated information about task","lastModifiedDate":"2022-09-28"},{"lineNumber":483,"author":{"gitId":"ALWHgithub"},"content":"Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"ALWHgithub"},"content":"Extensions:","lastModifiedDate":"2022-09-28"},{"lineNumber":486,"author":{"gitId":"ALWHgithub"},"content":"* 2a. There are no tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":487,"author":{"gitId":"ALWHgithub"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"ALWHgithub"},"content":"* 7a. HackAssist detects that the deadline is invalid","lastModifiedDate":"2022-09-28"},{"lineNumber":490,"author":{"gitId":"ALWHgithub"},"content":"    * 7a1. Hackassist shows an error message that the deadline is invalid","lastModifiedDate":"2022-09-28"},{"lineNumber":491,"author":{"gitId":"ALWHgithub"},"content":"    * 7a2. User enters new data","lastModifiedDate":"2022-09-28"},{"lineNumber":492,"author":{"gitId":"ALWHgithub"},"content":"    Steps 7a1-7a2 are repeated until the data entered are correct.","lastModifiedDate":"2022-09-28"},{"lineNumber":493,"author":{"gitId":"ALWHgithub"},"content":"    Use case resumes from step 8.","lastModifiedDate":"2022-09-28"},{"lineNumber":494,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":495,"author":{"gitId":"ALWHgithub"},"content":"* 7b. HackAssist detects that the deadline is already past","lastModifiedDate":"2022-09-28"},{"lineNumber":496,"author":{"gitId":"ALWHgithub"},"content":"    * 7b1. Hackassist shows an error message that the deadline has already past","lastModifiedDate":"2022-09-28"},{"lineNumber":497,"author":{"gitId":"ALWHgithub"},"content":"    * 7b2. User enters new data","lastModifiedDate":"2022-09-28"},{"lineNumber":498,"author":{"gitId":"ALWHgithub"},"content":"    Steps 7b1-7b2 are repeated until the data entered are correct.","lastModifiedDate":"2022-09-28"},{"lineNumber":499,"author":{"gitId":"ALWHgithub"},"content":"    Use case resumes from step 8.","lastModifiedDate":"2022-09-28"},{"lineNumber":500,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"paotheroo"},"content":"4.  Should be usable by hackathon team leaders of all skill levels (i.e. novices to highly experienced).","lastModifiedDate":"2022-09-28"},{"lineNumber":508,"author":{"gitId":"paotheroo"},"content":"5.  Product is not required to handle printing.","lastModifiedDate":"2022-09-28"},{"lineNumber":509,"author":{"gitId":"paotheroo"},"content":"6.  System should respond within two seconds.","lastModifiedDate":"2022-09-28"},{"lineNumber":510,"author":{"gitId":"paotheroo"},"content":"7.  Product is expected to be updated with a new set of features or bugfixes once every two weeks.","lastModifiedDate":"2022-09-28"},{"lineNumber":511,"author":{"gitId":"paotheroo"},"content":"8.  Should be able to read from local disk storage (i.e. persistent storage functionality).","lastModifiedDate":"2022-09-28"},{"lineNumber":512,"author":{"gitId":"paotheroo"},"content":"9.  Product is not designed to work between different disk storages (i.e. only can read and write to local disk storage).","lastModifiedDate":"2022-09-28"},{"lineNumber":513,"author":{"gitId":"paotheroo"},"content":"10.  Should work offline without network connectivity.","lastModifiedDate":"2022-09-30"},{"lineNumber":514,"author":{"gitId":"paotheroo"},"content":"11.  Should only be accessible by Hackathon group leaders.","lastModifiedDate":"2022-09-30"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"yusiangeng"},"content":"* **CLI**: Command Line Interface which receives commands from a user in the form of lines of text","lastModifiedDate":"2022-09-28"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yusiangeng":1,"Kennethsim2000":34,"albertarielw":34,"ALWHgithub":97,"-":367,"paotheroo":42}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"HackAssist is a desktop app for helping hackathon team leaders manage project tasks and team formation more easily.","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":"It is optimized for use via a **Command Line Interface** (CLI) while still having the benefits of a **Graphical User Interface** (GUI). If you can type fast, HackAssist can get your task management done faster than traditional GUI apps.","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"1. Download the latest `HackAssist.jar` from [here](https://github.com/AY2223S1-CS2103T-F12-2/tp/releases).","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your HackAssist.","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Kennethsim2000"},"content":"   * **`view Tasks`** : Lists all tasks in tasklist.","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Kennethsim2000"},"content":"   * **`add task coding assignment`** : Adds a task `coding assignment` to the task list.","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Kennethsim2000"},"content":"   * **`delete task`**`3` : Deletes the 3rd task from the task list.","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Kennethsim2000"},"content":"   * **`help`** : Displays help text.","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"Kennethsim2000"},"content":"Clears all entries from the task list.","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"Kennethsim2000"},"content":"HackAssist data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-10-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":96,"author":{"gitId":"Kennethsim2000"},"content":"HackASsist data are saved as a JSON file `[JAR file location]/data/HackAssist.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"Kennethsim2000"},"content":"### Adding a task: `Add Task`","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"Kennethsim2000"},"content":"Adds a task to the tasklist.","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"Kennethsim2000"},"content":"Format: `add task TASK_DESCRIPTION`","lastModifiedDate":"2022-09-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"Kennethsim2000"},"content":"* `add task laundry` add laundry to the task list","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"Kennethsim2000"},"content":"* `add task coding assignment` add coding assignment to the task list","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"Kennethsim2000"},"content":"### Deleting a task: `Delete Task`","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":118,"author":{"gitId":"Kennethsim2000"},"content":"Deletes a task from the tasklist.","lastModifiedDate":"2022-09-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":120,"author":{"gitId":"Kennethsim2000"},"content":"Format: `delete task TASK_NUMBER`","lastModifiedDate":"2022-09-28"},{"lineNumber":121,"author":{"gitId":"Kennethsim2000"},"content":"* Deletes the task at the specified `TASK_NUMBER`.","lastModifiedDate":"2022-09-28"},{"lineNumber":122,"author":{"gitId":"Kennethsim2000"},"content":"* The tasknumber refers to the task number shown in the displayed task list.","lastModifiedDate":"2022-09-28"},{"lineNumber":123,"author":{"gitId":"Kennethsim2000"},"content":"* The tasknumber **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-09-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":126,"author":{"gitId":"Kennethsim2000"},"content":"* `delete task 1` deletes the first task from the tasklist","lastModifiedDate":"2022-09-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":128,"author":{"gitId":"Kennethsim2000"},"content":"### viewing all tasks: `View Tasks`","lastModifiedDate":"2022-09-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":130,"author":{"gitId":"Kennethsim2000"},"content":"Lists out all the tasks in the tasklist.","lastModifiedDate":"2022-09-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":132,"author":{"gitId":"Kennethsim2000"},"content":"Format: `view tasks`","lastModifiedDate":"2022-09-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":134,"author":{"gitId":"Kennethsim2000"},"content":"### Assigning a task: `Assign`","lastModifiedDate":"2022-09-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":136,"author":{"gitId":"Kennethsim2000"},"content":"Assign a task to an existing person.","lastModifiedDate":"2022-09-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":138,"author":{"gitId":"Kennethsim2000"},"content":"Format: `assign TASK_NUMBER to PERSON_NAME`","lastModifiedDate":"2022-09-28"},{"lineNumber":139,"author":{"gitId":"Kennethsim2000"},"content":"* `TASK_NUMBER` must be smaller than the total number of tasks in task list.","lastModifiedDate":"2022-09-28"},{"lineNumber":140,"author":{"gitId":"Kennethsim2000"},"content":"* `PERSON_NAME` must be existing contact in contactbook.","lastModifiedDate":"2022-09-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":142,"author":{"gitId":"Kennethsim2000"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":143,"author":{"gitId":"Kennethsim2000"},"content":"* `assign 1 to John` assign tasknumber 1 to John","lastModifiedDate":"2022-09-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"Kennethsim2000"},"content":"**Add Task** | `add task TASK_DESCRIPTION` \u003cbr\u003e e.g., `add task laundry`","lastModifiedDate":"2022-09-28"},{"lineNumber":161,"author":{"gitId":"Kennethsim2000"},"content":"**Delete Task** | `delete task TASK_NUMBER` \u003cbr\u003e e.g., `delete task 1`","lastModifiedDate":"2022-09-28"},{"lineNumber":162,"author":{"gitId":"Kennethsim2000"},"content":"**View Tasks** | `view tasks`","lastModifiedDate":"2022-09-28"},{"lineNumber":163,"author":{"gitId":"Kennethsim2000"},"content":"**Assign** | `assign TASK_NUMBER to PERSON_NAME` \u003cbr\u003e e.g., `assign 1 to John`","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"Kennethsim2000":38,"-":125}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AddressBook Level-3","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yusiangeng"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-F12-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-F12-2/tp/actions)","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"yusiangeng"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-F12-2/tp/branch/master/graph/badge.svg?token\u003d0JLSTHS4IL)](https://codecov.io/gh/AY2223S1-CS2103T-F12-2/tp)","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yusiangeng":2,"-":17}},{"path":"docs/team/albertarielw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"albertarielw"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"albertarielw"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"albertarielw"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"albertarielw"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"albertarielw"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"albertarielw"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"albertarielw"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"albertarielw"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"albertarielw"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"albertarielw"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"albertarielw"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"albertarielw"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"albertarielw"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"albertarielw"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"albertarielw"},"content":"* **Project management**:","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"albertarielw"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"albertarielw"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"albertarielw"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"albertarielw"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"albertarielw"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"albertarielw"},"content":"  * User Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"albertarielw"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"albertarielw"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"albertarielw"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"albertarielw"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"albertarielw"},"content":"* **Community**:","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"albertarielw"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"albertarielw"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"albertarielw"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"albertarielw"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"albertarielw"},"content":"* **Tools**:","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"albertarielw"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"albertarielw"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"albertarielw"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"albertarielw":46}},{"path":"docs/team/alwhgithub.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"  * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"ALWHgithub"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"ALWHgithub"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"ALWHgithub"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"ALWHgithub"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"ALWHgithub"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"ALWHgithub"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"ALWHgithub"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"ALWHgithub"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"ALWHgithub"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"ALWHgithub"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"ALWHgithub"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ALWHgithub":47}},{"path":"docs/team/kennethsim2000.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"---","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"layout: page","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"title: Kenneth\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":"---","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"### Project: HackAssist","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":"HackAssist is a desktop address book and task management application used to better manage tasks allocation in Hackathons. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"Kennethsim2000"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Kennethsim2000"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Kennethsim2000"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Kennethsim2000"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Kennethsim2000"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Kennethsim2000"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Kennethsim2000"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Kennethsim2000"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Kennethsim2000"},"content":"* **Project management**:","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Kennethsim2000"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Kennethsim2000"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Kennethsim2000"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Kennethsim2000"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Kennethsim2000"},"content":"* **Documentation**:","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Kennethsim2000"},"content":"  * User Guide:","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Kennethsim2000"},"content":"    * Added documentation for the features `Add Task`, `Delete Task`, `View Tasks`, `Assign` [\\#72]()","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Kennethsim2000"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Kennethsim2000"},"content":"  * Developer Guide:","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Kennethsim2000"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Kennethsim2000"},"content":"* **Community**:","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Kennethsim2000"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Kennethsim2000"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Kennethsim2000"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Kennethsim2000"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Kennethsim2000"},"content":"* **Tools**:","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Kennethsim2000"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Kennethsim2000"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Kennethsim2000"},"content":"* _{to be updated soon}_","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"Kennethsim2000":47}},{"path":"docs/team/paotheroo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"title: Zan Hao\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":"### Project: HackAssist","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"HackAssist is a desktop address book and task management application used for managing tasks and team formations in Hackathons. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"paotheroo"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"paotheroo"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":"* **Project management**:","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"paotheroo"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"paotheroo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"paotheroo"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"paotheroo"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"paotheroo"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"paotheroo"},"content":"  * User Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"paotheroo"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"paotheroo"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"paotheroo"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"paotheroo"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"paotheroo"},"content":"* **Community**:","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"paotheroo"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"paotheroo"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"paotheroo"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"paotheroo"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"paotheroo"},"content":"* **Tools**:","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"paotheroo"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"paotheroo"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"paotheroo"},"content":"* _{to be updated soon}_","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"paotheroo":46}},{"path":"docs/team/yusiangeng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yusiangeng"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"yusiangeng"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"yusiangeng"},"content":"title: Joe\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"yusiangeng"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"yusiangeng"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"yusiangeng"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"yusiangeng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"yusiangeng"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"yusiangeng"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"yusiangeng"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"yusiangeng"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"yusiangeng"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"yusiangeng"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"yusiangeng"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"yusiangeng"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"yusiangeng"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"yusiangeng"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"yusiangeng"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"yusiangeng"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"yusiangeng"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"yusiangeng"},"content":"  * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"yusiangeng"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"yusiangeng"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"yusiangeng"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"yusiangeng"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"yusiangeng"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"yusiangeng"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"yusiangeng"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"yusiangeng"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"yusiangeng"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"yusiangeng"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"yusiangeng"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"yusiangeng"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"yusiangeng"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"yusiangeng":46}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"albertarielw"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"albertarielw":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"    public static final String MESSAGE_TASK_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"albertarielw":1,"-":13,"paotheroo":1}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"    public Index(int zeroBasedIndex) {","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ALWHgithub":1,"-":53}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"yusiangeng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"yusiangeng"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":43,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"yusiangeng"},"content":"     * Returns an unmodifiable view of the filtered list of tasks","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"yusiangeng"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yusiangeng":10,"ALWHgithub":2,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"yusiangeng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":70,"author":{"gitId":"yusiangeng"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"yusiangeng"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"yusiangeng"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yusiangeng":6,"ALWHgithub":2,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertarielw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"albertarielw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"albertarielw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"albertarielw"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"albertarielw"},"content":" * Adds a task to the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"albertarielw"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"albertarielw"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"albertarielw"},"content":"    public static final String COMMAND_WORD \u003d \"addTask\";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"yusiangeng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the address book. \\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"albertarielw"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"yusiangeng"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"yusiangeng"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"yusiangeng"},"content":"            + \"[\" + PREFIX_PRIORITY + \"PRIORITY (low/medium/high)] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"yusiangeng"},"content":"            + \"[\" + PREFIX_CATEGORY + \"CATEGORY (database/frontend/backend/uiux/presentation/others)] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"yusiangeng"},"content":"            + \"[\" + PREFIX_DEADLINE + \"DEADLINE (YYYY-MM-DD, must be after current date)] \"","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"yusiangeng"},"content":"            + \"[\" + PREFIX_PERSON + \"PERSON EMAIL ADDRESS (must be a valid email)]\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"albertarielw"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"yusiangeng"},"content":"            + PREFIX_NAME + \"Create Initial UIUX Design \"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"yusiangeng"},"content":"            + PREFIX_DESCRIPTION + \"Use FIGMA to create initial UIUX Design \"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"yusiangeng"},"content":"            + PREFIX_PRIORITY + \"medium \"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"yusiangeng"},"content":"            + PREFIX_CATEGORY + \"uiux \"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"yusiangeng"},"content":"            + PREFIX_DEADLINE + \"2023-01-01 \"","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"yusiangeng"},"content":"            + PREFIX_PERSON + \"johnd@example.com \";","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book\";","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"albertarielw"},"content":"    private final Task toAdd;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"albertarielw"},"content":"    private final Email personEmailAddress;","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"albertarielw"},"content":"     * Creates an AddTaskCommand to add the specified {@code Task}","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"albertarielw"},"content":"    public AddTaskCommand(Task task, Email personEmailAddress) {","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"albertarielw"},"content":"        toAdd \u003d task;","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"albertarielw"},"content":"        this.personEmailAddress \u003d personEmailAddress;","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"albertarielw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"albertarielw"},"content":"        toAdd.setPersonEmailAddress(personEmailAddress);","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"albertarielw"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"albertarielw"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"albertarielw"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"albertarielw"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"albertarielw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"albertarielw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"albertarielw"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"albertarielw"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"albertarielw"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"yusiangeng":14,"albertarielw":56,"ALWHgithub":5}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertarielw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"albertarielw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"albertarielw"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"albertarielw"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"albertarielw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"albertarielw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"albertarielw"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"albertarielw"},"content":" * Deletes a Task in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"albertarielw"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"albertarielw"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"albertarielw"},"content":"    public static final String COMMAND_WORD \u003d \"deleteTask\";","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"albertarielw"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"albertarielw"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"albertarielw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"albertarielw"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"albertarielw"},"content":"     * Creates an DeleteTaskCommand to add the specified {@code Task}","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"albertarielw"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"albertarielw"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"albertarielw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"yusiangeng"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"albertarielw"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"yusiangeng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"yusiangeng"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"yusiangeng"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"yusiangeng"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"albertarielw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"albertarielw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"albertarielw"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"albertarielw"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"albertarielw"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"yusiangeng":5,"albertarielw":48,"ALWHgithub":3}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":231,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"ALWHgithub":6,"-":226}},{"path":"src/main/java/seedu/address/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertarielw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"albertarielw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"albertarielw"},"content":"import static java.util.Optional.ofNullable;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DONE;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"albertarielw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"albertarielw"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"albertarielw"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"albertarielw"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"albertarielw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"albertarielw"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"albertarielw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskCategory;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskDeadline;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"albertarielw"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"albertarielw"},"content":" * Adds a Task in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"albertarielw"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"albertarielw"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"albertarielw"},"content":"    public static final String COMMAND_WORD \u003d \"editTask\";","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"yusiangeng"},"content":"            + \"by the index number used in the displayed task list. \"","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"albertarielw"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"albertarielw"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"albertarielw"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"albertarielw"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"yusiangeng"},"content":"            + \"[\" + PREFIX_PRIORITY + \"PRIORITY (low/medium/high)] \"","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"yusiangeng"},"content":"            + \"[\" + PREFIX_CATEGORY + \"CATEGORY (database/frontend/backend/uiux/presentation/others)] \"","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"yusiangeng"},"content":"            + \"[\" + PREFIX_DEADLINE + \"DEADLINE (YYYY-MM-DD)] \"","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"yusiangeng"},"content":"            + \"[\" + PREFIX_PERSON + \"PERSON EMAIL ADDRESS (must be a valid email)] \"","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"yusiangeng"},"content":"            + \"[\" + PREFIX_DONE + \"DONE (t/f)]...\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"albertarielw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"yusiangeng"},"content":"            + PREFIX_NAME + \"Create Initial UIUX Design\"","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"yusiangeng"},"content":"            + PREFIX_DEADLINE + \"2023-01-01\";","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"albertarielw"},"content":"    private final Index index;","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"albertarielw"},"content":"    private final EditTaskCommand.EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"albertarielw"},"content":"     * @param index              of the task in the filtered task list to edit","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"albertarielw"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"albertarielw"},"content":"    public EditTaskCommand(Index index, EditTaskCommand.EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"albertarielw"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"albertarielw"},"content":"        this.editTaskDescriptor \u003d new EditTaskCommand.EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"ALWHgithub"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"ALWHgithub"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"ALWHgithub"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskCommand.EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"ALWHgithub"},"content":"        assert editTaskDescriptor !\u003d null;","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"ALWHgithub"},"content":"        TaskName updatedName \u003d editTaskDescriptor.getName().orElse(taskToEdit.getName());","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"ALWHgithub"},"content":"        TaskCategory updatedCategory \u003d editTaskDescriptor.getCategory().orElse(taskToEdit.getCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"ALWHgithub"},"content":"        Description updatedDescription \u003d editTaskDescriptor.getDescription().orElse(taskToEdit.getDescription());","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"ALWHgithub"},"content":"        Priority updatedPriority \u003d editTaskDescriptor.getPriority().orElse(taskToEdit.getPriority());","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"ALWHgithub"},"content":"        TaskDeadline updatedDeadline \u003d editTaskDescriptor.getDeadline().orElse(taskToEdit.getDeadline());","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"albertarielw"},"content":"        Email updatedPersonEmailAddress \u003d editTaskDescriptor.getPersonEmailAddress()","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"albertarielw"},"content":"                .orElse(taskToEdit.getPersonEmailAddress());","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"ALWHgithub"},"content":"        Boolean updatedIsDone \u003d editTaskDescriptor.getIsDone().orElse(taskToEdit.isDone());","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"ALWHgithub"},"content":"        return new Task(updatedName, updatedDescription, updatedPriority, updatedCategory, updatedDeadline,","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"albertarielw"},"content":"                updatedPersonEmailAddress, updatedIsDone);","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"albertarielw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"albertarielw"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"albertarielw"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"albertarielw"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"albertarielw"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"albertarielw"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"albertarielw"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"albertarielw"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"albertarielw"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"ALWHgithub"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"albertarielw"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"albertarielw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"albertarielw"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"albertarielw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"albertarielw"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"albertarielw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"yusiangeng"},"content":"        if (!(other instanceof EditTaskCommand)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"albertarielw"},"content":"            return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"albertarielw"},"content":"        // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"albertarielw"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"albertarielw"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"albertarielw"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"albertarielw"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"albertarielw"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"albertarielw"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"albertarielw"},"content":"        // Identity fields","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"albertarielw"},"content":"        private TaskName name;","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"albertarielw"},"content":"        private TaskCategory category;","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"albertarielw"},"content":"        private Description description;","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"albertarielw"},"content":"        // Data fields","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"albertarielw"},"content":"        private Priority priority;","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"albertarielw"},"content":"        private TaskDeadline deadline;","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"albertarielw"},"content":"        private Email personEmailAddress;","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"albertarielw"},"content":"        private boolean isDone;","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"yusiangeng"},"content":"        public EditTaskDescriptor() {","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"albertarielw"},"content":"        /**","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"albertarielw"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"albertarielw"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"albertarielw"},"content":"         */","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"albertarielw"},"content":"        public EditTaskDescriptor(EditTaskCommand.EditTaskDescriptor toCopy) {","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"albertarielw"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"albertarielw"},"content":"            setCategory(toCopy.category);","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"albertarielw"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"albertarielw"},"content":"            setPriority(toCopy.priority);","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"albertarielw"},"content":"            setDeadline(toCopy.deadline);","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"albertarielw"},"content":"            setPersonEmailAddress(toCopy.personEmailAddress);","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"albertarielw"},"content":"            setDone(toCopy.isDone);","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"albertarielw"},"content":"        /**","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"albertarielw"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"albertarielw"},"content":"         */","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"albertarielw"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"albertarielw"},"content":"            return CollectionUtil.isAnyNonNull(name, category, description, priority,","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"albertarielw"},"content":"                    deadline, personEmailAddress, isDone);","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"albertarielw"},"content":"        public Optional\u003cTaskName\u003e getName() {","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"albertarielw"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"ALWHgithub"},"content":"        public void setName(TaskName name) {","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"ALWHgithub"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"albertarielw"},"content":"        public Optional\u003cTaskCategory\u003e getCategory() {","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"albertarielw"},"content":"            return ofNullable(category);","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"ALWHgithub"},"content":"        public void setCategory(TaskCategory category) {","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"ALWHgithub"},"content":"            this.category \u003d category;","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"albertarielw"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"albertarielw"},"content":"            return ofNullable(description);","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"ALWHgithub"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"ALWHgithub"},"content":"            this.description \u003d description;","lastModifiedDate":"2022-10-16"},{"lineNumber":193,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"albertarielw"},"content":"        public Optional\u003cPriority\u003e getPriority() {","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"albertarielw"},"content":"            return ofNullable(priority);","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"ALWHgithub"},"content":"        public void setPriority(Priority priority) {","lastModifiedDate":"2022-10-16"},{"lineNumber":200,"author":{"gitId":"ALWHgithub"},"content":"            this.priority \u003d priority;","lastModifiedDate":"2022-10-16"},{"lineNumber":201,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":202,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":203,"author":{"gitId":"albertarielw"},"content":"        public Optional\u003cTaskDeadline\u003e getDeadline() {","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"albertarielw"},"content":"            return ofNullable(deadline);","lastModifiedDate":"2022-10-11"},{"lineNumber":205,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":207,"author":{"gitId":"ALWHgithub"},"content":"        public void setDeadline(TaskDeadline deadline) {","lastModifiedDate":"2022-10-16"},{"lineNumber":208,"author":{"gitId":"ALWHgithub"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2022-10-16"},{"lineNumber":209,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":210,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":211,"author":{"gitId":"albertarielw"},"content":"        public void setPersonEmailAddress(Email personEmailAddress) {","lastModifiedDate":"2022-10-16"},{"lineNumber":212,"author":{"gitId":"albertarielw"},"content":"            this.personEmailAddress \u003d personEmailAddress;","lastModifiedDate":"2022-10-16"},{"lineNumber":213,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":214,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":215,"author":{"gitId":"albertarielw"},"content":"        public Optional\u003cEmail\u003e getPersonEmailAddress() {","lastModifiedDate":"2022-10-16"},{"lineNumber":216,"author":{"gitId":"albertarielw"},"content":"            return ofNullable(personEmailAddress);","lastModifiedDate":"2022-10-16"},{"lineNumber":217,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":218,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":219,"author":{"gitId":"albertarielw"},"content":"        public void setDone(boolean isDone) {","lastModifiedDate":"2022-10-11"},{"lineNumber":220,"author":{"gitId":"albertarielw"},"content":"            this.isDone \u003d isDone;","lastModifiedDate":"2022-10-11"},{"lineNumber":221,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":222,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":223,"author":{"gitId":"albertarielw"},"content":"        public Optional\u003cBoolean\u003e getIsDone() {","lastModifiedDate":"2022-10-11"},{"lineNumber":224,"author":{"gitId":"yusiangeng"},"content":"            return Optional.of(isDone);","lastModifiedDate":"2022-10-11"},{"lineNumber":225,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":226,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":227,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":228,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":229,"author":{"gitId":"albertarielw"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":230,"author":{"gitId":"albertarielw"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":231,"author":{"gitId":"albertarielw"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":232,"author":{"gitId":"albertarielw"},"content":"                return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":233,"author":{"gitId":"albertarielw"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":234,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":235,"author":{"gitId":"albertarielw"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":236,"author":{"gitId":"yusiangeng"},"content":"            if (!(other instanceof EditTaskCommand.EditTaskDescriptor)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":237,"author":{"gitId":"albertarielw"},"content":"                return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":238,"author":{"gitId":"albertarielw"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":239,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":240,"author":{"gitId":"albertarielw"},"content":"            // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":241,"author":{"gitId":"albertarielw"},"content":"            EditTaskCommand.EditTaskDescriptor e \u003d (EditTaskCommand.EditTaskDescriptor) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":242,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":243,"author":{"gitId":"albertarielw"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-10-11"},{"lineNumber":244,"author":{"gitId":"albertarielw"},"content":"                    \u0026\u0026 getCategory().equals(e.getCategory())","lastModifiedDate":"2022-10-11"},{"lineNumber":245,"author":{"gitId":"albertarielw"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2022-10-11"},{"lineNumber":246,"author":{"gitId":"albertarielw"},"content":"                    \u0026\u0026 getPriority().equals(e.getPriority())","lastModifiedDate":"2022-10-11"},{"lineNumber":247,"author":{"gitId":"albertarielw"},"content":"                    \u0026\u0026 getDeadline().equals(e.getDeadline())","lastModifiedDate":"2022-10-11"},{"lineNumber":248,"author":{"gitId":"albertarielw"},"content":"                    \u0026\u0026 getPersonEmailAddress().equals(e.getPersonEmailAddress())","lastModifiedDate":"2022-10-16"},{"lineNumber":249,"author":{"gitId":"albertarielw"},"content":"                    \u0026\u0026 getIsDone().equals(e.getIsDone());","lastModifiedDate":"2022-10-11"},{"lineNumber":250,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":251,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":252,"author":{"gitId":"albertarielw"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"yusiangeng":17,"albertarielw":195,"ALWHgithub":40}},{"path":"src/main/java/seedu/address/logic/commands/FilterTaskCategoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":"import seedu.address.model.task.TaskContainsCategoryPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"Kennethsim2000"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"Kennethsim2000"},"content":" * Filters and lists all tasks in address book with category that matches the argument category.","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"Kennethsim2000"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"Kennethsim2000"},"content":"public class FilterTaskCategoryCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Kennethsim2000"},"content":"    public static final String COMMAND_WORD \u003d \"filterByCategory\";","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"Kennethsim2000"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all tasks with TaskCategory that matches the \"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"Kennethsim2000"},"content":"            + \"input task category and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"            + \"Parameters: [\" + PREFIX_CATEGORY + \"CATEGORY (database/frontend/backend/uiux/presentation/others)]\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Kennethsim2000"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_CATEGORY + \"backend\";","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Kennethsim2000"},"content":"    private final TaskContainsCategoryPredicate predicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Kennethsim2000"},"content":"    public FilterTaskCategoryCommand(TaskContainsCategoryPredicate predicate) {","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Kennethsim2000"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Kennethsim2000"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Kennethsim2000"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Kennethsim2000"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Kennethsim2000"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Kennethsim2000"},"content":"                String.format(Messages.MESSAGE_TASK_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Kennethsim2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Kennethsim2000"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Kennethsim2000"},"content":"                || (other instanceof FilterTaskCategoryCommand // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Kennethsim2000"},"content":"                \u0026\u0026 predicate.equals(((FilterTaskCategoryCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Kennethsim2000"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"Kennethsim2000":42}},{"path":"src/main/java/seedu/address/logic/commands/FilterTaskDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"import seedu.address.model.task.TaskDeadlineBeforeDatePredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":" * Filters and lists all tasks in address book with deadline that matches the argument date.","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"public class FilterTaskDeadlineCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"paotheroo"},"content":"    public static final String COMMAND_WORD \u003d \"filterByDeadline\";","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all tasks with deadline that matches the \"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"            + \"input date and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"            + \"Parameters: [\" + PREFIX_DEADLINE + \"DATE (YYYY-MM-DD)]\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_DEADLINE + \"2022-12-12\";","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":"    private final TaskDeadlineBeforeDatePredicate date;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"paotheroo"},"content":"    public FilterTaskDeadlineCommand(TaskDeadlineBeforeDatePredicate date) {","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"paotheroo"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"paotheroo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"paotheroo"},"content":"        model.updateFilteredTaskList(date);","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"paotheroo"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"paotheroo"},"content":"                String.format(Messages.MESSAGE_TASK_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"paotheroo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"paotheroo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"paotheroo"},"content":"                || (other instanceof FilterTaskDeadlineCommand // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"paotheroo"},"content":"                \u0026\u0026 date.equals(((FilterTaskDeadlineCommand) other).date)); // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"paotheroo":42}},{"path":"src/main/java/seedu/address/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"    public static final String COMMAND_WORD \u003d \"listTasks\";","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"paotheroo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"paotheroo":24}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yusiangeng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"yusiangeng"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"yusiangeng"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"yusiangeng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskCategory;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskDeadline;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"yusiangeng"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"yusiangeng"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"yusiangeng"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"yusiangeng"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"yusiangeng"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"yusiangeng"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"yusiangeng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"yusiangeng"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"yusiangeng"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"yusiangeng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_PRIORITY, PREFIX_CATEGORY,","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"yusiangeng"},"content":"                        PREFIX_DEADLINE, PREFIX_PERSON);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"yusiangeng"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_PRIORITY, PREFIX_CATEGORY,","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"yusiangeng"},"content":"                PREFIX_DEADLINE, PREFIX_PERSON) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"yusiangeng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"albertarielw"},"content":"        Email personEmailAddress;","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"yusiangeng"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"albertarielw"},"content":"            personEmailAddress \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_PERSON).get());","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"yusiangeng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"yusiangeng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"yusiangeng"},"content":"        TaskName taskName \u003d ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"yusiangeng"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"yusiangeng"},"content":"        Priority priority \u003d ParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"yusiangeng"},"content":"        TaskCategory category \u003d ParserUtil.parseTaskCategory(argMultimap.getValue(PREFIX_CATEGORY).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"yusiangeng"},"content":"        TaskDeadline deadline \u003d ParserUtil.parseTaskDeadline(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"yusiangeng"},"content":"        Task task \u003d new Task(taskName, description, priority, category, deadline, null, false);","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"albertarielw"},"content":"        return new AddTaskCommand(task, personEmailAddress);","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"yusiangeng"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"yusiangeng"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"yusiangeng"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"yusiangeng"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"yusiangeng"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"yusiangeng":61,"albertarielw":4,"ALWHgithub":7}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"yusiangeng"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"yusiangeng"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"yusiangeng"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"Kennethsim2000"},"content":"import seedu.address.logic.commands.FilterTaskCategoryCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"import seedu.address.logic.commands.FilterTaskDeadlineCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"paotheroo"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"yusiangeng"},"content":"        // person commands","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"yusiangeng"},"content":"        // task commands","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"yusiangeng"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"yusiangeng"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"yusiangeng"},"content":"        case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"yusiangeng"},"content":"            return new EditTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"yusiangeng"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"yusiangeng"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"paotheroo"},"content":"        case FilterTaskDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"paotheroo"},"content":"            return new FilterTaskDeadlineParser().parse(arguments);","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"paotheroo"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"paotheroo"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"Kennethsim2000"},"content":"        case FilterTaskCategoryCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"Kennethsim2000"},"content":"            return new FilterTaskCategoryParser().parse(arguments);","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yusiangeng":14,"Kennethsim2000":4,"-":75,"paotheroo":8}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"albertarielw"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"albertarielw"},"content":"    public static final Prefix PREFIX_PRIORITY \u003d new Prefix(\"pr/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"albertarielw"},"content":"    public static final Prefix PREFIX_CATEGORY \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"albertarielw"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"dl/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"albertarielw"},"content":"    public static final Prefix PREFIX_PERSON \u003d new Prefix(\"pe/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"yusiangeng"},"content":"    public static final Prefix PREFIX_DONE \u003d new Prefix(\"do/\");","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yusiangeng":1,"albertarielw":5,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yusiangeng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"yusiangeng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"yusiangeng"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"yusiangeng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"yusiangeng"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"yusiangeng"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"yusiangeng"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"yusiangeng"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"yusiangeng"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"yusiangeng"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"yusiangeng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"yusiangeng"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"yusiangeng"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"yusiangeng"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"yusiangeng"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"yusiangeng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"yusiangeng"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"yusiangeng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"yusiangeng"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"yusiangeng":30}},{"path":"src/main/java/seedu/address/logic/parser/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yusiangeng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"yusiangeng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DONE;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"yusiangeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"yusiangeng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"yusiangeng"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"yusiangeng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"yusiangeng"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"yusiangeng"},"content":" * Parses input arguments and creates a new EditTaskCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"yusiangeng"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"yusiangeng"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"yusiangeng"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTaskCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"yusiangeng"},"content":"     * and returns an EditTaskCommand object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"yusiangeng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"yusiangeng"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"yusiangeng"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"yusiangeng"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"yusiangeng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_PRIORITY, PREFIX_CATEGORY,","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"yusiangeng"},"content":"                        PREFIX_DEADLINE, PREFIX_DONE);","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"yusiangeng"},"content":"        Index index;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"yusiangeng"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"yusiangeng"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"yusiangeng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"yusiangeng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"yusiangeng"},"content":"                    pe.getMessage() + \"\\n\" + EditTaskCommand.MESSAGE_USAGE),","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"yusiangeng"},"content":"                    pe);","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"yusiangeng"},"content":"        EditTaskCommand.EditTaskDescriptor editTaskDescriptor \u003d new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"yusiangeng"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"yusiangeng"},"content":"            editTaskDescriptor.setName(ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"yusiangeng"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"yusiangeng"},"content":"            editTaskDescriptor.setDescription(","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"yusiangeng"},"content":"                    ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"yusiangeng"},"content":"        if (argMultimap.getValue(PREFIX_PRIORITY).isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"yusiangeng"},"content":"            editTaskDescriptor.setPriority(ParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY).get()));","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"yusiangeng"},"content":"        if (argMultimap.getValue(PREFIX_CATEGORY).isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"yusiangeng"},"content":"            editTaskDescriptor.setCategory(ParserUtil.parseTaskCategory(argMultimap.getValue(PREFIX_CATEGORY).get()));","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"yusiangeng"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"yusiangeng"},"content":"            editTaskDescriptor.setDeadline(ParserUtil.parseTaskDeadline(argMultimap.getValue(PREFIX_DEADLINE).get()));","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"yusiangeng"},"content":"        if (argMultimap.getValue(PREFIX_DONE).isPresent()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"yusiangeng"},"content":"            editTaskDescriptor.setDone(ParserUtil.parseTaskIsDone(argMultimap.getValue(PREFIX_DONE).get()));","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"yusiangeng"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"yusiangeng"},"content":"            throw new ParseException(EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"yusiangeng"},"content":"        return new EditTaskCommand(index, editTaskDescriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"yusiangeng"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"yusiangeng":70}},{"path":"src/main/java/seedu/address/logic/parser/FilterTaskCategoryParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":"import seedu.address.logic.commands.FilterTaskCategoryCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"Kennethsim2000"},"content":"import seedu.address.model.task.TaskCategory;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"Kennethsim2000"},"content":"import seedu.address.model.task.TaskContainsCategoryPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"Kennethsim2000"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"Kennethsim2000"},"content":" * Parses input arguments and creates a new FilterTaskCategory object","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Kennethsim2000"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"Kennethsim2000"},"content":"public class FilterTaskCategoryParser implements Parser\u003cFilterTaskCategoryCommand\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterTaskCategory","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Kennethsim2000"},"content":"     * and return a FilterTaskCategoryCommand object for execution.","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"     * @param args String of arguments to be parsed","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Kennethsim2000"},"content":"     * @return a FilterTaskCategoryCommand object for execution","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Kennethsim2000"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Kennethsim2000"},"content":"    public FilterTaskCategoryCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Kennethsim2000"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CATEGORY);","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"Kennethsim2000"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CATEGORY) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Kennethsim2000"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Kennethsim2000"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterTaskCategoryCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Kennethsim2000"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Kennethsim2000"},"content":"        TaskCategory category \u003d ParserUtil.parseTaskCategory(argMultimap.getValue(PREFIX_CATEGORY).get());","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"Kennethsim2000"},"content":"        return new FilterTaskCategoryCommand(new TaskContainsCategoryPredicate(category));","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Kennethsim2000"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Kennethsim2000"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Kennethsim2000"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"Kennethsim2000"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"Kennethsim2000":45}},{"path":"src/main/java/seedu/address/logic/parser/FilterTaskDeadlineParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"import seedu.address.logic.commands.FilterTaskDeadlineCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"import seedu.address.model.task.TaskDeadline;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"import seedu.address.model.task.TaskDeadlineBeforeDatePredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":" * Parses input arguments and creates a new FilterTaskDeadlineCommand object","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"paotheroo"},"content":"public class FilterTaskDeadlineParser implements Parser\u003cFilterTaskDeadlineCommand\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterTaskDeadlineCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"     * and return a FilterTaskDeadline object for execution.","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"     * @param args String of arguments to be parsed","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":"     * @return a FilterTaskDeadline object for execution","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"paotheroo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"paotheroo"},"content":"    public FilterTaskDeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"paotheroo"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DEADLINE);","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"paotheroo"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DEADLINE) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"paotheroo"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"paotheroo"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterTaskDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"paotheroo"},"content":"        TaskDeadline date \u003d ParserUtil.parseTaskDeadline(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"paotheroo"},"content":"        return new FilterTaskDeadlineCommand(new TaskDeadlineBeforeDatePredicate(date));","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"paotheroo"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"paotheroo"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"paotheroo"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"paotheroo"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"paotheroo":45}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"yusiangeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"yusiangeng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"yusiangeng"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.PriorityEnum;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskCategory;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskCategoryType;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskDeadline;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"yusiangeng"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index must be a non-zero unsigned integer.\";","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"yusiangeng"},"content":"    // ------------------","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"yusiangeng"},"content":"    // Person commands","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"yusiangeng"},"content":"    // ------------------","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"yusiangeng"},"content":"    // ------------------","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"yusiangeng"},"content":"    // Task commands","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"yusiangeng"},"content":"    // ------------------","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"yusiangeng"},"content":"     * Parses a {@code String taskName} into a {@code TaskName}.","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"yusiangeng"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"yusiangeng"},"content":"     * @throws ParseException if the given {@code TaskName} is invalid.","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"yusiangeng"},"content":"    public static TaskName parseTaskName(String taskName) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"yusiangeng"},"content":"        requireNonNull(taskName);","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"yusiangeng"},"content":"        String trimmedName \u003d taskName.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"yusiangeng"},"content":"        if (!TaskName.isValidTaskName(trimmedName)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"yusiangeng"},"content":"            throw new ParseException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"yusiangeng"},"content":"        return new TaskName(trimmedName);","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"yusiangeng"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"yusiangeng"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"yusiangeng"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"yusiangeng"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"yusiangeng"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"yusiangeng"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"yusiangeng"},"content":"        if (!Description.isValidTaskDescription(trimmedDescription)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"yusiangeng"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"yusiangeng"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"yusiangeng"},"content":"     * Parses a {@code String priority} into a {@code Priority}.","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"yusiangeng"},"content":"     * @throws ParseException if the given {@code priority} is invalid.","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"yusiangeng"},"content":"    public static Priority parsePriority(String priority) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"yusiangeng"},"content":"        requireNonNull(priority);","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"yusiangeng"},"content":"        String trimmedPriority \u003d priority.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"yusiangeng"},"content":"        Optional\u003cPriorityEnum\u003e priorityEnum \u003d PriorityEnum.getFromString(trimmedPriority);","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"yusiangeng"},"content":"        if (priorityEnum.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"yusiangeng"},"content":"            throw new ParseException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"yusiangeng"},"content":"        return new Priority(priorityEnum.get());","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"yusiangeng"},"content":"     * Parses a {@code String taskCategory} into a {@code TaskCategory}.","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"yusiangeng"},"content":"     * @throws ParseException if the given {@code taskCategory} is invalid.","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"yusiangeng"},"content":"    public static TaskCategory parseTaskCategory(String taskCategory) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"yusiangeng"},"content":"        requireNonNull(taskCategory);","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"yusiangeng"},"content":"        String trimmedCategory \u003d taskCategory.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"yusiangeng"},"content":"        Optional\u003cTaskCategoryType\u003e categoryEnum \u003d TaskCategoryType.getFromString(trimmedCategory);","lastModifiedDate":"2022-10-11"},{"lineNumber":200,"author":{"gitId":"yusiangeng"},"content":"        if (categoryEnum.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":201,"author":{"gitId":"yusiangeng"},"content":"            throw new ParseException(TaskCategory.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":202,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":203,"author":{"gitId":"yusiangeng"},"content":"        return new TaskCategory(1, categoryEnum.get()); // TODO: remove hardcoded category level","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":205,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":207,"author":{"gitId":"yusiangeng"},"content":"     * Parses a {@code String taskDeadline} into a {@code TaskDeadline}.","lastModifiedDate":"2022-10-11"},{"lineNumber":208,"author":{"gitId":"yusiangeng"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-11"},{"lineNumber":209,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":210,"author":{"gitId":"yusiangeng"},"content":"     * @throws ParseException if the given {@code taskDeadline} is does not follow the format YYYY-MM-DD.","lastModifiedDate":"2022-10-11"},{"lineNumber":211,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":212,"author":{"gitId":"yusiangeng"},"content":"    public static TaskDeadline parseTaskDeadline(String taskDeadline) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":213,"author":{"gitId":"yusiangeng"},"content":"        requireNonNull(taskDeadline);","lastModifiedDate":"2022-10-11"},{"lineNumber":214,"author":{"gitId":"yusiangeng"},"content":"        String trimmedDeadline \u003d taskDeadline.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":215,"author":{"gitId":"yusiangeng"},"content":"        LocalDate localDate;","lastModifiedDate":"2022-10-11"},{"lineNumber":216,"author":{"gitId":"yusiangeng"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":217,"author":{"gitId":"yusiangeng"},"content":"            localDate \u003d LocalDate.parse(trimmedDeadline);","lastModifiedDate":"2022-10-11"},{"lineNumber":218,"author":{"gitId":"yusiangeng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"yusiangeng"},"content":"            throw new ParseException(\"Deadline must be of the form YYYY-MM-DD\");","lastModifiedDate":"2022-10-18"},{"lineNumber":220,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":221,"author":{"gitId":"yusiangeng"},"content":"        return new TaskDeadline(localDate);","lastModifiedDate":"2022-10-11"},{"lineNumber":222,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":223,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":224,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":225,"author":{"gitId":"yusiangeng"},"content":"     * Parses a {@code String taskDone} into a {@code Boolean} representing whether the task is completed.","lastModifiedDate":"2022-10-18"},{"lineNumber":226,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":227,"author":{"gitId":"yusiangeng"},"content":"     * @throws ParseException if the given {@code taskDeadline} is does not follow the format YYYY-MM-DD.","lastModifiedDate":"2022-10-18"},{"lineNumber":228,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":229,"author":{"gitId":"yusiangeng"},"content":"    public static Boolean parseTaskIsDone(String taskDone) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":230,"author":{"gitId":"yusiangeng"},"content":"        requireNonNull(taskDone);","lastModifiedDate":"2022-10-18"},{"lineNumber":231,"author":{"gitId":"yusiangeng"},"content":"        String trimmedDeadline \u003d taskDone.trim();","lastModifiedDate":"2022-10-18"},{"lineNumber":232,"author":{"gitId":"yusiangeng"},"content":"        String trimmedLowerCasedDeadline \u003d trimmedDeadline.toLowerCase();","lastModifiedDate":"2022-10-18"},{"lineNumber":233,"author":{"gitId":"yusiangeng"},"content":"        if (trimmedLowerCasedDeadline.equals(\"t\") || trimmedLowerCasedDeadline.equals(\"true\")) {","lastModifiedDate":"2022-10-18"},{"lineNumber":234,"author":{"gitId":"yusiangeng"},"content":"            return true;","lastModifiedDate":"2022-10-18"},{"lineNumber":235,"author":{"gitId":"yusiangeng"},"content":"        } else if (trimmedLowerCasedDeadline.equals(\"f\") || trimmedLowerCasedDeadline.equals(\"false\")) {","lastModifiedDate":"2022-10-18"},{"lineNumber":236,"author":{"gitId":"yusiangeng"},"content":"            return false;","lastModifiedDate":"2022-10-18"},{"lineNumber":237,"author":{"gitId":"yusiangeng"},"content":"        } else {","lastModifiedDate":"2022-10-18"},{"lineNumber":238,"author":{"gitId":"yusiangeng"},"content":"            throw new ParseException(\"Invalid DONE format\");","lastModifiedDate":"2022-10-18"},{"lineNumber":239,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":240,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yusiangeng":109,"ALWHgithub":9,"-":123}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskList;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":24,"author":{"gitId":"albertarielw"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"albertarielw"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"    public AddressBook() {","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"ALWHgithub"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"ALWHgithub"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"albertarielw"},"content":"    //// task-level operations","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"albertarielw"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"albertarielw"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"albertarielw"},"content":"        return tasks.contains(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"albertarielw"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"albertarielw"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"albertarielw"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"albertarielw"},"content":"        tasks.add(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"albertarielw"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"albertarielw"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"albertarielw"},"content":"     * The person identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"albertarielw"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"albertarielw"},"content":"        tasks.edit(target, editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"albertarielw"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"albertarielw"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"albertarielw"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"albertarielw"},"content":"        tasks.delete(key);","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":153,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"albertarielw"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"albertarielw"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"albertarielw"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"albertarielw"},"content":"                \u0026\u0026 tasks.equals(((AddressBook) other).tasks));","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"albertarielw":46,"ALWHgithub":13,"-":111}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"ALWHgithub"},"content":"     * Returns the AddressBook","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"ALWHgithub"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"albertarielw"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"albertarielw"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"albertarielw"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"albertarielw"},"content":"     * The task must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"albertarielw"},"content":"    void deleteTask(Task task);","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"albertarielw"},"content":"     * Adds the given task.","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"albertarielw"},"content":"     * {@code task} must not already exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"albertarielw"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"albertarielw"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"albertarielw"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"albertarielw"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"albertarielw"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"ALWHgithub"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"ALWHgithub"},"content":"     * Returns an unmodifiable view of the filtered task list","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"albertarielw"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"albertarielw"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"albertarielw"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"albertarielw"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"albertarielw":32,"ALWHgithub":18,"-":82}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"albertarielw"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"albertarielw"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.addressBook.getTaskList());","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"ALWHgithub"},"content":"        return userPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"ALWHgithub"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"ALWHgithub"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"ALWHgithub"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"ALWHgithub"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"ALWHgithub"},"content":"        return addressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"ALWHgithub"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"ALWHgithub"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"albertarielw"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"albertarielw"},"content":"        return addressBook.hasTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"albertarielw"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"albertarielw"},"content":"        addressBook.removeTask(target);","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"albertarielw"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"albertarielw"},"content":"        addressBook.addTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"ALWHgithub"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS); // check this","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"albertarielw"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"albertarielw"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"albertarielw"},"content":"        addressBook.setTask(target, editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":162,"author":{"gitId":"albertarielw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"albertarielw"},"content":"     * Returns an unmodifiable view of the list of {@code Tasks} backed by the internal list of","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"albertarielw"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"albertarielw"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"albertarielw"},"content":"        return filteredTasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"albertarielw"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"albertarielw"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"albertarielw"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"albertarielw"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":195,"author":{"gitId":"albertarielw"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"albertarielw"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"albertarielw":42,"ALWHgithub":17,"-":139}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"albertarielw"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"albertarielw"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"albertarielw"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"albertarielw":5,"ALWHgithub":2,"-":17}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"albertarielw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"albertarielw"},"content":"     * Returns the list of person (internalList) as an ArrayList","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"albertarielw"},"content":"    public ArrayList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"albertarielw"},"content":"        ArrayList\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e(internalList);","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"albertarielw"},"content":"        return personList;","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"albertarielw":9,"-":137}},{"path":"src/main/java/seedu/address/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":" * Represents the description of the task in the task list.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTaskDescription(String)}","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Kennethsim2000"},"content":"public class Description {","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"yusiangeng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Kennethsim2000"},"content":"            \"Task Descriptions can take any values, and it should not be blank\";","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Kennethsim2000"},"content":"    /*","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"albertarielw"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Kennethsim2000"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"    private static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"    private final String taskDescription;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Kennethsim2000"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Kennethsim2000"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Kennethsim2000"},"content":"    public Description(String name) {","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Kennethsim2000"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Kennethsim2000"},"content":"        checkArgument(isValidTaskDescription(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Kennethsim2000"},"content":"        taskDescription \u003d name;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns the description of task.","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Kennethsim2000"},"content":"     * @return The task description.","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Kennethsim2000"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Kennethsim2000"},"content":"        return taskDescription;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns true if task description is valid.","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Kennethsim2000"},"content":"     * @param test String to test.","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Whether the string is a valid task description.","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Kennethsim2000"},"content":"    public static boolean isValidTaskDescription(String test) {","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Kennethsim2000"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns the string representation of the task description.","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Task description.","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Kennethsim2000"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Kennethsim2000"},"content":"        return taskDescription;","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"Kennethsim2000"},"content":"     * Compares another object with the Description object.","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"Kennethsim2000"},"content":"     * @param other The other object to be compared to.","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"Kennethsim2000"},"content":"     * @return If the two objects are equal.","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Kennethsim2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"Kennethsim2000"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"Kennethsim2000"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"Kennethsim2000"},"content":"                \u0026\u0026 taskDescription.equals(((Description) other).taskDescription)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns hashcode of the current object","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Hashcode of the object.","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Kennethsim2000"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"Kennethsim2000"},"content":"        return taskDescription.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"Kennethsim2000"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"yusiangeng":1,"Kennethsim2000":84,"albertarielw":1}},{"path":"src/main/java/seedu/address/model/task/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":" * Represents the priority of the task in the task list.","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":" * Guarantees: immutable;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":"public class Priority {","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"yusiangeng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"yusiangeng"},"content":"            \"Priority must be one of the following: \" + PriorityEnum.getValidPriorities();","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Kennethsim2000"},"content":"    private final PriorityEnum priority;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"     * Constructor for priority class","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Kennethsim2000"},"content":"    public Priority(PriorityEnum priority) {","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"        requireNonNull(priority);","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Kennethsim2000"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns the string representation of the task priority.","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Task priority.","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Kennethsim2000"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Kennethsim2000"},"content":"        return priority.name();","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Kennethsim2000"},"content":"     * Compares another object with the Priority object.","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Kennethsim2000"},"content":"     * @param other The other object to be compared to.","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Kennethsim2000"},"content":"     * @return If the two objects are equal.","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Kennethsim2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Kennethsim2000"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Kennethsim2000"},"content":"                || (other instanceof Priority // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Kennethsim2000"},"content":"                \u0026\u0026 priority.equals(((Priority) other).priority)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns hashcode of the current object","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Hashcode of the object.","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Kennethsim2000"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Kennethsim2000"},"content":"        return priority.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns the priority of a task.","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Kennethsim2000"},"content":"     * @return The task priority.","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Kennethsim2000"},"content":"    public PriorityEnum getPriority() {","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Kennethsim2000"},"content":"        return priority;","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"albertarielw"},"content":"     * Returns true if priority name is valid.","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"albertarielw"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"albertarielw"},"content":"     * @param test String to test.","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"albertarielw"},"content":"     * @return Whether the String is a valid priority name.","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"albertarielw"},"content":"    public static boolean isValidTaskPriority(String test) {","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"albertarielw"},"content":"        return PriorityEnum.getFromString(test).isPresent();","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"Kennethsim2000"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"yusiangeng":3,"Kennethsim2000":58,"albertarielw":10,"ALWHgithub":3}},{"path":"src/main/java/seedu/address/model/task/PriorityEnum.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"yusiangeng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"yusiangeng"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":" * Represents the three levels of priority that a task in the task list can take.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":"public enum PriorityEnum {","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"yusiangeng"},"content":"    LOW(\"low\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"yusiangeng"},"content":"    MEDIUM(\"medium\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"yusiangeng"},"content":"    HIGH(\"high\");","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"yusiangeng"},"content":"    private final String name;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"yusiangeng"},"content":"    PriorityEnum(String name) {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"yusiangeng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"yusiangeng"},"content":"     * Returns String of valid task priorities as user input arguments","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"yusiangeng"},"content":"     * @return String of valid task priorities","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"yusiangeng"},"content":"    public static String getValidPriorities() {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"yusiangeng"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"yusiangeng"},"content":"        for (PriorityEnum p : PriorityEnum.values()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"yusiangeng"},"content":"            str.append(\" \").append(p.name);","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"yusiangeng"},"content":"        return str.toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"yusiangeng"},"content":"     * Looks up a {@code PriorityEnum} from a given string.","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"yusiangeng"},"content":"     * @param priorityName string to test","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"yusiangeng"},"content":"     * @return Empty if {@code priorityName} is not a valid priority, else the corresponding {@code PriorityEnum}","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"yusiangeng"},"content":"    public static Optional\u003cPriorityEnum\u003e getFromString(String priorityName) {","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"yusiangeng"},"content":"        return Arrays.stream(PriorityEnum.values())","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"yusiangeng"},"content":"                .filter(priority -\u003e priority.name.equals(priorityName))","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"yusiangeng"},"content":"                .findFirst();","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"Kennethsim2000"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"yusiangeng":37,"Kennethsim2000":7}},{"path":"src/main/java/seedu/address/model/task/SortByCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":" * Helper class implementing Comparator interface to sort a task list based on their respective categories.","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"public class SortByCategory implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"     * Compares two Tasks based on their Categories for order. Returns a negative integer, zero, or a positive integer","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"     * as the Category of the first Task is less than, equal to, or greater than the second.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"     * @param task1 the first Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"     * @param task2 the second Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"     * @return a negative integer, zero, or a positive integer as the Category of the first Task is less than,","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"     *         equal to, or greater than the second","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"        return task1.getCategory().getTaskCategoryType().compareTo(task2.getCategory().getTaskCategoryType());","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ALWHgithub":2,"paotheroo":19}},{"path":"src/main/java/seedu/address/model/task/SortByDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":" * Helper class implementing Comparator interface to sort a task list based on their respective deadlines.","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"public class SortByDeadline implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"     * Compares two Tasks based on their Deadlines for order. Returns a negative integer, zero, or a positive integer","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"     * as the Deadline of the first Task is less than, equal to, or greater than the second.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"     * @param task1 the first Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"     * @param task2 the second Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"     * @return a negative integer, zero, or a positive integer as the Deadline of the first Task is less than,","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"     *         equal to, or greater than the second","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"        return task1.getDeadline().getDeadline().compareTo(task2.getDeadline().getDeadline());","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ALWHgithub":2,"paotheroo":19}},{"path":"src/main/java/seedu/address/model/task/SortByPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":" * Helper class implementing Comparator interface to sort a task list based on the people they are assigned to.","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"public class SortByPerson implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"     * Compares two Tasks based on their assigned Person for order. Returns a negative integer, zero, or a positive","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"     * integer as the Person of the first Task is less than, equal to, or greater than the second.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"     * @param task1 the first Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"     * @param task2 the second Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"     * @return a negative integer, zero, or a positive integer as the Person of the first Task is less than,","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"     *         equal to, or greater than the second","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"albertarielw"},"content":"        if (task1.getPersonEmailAddress().equals(task2.getPersonEmailAddress())) {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"            return 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"albertarielw"},"content":"        return task1.getPersonEmailAddress().toString().compareTo(task2.getPersonEmailAddress().toString());","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"albertarielw":2,"ALWHgithub":2,"paotheroo":21}},{"path":"src/main/java/seedu/address/model/task/SortByPriority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":" * Helper class implementing Comparator interface to sort a task list based on their respective priorities.","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"public class SortByPriority implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"     * Compares two Tasks based on their Priorities for order. Returns a negative integer, zero, or a positive integer","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"     * as the Priority of the first Task is less than, equal to, or greater than the second.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"     * @param task1 the first Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"     * @param task2 the second Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"     * @return a negative integer, zero, or a positive integer as the Priority of the first Task is less than,","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"     *         equal to, or greater than the second","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"        return task1.getPriority().getPriority().compareTo(task2.getPriority().getPriority());","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ALWHgithub":2,"paotheroo":19}},{"path":"src/main/java/seedu/address/model/task/SortByStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":" * Helper class implementing Comparator interface to sort a task list based on their respective statuses.","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"public class SortByStatus implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"     * Compares two Tasks based on their statuses for order. Returns a negative integer, zero, or a positive integer","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"     * as the status of the first Task is less than, equal to, or greater than the second.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"     * @param task1 the first Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"     * @param task2 the second Task to be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"     * @return a negative integer, zero, or a positive integer as the status of the first Task is less than,","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"     *        equal to, or greater than the second","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"        if (!task1.isDone() \u0026\u0026 task2.isDone()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"            return -1;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"paotheroo"},"content":"        if (task1.isDone() \u0026\u0026 !task2.isDone()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"paotheroo"},"content":"            return 1;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"paotheroo"},"content":"        return 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ALWHgithub":2,"paotheroo":27}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"albertarielw"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":" * Represents a Task in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":" * Guarantees: details are present and not null, field values are validated.","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"paotheroo"},"content":"public class Task {","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"albertarielw"},"content":"    public static final String IS_DONE_MESSAGE_CONSTRAINT \u003d \"IsDone can only be true or false in String form\";","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"albertarielw"},"content":"    private static final String NO_PERSON_ASSIGNED \u003d \"NONE\";","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"albertarielw"},"content":"    private static final String IS_DONE_TRUE_STRING \u003d \"true\";","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"albertarielw"},"content":"    private static final String IS_DONE_FALSE_STRING \u003d \"false\";","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"    // Identity fields","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":"    private TaskName name;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"paotheroo"},"content":"    private TaskCategory category;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"paotheroo"},"content":"    private Description description;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"paotheroo"},"content":"    // Data fields","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"paotheroo"},"content":"    private Priority priority;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"paotheroo"},"content":"    private TaskDeadline deadline;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"albertarielw"},"content":"    private Email personEmailAddress;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"paotheroo"},"content":"    private boolean isDone;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"paotheroo"},"content":"     * Constructor method to instantiate a Task object. Every field must be present and not null.","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"paotheroo"},"content":"     * @param name     Name of task","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"paotheroo"},"content":"     * @param category Category of task","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"paotheroo"},"content":"     * @param desc     Description of task","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"paotheroo"},"content":"     * @param priority Priority of task","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"paotheroo"},"content":"     * @param deadline Deadline of task","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"albertarielw"},"content":"     * @param personEmailAddress Email address of person assigned to this task","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"paotheroo"},"content":"     * @param status   status of task","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"yusiangeng"},"content":"    public Task(TaskName name, Description desc, Priority priority, TaskCategory category,","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"albertarielw"},"content":"                TaskDeadline deadline, Email personEmailAddress, boolean status) {","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"yusiangeng"},"content":"        requireAllNonNull(name, category, desc, priority, deadline, status);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"paotheroo"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"paotheroo"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"paotheroo"},"content":"        description \u003d desc;","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"paotheroo"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"paotheroo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"albertarielw"},"content":"        this.personEmailAddress \u003d personEmailAddress;","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"paotheroo"},"content":"        isDone \u003d status;","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"paotheroo"},"content":"     * Setter method for Name field.","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"paotheroo"},"content":"     * @param newName new Name for this Task object","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"paotheroo"},"content":"    public void setName(TaskName newName) {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"paotheroo"},"content":"        name \u003d newName;","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"paotheroo"},"content":"     * Setter method for Description field.","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"paotheroo"},"content":"     * @param newDesc new Description for this Task object","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"paotheroo"},"content":"    public void setDescription(Description newDesc) {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"paotheroo"},"content":"        description \u003d newDesc;","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"paotheroo"},"content":"     * Setter method for Priority field.","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"paotheroo"},"content":"     * @param newPriority new Priority for this Task object","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"paotheroo"},"content":"    public void setPriority(Priority newPriority) {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"paotheroo"},"content":"        priority \u003d newPriority;","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"paotheroo"},"content":"     * Setter method for Category field.","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"paotheroo"},"content":"     * @param newCategory new Category for this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"paotheroo"},"content":"    public void setCategory(TaskCategory newCategory) {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"paotheroo"},"content":"        category \u003d newCategory;","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"paotheroo"},"content":"     * Setter method for Deadline field.","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"paotheroo"},"content":"     * @param newDeadline new Deadline for this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"paotheroo"},"content":"    public void setDeadline(TaskDeadline newDeadline) {","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"paotheroo"},"content":"        deadline \u003d newDeadline;","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"albertarielw"},"content":"     * Setter method for personEmailAddress field.","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"albertarielw"},"content":"     * @param personEmailAddress Email of the new person assigned to this Task","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"albertarielw"},"content":"    public void setPersonEmailAddress(Email personEmailAddress) {","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"albertarielw"},"content":"        this.personEmailAddress \u003d personEmailAddress;","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"paotheroo"},"content":"     * Setter method for whether this Task has been completed.","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"paotheroo"},"content":"     * @param isDone true if this Task is done, and false otherwise","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"paotheroo"},"content":"    public void isDone(boolean isDone) {","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"paotheroo"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"ALWHgithub"},"content":"     * Returns true if this Task is done, and false otherwise.","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"ALWHgithub"},"content":"     * @return true if this Task is done, and false otherwise","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"ALWHgithub"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"ALWHgithub"},"content":"        return isDone;","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"paotheroo"},"content":"     * Returns the Name of this Task.","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"paotheroo"},"content":"     * @return Name of this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"paotheroo"},"content":"    public TaskName getName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"paotheroo"},"content":"        return name;","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"paotheroo"},"content":"     * Returns the Description of this Task.","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"paotheroo"},"content":"     * @return Description of this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"paotheroo"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"paotheroo"},"content":"        return description;","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"paotheroo"},"content":"     * Returns the Priority of this Task.","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"paotheroo"},"content":"     * @return Priority of this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"paotheroo"},"content":"    public Priority getPriority() {","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"paotheroo"},"content":"        return priority;","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"paotheroo"},"content":"     * Returns the Category of this Task.","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"paotheroo"},"content":"     * @return Category of this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"paotheroo"},"content":"    public TaskCategory getCategory() {","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"paotheroo"},"content":"        return category;","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"paotheroo"},"content":"     * Returns the Deadline of this Task.","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"paotheroo"},"content":"     * @return Deadline of this Task","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"paotheroo"},"content":"    public TaskDeadline getDeadline() {","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"paotheroo"},"content":"        return deadline;","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"albertarielw"},"content":"     * Returns the Email Address of the person assigned to this Task.","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"albertarielw"},"content":"     * @return  assigned to this Task","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"albertarielw"},"content":"    public Email getPersonEmailAddress() {","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"albertarielw"},"content":"        return personEmailAddress;","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":182,"author":{"gitId":"albertarielw"},"content":"     * Returns the name of the person assigned to this task","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"albertarielw"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"albertarielw"},"content":"     * @param persons List of persons associated with the address book","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"albertarielw"},"content":"     * @return the name of the person assigned to this task","lastModifiedDate":"2022-10-16"},{"lineNumber":186,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"albertarielw"},"content":"    public String getPersonName(List\u003cPerson\u003e persons) {","lastModifiedDate":"2022-10-16"},{"lineNumber":188,"author":{"gitId":"albertarielw"},"content":"        String name \u003d NO_PERSON_ASSIGNED;","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"albertarielw"},"content":"        for (Person person: persons) {","lastModifiedDate":"2022-10-16"},{"lineNumber":190,"author":{"gitId":"albertarielw"},"content":"            if (person.getEmail().equals(personEmailAddress)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"albertarielw"},"content":"                name \u003d person.getName().toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"albertarielw"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":193,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"albertarielw"},"content":"        return name;","lastModifiedDate":"2022-10-16"},{"lineNumber":195,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":196,"author":{"gitId":"ALWHgithub"},"content":"    public boolean getStatus() {","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"ALWHgithub"},"content":"        return isDone;","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"paotheroo"},"content":"     * Returns true if both tasks have the same name.","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"paotheroo"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"paotheroo"},"content":"     * @param otherTask Task of comparison","lastModifiedDate":"2022-10-06"},{"lineNumber":205,"author":{"gitId":"paotheroo"},"content":"     * @return true if both tasks are the same, and false otherwise","lastModifiedDate":"2022-10-06"},{"lineNumber":206,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":207,"author":{"gitId":"paotheroo"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"paotheroo"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":209,"author":{"gitId":"paotheroo"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":210,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":211,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":212,"author":{"gitId":"paotheroo"},"content":"        return otherTask !\u003d null \u0026\u0026 otherTask.getName().equals(getName());","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":214,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":215,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":216,"author":{"gitId":"paotheroo"},"content":"     * Returns true if both tasks have the same fields.","lastModifiedDate":"2022-10-06"},{"lineNumber":217,"author":{"gitId":"paotheroo"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":218,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"paotheroo"},"content":"     * @param other Object of comparison","lastModifiedDate":"2022-10-06"},{"lineNumber":220,"author":{"gitId":"paotheroo"},"content":"     * @return true if both tasks have the same fields, and false otherwise","lastModifiedDate":"2022-10-06"},{"lineNumber":221,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":222,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":223,"author":{"gitId":"paotheroo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":224,"author":{"gitId":"paotheroo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":225,"author":{"gitId":"paotheroo"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":226,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":227,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":228,"author":{"gitId":"paotheroo"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":229,"author":{"gitId":"paotheroo"},"content":"            return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":230,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":231,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":232,"author":{"gitId":"paotheroo"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2022-10-06"},{"lineNumber":233,"author":{"gitId":"paotheroo"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2022-10-10"},{"lineNumber":234,"author":{"gitId":"paotheroo"},"content":"                \u0026\u0026 otherTask.getCategory().equals(getCategory())","lastModifiedDate":"2022-10-10"},{"lineNumber":235,"author":{"gitId":"paotheroo"},"content":"                \u0026\u0026 otherTask.getDeadline().equals(getDeadline())","lastModifiedDate":"2022-10-10"},{"lineNumber":236,"author":{"gitId":"paotheroo"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription())","lastModifiedDate":"2022-10-10"},{"lineNumber":237,"author":{"gitId":"albertarielw"},"content":"                \u0026\u0026 otherTask.getPersonEmailAddress().equals(getPersonEmailAddress())","lastModifiedDate":"2022-10-16"},{"lineNumber":238,"author":{"gitId":"paotheroo"},"content":"                \u0026\u0026 otherTask.getPriority().equals(getPriority())","lastModifiedDate":"2022-10-10"},{"lineNumber":239,"author":{"gitId":"ALWHgithub"},"content":"                \u0026\u0026 (otherTask.isDone() \u003d\u003d (this.isDone()));","lastModifiedDate":"2022-10-12"},{"lineNumber":240,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":241,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":242,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":243,"author":{"gitId":"paotheroo"},"content":"     * Method for custom fields hashing.","lastModifiedDate":"2022-10-06"},{"lineNumber":244,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":245,"author":{"gitId":"paotheroo"},"content":"     * @return a hash code value for the object","lastModifiedDate":"2022-10-06"},{"lineNumber":246,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":247,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":248,"author":{"gitId":"paotheroo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":249,"author":{"gitId":"albertarielw"},"content":"        return Objects.hash(name, description, priority, category, deadline, personEmailAddress, isDone);","lastModifiedDate":"2022-10-16"},{"lineNumber":250,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":251,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":252,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":253,"author":{"gitId":"paotheroo"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":254,"author":{"gitId":"paotheroo"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-06"},{"lineNumber":255,"author":{"gitId":"paotheroo"},"content":"        builder.append(getName())","lastModifiedDate":"2022-10-10"},{"lineNumber":256,"author":{"gitId":"paotheroo"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2022-10-10"},{"lineNumber":257,"author":{"gitId":"paotheroo"},"content":"                .append(getDescription())","lastModifiedDate":"2022-10-10"},{"lineNumber":258,"author":{"gitId":"paotheroo"},"content":"                .append(\"; Priority: \")","lastModifiedDate":"2022-10-10"},{"lineNumber":259,"author":{"gitId":"paotheroo"},"content":"                .append(getPriority())","lastModifiedDate":"2022-10-10"},{"lineNumber":260,"author":{"gitId":"paotheroo"},"content":"                .append(\"; Category: \")","lastModifiedDate":"2022-10-10"},{"lineNumber":261,"author":{"gitId":"paotheroo"},"content":"                .append(getCategory())","lastModifiedDate":"2022-10-10"},{"lineNumber":262,"author":{"gitId":"paotheroo"},"content":"                .append(\"; Deadline: \")","lastModifiedDate":"2022-10-10"},{"lineNumber":263,"author":{"gitId":"paotheroo"},"content":"                .append(getDeadline())","lastModifiedDate":"2022-10-10"},{"lineNumber":264,"author":{"gitId":"paotheroo"},"content":"                .append(\"; Assigned to: \")","lastModifiedDate":"2022-10-10"},{"lineNumber":265,"author":{"gitId":"albertarielw"},"content":"                .append(getPersonEmailAddress())","lastModifiedDate":"2022-10-16"},{"lineNumber":266,"author":{"gitId":"paotheroo"},"content":"                .append(\"; Status: \");","lastModifiedDate":"2022-10-10"},{"lineNumber":267,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":268,"author":{"gitId":"paotheroo"},"content":"        if (isDone) {","lastModifiedDate":"2022-10-10"},{"lineNumber":269,"author":{"gitId":"paotheroo"},"content":"            builder.append(\"Done\");","lastModifiedDate":"2022-10-10"},{"lineNumber":270,"author":{"gitId":"paotheroo"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":271,"author":{"gitId":"paotheroo"},"content":"            builder.append(\"Not done\");","lastModifiedDate":"2022-10-10"},{"lineNumber":272,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":273,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":274,"author":{"gitId":"paotheroo"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":275,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":276,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":277,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":278,"author":{"gitId":"yusiangeng"},"content":"     * Returns the String representation of isDone.","lastModifiedDate":"2022-10-18"},{"lineNumber":279,"author":{"gitId":"albertarielw"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":280,"author":{"gitId":"albertarielw"},"content":"     * @param isDone in Boolean form.","lastModifiedDate":"2022-10-18"},{"lineNumber":281,"author":{"gitId":"albertarielw"},"content":"     * @return isDone in String form.","lastModifiedDate":"2022-10-18"},{"lineNumber":282,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":283,"author":{"gitId":"yusiangeng"},"content":"    public static String convertIsDoneFromBooleanToString(boolean isDone) {","lastModifiedDate":"2022-10-18"},{"lineNumber":284,"author":{"gitId":"albertarielw"},"content":"        return isDone ? IS_DONE_TRUE_STRING : IS_DONE_FALSE_STRING;","lastModifiedDate":"2022-10-18"},{"lineNumber":285,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":286,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":287,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":288,"author":{"gitId":"yusiangeng"},"content":"     * Returns the Boolean representation of isDone.","lastModifiedDate":"2022-10-18"},{"lineNumber":289,"author":{"gitId":"albertarielw"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":290,"author":{"gitId":"albertarielw"},"content":"     * @param isDone in String form.","lastModifiedDate":"2022-10-18"},{"lineNumber":291,"author":{"gitId":"albertarielw"},"content":"     * @return isDone in Boolean form.","lastModifiedDate":"2022-10-18"},{"lineNumber":292,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":293,"author":{"gitId":"albertarielw"},"content":"    public static Boolean covertIsDoneFromStringToBoolean(String isDone) {","lastModifiedDate":"2022-10-18"},{"lineNumber":294,"author":{"gitId":"yusiangeng"},"content":"        return isDone.equals(IS_DONE_TRUE_STRING);","lastModifiedDate":"2022-10-18"},{"lineNumber":295,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":296,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":297,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":298,"author":{"gitId":"albertarielw"},"content":"     * Returns true if test String is a valid isDone.","lastModifiedDate":"2022-10-18"},{"lineNumber":299,"author":{"gitId":"albertarielw"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":300,"author":{"gitId":"albertarielw"},"content":"     * @param test String to test.","lastModifiedDate":"2022-10-18"},{"lineNumber":301,"author":{"gitId":"albertarielw"},"content":"     * @return Whether the String is a valid isDone value.","lastModifiedDate":"2022-10-18"},{"lineNumber":302,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":303,"author":{"gitId":"albertarielw"},"content":"    public static boolean isValidIsDone(String test) {","lastModifiedDate":"2022-10-18"},{"lineNumber":304,"author":{"gitId":"yusiangeng"},"content":"        return test.equals(IS_DONE_TRUE_STRING) || test.equals(IS_DONE_FALSE_STRING);","lastModifiedDate":"2022-10-18"},{"lineNumber":305,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":306,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"yusiangeng":25,"albertarielw":59,"ALWHgithub":13,"paotheroo":209}},{"path":"src/main/java/seedu/address/model/task/TaskCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.exceptions.LevelOutOfRangeException;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":" * Represents the category of a task.","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"public class TaskCategory {","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"albertarielw"},"content":"    public static final Integer TASK_CATEGORY_LEVEL_LOWER_BOUND \u003d 0;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"albertarielw"},"content":"    public static final Integer TASK_CATEGORY_LEVEL_UPPER_BOUND \u003d 5;","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"yusiangeng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"albertarielw"},"content":"            \"Category name must be one of the following: \" + TaskCategoryType.getValidTaskCategories()","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"yusiangeng"},"content":"            + \" and category level must be \u003e\u003d \" + TASK_CATEGORY_LEVEL_LOWER_BOUND","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"yusiangeng"},"content":"            + \" and \u003c\u003d \" + TASK_CATEGORY_LEVEL_UPPER_BOUND;","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"albertarielw"},"content":"    private final Integer level;","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"yusiangeng"},"content":"    private final TaskCategoryType taskCategoryType;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"     * Constructor for TaskCategory","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"albertarielw"},"content":"    public TaskCategory(Integer level, TaskCategoryType taskCategoryType) throws LevelOutOfRangeException {","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"albertarielw"},"content":"        if (level \u003c TASK_CATEGORY_LEVEL_LOWER_BOUND || level \u003e TASK_CATEGORY_LEVEL_UPPER_BOUND) {","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"            throw new LevelOutOfRangeException();","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"        requireNonNull(taskCategoryType);","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"        this.level \u003d level;","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"        this.taskCategoryType \u003d taskCategoryType;","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"ALWHgithub"},"content":"     * Returns the category of a task.","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"ALWHgithub"},"content":"     * @return The task category.","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"ALWHgithub"},"content":"    public TaskCategoryType getTaskCategoryType() {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"ALWHgithub"},"content":"        return this.taskCategoryType;","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"ALWHgithub"},"content":"     * Returns the level of a task.","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"ALWHgithub"},"content":"     * @return The task level.","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"ALWHgithub"},"content":"    public int getLevel() {","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"ALWHgithub"},"content":"        return this.level;","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"ALWHgithub"},"content":"     * Returns hashcode of the current object","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"ALWHgithub"},"content":"     * @return Hashcode of the object.","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"ALWHgithub"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"ALWHgithub"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"ALWHgithub"},"content":"        return taskCategoryType.hashCode();","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"ALWHgithub"},"content":"     * Returns the string representation of the task category.","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"ALWHgithub"},"content":"     * @return Task priority.","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"ALWHgithub"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"ALWHgithub"},"content":"    public String toString() {","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"yusiangeng"},"content":"        return taskCategoryType.name();","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"ALWHgithub"},"content":"     * Compares another object with the Category object.","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"ALWHgithub"},"content":"     * @param other The other object to be compared to.","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"ALWHgithub"},"content":"     * @return If the two objects are equal.","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"ALWHgithub"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"ALWHgithub"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"ALWHgithub"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"ALWHgithub"},"content":"                || (other instanceof TaskCategory // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"ALWHgithub"},"content":"                \u0026\u0026 ((TaskCategory) other).level \u003d\u003d this.level","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"ALWHgithub"},"content":"                \u0026\u0026 ((TaskCategory) other).taskCategoryType.equals(this.taskCategoryType));","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"albertarielw"},"content":"     * Returns true if task category level is valid.","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"albertarielw"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"albertarielw"},"content":"     * @param test int to test.","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"albertarielw"},"content":"     * @return Whether the int is a valid task category level.","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"albertarielw"},"content":"    public static boolean isValidTaskCategoryLevel(String test) {","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"albertarielw"},"content":"        Integer value \u003d Integer.parseInt(test);","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"albertarielw"},"content":"        return value \u003e\u003d TASK_CATEGORY_LEVEL_LOWER_BOUND \u0026\u0026 value \u003c\u003d TASK_CATEGORY_LEVEL_UPPER_BOUND;","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":96,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"albertarielw"},"content":"     * Returns true if task category name is valid.","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"albertarielw"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"albertarielw"},"content":"     * @param test String to test.","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"albertarielw"},"content":"     * @return Whether the String is a valid task category name.","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"albertarielw"},"content":"    public static boolean isValidTaskCategoryName(String test) {","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"albertarielw"},"content":"        return TaskCategoryType.getFromString(test).isPresent();","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":107,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"albertarielw"},"content":"     * Returns the String form of a taskCategoryType.","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"albertarielw"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"albertarielw"},"content":"     * @return The taskCategoryType in String form.","lastModifiedDate":"2022-10-18"},{"lineNumber":111,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":112,"author":{"gitId":"albertarielw"},"content":"    public String getCategoryName() {","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"albertarielw"},"content":"        return this.taskCategoryType.toString();","lastModifiedDate":"2022-10-18"},{"lineNumber":114,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":115,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":116,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"yusiangeng":5,"albertarielw":36,"ALWHgithub":75}},{"path":"src/main/java/seedu/address/model/task/TaskCategoryType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"yusiangeng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"yusiangeng"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"yusiangeng"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"yusiangeng"},"content":" * Enum for task category types.","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"yusiangeng"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"yusiangeng"},"content":"public enum TaskCategoryType {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"yusiangeng"},"content":"    DATABASE(\"database\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"yusiangeng"},"content":"    BACKEND(\"backend\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"yusiangeng"},"content":"    FRONTEND(\"frontend\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"yusiangeng"},"content":"    UIUX(\"uiux\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"yusiangeng"},"content":"    PRESENTATION(\"presentation\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"yusiangeng"},"content":"    OTHERS(\"others\");","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"yusiangeng"},"content":"    private final String name;","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"yusiangeng"},"content":"    TaskCategoryType(String name) {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"yusiangeng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"yusiangeng"},"content":"     * Returns String of valid task categories as user input arguments","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"yusiangeng"},"content":"     * @return String of valid task categories","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"yusiangeng"},"content":"    public static String getValidTaskCategories() {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"yusiangeng"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"yusiangeng"},"content":"        for (TaskCategoryType c : TaskCategoryType.values()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"yusiangeng"},"content":"            str.append(\" \").append(c.name);","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"yusiangeng"},"content":"        return str.toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"yusiangeng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"yusiangeng"},"content":"     * Looks up a {@code TaskCategoryType} from a given string.","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"yusiangeng"},"content":"     * @param categoryName string to test","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"yusiangeng"},"content":"     * @return Empty if {@code categoryName} is not a valid task category type,","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"yusiangeng"},"content":"     *     else the corresponding {@code TaskCategoryType}","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"yusiangeng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"yusiangeng"},"content":"    public static Optional\u003cTaskCategoryType\u003e getFromString(String categoryName) {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"yusiangeng"},"content":"        return Arrays.stream(TaskCategoryType.values())","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"yusiangeng"},"content":"                .filter(priority -\u003e priority.name.equals(categoryName))","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"yusiangeng"},"content":"                .findFirst();","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"yusiangeng":45,"ALWHgithub":5}},{"path":"src/main/java/seedu/address/model/task/TaskContainsCategoryPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":" * Tests that a {@code Task}\u0027s {@code CategoryType} matches any of the keywords given.","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":"public class TaskContainsCategoryPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":"    private final TaskCategory category;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"Kennethsim2000"},"content":"    public TaskContainsCategoryPredicate(TaskCategory category) {","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"Kennethsim2000"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"Kennethsim2000"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"Kennethsim2000"},"content":"        return task.getCategory().equals(category);","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Kennethsim2000"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Kennethsim2000"},"content":"                || (other instanceof TaskContainsCategoryPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Kennethsim2000"},"content":"                \u0026\u0026 category.equals(((TaskContainsCategoryPredicate) other).category)); // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Kennethsim2000"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"Kennethsim2000":27}},{"path":"src/main/java/seedu/address/model/task/TaskDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"albertarielw"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.exceptions.DatePastException;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":" * Represents the deadline of a task","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"public class TaskDeadline {","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"albertarielw"},"content":"            \"Date should be in YYYY-MM-DD format\";","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"     * constructor for deadline","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"     * @param date","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"    public TaskDeadline(LocalDate date) {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"        if (LocalDate.now().isAfter(date)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"            throw new DatePastException();","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"        this.deadline \u003d date;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"ALWHgithub"},"content":"     * Returns the deadline of a task.","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"     * @return The task category.","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"ALWHgithub"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"ALWHgithub"},"content":"        return this.deadline;","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"ALWHgithub"},"content":"     * Returns hashcode of the current object","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"ALWHgithub"},"content":"     * @return Hashcode of the object.","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"ALWHgithub"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"ALWHgithub"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"ALWHgithub"},"content":"        return this.deadline.hashCode();","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"ALWHgithub"},"content":"     * Returns the string representation of the task deadline.","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"     * @return Task priority.","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"ALWHgithub"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"ALWHgithub"},"content":"    public String toString() {","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"ALWHgithub"},"content":"        return this.deadline.toString();","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"ALWHgithub"},"content":"     * Compares another object with the Deadline object.","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"ALWHgithub"},"content":"     * @param other The other object to be compared to.","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"ALWHgithub"},"content":"     * @return If the two objects are equal.","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"ALWHgithub"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"ALWHgithub"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"ALWHgithub"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"ALWHgithub"},"content":"                || (other instanceof TaskDeadline // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"ALWHgithub"},"content":"                \u0026\u0026 ((TaskDeadline) other).deadline.equals(this.deadline));","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"paotheroo"},"content":"     * Checks if this {@code deadline} is before the {@code deadline} of another TaskDeadline.","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"paotheroo"},"content":"     * @param other the other TaskDeadline to compare {@code deadline} to","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"paotheroo"},"content":"     * @return true if this {@code deadline} is before the {@code deadline} of the other TaskDeadline","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"paotheroo"},"content":"    public boolean isBefore(TaskDeadline other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"paotheroo"},"content":"        return deadline.isBefore(other.getDeadline());","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"paotheroo"},"content":"     * Checks if this {@code deadline} is after the {@code deadline} of another TaskDeadline.","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"paotheroo"},"content":"     * @param other the other TaskDeadline to compare {@code deadline} to","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"paotheroo"},"content":"     * @return true if this {@code deadline} is after the {@code deadline} of the other TaskDeadline","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"paotheroo"},"content":"    public boolean isAfter(TaskDeadline other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"paotheroo"},"content":"        return deadline.isAfter(other.getDeadline());","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"albertarielw"},"content":"     * Returns true if deadline is valid.","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"albertarielw"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"albertarielw"},"content":"     * @param test String to test.","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"albertarielw"},"content":"     * @return Whether the String is a valid deadline.","lastModifiedDate":"2022-10-18"},{"lineNumber":96,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"albertarielw"},"content":"    public static boolean isValidTaskDeadline(String test) {","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"albertarielw"},"content":"        Boolean errorHappened \u003d false;","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"albertarielw"},"content":"        try {","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"albertarielw"},"content":"            LocalDate value \u003d LocalDate.parse(test);","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"albertarielw"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"albertarielw"},"content":"            errorHappened \u003d true;","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"albertarielw"},"content":"        return !errorHappened;","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"albertarielw":18,"ALWHgithub":70,"paotheroo":18}},{"path":"src/main/java/seedu/address/model/task/TaskDeadlineBeforeDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":" * Tests that a {@code Task}\u0027s {@code TaskDeadline} matches the date given.","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"public class TaskDeadlineBeforeDatePredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"    private final TaskDeadline date;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"    public TaskDeadlineBeforeDatePredicate(TaskDeadline date) {","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"paotheroo"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"paotheroo"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"        return date.isAfter(task.getDeadline()) || date.equals(task.getDeadline());","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"paotheroo"},"content":"                || (other instanceof TaskDeadlineBeforeDatePredicate // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"paotheroo"},"content":"                \u0026\u0026 date.equals(((TaskDeadlineBeforeDatePredicate) other).date)); // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"paotheroo":27}},{"path":"src/main/java/seedu/address/model/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"paotheroo"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"paotheroo"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of tasks","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"paotheroo"},"content":" * uses Task#isSameTask(Task) for equality to ensure that the task being added or updated is unique in terms of","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"paotheroo"},"content":" * identity in the TaskList. However, the removal of a task uses Task#equals(Object) to ensure that the task with","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"paotheroo"},"content":" * exactly the same fields will be removed.","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"paotheroo"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"paotheroo"},"content":" *","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"paotheroo"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"paotheroo"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"paotheroo"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"paotheroo"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"paotheroo"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"paotheroo"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"paotheroo"},"content":"     * @param toCheck Task to check against","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"paotheroo"},"content":"     * @return true if the list contains an equivalent task as the given argument","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"paotheroo"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"paotheroo"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"paotheroo"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"paotheroo"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"paotheroo"},"content":"     * @param toAdd Task to be added to the list","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"paotheroo"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"paotheroo"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"paotheroo"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"paotheroo"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"paotheroo"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"paotheroo"},"content":"     * The task must exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"paotheroo"},"content":"     * @param toDelete Task to be deleted from the list","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"paotheroo"},"content":"    public void delete(Task toDelete) {","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toDelete);","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"paotheroo"},"content":"        if (!internalList.remove(toDelete)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"paotheroo"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"paotheroo"},"content":"     * Replaces the task {@code toEdit} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"paotheroo"},"content":"     * {@code toEdit} must exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"paotheroo"},"content":"     * The task fields of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"paotheroo"},"content":"     * @param toEdit     Task to be replaced by the task {@code editedTask}","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"paotheroo"},"content":"     * @param editedTask Task to replace the task {@code toEdit}","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"paotheroo"},"content":"    public void edit(Task toEdit, Task editedTask) {","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"paotheroo"},"content":"        requireAllNonNull(toEdit, editedTask);","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"paotheroo"},"content":"        int index \u003d internalList.indexOf(toEdit);","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"paotheroo"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"paotheroo"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"yusiangeng"},"content":"        if (!toEdit.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"paotheroo"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"paotheroo"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"paotheroo"},"content":"     * Returns a Task from the list which corresponds with {@code toFind}.","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"paotheroo"},"content":"     * {@code toFind} must exist in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"paotheroo"},"content":"     * @param toFind the Task to find in the list","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"paotheroo"},"content":"     * @return a Task from the list which corresponds with {@code toFind}","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"paotheroo"},"content":"    public Task find(Task toFind) {","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toFind);","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"paotheroo"},"content":"        if (!contains(toFind)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"paotheroo"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"paotheroo"},"content":"        return internalList.get(internalList.indexOf(toFind));","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"paotheroo"},"content":"     * Sorts the task list based on priority.","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"paotheroo"},"content":"    public void sortByPriority() {","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"paotheroo"},"content":"        internalList.sorted(new SortByPriority());","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"paotheroo"},"content":"     * Sorts the task list based on category.","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"paotheroo"},"content":"    public void sortByCategory() {","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"paotheroo"},"content":"        internalList.sorted(new SortByCategory());","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"paotheroo"},"content":"     * Sorts the task list based on deadline.","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"paotheroo"},"content":"    public void sortByDeadline() {","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"paotheroo"},"content":"        internalList.sorted(new SortByDeadline());","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"paotheroo"},"content":"     * Sorts the task list based on the respective people that the tasks are assigned to.","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"paotheroo"},"content":"    public void sortByPerson() {","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"paotheroo"},"content":"        internalList.sorted(new SortByPerson());","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"paotheroo"},"content":"     * Sorts the task list based on status.","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"paotheroo"},"content":"    public void sortByStatus() {","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"paotheroo"},"content":"        internalList.sorted(new SortByStatus());","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"paotheroo"},"content":"     * Filters the task list based on the given Priority {@code toFilter}.","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"paotheroo"},"content":"     * @param toFilter Priority to filter the task list by","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"paotheroo"},"content":"    public void filter(Priority toFilter) {","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toFilter);","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"paotheroo"},"content":"        Predicate\u003cTask\u003e filterer \u003d i -\u003e (i.getPriority().equals(toFilter));","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"paotheroo"},"content":"        internalList.filtered(filterer);","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"paotheroo"},"content":"     * Filters the task list based on the given Category {@code toFilter}.","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"paotheroo"},"content":"     * @param toFilter Category to filter the task list by","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"paotheroo"},"content":"    public void filter(TaskCategory toFilter) {","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toFilter);","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"paotheroo"},"content":"        Predicate\u003cTask\u003e filterer \u003d i -\u003e (i.getCategory().equals(toFilter));","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"paotheroo"},"content":"        internalList.filtered(filterer);","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"paotheroo"},"content":"     * Filters the task list based on the given Deadline {@code toFilter}.","lastModifiedDate":"2022-10-09"},{"lineNumber":170,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"paotheroo"},"content":"     * @param toFilter Deadline to filter the task list by","lastModifiedDate":"2022-10-09"},{"lineNumber":172,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":173,"author":{"gitId":"paotheroo"},"content":"    public void filter(TaskDeadline toFilter) {","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toFilter);","lastModifiedDate":"2022-10-09"},{"lineNumber":175,"author":{"gitId":"paotheroo"},"content":"        Predicate\u003cTask\u003e filterer \u003d i -\u003e (i.getDeadline().equals(toFilter));","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"paotheroo"},"content":"        internalList.filtered(filterer);","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":179,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":180,"author":{"gitId":"paotheroo"},"content":"     * Filters the task list based on the given assigned Person {@code toFilter}.","lastModifiedDate":"2022-10-09"},{"lineNumber":181,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"paotheroo"},"content":"     * @param toFilter Person to filter the task list by","lastModifiedDate":"2022-10-09"},{"lineNumber":183,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":184,"author":{"gitId":"albertarielw"},"content":"    public void filter(Email toFilter) {","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(toFilter);","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"albertarielw"},"content":"        Predicate\u003cTask\u003e filterer \u003d i -\u003e (i.getPersonEmailAddress().equals(toFilter));","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"paotheroo"},"content":"        internalList.filtered(filterer);","lastModifiedDate":"2022-10-09"},{"lineNumber":188,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":189,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":191,"author":{"gitId":"paotheroo"},"content":"     * Filters the task list based on the given Status {@code toFilter}.","lastModifiedDate":"2022-10-09"},{"lineNumber":192,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"paotheroo"},"content":"     * @param toFilter Status to filter the task list by","lastModifiedDate":"2022-10-09"},{"lineNumber":194,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":195,"author":{"gitId":"paotheroo"},"content":"    public void filter(boolean toFilter) {","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"paotheroo"},"content":"        Predicate\u003cTask\u003e filterer \u003d i -\u003e (i.isDone() \u003d\u003d toFilter);","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"paotheroo"},"content":"        internalList.filtered(filterer);","lastModifiedDate":"2022-10-09"},{"lineNumber":199,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"paotheroo"},"content":"    public void setTasks(TaskList replacement) {","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"paotheroo"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"paotheroo"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-06"},{"lineNumber":204,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":205,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":206,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":207,"author":{"gitId":"paotheroo"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"paotheroo"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":209,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":210,"author":{"gitId":"paotheroo"},"content":"     * @param tasks new list of tasks to replace the current list of tasks","lastModifiedDate":"2022-10-06"},{"lineNumber":211,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":212,"author":{"gitId":"paotheroo"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-06"},{"lineNumber":213,"author":{"gitId":"paotheroo"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2022-10-06"},{"lineNumber":214,"author":{"gitId":"paotheroo"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":215,"author":{"gitId":"paotheroo"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-11"},{"lineNumber":216,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":217,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":218,"author":{"gitId":"paotheroo"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-10-06"},{"lineNumber":219,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":220,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":221,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":222,"author":{"gitId":"paotheroo"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-06"},{"lineNumber":223,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":224,"author":{"gitId":"paotheroo"},"content":"     * @return the backing list as an unmodifiable {@code ObservableList}","lastModifiedDate":"2022-10-06"},{"lineNumber":225,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":226,"author":{"gitId":"paotheroo"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":227,"author":{"gitId":"paotheroo"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":228,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":229,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":230,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":231,"author":{"gitId":"paotheroo"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-10-06"},{"lineNumber":232,"author":{"gitId":"paotheroo"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-06"},{"lineNumber":233,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":234,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":235,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":236,"author":{"gitId":"paotheroo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":237,"author":{"gitId":"paotheroo"},"content":"        return other \u003d\u003d this || (other instanceof TaskList \u0026\u0026 internalList.equals(((TaskList) other).internalList));","lastModifiedDate":"2022-10-06"},{"lineNumber":238,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":239,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":240,"author":{"gitId":"paotheroo"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":241,"author":{"gitId":"paotheroo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":242,"author":{"gitId":"paotheroo"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":243,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":244,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":245,"author":{"gitId":"paotheroo"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":246,"author":{"gitId":"paotheroo"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":247,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":248,"author":{"gitId":"paotheroo"},"content":"     * @param tasks List of tasks to check","lastModifiedDate":"2022-10-06"},{"lineNumber":249,"author":{"gitId":"paotheroo"},"content":"     * @return true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":250,"author":{"gitId":"paotheroo"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":251,"author":{"gitId":"paotheroo"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-06"},{"lineNumber":252,"author":{"gitId":"paotheroo"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":253,"author":{"gitId":"paotheroo"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":254,"author":{"gitId":"paotheroo"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2022-10-06"},{"lineNumber":255,"author":{"gitId":"paotheroo"},"content":"                    return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":256,"author":{"gitId":"paotheroo"},"content":"                }","lastModifiedDate":"2022-10-06"},{"lineNumber":257,"author":{"gitId":"paotheroo"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":258,"author":{"gitId":"paotheroo"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":259,"author":{"gitId":"paotheroo"},"content":"        return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":260,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":261,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":262,"author":{"gitId":"yusiangeng"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":263,"author":{"gitId":"yusiangeng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-11"},{"lineNumber":264,"author":{"gitId":"yusiangeng"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-10-11"},{"lineNumber":265,"author":{"gitId":"yusiangeng"},"content":"        for (Task t : internalList) {","lastModifiedDate":"2022-10-11"},{"lineNumber":266,"author":{"gitId":"yusiangeng"},"content":"            str.append(\"\\n\").append(t);","lastModifiedDate":"2022-10-18"},{"lineNumber":267,"author":{"gitId":"yusiangeng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":268,"author":{"gitId":"yusiangeng"},"content":"        return str.toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":269,"author":{"gitId":"yusiangeng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":270,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"yusiangeng":23,"albertarielw":3,"ALWHgithub":7,"paotheroo":237}},{"path":"src/main/java/seedu/address/model/task/TaskName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":" * Represents the name of the task in the task list.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTaskName(String)}","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"public class TaskName {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"yusiangeng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Kennethsim2000"},"content":"            \"Task names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Kennethsim2000"},"content":"    /*","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"Kennethsim2000"},"content":"     * The first character of the taskname must not be a whitespace,","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Kennethsim2000"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"    private static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"    private final String taskName;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Kennethsim2000"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Kennethsim2000"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"paotheroo"},"content":"    public TaskName(String name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Kennethsim2000"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Kennethsim2000"},"content":"        checkArgument(isValidTaskName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Kennethsim2000"},"content":"        taskName \u003d name;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns true if task name is valid.","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Kennethsim2000"},"content":"     * @param test String to test.","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Whether the string is a valid task name.","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Kennethsim2000"},"content":"    public static boolean isValidTaskName(String test) {","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Kennethsim2000"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns the string representation of the task description.","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Task name.","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Kennethsim2000"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Kennethsim2000"},"content":"        return taskName;","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Kennethsim2000"},"content":"     * Compares another object with the Name object.","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"Kennethsim2000"},"content":"     * @param other The other object to be compared to.","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Kennethsim2000"},"content":"     * @return If the two objects are equal.","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Kennethsim2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Kennethsim2000"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"paotheroo"},"content":"                || (other instanceof TaskName // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"paotheroo"},"content":"                \u0026\u0026 taskName.equals(((TaskName) other).taskName)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns the name of a task.","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Kennethsim2000"},"content":"     * @return The task description.","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"Kennethsim2000"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"Kennethsim2000"},"content":"        return taskName;","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Kennethsim2000"},"content":"     * Returns hashcode of the current object","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Kennethsim2000"},"content":"     * @return Hashcode of the object.","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Kennethsim2000"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"Kennethsim2000"},"content":"        return taskName.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"Kennethsim2000"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"yusiangeng":1,"Kennethsim2000":81,"paotheroo":4}},{"path":"src/main/java/seedu/address/model/task/TaskNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"public class TaskNameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"    public TaskNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getName().toString(), keyword));","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"                || (other instanceof TaskNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"                \u0026\u0026 keywords.equals(((TaskNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ALWHgithub":31}},{"path":"src/main/java/seedu/address/model/task/exceptions/DatePastException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":" * Represents an error when the date of a deadline is already past","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"public class DatePastException extends RuntimeException {","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"    public DatePastException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":"        super(\"Deadline must be a date in the future\");","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"Kennethsim2000":1,"ALWHgithub":10}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":" * fields).","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"paotheroo"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"paotheroo"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"paotheroo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"paotheroo":11}},{"path":"src/main/java/seedu/address/model/task/exceptions/LevelOutOfRangeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":" * Represents an exception when the level of a task is beyond the range of 1 to 5","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"public class LevelOutOfRangeException extends RuntimeException {","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"    public LevelOutOfRangeException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"        super(\"Level out of acceptable range\");","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ALWHgithub":10}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paotheroo"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"paotheroo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"paotheroo"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"paotheroo"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"paotheroo"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"paotheroo"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"paotheroo"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"paotheroo":7}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertarielw"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"albertarielw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"albertarielw"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"albertarielw"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"albertarielw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.PriorityEnum;","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.TaskCategory;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.TaskCategoryType;","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.TaskDeadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"albertarielw"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"albertarielw"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"albertarielw"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"albertarielw"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"albertarielw"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"albertarielw"},"content":"    private final String name;","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"albertarielw"},"content":"    private final String categoryLevel;","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"albertarielw"},"content":"    private final String categoryName;","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"albertarielw"},"content":"    private final String description;","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"albertarielw"},"content":"    private final String priority;","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"albertarielw"},"content":"    private final String deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"albertarielw"},"content":"    private final String email;","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"albertarielw"},"content":"    private final String isDone;","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"albertarielw"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"albertarielw"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"albertarielw"},"content":"    public JsonAdaptedTask(@JsonProperty(\"name\") String name,","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"albertarielw"},"content":"                             @JsonProperty(\"categoryLevel\") String categoryLevel,","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"albertarielw"},"content":"                             @JsonProperty(\"categoryName\") String categoryName,","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"albertarielw"},"content":"                             @JsonProperty(\"description\") String description,","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"albertarielw"},"content":"                             @JsonProperty(\"priority\") String priority,","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"albertarielw"},"content":"                             @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"albertarielw"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"albertarielw"},"content":"                             @JsonProperty(\"isDone\") String isDone) {","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"albertarielw"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"albertarielw"},"content":"        this.categoryLevel \u003d categoryLevel;","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"albertarielw"},"content":"        this.categoryName \u003d categoryName;","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"albertarielw"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"albertarielw"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"albertarielw"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"albertarielw"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"albertarielw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"albertarielw"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"albertarielw"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"albertarielw"},"content":"        name \u003d source.getName().getTaskName();","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"albertarielw"},"content":"        categoryLevel \u003d String.valueOf(source.getCategory().getLevel());","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"albertarielw"},"content":"        categoryName \u003d source.getCategory().getCategoryName();","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"albertarielw"},"content":"        description \u003d source.getDescription().toString();","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"albertarielw"},"content":"        priority \u003d source.getPriority().toString();","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"albertarielw"},"content":"        deadline \u003d source.getDeadline().toString();","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"albertarielw"},"content":"        email \u003d source.getPersonEmailAddress().toString();","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"yusiangeng"},"content":"        isDone \u003d Task.convertIsDoneFromBooleanToString(source.isDone());","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"albertarielw"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"albertarielw"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"albertarielw"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"albertarielw"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"albertarielw"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"albertarielw"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"albertarielw"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"albertarielw"},"content":"                    TaskName.class.getSimpleName()));","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"albertarielw"},"content":"        if (!TaskName.isValidTaskName(name)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"albertarielw"},"content":"        final TaskName modelName \u003d new TaskName(name);","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"albertarielw"},"content":"        if (categoryLevel \u003d\u003d null) {","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"albertarielw"},"content":"                    TaskCategory.class.getSimpleName()));","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"albertarielw"},"content":"        if (!TaskCategory.isValidTaskCategoryLevel(categoryLevel)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(TaskCategory.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"albertarielw"},"content":"        if (categoryName \u003d\u003d null) {","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"albertarielw"},"content":"                    TaskCategory.class.getSimpleName()));","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":96,"author":{"gitId":"albertarielw"},"content":"        if (!TaskCategory.isValidTaskCategoryName(categoryName)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(TaskCategory.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"albertarielw"},"content":"        final TaskCategory modelCategory \u003d new TaskCategory(Integer.parseInt(categoryLevel),","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"albertarielw"},"content":"                TaskCategoryType.getFromString(categoryName).get());","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"albertarielw"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"albertarielw"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"albertarielw"},"content":"        if (!Description.isValidTaskDescription(description)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":107,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"albertarielw"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":111,"author":{"gitId":"albertarielw"},"content":"        if (priority \u003d\u003d null) {","lastModifiedDate":"2022-10-18"},{"lineNumber":112,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"albertarielw"},"content":"                    Priority.class.getSimpleName()));","lastModifiedDate":"2022-10-18"},{"lineNumber":114,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":115,"author":{"gitId":"albertarielw"},"content":"        if (!Priority.isValidTaskPriority(priority)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":116,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":118,"author":{"gitId":"albertarielw"},"content":"        final Priority modelPriority \u003d new Priority(PriorityEnum.getFromString(priority).get());","lastModifiedDate":"2022-10-18"},{"lineNumber":119,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":120,"author":{"gitId":"albertarielw"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2022-10-18"},{"lineNumber":121,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":122,"author":{"gitId":"albertarielw"},"content":"                    TaskDeadline.class.getSimpleName()));","lastModifiedDate":"2022-10-18"},{"lineNumber":123,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":124,"author":{"gitId":"albertarielw"},"content":"        if (!TaskDeadline.isValidTaskDeadline(deadline)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":125,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(TaskDeadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":126,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":127,"author":{"gitId":"albertarielw"},"content":"        final TaskDeadline modelDeadline \u003d new TaskDeadline(LocalDate.parse(deadline));","lastModifiedDate":"2022-10-18"},{"lineNumber":128,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":129,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":130,"author":{"gitId":"albertarielw"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-10-18"},{"lineNumber":131,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-10-18"},{"lineNumber":132,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":133,"author":{"gitId":"albertarielw"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":134,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":135,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":136,"author":{"gitId":"albertarielw"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2022-10-18"},{"lineNumber":137,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"albertarielw"},"content":"        if (isDone \u003d\u003d null) {","lastModifiedDate":"2022-10-18"},{"lineNumber":139,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"albertarielw"},"content":"                    Boolean.class.getSimpleName()));","lastModifiedDate":"2022-10-18"},{"lineNumber":141,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":142,"author":{"gitId":"albertarielw"},"content":"        if (!Task.isValidIsDone(isDone)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":143,"author":{"gitId":"albertarielw"},"content":"            throw new IllegalValueException(Task.IS_DONE_MESSAGE_CONSTRAINT);","lastModifiedDate":"2022-10-18"},{"lineNumber":144,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":145,"author":{"gitId":"albertarielw"},"content":"        final Boolean modelIsDone \u003d Task.covertIsDoneFromStringToBoolean(isDone);","lastModifiedDate":"2022-10-18"},{"lineNumber":146,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":147,"author":{"gitId":"albertarielw"},"content":"        return new Task(modelName, modelDescription, modelPriority, modelCategory,","lastModifiedDate":"2022-10-18"},{"lineNumber":148,"author":{"gitId":"albertarielw"},"content":"                modelDeadline, modelEmail, modelIsDone);","lastModifiedDate":"2022-10-18"},{"lineNumber":149,"author":{"gitId":"albertarielw"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":150,"author":{"gitId":"albertarielw"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"yusiangeng":1,"albertarielw":149}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"albertarielw"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"albertarielw"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"albertarielw"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"albertarielw"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and tasks.","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"albertarielw"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"albertarielw"},"content":"                                       @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"albertarielw"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"albertarielw"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"albertarielw"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"albertarielw"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"albertarielw"},"content":"            if (addressBook.hasTask(task)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"albertarielw"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"albertarielw"},"content":"            }","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"albertarielw"},"content":"            addressBook.addTask(task);","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"albertarielw":16,"-":58}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"import seedu.address.model.task.exceptions.DatePastException;","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"Kennethsim2000"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"Kennethsim2000"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"yusiangeng"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Kennethsim2000"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Kennethsim2000"},"content":"    private TabPane tabPane;","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Kennethsim2000"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Kennethsim2000"},"content":"    private Tab tab1;","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Kennethsim2000"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Kennethsim2000"},"content":"    private Tab tab2;","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"Kennethsim2000"},"content":"        // Prevent tab from closing","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"Kennethsim2000"},"content":"        tabPane.setTabClosingPolicy(TabPane.TabClosingPolicy.UNAVAILABLE);","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"Kennethsim2000"},"content":"    //    private void setAccelerators() {","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"Kennethsim2000"},"content":"    //        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"Kennethsim2000"},"content":"    //    }","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"yusiangeng"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"yusiangeng"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"yusiangeng"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"Kennethsim2000"},"content":"        } catch (CommandException | ParseException | DatePastException e) {","lastModifiedDate":"2022-10-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yusiangeng":4,"Kennethsim2000":22,"-":191}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"yusiangeng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Kennethsim2000"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Kennethsim2000"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Kennethsim2000"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Kennethsim2000"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Kennethsim2000"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Kennethsim2000"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Kennethsim2000"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Kennethsim2000"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"yusiangeng"},"content":"    public final Task task;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Kennethsim2000"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Kennethsim2000"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Kennethsim2000"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"yusiangeng"},"content":"    private Label taskName;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Kennethsim2000"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Kennethsim2000"},"content":"    private Label id;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Kennethsim2000"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"yusiangeng"},"content":"    private Label description;","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Kennethsim2000"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"yusiangeng"},"content":"    private Label priority;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Kennethsim2000"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"yusiangeng"},"content":"    private Label category;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Kennethsim2000"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"yusiangeng"},"content":"    private Label deadline;","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Kennethsim2000"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"Kennethsim2000"},"content":"    private Label email;","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"Kennethsim2000"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"Kennethsim2000"},"content":"    private Label status;","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Kennethsim2000"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"yusiangeng"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Kennethsim2000"},"content":"        super(FXML);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"yusiangeng"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Kennethsim2000"},"content":"        id.setText(displayedIndex + \".\");","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Kennethsim2000"},"content":"        taskName.setText(\"Name: \" + task.getName().toString());","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"Kennethsim2000"},"content":"        description.setText(\"Description: \" + task.getDescription().toString());","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"yusiangeng"},"content":"        priority.setText(\"Priority: \" + task.getPriority().toString());","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Kennethsim2000"},"content":"        category.setText(\"Category: \" + task.getCategory().toString());","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"Kennethsim2000"},"content":"        deadline.setText(\"Deadline: \" + task.getDeadline().toString());","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"Kennethsim2000"},"content":"        email.setText(\"Email: \" + task.getPersonEmailAddress().toString());","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"Kennethsim2000"},"content":"        status.setText(\"Status: \" + booleanConvertor(task.getStatus()));","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Kennethsim2000"},"content":"    public String booleanConvertor(boolean isDone) {","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"Kennethsim2000"},"content":"        return isDone ? \"Completed\" : \"Not Completed\";","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"Kennethsim2000"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Kennethsim2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Kennethsim2000"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Kennethsim2000"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"Kennethsim2000"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Kennethsim2000"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"Kennethsim2000"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"Kennethsim2000"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Kennethsim2000"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"Kennethsim2000"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"Kennethsim2000"},"content":"        // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"Kennethsim2000"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Kennethsim2000"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"yusiangeng"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"Kennethsim2000"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"yusiangeng":11,"Kennethsim2000":73}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Kennethsim2000"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"yusiangeng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Kennethsim2000"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Kennethsim2000"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Kennethsim2000"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Kennethsim2000"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Kennethsim2000"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"yusiangeng"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Kennethsim2000"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"yusiangeng"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e personList) {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Kennethsim2000"},"content":"        super(FXML);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"yusiangeng"},"content":"        taskListView.setItems(personList);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"yusiangeng"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Kennethsim2000"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Kennethsim2000"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Kennethsim2000"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"yusiangeng"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Kennethsim2000"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"yusiangeng"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"yusiangeng"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"yusiangeng"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Kennethsim2000"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Kennethsim2000"},"content":"                setText(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Kennethsim2000"},"content":"            } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"yusiangeng"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Kennethsim2000"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Kennethsim2000"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Kennethsim2000"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Kennethsim2000"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"yusiangeng":10,"Kennethsim2000":40}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"Kennethsim2000"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Kennethsim2000"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"yusiangeng"},"content":"\u003c!--                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e--\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"yusiangeng"},"content":"\u003c!--                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e--\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"yusiangeng"},"content":"\u003c!--                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e--\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"yusiangeng"},"content":"\u003c!--                    \u003c/Menu\u003e--\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"yusiangeng"},"content":"\u003c!--                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e--\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"yusiangeng"},"content":"\u003c!--                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e--\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"yusiangeng"},"content":"\u003c!--                    \u003c/Menu\u003e--\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"yusiangeng"},"content":"\u003c!--                \u003c/MenuBar\u003e--\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"yusiangeng"},"content":"                \u003cTabPane fx:id\u003d\"tabPane\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"yusiangeng"},"content":"                    \u003ctabs\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"yusiangeng"},"content":"                        \u003cTab text\u003d\"Contacts\" fx:id\u003d\"tab1\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                                \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"yusiangeng"},"content":"                        \u003c/Tab\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"yusiangeng"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"yusiangeng"},"content":"                        \u003cTab text\u003d\"Tasks\" fx:id\u003d\"tab2\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"yusiangeng"},"content":"                            \u003cVBox fx:id\u003d\"taskList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"yusiangeng"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"yusiangeng"},"content":"                                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"yusiangeng"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"yusiangeng"},"content":"                                \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"yusiangeng"},"content":"                            \u003c/VBox\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"yusiangeng"},"content":"                        \u003c/Tab\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"yusiangeng"},"content":"                    \u003c/tabs\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"yusiangeng"},"content":"                \u003c/TabPane\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yusiangeng":23,"Kennethsim2000":2,"-":52}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Kennethsim2000"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Kennethsim2000"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Kennethsim2000"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Kennethsim2000"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Kennethsim2000"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Kennethsim2000"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Kennethsim2000"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Kennethsim2000"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Kennethsim2000"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Kennethsim2000"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Kennethsim2000"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Kennethsim2000"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Kennethsim2000"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Kennethsim2000"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Kennethsim2000"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Kennethsim2000"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Kennethsim2000"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Kennethsim2000"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"yusiangeng"},"content":"                \u003cLabel fx:id\u003d\"taskName\" text\u003d\"\\$name\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Kennethsim2000"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"yusiangeng"},"content":"            \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"yusiangeng"},"content":"            \u003cLabel fx:id\u003d\"priority\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$priority\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"yusiangeng"},"content":"            \u003cLabel fx:id\u003d\"category\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$category\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"yusiangeng"},"content":"            \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Kennethsim2000"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"Kennethsim2000"},"content":"            \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"Kennethsim2000"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Kennethsim2000"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Kennethsim2000"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"yusiangeng":5,"Kennethsim2000":33}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kennethsim2000"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Kennethsim2000"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Kennethsim2000"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Kennethsim2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Kennethsim2000"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"yusiangeng"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Kennethsim2000"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"yusiangeng":1,"Kennethsim2000":7}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"ALWHgithub"},"content":"        assertEquals(Collections.singletonList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"ALWHgithub"},"content":"        assertEquals(addAliceCommand, addAliceCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"ALWHgithub"},"content":"        assertEquals(addAliceCommand, addAliceCommandCopy);","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"ALWHgithub"},"content":"        assertNotEquals(1, addAliceCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"ALWHgithub"},"content":"        assertNotEquals(null, addAliceCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"ALWHgithub"},"content":"        assertNotEquals(addAliceCommand, addBobCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"ALWHgithub"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"ALWHgithub"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"ALWHgithub"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"ALWHgithub"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"albertarielw"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"albertarielw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"albertarielw"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"albertarielw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"albertarielw"},"content":"        public void deleteTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"albertarielw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"albertarielw"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"albertarielw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"albertarielw"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"albertarielw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"albertarielw"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"albertarielw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"albertarielw":30,"ALWHgithub":17,"-":181}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.PriorityEnum;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskCategory;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskCategoryType;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskDeadline;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskList;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ALWHgithub"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ALWHgithub"},"content":"    private final TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"ALWHgithub"},"content":"    private final TaskName testName \u003d new TaskName(\"Test\");","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"ALWHgithub"},"content":"    private final TaskCategory testCat \u003d new TaskCategory(3, TaskCategoryType.OTHERS);","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"ALWHgithub"},"content":"    private final Description testDisc \u003d new Description(\"Test\");","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"ALWHgithub"},"content":"    private final Priority testPriority \u003d new Priority(PriorityEnum.MEDIUM);","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"ALWHgithub"},"content":"    private final TaskDeadline testDeadline \u003d new TaskDeadline(LocalDate.now());","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"ALWHgithub"},"content":"    private final Person testPerson \u003d new Person(new Name(\"test\"), new Phone(\"99999999\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"ALWHgithub"},"content":"            new Email(\"test@gmail.com\"), new Address(\"test\"), new HashSet());","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"ALWHgithub"},"content":"    private final Task testTask \u003d new Task(testName, testDisc, testPriority, testCat,","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"ALWHgithub"},"content":"            testDeadline, testPerson.getEmail(), true);","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"ALWHgithub"},"content":"    private final Email test \u003d new Email(\"test@gmail.com\");","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null, test));","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ALWHgithub"},"content":"    public void execute_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(testTask, test).execute(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ALWHgithub"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"ALWHgithub"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(testTask, test);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"ALWHgithub"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(testTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(CommandException.class, AddTaskCommand","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"ALWHgithub"},"content":"                .MESSAGE_DUPLICATE_TASK, () -\u003e addTaskCommand.execute(modelStub));","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ALWHgithub"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"ALWHgithub"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"ALWHgithub"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"ALWHgithub"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"ALWHgithub"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"ALWHgithub"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"ALWHgithub"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"ALWHgithub"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"ALWHgithub"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"ALWHgithub"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"ALWHgithub"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"ALWHgithub"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"ALWHgithub"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"ALWHgithub"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"ALWHgithub"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"ALWHgithub"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"ALWHgithub"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"ALWHgithub"},"content":"        public void deleteTask(Task task) {","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"ALWHgithub"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"ALWHgithub"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"ALWHgithub"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"ALWHgithub"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"ALWHgithub"},"content":"    private class ModelStubWithTask extends AddTaskCommandTest.ModelStub {","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"ALWHgithub"},"content":"        private final Task task;","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"ALWHgithub"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"ALWHgithub"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"ALWHgithub"},"content":"            this.task \u003d task;","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"ALWHgithub"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"ALWHgithub"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"ALWHgithub"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"ALWHgithub"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ALWHgithub":188}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.PriorityEnum;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskCategory;","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskCategoryType;","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskDeadline;","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"ALWHgithub"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_ONE;","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"ALWHgithub"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_TWO;","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"ALWHgithub"},"content":"    private static final TaskCategory testCat \u003d new TaskCategory(3, TaskCategoryType.OTHERS);","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"ALWHgithub"},"content":"    private static final Description testDisc \u003d new Description(\"Test\");","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"ALWHgithub"},"content":"    private static final Priority testPriority \u003d new Priority(PriorityEnum.MEDIUM);","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"ALWHgithub"},"content":"    private static final TaskDeadline testDeadline \u003d new TaskDeadline(LocalDate.now());","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"ALWHgithub"},"content":"    private static final Person testPerson \u003d new Person(new Name(\"test\"), new Phone(\"99999999\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"ALWHgithub"},"content":"            new Email(\"test@gmail.com\"), new Address(\"test\"), new HashSet());","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"ALWHgithub"},"content":"        Task a \u003d new Task(new TaskName(\"A\"), testDisc, testPriority, testCat, testDeadline,","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"ALWHgithub"},"content":"                testPerson.getEmail(), false);","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"ALWHgithub"},"content":"        DESC_ONE \u003d new EditTaskDescriptorBuilder(a).withName(\"A\").build();","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"ALWHgithub"},"content":"        DESC_TWO \u003d new EditTaskDescriptorBuilder(a).withName(\"B\").build();","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"ALWHgithub"},"content":"            System.out.println(expectedModel.getFilteredTaskList().toString()","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"ALWHgithub"},"content":"                    .equals(actualModel.getFilteredTaskList().toString()));","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"ALWHgithub"},"content":"            System.out.println(expectedModel.getFilteredTaskList().toString());","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"ALWHgithub"},"content":"            System.out.println(actualModel.getFilteredTaskList().toString());","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"ALWHgithub"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Collections.singletonList(splitName[0])));","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"ALWHgithub"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"ALWHgithub"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":174,"author":{"gitId":"ALWHgithub"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"ALWHgithub"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"ALWHgithub"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"ALWHgithub"},"content":"        final String[] name \u003d new String[]{task.getName().toString()};","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"ALWHgithub"},"content":"        model.updateFilteredTaskList(new TaskNameContainsKeywordsPredicate(Arrays.asList(name)));","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"ALWHgithub"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ALWHgithub":56,"-":127}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"ALWHgithub"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"ALWHgithub"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"ALWHgithub"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ALWHgithub"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"ALWHgithub"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"ALWHgithub"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"ALWHgithub"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ALWHgithub"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"ALWHgithub"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"ALWHgithub"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"ALWHgithub"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"ALWHgithub"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ALWHgithub"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"ALWHgithub"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"ALWHgithub"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"ALWHgithub"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"ALWHgithub"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"ALWHgithub"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"ALWHgithub"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"ALWHgithub"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ALWHgithub"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"ALWHgithub"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"ALWHgithub"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"ALWHgithub"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"ALWHgithub"},"content":"        DeleteTaskCommand deleteFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"ALWHgithub"},"content":"        DeleteTaskCommand deleteSecondCommand \u003d new DeleteTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"ALWHgithub"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"ALWHgithub"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"ALWHgithub"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"ALWHgithub"},"content":"        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"ALWHgithub"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"ALWHgithub"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"ALWHgithub"},"content":"        assertNotEquals(1, deleteFirstCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"ALWHgithub"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"ALWHgithub"},"content":"        assertNotEquals(null, deleteFirstCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"ALWHgithub"},"content":"        // different Task -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"ALWHgithub"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"ALWHgithub"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"ALWHgithub"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"ALWHgithub"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ALWHgithub":107}},{"path":"src/test/java/seedu/address/logic/commands/EditTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_TWO;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"ALWHgithub"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"ALWHgithub"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditTaskCommand.","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"ALWHgithub"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ALWHgithub"},"content":"public class EditTaskCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ALWHgithub"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"ALWHgithub"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"ALWHgithub"},"content":"        Task editedTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ALWHgithub"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"ALWHgithub"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"ALWHgithub"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"ALWHgithub"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"ALWHgithub"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"ALWHgithub"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"ALWHgithub"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ALWHgithub"},"content":"        Task lastTask \u003d model.getFilteredTaskList().get(indexLastTask.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ALWHgithub"},"content":"        TaskBuilder taskInList \u003d new TaskBuilder(lastTask);","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"ALWHgithub"},"content":"        Task editedTask \u003d taskInList.withName(VALID_NAME_BOB).withDescription(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"ALWHgithub"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"ALWHgithub"},"content":"                .withDescription(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"ALWHgithub"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(indexLastTask, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ALWHgithub"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"ALWHgithub"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"ALWHgithub"},"content":"        expectedModel.setTask(lastTask, editedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"ALWHgithub"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"ALWHgithub"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"ALWHgithub"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"ALWHgithub"},"content":"        Task taskInFilteredList \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"ALWHgithub"},"content":"        Task editedTask \u003d new TaskBuilder(taskInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"ALWHgithub"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"ALWHgithub"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"ALWHgithub"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"ALWHgithub"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"ALWHgithub"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"ALWHgithub"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"ALWHgithub"},"content":"    public void execute_duplicateTaskUnfilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"ALWHgithub"},"content":"        Task firstTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"ALWHgithub"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(firstTask).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"ALWHgithub"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_SECOND_TASK, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"ALWHgithub"},"content":"        assertCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"ALWHgithub"},"content":"    public void execute_duplicateTaskFilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"ALWHgithub"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"ALWHgithub"},"content":"        // edit Task in filtered list into a duplicate in address book","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"ALWHgithub"},"content":"        Task taskInList \u003d model.getAddressBook().getTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"ALWHgithub"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"ALWHgithub"},"content":"                new EditTaskDescriptorBuilder(taskInList).build());","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"ALWHgithub"},"content":"        assertCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"ALWHgithub"},"content":"    public void execute_invalidTaskIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"ALWHgithub"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"ALWHgithub"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"ALWHgithub"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"ALWHgithub"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"ALWHgithub"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"ALWHgithub"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"ALWHgithub"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"ALWHgithub"},"content":"    public void execute_invalidTaskIndexFilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"ALWHgithub"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"ALWHgithub"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"ALWHgithub"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"ALWHgithub"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"ALWHgithub"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"ALWHgithub"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"ALWHgithub"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"ALWHgithub"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"ALWHgithub"},"content":"        final EditTaskCommand standardCommand \u003d new EditTaskCommand(INDEX_FIRST_PERSON, DESC_ONE);","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"ALWHgithub"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"ALWHgithub"},"content":"        EditTaskCommand.EditTaskDescriptor copyDescriptor \u003d new EditTaskCommand.EditTaskDescriptor(DESC_ONE);","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"ALWHgithub"},"content":"        EditTaskCommand commandWithSameValues \u003d new EditTaskCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"ALWHgithub"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"ALWHgithub"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"ALWHgithub"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"ALWHgithub"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"ALWHgithub"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"ALWHgithub"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"ALWHgithub"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"ALWHgithub"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"ALWHgithub"},"content":"        assertNotEquals(standardCommand, new EditTaskCommand(INDEX_SECOND_PERSON, DESC_ONE));","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"ALWHgithub"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"ALWHgithub"},"content":"        assertNotEquals(standardCommand, new EditTaskCommand(INDEX_FIRST_PERSON, DESC_TWO));","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ALWHgithub":170}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"albertarielw"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"albertarielw"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"albertarielw"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"albertarielw"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"albertarielw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"albertarielw"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"albertarielw"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"albertarielw"},"content":"            return tasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"albertarielw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"albertarielw":10,"ALWHgithub":2,"-":102}},{"path":"src/test/java/seedu/address/model/task/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"public class DescriptionTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"    public void isValidTaskDescription() {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"        String validDescription \u003d \"Test\";","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"        assertTrue(Description.isValidTaskDescription(validDescription));","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"        assertFalse(Description.isValidTaskDescription(invalidDescription));","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ALWHgithub":30}},{"path":"src/test/java/seedu/address/model/task/PriorityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"public class PriorityTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Priority(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ALWHgithub":15}},{"path":"src/test/java/seedu/address/model/task/TaskCategoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.exceptions.LevelOutOfRangeException;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"public class TaskCategoryTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskCategory(1, null));","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"    public void constructor_levelTooHigh() {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(LevelOutOfRangeException.class, () -\u003e new TaskCategory(10, null));","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(LevelOutOfRangeException.class, () -\u003e new TaskCategory(-10, null));","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ALWHgithub":22}},{"path":"src/test/java/seedu/address/model/task/TaskDeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.exceptions.DatePastException;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"public class TaskDeadlineTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskDeadline(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"    public void constructor_null_dateAlreadyPastException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(DatePastException.class, () -\u003e new TaskDeadline(LocalDate.MIN));","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ALWHgithub":22}},{"path":"src/test/java/seedu/address/model/task/TaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"public class TaskListTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"    private final TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"    private final TaskName testName \u003d new TaskName(\"Test\");","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"    private final TaskCategory testCat \u003d new TaskCategory(3, TaskCategoryType.OTHERS);","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"    private final Description testDisc \u003d new Description(\"Test\");","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"    private final Priority testPriority \u003d new Priority(PriorityEnum.MEDIUM);","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"    private final TaskDeadline testDeadline \u003d new TaskDeadline(LocalDate.now());","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"    private final Person testPerson \u003d new Person(new Name(\"test\"), new Phone(\"99999999\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"            new Email(\"test@gmail.com\"), new Address(\"test\"), new HashSet());","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"ALWHgithub"},"content":"    private final Task testTask \u003d new Task(testName, testDisc, testPriority, testCat, testDeadline,","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"ALWHgithub"},"content":"            testPerson.getEmail(), true);","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"ALWHgithub"},"content":"    public void contains_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskList().contains(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"ALWHgithub"},"content":"    public void add_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskList().contains(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ALWHgithub"},"content":"    public void addDuplicateTaskException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"ALWHgithub"},"content":"        testList.add(testTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e testList.add(testTask));","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"    public void delete_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskList().delete(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ALWHgithub"},"content":"    public void delete_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e new TaskList().delete(testTask));","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ALWHgithub"},"content":"    public void edit_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskList().edit(null, testTask));","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskList().edit(testTask, null));","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"ALWHgithub"},"content":"    public void edit_throwsTaskNotFoundException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e new TaskList().edit(testTask, testTask));","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"ALWHgithub"},"content":"    public void find_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskList().find(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"ALWHgithub"},"content":"    public void find_throwsTaskNotFoundException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e new TaskList().find(testTask));","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"ALWHgithub"},"content":"    public void filter_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskList().filter((Priority) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskList().filter((TaskCategory) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskList().filter((TaskDeadline) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"ALWHgithub"},"content":"    public void setTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskList().setTasks((TaskList) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskList().setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ALWHgithub":96}},{"path":"src/test/java/seedu/address/model/task/TaskNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"public class TaskNameTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskName(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskName(invalidDescription));","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"    public void isValidTaskDescription() {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"        String validDescription \u003d \"Test\";","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"        assertTrue(TaskName.isValidTaskName(validDescription));","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"        assertFalse(TaskName.isValidTaskName(invalidDescription));","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ALWHgithub":30}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"public class TaskTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Task(null,","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"                null, null, null, null, null, false));","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ALWHgithub":15}},{"path":"src/test/java/seedu/address/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskCategory;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskDeadline;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":" * A utility class to help with building EditTaskDescriptor objects.","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"    private final EditTaskDescriptor descriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"    public EditTaskDescriptorBuilder(EditTaskDescriptor descriptor) {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"        this.descriptor \u003d new EditTaskDescriptor(descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"     * Returns an {@code EditTaskDescriptor} with fields containing {@codetTask}\u0027s details","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"    public EditTaskDescriptorBuilder(Task task) {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"ALWHgithub"},"content":"        descriptor.setName(task.getName());","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"ALWHgithub"},"content":"        descriptor.setCategory(task.getCategory());","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"        descriptor.setDescription(task.getDescription());","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"ALWHgithub"},"content":"        descriptor.setPriority(task.getPriority());","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"ALWHgithub"},"content":"        descriptor.setDeadline(task.getDeadline());","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"ALWHgithub"},"content":"        descriptor.setPersonEmailAddress(task.getPersonEmailAddress());","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"ALWHgithub"},"content":"        descriptor.setDone(task.isDone());","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"ALWHgithub"},"content":"     * Sets the {@code Name} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"ALWHgithub"},"content":"    public EditTaskDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"ALWHgithub"},"content":"        descriptor.setName(new TaskName(name));","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ALWHgithub"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"ALWHgithub"},"content":"     * Sets the {@code Phone} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"ALWHgithub"},"content":"    public EditTaskDescriptorBuilder withCategory(TaskCategory category) {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"        descriptor.setCategory(category);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"ALWHgithub"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ALWHgithub"},"content":"     * Sets the {@code Email} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"ALWHgithub"},"content":"    public EditTaskDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ALWHgithub"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"ALWHgithub"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"ALWHgithub"},"content":"     * Sets the {@code Address} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"ALWHgithub"},"content":"    public EditTaskDescriptorBuilder withPriority(Priority priority) {","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"ALWHgithub"},"content":"        descriptor.setPriority(priority);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"ALWHgithub"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"ALWHgithub"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditTaskDescriptor}","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"ALWHgithub"},"content":"     * that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"ALWHgithub"},"content":"    public EditTaskDescriptorBuilder withDeadline(TaskDeadline deadline) {","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"ALWHgithub"},"content":"        descriptor.setDeadline(deadline);","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"ALWHgithub"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"ALWHgithub"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditTaskDescriptor}","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"ALWHgithub"},"content":"     * that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"ALWHgithub"},"content":"    public EditTaskDescriptorBuilder withEmail(Email email) {","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"ALWHgithub"},"content":"        descriptor.setPersonEmailAddress(email);","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"ALWHgithub"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"ALWHgithub"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditTaskDescriptor}","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"ALWHgithub"},"content":"     * that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"ALWHgithub"},"content":"    public EditTaskDescriptorBuilder withIsDone(Boolean isDone) {","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"ALWHgithub"},"content":"        descriptor.setDone(isDone);","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"ALWHgithub"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"ALWHgithub"},"content":"    public EditTaskDescriptor build() {","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"ALWHgithub"},"content":"        return descriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ALWHgithub":104}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.PriorityEnum;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskCategory;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskCategoryType;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskDeadline;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"public class TaskBuilder {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"    private final String defaultName \u003d \"Test\";","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"    private final TaskCategoryType defaultCatType \u003d TaskCategoryType.OTHERS;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"    private final String defaultDescription \u003d \"Test\";","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"    private final PriorityEnum defaultPriority \u003d PriorityEnum.MEDIUM;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"    private final LocalDate defaultLocalDate \u003d LocalDate.now();","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":"    private final boolean defaultStatus \u003d true;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"    private TaskName taskName;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"    private TaskCategory taskCategory;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"ALWHgithub"},"content":"    private Description taskDescription;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"ALWHgithub"},"content":"    private Priority taskPriority;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"    private TaskDeadline taskDeadline;","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"ALWHgithub"},"content":"    private Email taskPersonEmailAddress;","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"ALWHgithub"},"content":"    private boolean taskStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ALWHgithub"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"ALWHgithub"},"content":"    public TaskBuilder() {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"ALWHgithub"},"content":"        taskName \u003d new TaskName(defaultName);","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"ALWHgithub"},"content":"        taskCategory \u003d new TaskCategory(3, defaultCatType);","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"ALWHgithub"},"content":"        taskDescription \u003d new Description(defaultDescription);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"ALWHgithub"},"content":"        taskPriority \u003d new Priority(defaultPriority);","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"ALWHgithub"},"content":"        taskDeadline \u003d new TaskDeadline(defaultLocalDate);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"ALWHgithub"},"content":"        taskPersonEmailAddress \u003d new Email(\"test@gmail.com\");","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"ALWHgithub"},"content":"        taskStatus \u003d defaultStatus;","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"     * Initializes the TaskBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"ALWHgithub"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"ALWHgithub"},"content":"        taskName \u003d taskToCopy.getName();","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"ALWHgithub"},"content":"        taskCategory \u003d taskToCopy.getCategory();","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ALWHgithub"},"content":"        taskDescription \u003d taskToCopy.getDescription();","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"ALWHgithub"},"content":"        taskPriority \u003d taskToCopy.getPriority();","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"ALWHgithub"},"content":"        taskDeadline \u003d taskToCopy.getDeadline();","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ALWHgithub"},"content":"        taskPersonEmailAddress \u003d taskToCopy.getPersonEmailAddress();","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"ALWHgithub"},"content":"        taskStatus \u003d taskToCopy.isDone();","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"ALWHgithub"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"ALWHgithub"},"content":"    public TaskBuilder withName(String name) {","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"ALWHgithub"},"content":"        this.taskName \u003d new TaskName(name);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"ALWHgithub"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"ALWHgithub"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"ALWHgithub"},"content":"    public TaskBuilder withCategory(TaskCategory taskCategory) {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"ALWHgithub"},"content":"        this.taskCategory \u003d taskCategory;","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"ALWHgithub"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"ALWHgithub"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"ALWHgithub"},"content":"    public TaskBuilder withDescription(String description) {","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"ALWHgithub"},"content":"        this.taskDescription \u003d new Description(description);","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"ALWHgithub"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"ALWHgithub"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"ALWHgithub"},"content":"    public TaskBuilder withPriority(PriorityEnum priority) {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"ALWHgithub"},"content":"        this.taskPriority \u003d new Priority(priority);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"ALWHgithub"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"ALWHgithub"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"ALWHgithub"},"content":"    public TaskBuilder withDeadline(LocalDate date) {","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"ALWHgithub"},"content":"        this.taskDeadline \u003d new TaskDeadline(date);","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"ALWHgithub"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"ALWHgithub"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"ALWHgithub"},"content":"    public TaskBuilder withTaskPersonEmailAddressPerson(Email email) {","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"ALWHgithub"},"content":"        this.taskPersonEmailAddress \u003d email;","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"ALWHgithub"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"ALWHgithub"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"ALWHgithub"},"content":"    public TaskBuilder withStatus(boolean status) {","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"ALWHgithub"},"content":"        this.taskStatus \u003d status;","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"ALWHgithub"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"ALWHgithub"},"content":"     * Builds a Task","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"ALWHgithub"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"ALWHgithub"},"content":"     * @return the task to be builtF","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"ALWHgithub"},"content":"    public Task build() {","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"ALWHgithub"},"content":"        return new Task(taskName, taskDescription, taskPriority, taskCategory, taskDeadline,","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"ALWHgithub"},"content":"                taskPersonEmailAddress, taskStatus);","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ALWHgithub":132}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"ALWHgithub":4,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ALWHgithub"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ALWHgithub"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ALWHgithub"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ALWHgithub"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ALWHgithub"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"ALWHgithub"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.PriorityEnum;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskCategory;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskCategoryType;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskDeadline;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskList;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"ALWHgithub"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"ALWHgithub"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"ALWHgithub"},"content":" * Typical tasks, used for testing purposes","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"ALWHgithub"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"ALWHgithub"},"content":"public class TypicalTasks {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ALWHgithub"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"ALWHgithub"},"content":"    private static final TaskCategory testCat \u003d new TaskCategory(3, TaskCategoryType.OTHERS);","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"ALWHgithub"},"content":"    private static final Description testDisc \u003d new Description(\"Test\");","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"ALWHgithub"},"content":"    private static final Priority testPriority \u003d new Priority(PriorityEnum.MEDIUM);","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"ALWHgithub"},"content":"    private static final TaskDeadline testDeadline \u003d new TaskDeadline(LocalDate.now());","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"ALWHgithub"},"content":"    private static final Person testPerson \u003d new Person(new Name(\"test\"), new Phone(\"99999999\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"ALWHgithub"},"content":"            new Email(\"test@gmail.com\"), new Address(\"test\"), new HashSet());","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ALWHgithub"},"content":"    public static final Task ALICE \u003d new Task(new TaskName(\"A\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"ALWHgithub"},"content":"            testDisc, testPriority, testCat, testDeadline, testPerson.getEmail(), false);","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"ALWHgithub"},"content":"    public static final Task BENSON \u003d new Task(new TaskName(\"B\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"ALWHgithub"},"content":"            testDisc, testPriority, testCat, testDeadline, testPerson.getEmail(), false);","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"ALWHgithub"},"content":"    public static final Task CARL \u003d new Task(new TaskName(\"C\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"ALWHgithub"},"content":"            testDisc, testPriority, testCat, testDeadline, testPerson.getEmail(), false);","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"ALWHgithub"},"content":"    public static final Task DANIEL \u003d new Task(new TaskName(\"D\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"ALWHgithub"},"content":"            testDisc, testPriority, testCat, testDeadline, testPerson.getEmail(), false);","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"ALWHgithub"},"content":"    public static final Task ELLE \u003d new Task(new TaskName(\"E\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"ALWHgithub"},"content":"            testDisc, testPriority, testCat, testDeadline, testPerson.getEmail(), false);","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"ALWHgithub"},"content":"    public static final Task FIONA \u003d new Task(new TaskName(\"F\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"ALWHgithub"},"content":"            testDisc, testPriority, testCat, testDeadline, testPerson.getEmail(), false);","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"ALWHgithub"},"content":"    public static final Task GEORGE \u003d new Task(new TaskName(\"G\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"ALWHgithub"},"content":"            testDisc, testPriority, testCat, testDeadline, testPerson.getEmail(), false);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"ALWHgithub"},"content":"    // Manually added","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"ALWHgithub"},"content":"    public static final Task HOON \u003d new Task(new TaskName(\"H\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"ALWHgithub"},"content":"            testDisc, testPriority, testCat, testDeadline, testPerson.getEmail(), false);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"ALWHgithub"},"content":"    public static final Task IDA \u003d new Task(new TaskName(\"I\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"ALWHgithub"},"content":"            testDisc, testPriority, testCat, testDeadline, testPerson.getEmail(), false);","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"ALWHgithub"},"content":"    // Manually added - Task\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ALWHgithub"},"content":"    public static final Task AMY \u003d new Task(new TaskName(\"Amy\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"ALWHgithub"},"content":"            testDisc, testPriority, testCat, testDeadline, testPerson.getEmail(), false);","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"ALWHgithub"},"content":"    public static final Task BOB \u003d new Task(new TaskName(\"Bob\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"ALWHgithub"},"content":"            testDisc, testPriority, testCat, testDeadline, testPerson.getEmail(), false);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"ALWHgithub"},"content":"    private final TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"ALWHgithub"},"content":"    private TypicalTasks() {","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"ALWHgithub"},"content":"    } // prevents instantiation","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"ALWHgithub"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ALWHgithub"},"content":"     * Returns an {@code AddressBook} with all the typical Tasks.","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"ALWHgithub"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"ALWHgithub"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"ALWHgithub"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"ALWHgithub"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"ALWHgithub"},"content":"            ab.addTask(task);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"ALWHgithub"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"ALWHgithub"},"content":"        return ab;","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"ALWHgithub"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"ALWHgithub"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"ALWHgithub"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"ALWHgithub"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"ALWHgithub"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ALWHgithub":84}}]
