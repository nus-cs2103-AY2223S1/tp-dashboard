[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W15-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W15-3/tp/actions)","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W15-3/tp/branch/master/graph/badge.svg?token\u003dH2G32SVMDR)](https://codecov.io/gh/AY2223S1-CS2103T-W15-3/tp)","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"# TrackO","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"TrackO is a desktop application that helps you manage your business orders and inventory, optimized for use via a","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"Command Line Interface (CLI), while still having the benefits of a visually appealing Graphical User Interface (GUI).","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"If you can type fast, TrackO can help you manage your order and inventory tracking faster than traditional GUI","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"applications!","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"* For the detailed documentation of this project, see the **[TrackO Website](https://ay2223s1-cs2103t-w15-3.github.io/tp/)**.","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"**Acknowledgements**","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"donljh":14,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"mainClassName \u003d \u0027tracko.Main\u0027","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"    archiveFileName \u003d \u0027tracko.jar\u0027","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"donljh":2,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"### Lim Jun Hong, Don","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"\u003cimg src\u003d\"images/donljh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"[[github](https://github.com/donljh)]","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"[[portfolio](team/donljh.md)]","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"janelleljt"},"content":"* Role: to be determined","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"janelleljt"},"content":"* Responsibilities: to be determined","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"janelleljt"},"content":"### Melissa Anastasia Harijanto","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"janelleljt"},"content":"\u003cimg src\u003d\"images/melissaharijanto.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"janelleljt"},"content":"[[github](http://github.com/melissaharijanto)]","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"janelleljt"},"content":"[[portfolio](team/melissaharijanto.md)]","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"janelleljt"},"content":"* Role: to be determined","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"janelleljt"},"content":"* Responsibilities: to be determined","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"janelleljt"},"content":"### Janelle Loh Jen Teng","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"janelleljt"},"content":"\u003cimg src\u003d\"images/janelleljt.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"janelleljt"},"content":"[[github](http://github.com/janelleljt)]","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"janelleljt"},"content":"[[portfolio](team/janelleljt.md)]","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"janelleljt"},"content":"- Role: to be determined","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"janelleljt"},"content":"- Responsibilities: to be determined","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Jiacheng-y"},"content":"### Yang Jiacheng","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Jiacheng-y"},"content":"\u003cimg src\u003d\"images/jiacheng-y.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Jiacheng-y"},"content":"[[github](http://github.com/jiacheng-y)]","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jiacheng-y"},"content":"[[portfolio](team/jiacheng-y.md)]","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Jiacheng-y"},"content":"- Role: to be determined","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jiacheng-y"},"content":"- Responsibilities: to be determined","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"sohenze"},"content":"### Soh Enze","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"sohenze"},"content":"\u003cimg src\u003d\"images/sohenze.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"sohenze"},"content":"[[github](http://github.com/sohenze)]","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"sohenze"},"content":"[[portfolio](team/sohenze.md)]","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"janelleljt"},"content":"- Role: to be determined","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"janelleljt"},"content":"- Responsibilities: to be determined","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"donljh":4,"Jiacheng-y":6,"janelleljt":16,"-":30,"sohenze":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"janelleljt"},"content":"* home-based small business owners who want to manage orders and inventory information efficiently","lastModifiedDate":"2022-09-28"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"janelleljt"},"content":"**Value proposition**: offers a CLI-based application for home-based small","lastModifiedDate":"2022-09-27"},{"lineNumber":267,"author":{"gitId":"janelleljt"},"content":"business owners who prefer to type more/are more efficient at typing to","lastModifiedDate":"2022-09-27"},{"lineNumber":268,"author":{"gitId":"janelleljt"},"content":"allow them to save time on managing orders and logistics instead of","lastModifiedDate":"2022-09-27"},{"lineNumber":269,"author":{"gitId":"janelleljt"},"content":"traditional GUI applications such as Excel, or even pen and paper.","lastModifiedDate":"2022-09-27"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"| Priority | As a …​                                      | I want to …​                                                            | So that I can…​                                                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"janelleljt"},"content":"|----------|----------------------------------------------|-------------------------------------------------------------------------|-----------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-27"},{"lineNumber":278,"author":{"gitId":"janelleljt"},"content":"| `* * *`  | business owner                               | add orders easily                                                       | keep track of ongoing orders                                                      |","lastModifiedDate":"2022-09-27"},{"lineNumber":279,"author":{"gitId":"janelleljt"},"content":"| `* * *`  | business owner                               | delete entire orders                                                    |                                                                                   |","lastModifiedDate":"2022-09-27"},{"lineNumber":280,"author":{"gitId":"janelleljt"},"content":"| `* * *`  | busy business owner                          | list all orders                                                         | see all my ongoing orders in one place and keep track of them                     |","lastModifiedDate":"2022-09-27"},{"lineNumber":281,"author":{"gitId":"janelleljt"},"content":"| `* * *`  | business owner                               | add items to my inventory                                               | keep track of additions to my inventory                                           |","lastModifiedDate":"2022-09-27"},{"lineNumber":282,"author":{"gitId":"janelleljt"},"content":"| `* * *`  | business owner                               | delete items from my inventory                                          | have an updated list of inventory items                                           |","lastModifiedDate":"2022-09-27"},{"lineNumber":283,"author":{"gitId":"janelleljt"},"content":"| `* * *`  | business owner                               | list all items in my inventory                                          | see all items in my inventory in one place                                        |","lastModifiedDate":"2022-09-27"},{"lineNumber":284,"author":{"gitId":"janelleljt"},"content":"| `* * *`  | business owner                               | tag inventory items                                                     | keep an organised inventory of items                                              |","lastModifiedDate":"2022-09-27"},{"lineNumber":285,"author":{"gitId":"janelleljt"},"content":"| `* *  `  | busy business owner                          | find orders                                                             | locate an order without manually searching through the entire list                |","lastModifiedDate":"2022-09-28"},{"lineNumber":286,"author":{"gitId":"janelleljt"},"content":"| `* *  `  | business owner                               | find items in my inventory                                              | locate an item in my inventory without manually searching through the entire list |","lastModifiedDate":"2022-09-27"},{"lineNumber":287,"author":{"gitId":"janelleljt"},"content":"| `* * `   | business owner                               | edit order details                                                      | update changes to orders                                                          |","lastModifiedDate":"2022-09-29"},{"lineNumber":288,"author":{"gitId":"janelleljt"},"content":"| `* *  `  | business owner                               | edit inventory item details                                             | update changes to inventory                                                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":289,"author":{"gitId":"janelleljt"},"content":"| `* *  `  | business owner                               | see which orders have been paid for                                     | press customers for payment                                                       |","lastModifiedDate":"2022-09-29"},{"lineNumber":290,"author":{"gitId":"janelleljt"},"content":"| `* *  `  | business owner                               | mark orders as completed                                                | not get mixed up with ones that have not been completed yet                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":291,"author":{"gitId":"janelleljt"},"content":"| `* *  `  | business owner                               | sort orders by expected delivery time                                   | know which orders are due first                                                   |","lastModifiedDate":"2022-09-27"},{"lineNumber":292,"author":{"gitId":"janelleljt"},"content":"| `* *  `  | business owner                               | sort orders by delivery address                                         | optimise delivery routes                                                          |","lastModifiedDate":"2022-09-27"},{"lineNumber":293,"author":{"gitId":"janelleljt"},"content":"| `* *  `  | business owner                               | sort orders by urgency (e.g. by deadline, or days outstanding)          | know which orders I have to prepare first                                         |","lastModifiedDate":"2022-09-27"},{"lineNumber":294,"author":{"gitId":"janelleljt"},"content":"| `* *  `  | business owner                               | look at my total earnings                                               | better optimise my earnings                                                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":295,"author":{"gitId":"janelleljt"},"content":"| `*    `  | business owner                               | export all business data                                                | save the data elsewhere if needed                                                 |","lastModifiedDate":"2022-09-27"},{"lineNumber":296,"author":{"gitId":"janelleljt"},"content":"| `*    `  | business owner who is new to the application | import my current database of order and inventory information to TrackO | seamlessly transfer from other applications to TrackO                             |","lastModifiedDate":"2022-09-27"},{"lineNumber":297,"author":{"gitId":"janelleljt"},"content":"| `*   `   | business owner who is a new user             | use more verbose commands to complete my tasks                          | get more used to the syntax of the commands in the application                    |","lastModifiedDate":"2022-09-27"},{"lineNumber":298,"author":{"gitId":"janelleljt"},"content":"| `*   `   | tired business owner working at night        | view the application\u0027s GUI in dark mode                                 | my eyes don\u0027t get strained                                                        |","lastModifiedDate":"2022-09-27"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"melissaharijanto"},"content":"(For all use cases below, the **System** is the `TrackO` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-28"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"melissaharijanto"},"content":"**Use case: UC01 - Add an order**","lastModifiedDate":"2022-10-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"melissaharijanto"},"content":"1. User requests to add an order.","lastModifiedDate":"2022-09-28"},{"lineNumber":311,"author":{"gitId":"melissaharijanto"},"content":"2. System adds the order.","lastModifiedDate":"2022-09-28"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"melissaharijanto"},"content":"- 1a. User inputs incomplete order data. \u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":318,"author":{"gitId":"melissaharijanto"},"content":"  - 1a1. System informs user of the incomplete data.","lastModifiedDate":"2022-09-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"melissaharijanto"},"content":"    Use case resumes at 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"melissaharijanto"},"content":"**Use case: UC02 - Delete an order**","lastModifiedDate":"2022-10-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"melissaharijanto"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"melissaharijanto"},"content":"1. User requests to delete an order.","lastModifiedDate":"2022-09-28"},{"lineNumber":327,"author":{"gitId":"melissaharijanto"},"content":"2. System deletes the order.","lastModifiedDate":"2022-09-28"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":333,"author":{"gitId":"melissaharijanto"},"content":"- 1a. The order the user wishes to delete does not exist.","lastModifiedDate":"2022-09-28"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":335,"author":{"gitId":"melissaharijanto"},"content":"  - 1a1. System informs the user of the non-existent order.","lastModifiedDate":"2022-09-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":337,"author":{"gitId":"melissaharijanto"},"content":"     Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":339,"author":{"gitId":"melissaharijanto"},"content":"- 2a. The list has no orders.","lastModifiedDate":"2022-09-28"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":341,"author":{"gitId":"melissaharijanto"},"content":"  - 2a1. System informs the user of the empty order list.","lastModifiedDate":"2022-09-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":343,"author":{"gitId":"melissaharijanto"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":345,"author":{"gitId":"melissaharijanto"},"content":"**Use case: UC03 - List orders**","lastModifiedDate":"2022-10-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":347,"author":{"gitId":"melissaharijanto"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":349,"author":{"gitId":"melissaharijanto"},"content":"1. User requests to list all orders.","lastModifiedDate":"2022-09-28"},{"lineNumber":350,"author":{"gitId":"melissaharijanto"},"content":"2. System lists all orders.","lastModifiedDate":"2022-09-28"},{"lineNumber":351,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":352,"author":{"gitId":"melissaharijanto"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":353,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":354,"author":{"gitId":"melissaharijanto"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":355,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":356,"author":{"gitId":"melissaharijanto"},"content":"- 2a. The list of orders is empty.","lastModifiedDate":"2022-09-28"},{"lineNumber":357,"author":{"gitId":"melissaharijanto"},"content":"    - 2a1. System informs the user that the list is empty.","lastModifiedDate":"2022-09-29"},{"lineNumber":358,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":359,"author":{"gitId":"melissaharijanto"},"content":"      Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":360,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":361,"author":{"gitId":"melissaharijanto"},"content":"**Use case: UC04 - Find orders**","lastModifiedDate":"2022-10-02"},{"lineNumber":362,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":363,"author":{"gitId":"melissaharijanto"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":364,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":365,"author":{"gitId":"melissaharijanto"},"content":"1. User requests to find an order.","lastModifiedDate":"2022-09-28"},{"lineNumber":366,"author":{"gitId":"melissaharijanto"},"content":"2. System finds the order and informs the user of its details.","lastModifiedDate":"2022-09-28"},{"lineNumber":367,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":368,"author":{"gitId":"melissaharijanto"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":369,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":370,"author":{"gitId":"melissaharijanto"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":371,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":372,"author":{"gitId":"melissaharijanto"},"content":"- 1a. The order the user is trying to find does not exist.","lastModifiedDate":"2022-09-28"},{"lineNumber":373,"author":{"gitId":"melissaharijanto"},"content":"  - 1a1. System informs the user that the order does not exist.","lastModifiedDate":"2022-09-29"},{"lineNumber":374,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":375,"author":{"gitId":"melissaharijanto"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":376,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":377,"author":{"gitId":"melissaharijanto"},"content":"**Use case: UC05 - Add an inventory item**","lastModifiedDate":"2022-10-02"},{"lineNumber":378,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":379,"author":{"gitId":"melissaharijanto"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":380,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":381,"author":{"gitId":"melissaharijanto"},"content":"1. User requests to add an inventory item.","lastModifiedDate":"2022-09-28"},{"lineNumber":382,"author":{"gitId":"melissaharijanto"},"content":"2. System adds the inventory item.","lastModifiedDate":"2022-09-28"},{"lineNumber":383,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":384,"author":{"gitId":"melissaharijanto"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":385,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":386,"author":{"gitId":"melissaharijanto"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":387,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":388,"author":{"gitId":"melissaharijanto"},"content":"- 1a. User inputs incomplete details of the item.","lastModifiedDate":"2022-09-28"},{"lineNumber":389,"author":{"gitId":"melissaharijanto"},"content":"  - 1a1. System informs user of the incomplete details.","lastModifiedDate":"2022-09-29"},{"lineNumber":390,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":391,"author":{"gitId":"melissaharijanto"},"content":"    Use case resumes at 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":392,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":393,"author":{"gitId":"melissaharijanto"},"content":"**Use case: UC06 - Delete an inventory item**","lastModifiedDate":"2022-10-02"},{"lineNumber":394,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":395,"author":{"gitId":"melissaharijanto"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":396,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":397,"author":{"gitId":"melissaharijanto"},"content":"1. User requests to delete an inventory item.","lastModifiedDate":"2022-09-28"},{"lineNumber":398,"author":{"gitId":"melissaharijanto"},"content":"2. System deletes the inventory item.","lastModifiedDate":"2022-09-28"},{"lineNumber":399,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":400,"author":{"gitId":"melissaharijanto"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":401,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":402,"author":{"gitId":"melissaharijanto"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":403,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":404,"author":{"gitId":"melissaharijanto"},"content":"- 1a. The item that the user requests to delete does not exist.","lastModifiedDate":"2022-09-28"},{"lineNumber":405,"author":{"gitId":"melissaharijanto"},"content":"  - 1a1. System informs user of the non-existent item.","lastModifiedDate":"2022-09-29"},{"lineNumber":406,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":407,"author":{"gitId":"melissaharijanto"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":408,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":409,"author":{"gitId":"melissaharijanto"},"content":"- 2a. The list of inventory items is empty.","lastModifiedDate":"2022-09-28"},{"lineNumber":410,"author":{"gitId":"melissaharijanto"},"content":"    - 2a1. System informs user that the list of items is empty.","lastModifiedDate":"2022-09-29"},{"lineNumber":411,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":412,"author":{"gitId":"melissaharijanto"},"content":"      Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":413,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":414,"author":{"gitId":"melissaharijanto"},"content":"**Use case: UC07 - List all inventory items**","lastModifiedDate":"2022-10-02"},{"lineNumber":415,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":416,"author":{"gitId":"melissaharijanto"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":417,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":418,"author":{"gitId":"melissaharijanto"},"content":"1. User requests to list all inventory items.","lastModifiedDate":"2022-09-28"},{"lineNumber":419,"author":{"gitId":"melissaharijanto"},"content":"2. System lists all inventory items.","lastModifiedDate":"2022-09-28"},{"lineNumber":420,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":421,"author":{"gitId":"melissaharijanto"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":422,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":423,"author":{"gitId":"melissaharijanto"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":424,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":425,"author":{"gitId":"melissaharijanto"},"content":"- 2a. The list of inventory items is empty.","lastModifiedDate":"2022-09-28"},{"lineNumber":426,"author":{"gitId":"melissaharijanto"},"content":"  - 2a1. System informs user of the empty list.","lastModifiedDate":"2022-09-29"},{"lineNumber":427,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":428,"author":{"gitId":"melissaharijanto"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":429,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":430,"author":{"gitId":"melissaharijanto"},"content":"**Use case: UC08 - Find an inventory item**","lastModifiedDate":"2022-10-02"},{"lineNumber":431,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":432,"author":{"gitId":"melissaharijanto"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":433,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":434,"author":{"gitId":"melissaharijanto"},"content":"1. User requests to find an inventory item.","lastModifiedDate":"2022-09-28"},{"lineNumber":435,"author":{"gitId":"melissaharijanto"},"content":"2. System finds the item and informs the user of its details.","lastModifiedDate":"2022-09-28"},{"lineNumber":436,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":437,"author":{"gitId":"melissaharijanto"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":438,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":439,"author":{"gitId":"melissaharijanto"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":440,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":441,"author":{"gitId":"melissaharijanto"},"content":"- 1a. The inventory item that the user requests to find does not exist.","lastModifiedDate":"2022-09-28"},{"lineNumber":442,"author":{"gitId":"melissaharijanto"},"content":"  - 1a1. System informs the user of the non-existent item.","lastModifiedDate":"2022-09-29"},{"lineNumber":443,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":444,"author":{"gitId":"melissaharijanto"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":445,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":446,"author":{"gitId":"melissaharijanto"},"content":"**Use case: UC09 - Tag an inventory item**","lastModifiedDate":"2022-10-02"},{"lineNumber":447,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":448,"author":{"gitId":"melissaharijanto"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":449,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":450,"author":{"gitId":"melissaharijanto"},"content":"1. User requests to tag an inventory item.","lastModifiedDate":"2022-09-28"},{"lineNumber":451,"author":{"gitId":"melissaharijanto"},"content":"2. System tags the inventory item.","lastModifiedDate":"2022-09-28"},{"lineNumber":452,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":453,"author":{"gitId":"melissaharijanto"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"sohenze"},"content":"2. The software should be portable. Moving from one device to another should not create any problems as long as it is on a _mainstream OS_ with Java `11` or above installed.","lastModifiedDate":"2022-09-27"},{"lineNumber":459,"author":{"gitId":"sohenze"},"content":"3. Each command should be executed within 1 second.","lastModifiedDate":"2022-09-27"},{"lineNumber":460,"author":{"gitId":"sohenze"},"content":"4. Should be able to hold up to 10000 orders without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-27"},{"lineNumber":461,"author":{"gitId":"sohenze"},"content":"5. Should be able to hold up to 100 items without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-27"},{"lineNumber":462,"author":{"gitId":"sohenze"},"content":"6. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-09-27"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"Jiacheng-y"},"content":"* **Mainstream OS (Operating System)**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2022-09-28"},{"lineNumber":467,"author":{"gitId":"Jiacheng-y"},"content":"* **CLI**: Command Line Interface, receives commands from user in the form of lines of text","lastModifiedDate":"2022-09-28"},{"lineNumber":468,"author":{"gitId":"Jiacheng-y"},"content":"* **GUI**: Graphical User Interface, a system of interactive user components for computer software","lastModifiedDate":"2022-09-28"},{"lineNumber":469,"author":{"gitId":"Jiacheng-y"},"content":"* **Inventory**: Any item that the business needs to operate","lastModifiedDate":"2022-09-28"},{"lineNumber":470,"author":{"gitId":"Jiacheng-y"},"content":"* **Order**: Any sales promise that needs to be fulfilled","lastModifiedDate":"2022-09-28"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Jiacheng-y":5,"janelleljt":27,"melissaharijanto":124,"-":362,"sohenze":5}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"                                                                                                                                                               |","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"Jiacheng-y"},"content":"TrackO is a **desktop app built for small business owners to help them manage orders and their inventory, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you prefer and are fast at typing, TrackO can get your order and inventory management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Jiacheng-y"},"content":"1. Download the latest `TrackO.jar` from [here](https://github.com/AY2223S1-CS2103T-W15-3/tp/releases).","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Jiacheng-y"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`listo`** and pressing Enter will show a lit of existing orders.\u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Jiacheng-y"},"content":"    * **`listo`** : Lists all orders.","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Jiacheng-y"},"content":"    * **`addi`**`n/Keychain` : Adds an inventory item named `Keychain` to the inventory list.","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Jiacheng-y"},"content":"    * **`deleteo`**`3` : Deletes the 3rd order shown in the current list.","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":54,"author":{"gitId":"Jiacheng-y"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list` and `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"Jiacheng-y"},"content":"  e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"### Adding an order: `addo`","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"Adds an order to the list of tracked orders.","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"Format: `addo i/ITEM_NAME q/ORDER_QUANTITY cn/CUSTOMER_NAME ca/CUSTOMER_ADDRESS ce/CUSTOMER_EMAIL cc/CUSTOMER_CONTACT`","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"* Adds an order to be tracked in the application","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"* Added orders will track the time that it was created","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"* `addo i/Fountain Pen q/3 cn/John Doe ca/48 Westwood Terrace ce/johndoe@example.com cc/91234567`","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"* `addo i/White Socks q/2 cn/Betty White ca/39 Ocean Drive ce/bettywhite@example.com cc/92345678`","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"### Deleting an order: `deleteo`","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"Deletes an order from the list of tracked orders.","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"Format: `deleteo INDEX`","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"* Deletes the order at the specified INDEX.","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"* The index refers to the index number shown in the displayed order list.","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"* The index must be a positive integer 1, 2, 3, …","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"* `listo` followed by `deleteo 2` deletes the 2nd order from the order list.","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"janelleljt"},"content":"### Listing all orders : `listo`","lastModifiedDate":"2022-09-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"janelleljt"},"content":"Shows a list of all orders in the store has.","lastModifiedDate":"2022-09-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"janelleljt"},"content":"Format: `listo`","lastModifiedDate":"2022-09-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"janelleljt"},"content":"### Locating orders by keyword: `findo`","lastModifiedDate":"2022-09-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"janelleljt"},"content":"Find order with item names containing any of the given keywords.","lastModifiedDate":"2022-09-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"janelleljt"},"content":"Format: `findo KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"janelleljt"},"content":"* The search is case-insensitive. e.g `keychain` will match `Keychain`","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"janelleljt"},"content":"* The order of the keywords does not matter. e.g. `apple keychain` will match `Keychain Apple`","lastModifiedDate":"2022-09-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"janelleljt"},"content":"* Only full words will be matched e.g. `keychains` will not match `keychain`","lastModifiedDate":"2022-09-26"},{"lineNumber":101,"author":{"gitId":"janelleljt"},"content":"* Orders matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"janelleljt"},"content":"  e.g. `apple keychain` will return `apple painting`, `banana keychain`","lastModifiedDate":"2022-09-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"janelleljt"},"content":"* `findo keychain` returns `banana keychain` and `keychain`","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"janelleljt"},"content":"* `findo apple keychain` returns `apple painting`, `banana keychain`\u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"Jiacheng-y"},"content":"### Adding an inventory item: `addi`","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"Jiacheng-y"},"content":"Adds an item to the list of tracked inventory.","lastModifiedDate":"2022-09-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"Jiacheng-y"},"content":"Format: `addi n/ITEM_NAME [t/TAG]…​`","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"Jiacheng-y"},"content":"An inventory item can have any number of tags (including 0)","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"Jiacheng-y"},"content":"* `addi n/Keychain`","lastModifiedDate":"2022-09-28"},{"lineNumber":120,"author":{"gitId":"Jiacheng-y"},"content":"* `addi n/Chair t/Furniture`","lastModifiedDate":"2022-09-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"Jiacheng-y"},"content":"### Deleting an inventory item : `deletei`","lastModifiedDate":"2022-09-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"Jiacheng-y"},"content":"Deletes the specified item from the list of tracked inventory.","lastModifiedDate":"2022-09-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"Jiacheng-y"},"content":"Format: `deletei INDEX`","lastModifiedDate":"2022-09-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"Jiacheng-y"},"content":"* Deletes the item at the specified `INDEX`.","lastModifiedDate":"2022-09-28"},{"lineNumber":129,"author":{"gitId":"Jiacheng-y"},"content":"* The index refers to the index number shown in the displayed inventory list.","lastModifiedDate":"2022-09-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"Jiacheng-y"},"content":"* `listi` followed by `deletei 2` deletes the 2nd item in the list of tracked inventory.","lastModifiedDate":"2022-09-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"melissaharijanto"},"content":"### List all inventory items: `listi`","lastModifiedDate":"2022-09-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"melissaharijanto"},"content":"Shows all the existing items in the store’s inventory.","lastModifiedDate":"2022-09-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"melissaharijanto"},"content":"Format: `listi`","lastModifiedDate":"2022-09-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"melissaharijanto"},"content":"### Find an inventory item: `findi`","lastModifiedDate":"2022-09-26"},{"lineNumber":142,"author":{"gitId":"melissaharijanto"},"content":"Finds an inventory item whose name fits any of the given keywords.","lastModifiedDate":"2022-09-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"melissaharijanto"},"content":"Format: `findi KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-09-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"melissaharijanto"},"content":"- The search is case-insensitive.","lastModifiedDate":"2022-09-26"},{"lineNumber":147,"author":{"gitId":"melissaharijanto"},"content":"- `keychain` will match `Keychain`","lastModifiedDate":"2022-09-26"},{"lineNumber":148,"author":{"gitId":"melissaharijanto"},"content":"- The order of the keywords does not matter. \u003cbr\u003e e.g. `pants long` will match `long pants`","lastModifiedDate":"2022-09-26"},{"lineNumber":149,"author":{"gitId":"melissaharijanto"},"content":"- Only the name of the item is searched.","lastModifiedDate":"2022-09-26"},{"lineNumber":150,"author":{"gitId":"melissaharijanto"},"content":"- Only full words will be matched. \u003cbr\u003e e.g. `key` will not match `Keychain`","lastModifiedDate":"2022-09-26"},{"lineNumber":151,"author":{"gitId":"melissaharijanto"},"content":"- Items matching at least one keyword will be returned (i.e. OR search). \u003cbr\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":152,"author":{"gitId":"melissaharijanto"},"content":"  e.g. `shirt` will return `dress shirt`, `collared shirt`","lastModifiedDate":"2022-09-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"melissaharijanto"},"content":"- `findi oil` returns `Olive Oil` and `Vegetable Oil`","lastModifiedDate":"2022-09-26"},{"lineNumber":156,"author":{"gitId":"melissaharijanto"},"content":"- `findi blue` returns `Blue Shirt`, `Blue Pants`","lastModifiedDate":"2022-09-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"sohenze"},"content":"### Tagging an inventory item: `tagi`","lastModifiedDate":"2022-09-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"sohenze"},"content":"Adds tag(s) to an inventory item.","lastModifiedDate":"2022-09-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"sohenze"},"content":"Format: `tagi INDEX [t/TAG]…​`","lastModifiedDate":"2022-09-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"sohenze"},"content":"* Adds tag(s) to the inventory item at the specified `INDEX`.","lastModifiedDate":"2022-09-26"},{"lineNumber":165,"author":{"gitId":"sohenze"},"content":"  The index refers to the index number shown in the displayed inventory list. The index **must be a positive integer** 1, 2, 3, …​.","lastModifiedDate":"2022-09-26"},{"lineNumber":166,"author":{"gitId":"sohenze"},"content":"* You can remove all the item’s tags by typing `t/` without","lastModifiedDate":"2022-09-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"sohenze"},"content":"* `tagi 1 t/Perishable t/Premium` adds the tags `Perishable` and `Premium` to","lastModifiedDate":"2022-09-26"},{"lineNumber":171,"author":{"gitId":"sohenze"},"content":"  the item at index 1","lastModifiedDate":"2022-09-26"},{"lineNumber":172,"author":{"gitId":"sohenze"},"content":"* `tagi 3 t/` removes the tags of the item at index 3","lastModifiedDate":"2022-09-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"sohenze"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2022-09-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"sohenze"},"content":"Exits the program.","lastModifiedDate":"2022-09-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"sohenze"},"content":"Format: `exit`","lastModifiedDate":"2022-09-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"donljh"},"content":"| Action          | Format, Examples                                                                                                                                                                                                          |","lastModifiedDate":"2022-09-28"},{"lineNumber":182,"author":{"gitId":"melissaharijanto"},"content":"|-----------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"donljh"},"content":"| **Add An Order** | `addo i/ITEM_NAME q/ORDER_QUANTITY cn/CUSTOMER_NAME ca/CUSTOMER_ADDRESS ce/CUSTOMER_EMAIL cc/CUSTOMER_CONTACT` \u003cbr\u003e e.g., `addo i/Fountain Pen q/3 cn/John Doe ca/48 Westwood Terrace ce/johndoe@example.com cc/91234567` |","lastModifiedDate":"2022-09-29"},{"lineNumber":184,"author":{"gitId":"melissaharijanto"},"content":"| **Delete An Order** | `deleteo INDEX` \u003cbr\u003e e.g., `deleteo 2`                                                                                                                                                                                    |","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"donljh"},"content":"| **List All Orders** | `listo`                                                                                                                                                                                                                   |","lastModifiedDate":"2022-09-29"},{"lineNumber":186,"author":{"gitId":"donljh"},"content":"| **Find Order(s)**  | `findo KEYWORD [MORE_KEYWORDS]`                                                                                                                                                                                           |","lastModifiedDate":"2022-09-29"},{"lineNumber":187,"author":{"gitId":"donljh"},"content":"| **Add An Inventory Item** | `addi n/NAME [t/TAG]…​` \u003cbr\u003e e.g., `addi n/Chair t/Furniture`                                                                                                                                                             |","lastModifiedDate":"2022-09-29"},{"lineNumber":188,"author":{"gitId":"donljh"},"content":"| **Delete An Inventory Item** | `deletei INDEX`\u003cbr\u003e e.g., `deletei 3`                                                                                                                                                                                     |","lastModifiedDate":"2022-09-29"},{"lineNumber":189,"author":{"gitId":"donljh"},"content":"| **Tag An Inventory Item** | `tagi INDEX [t/TAG]…​` \u003cbr\u003e e.g, `tagi 1 t/Perishable t/Premium`                                                                                                                                                          |","lastModifiedDate":"2022-09-29"},{"lineNumber":190,"author":{"gitId":"donljh"},"content":"| **List All Inventory Items** | `listi`                                                                                                                                                                                                                   |","lastModifiedDate":"2022-09-29"},{"lineNumber":191,"author":{"gitId":"melissaharijanto"},"content":"| **Find Inventory Item(s)** | `findi KEYWORD [MORE_KEYWORDS]` \u003cbr/\u003e e.g., `findi blue shirt`                                                                                                                                                            |","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"janelleljt"},"content":"| **Exit** | `exit`                                                                                                                                                                                                                    |","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"donljh":23,"Jiacheng-y":20,"janelleljt":14,"melissaharijanto":18,"-":105,"sohenze":12}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"donljh"},"content":"    content: \"TrackO\";","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"donljh":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"title: TrackO","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W15-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W15-3/tp/actions)","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W15-3/tp/branch/master/graph/badge.svg?token\u003dH2G32SVMDR)](https://codecov.io/gh/AY2223S1-CS2103T-W15-3/tp)","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"**TrackO is a desktop application that helps you manage your business orders.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"* If you are interested in using TrackO, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"* If you are interested about developing TrackO, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"donljh":7,"-":12}},{"path":"docs/team/donljh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"layout: page","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"title: Lim Jun Hong Don\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"- ### Overview","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"- ### Summary of Contributions","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"    - **Code contributed**: [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003ddonljh\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"    - **Enhancements implemented**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    - **Contributions to the UG**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    - **Contributions to the DG**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    - **Contributions to team-based tasks**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    - **Review/mentoring contributions:**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    - **Contributions beyond the project team:**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    - **Contributions to the Developer Guide (Extracts)**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    - **Contributions to the User Guide (Extracts)**: to be added soon","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"donljh":24}},{"path":"docs/team/janelleljt.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janelleljt"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"janelleljt"},"content":"layout: page","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"janelleljt"},"content":"title: Janelle Loh Jen Teng\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"janelleljt"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"- ### Overview","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"- ### Summary of Contributions","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"    - **Code contributed**: [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dmelissaharijanto\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"    - **Enhancements implemented**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    - **Contributions to the UG**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    - **Contributions to the DG**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    - **Contributions to team-based tasks**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    - **Review/mentoring contributions:**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    - **Contributions beyond the project team:**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    - **Contributions to the Developer Guide (Extracts)**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    - **Contributions to the User Guide (Extracts)**: to be added soon","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"donljh":19,"janelleljt":5}},{"path":"docs/team/jiacheng-y.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jiacheng-y"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jiacheng-y"},"content":"layout: page","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jiacheng-y"},"content":"title: Yang Jiacheng\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jiacheng-y"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jiacheng-y"},"content":"- ### Overview","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jiacheng-y"},"content":"- ### Summary of Contributions","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jiacheng-y"},"content":"  - **Code contributed**: [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djiacheng-y\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jiacheng-y"},"content":"  - **Enhancements implemented**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jiacheng-y"},"content":"  - **Contributions to the UG**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jiacheng-y"},"content":"  - **Contributions to the DG**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jiacheng-y"},"content":"  - **Contributions to team-based tasks**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jiacheng-y"},"content":"  - **Review/mentoring contributions:**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jiacheng-y"},"content":"  - **Contributions beyond the project team:**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jiacheng-y"},"content":"  - **Contributions to the Developer Guide (Extracts)**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jiacheng-y"},"content":"  - **Contributions to the User Guide (Extracts)**: to be added soon","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jiacheng-y":24}},{"path":"docs/team/melissaharijanto.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"melissaharijanto"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":"layout: page","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"melissaharijanto"},"content":"title: Melissa Anastasia Harijanto\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"melissaharijanto"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":"- ### Overview","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"melissaharijanto"},"content":"- ### Summary of Contributions","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":"  - **Code contributed**: [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dmelissaharijanto\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"  - **Enhancements implemented**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":"  - **Contributions to the UG**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":"  - **Contributions to the DG**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"  - **Contributions to team-based tasks**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"  - **Review/mentoring contributions:**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"  - **Contributions beyond the project team:**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"melissaharijanto"},"content":"  - **Contributions to the Developer Guide (Extracts)**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"melissaharijanto"},"content":"  - **Contributions to the User Guide (Extracts)**: to be added soon","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"melissaharijanto":24}},{"path":"docs/team/sohenze.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sohenze"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"sohenze"},"content":"layout: page","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"sohenze"},"content":"title: Soh Enze\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"sohenze"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"sohenze"},"content":"- ### Overview","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"sohenze"},"content":"- ### Summary of Contributions","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"sohenze"},"content":"    - **Code contributed**: [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dsohenze\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"sohenze"},"content":"    - **Enhancements implemented**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"sohenze"},"content":"    - **Contributions to the UG**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"sohenze"},"content":"    - **Contributions to the DG**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"sohenze"},"content":"    - **Contributions to team-based tasks**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"sohenze"},"content":"    - **Review/mentoring contributions:**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"sohenze"},"content":"    - **Contributions beyond the project team:**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"sohenze"},"content":"    - **Contributions to the Developer Guide (Extracts)**: to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"sohenze"},"content":"    - **Contributions to the User Guide (Extracts)**: to be added soon","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"sohenze":24}},{"path":"src/main/java/tracko/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.commons.util.FileUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"donljh":3,"-":61}},{"path":"src/main/java/tracko/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"donljh":1,"-":24}},{"path":"src/main/java/tracko/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.Config;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.Version;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import tracko.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.commons.util.StringUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import tracko.logic.Logic;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.logic.LogicManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"import tracko.model.ModelManager;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyTrackO;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"import tracko.model.TrackO;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"import tracko.model.UserPrefs;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"import tracko.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"import tracko.storage.JsonTrackOStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"import tracko.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"import tracko.storage.Storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"import tracko.storage.StorageManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"import tracko.storage.TrackOStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"import tracko.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"import tracko.ui.Ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"import tracko.ui.UiManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"        TrackOStorage trackOStorage \u003d new JsonTrackOStorage(userPrefs.getOrdersFilePath());","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"        storage \u003d new StorageManager(trackOStorage, userPrefsStorage);","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"        Optional\u003cReadOnlyTrackO\u003e trackOOptional;","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"        ReadOnlyTrackO initialData;","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"            trackOOptional \u003d storage.readTrackO();","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"            if (!trackOOptional.isPresent()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"                logger.info(\"TrackO data file not found. Will be starting with sample data points\");","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"            initialData \u003d trackOOptional.orElseGet(SampleDataUtil::getSampleTrackO);","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TrackO\");","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"            initialData \u003d new TrackO();","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"Jiacheng-y"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TrackO\");","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"donljh"},"content":"            initialData \u003d new TrackO();","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":36,"Jiacheng-y":1,"-":148}},{"path":"src/main/java/tracko/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.core;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":1,"-":62}},{"path":"src/main/java/tracko/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.core;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":1,"-":78}},{"path":"src/main/java/tracko/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.core;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":1,"-":111}},{"path":"src/main/java/tracko/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.core;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"sohenze"},"content":"    public static final String MESSAGE_INVALID_ORDER_DISPLAYED_INDEX \u003d \"The order index provided is invalid\";","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":1,"-":11,"sohenze":1}},{"path":"src/main/java/tracko/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.core;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":1,"-":115}},{"path":"src/main/java/tracko/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.core.index;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"donljh":1,"-":53}},{"path":"src/main/java/tracko/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":1,"-":10}},{"path":"src/main/java/tracko/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":1,"-":20}},{"path":"src/main/java/tracko/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import tracko.MainApp;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"donljh":2,"-":40}},{"path":"src/main/java/tracko/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":1,"-":34}},{"path":"src/main/java/tracko/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.Config;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"donljh":3,"-":20}},{"path":"src/main/java/tracko/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":1,"-":82}},{"path":"src/main/java/tracko/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":3,"-":140}},{"path":"src/main/java/tracko/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        AppUtil.checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        AppUtil.checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":67,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"Jiacheng-y"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"Jiacheng-y"},"content":"     * Returns true if {@code s} represents a non-negative unsigned integer","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"Jiacheng-y"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"Jiacheng-y"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"Jiacheng-y"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"Jiacheng-y"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"Jiacheng-y"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"Jiacheng-y"},"content":"    public static boolean isNonNegativeUnsignedInteger(String s) {","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"Jiacheng-y"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"Jiacheng-y"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"Jiacheng-y"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"Jiacheng-y"},"content":"            return value \u003e\u003d 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"Jiacheng-y"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"Jiacheng-y"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"Jiacheng-y"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":3,"Jiacheng-y":18,"-":64}},{"path":"src/main/java/tracko/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyTrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"     * Returns the TrackO.","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    ReadOnlyTrackO getTrackO();","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    /** Returns an unmodifiable view of the list of orders */","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    ObservableList\u003cOrder\u003e getOrderList();","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"     * Returns the user pref\u0027s order list file path.","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    Path getOrdersFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"donljh":15,"-":35}},{"path":"src/main/java/tracko/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.MultiLevelCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.TrackOParser;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyTrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"import tracko.storage.Storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    private final TrackOParser trackOParser;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"    private MultiLevelCommand inProgressCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"        inProgressCommand \u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"        trackOParser \u003d new TrackOParser();","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"    public CommandResult execute(String userInput) throws CommandException, ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"        logger.info(\"----------------[USER INPUT][\" + userInput + \"]\");","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"        Command command;","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"        if (inProgressCommand !\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"            command \u003d trackOParser.parseAndUpdateCommand(userInput, inProgressCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"        } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"            command \u003d trackOParser.parseCommand(userInput);","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"        if (command.isAwaitingInput()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"            inProgressCommand \u003d (MultiLevelCommand) command;","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"        } else {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"            inProgressCommand \u003d null;","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"            storage.saveTrackO(model.getTrackO());","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"    public ReadOnlyTrackO getTrackO() {","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"        return model.getTrackO();","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"        return model.getOrderList();","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"    public Path getOrdersFilePath() {","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"        return model.getOrdersFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"donljh":53,"-":48}},{"path":"src/main/java/tracko/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import tracko.model.TrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"TrackO has been cleared!\";","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"        model.setTrackO(new TrackO());","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":5,"-":18}},{"path":"src/main/java/tracko/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    protected Command() {}","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    public boolean isMultiLevelCommand() {","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"        return this instanceof MultiLevelCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    public boolean isAwaitingInput() {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":14,"-":17}},{"path":"src/main/java/tracko/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":1,"-":70}},{"path":"src/main/java/tracko/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting TrackO as requested ...\";","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"donljh":3,"-":16}},{"path":"src/main/java/tracko/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":2,"-":19}},{"path":"src/main/java/tracko/logic/commands/MultiLevelCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":" * Represents a command that can accept additional user input in multiple iterations before executing","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"public abstract class MultiLevelCommand extends Command {","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"    protected boolean isCancelled;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"    private boolean isAwaitingInput;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    protected MultiLevelCommand() {","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"        this(true, false);","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    protected MultiLevelCommand(boolean isAwaitingInput, boolean isCancelled) {","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"        this.isAwaitingInput \u003d isAwaitingInput;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"        this.isCancelled \u003d isCancelled;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    public void setAwaitingInput(boolean isAwaitingInput) {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"        this.isAwaitingInput \u003d isAwaitingInput;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    public void cancel() {","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"        this.isCancelled \u003d true;","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    public boolean isAwaitingInput() {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        return isAwaitingInput;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"donljh":33}},{"path":"src/main/java/tracko/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"donljh":1,"-":16}},{"path":"src/main/java/tracko/logic/commands/item/AddItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiacheng-y"},"content":"package tracko.logic.commands.item;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Jiacheng-y"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.logic.commands.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.logic.commands.CommandResult;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.Item;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Jiacheng-y"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Jiacheng-y"},"content":" * Adds an item to TrackO. The AddItemCommand is a single-level command in which the user initiates the item to be","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Jiacheng-y"},"content":" * added using the command word.","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Jiacheng-y"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Jiacheng-y"},"content":"public class AddItemCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Jiacheng-y"},"content":"    public static final String COMMAND_WORD \u003d \"addi\";","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Jiacheng-y"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Initiates an item to add to TrackO. \\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Jiacheng-y"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Jiacheng-y"},"content":"            + CliSyntax.PREFIX_ITEM + \"ITEM NAME \"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Jiacheng-y"},"content":"            + CliSyntax.PREFIX_QUANTITY + \"QUANTITY \"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Jiacheng-y"},"content":"            + CliSyntax.PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Jiacheng-y"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Jiacheng-y"},"content":"            + CliSyntax.PREFIX_ITEM + \"Paper \"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Jiacheng-y"},"content":"            + CliSyntax.PREFIX_QUANTITY + \"1000 \"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Jiacheng-y"},"content":"            + CliSyntax.PREFIX_DESCRIPTION + \"White printing paper \";","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Jiacheng-y"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New item and quantity added:\\n %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Jiacheng-y"},"content":"    private final Item toAdd;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Jiacheng-y"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Jiacheng-y"},"content":"     * Creates an AddItemCommand that is set to await further input from the user.","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Jiacheng-y"},"content":"     * @param item The base item to be created, includes all item details","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Jiacheng-y"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Jiacheng-y"},"content":"    public AddItemCommand(Item item) {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Jiacheng-y"},"content":"        requireNonNull(item);","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Jiacheng-y"},"content":"        toAdd \u003d item;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Jiacheng-y"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Jiacheng-y"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Jiacheng-y"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Jiacheng-y"},"content":"        model.addItem(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"Jiacheng-y"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Jiacheng-y"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Jiacheng-y"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"Jiacheng-y"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Jiacheng-y"},"content":"                || (other instanceof AddItemCommand // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Jiacheng-y"},"content":"                \u0026\u0026 toAdd.equals(((AddItemCommand) other).toAdd));","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"Jiacheng-y"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Jiacheng-y":56}},{"path":"src/main/java/tracko/logic/commands/item/DeleteItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sohenze"},"content":"package tracko.logic.commands.item;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"sohenze"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"sohenze"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"sohenze"},"content":"import tracko.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"sohenze"},"content":"import tracko.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"sohenze"},"content":"import tracko.logic.commands.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"sohenze"},"content":"import tracko.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"sohenze"},"content":"import tracko.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"sohenze"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"sohenze"},"content":"import tracko.model.items.Item;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"sohenze"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"sohenze"},"content":" * Deletes an item identified using it\u0027s displayed index in TrackO.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"sohenze"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"sohenze"},"content":"public class DeleteItemCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"sohenze"},"content":"    public static final String COMMAND_WORD \u003d \"deletei\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"sohenze"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"sohenze"},"content":"            + \": Deletes the item identified by the index number used in the displayed item list.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"sohenze"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"sohenze"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"sohenze"},"content":"    public static final String MESSAGE_DELETE_ORDER_SUCCESS \u003d \"Deleted Item: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"sohenze"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"sohenze"},"content":"    public DeleteItemCommand(Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"sohenze"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"sohenze"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"sohenze"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"sohenze"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"sohenze"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"sohenze"},"content":"        ObservableList\u003cItem\u003e lastShownList \u003d model.getInventoryList();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"sohenze"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"sohenze"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"sohenze"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"sohenze"},"content":"        Item itemToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"sohenze"},"content":"        model.deleteItem(itemToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"sohenze"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ORDER_SUCCESS, itemToDelete));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"sohenze"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"sohenze"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"sohenze"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"sohenze"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"sohenze"},"content":"                || (other instanceof DeleteItemCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"sohenze"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteItemCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"sohenze"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"sohenze"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"sohenze":54}},{"path":"src/main/java/tracko/logic/commands/item/ListItemsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiacheng-y"},"content":"package tracko.logic.commands.item;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"melissaharijanto"},"content":"import tracko.logic.commands.Command;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"melissaharijanto"},"content":"import tracko.logic.commands.CommandResult;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"melissaharijanto"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"melissaharijanto"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":" * Lists all items in the inventory to the user.","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"public class ListItemsCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":"    public static final String COMMAND_WORD \u003d \"listi\";","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all items.\";","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"        // requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"        // model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"        // return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"        // TODO: implement list functionality for orders","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"melissaharijanto"},"content":"        return null;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"melissaharijanto"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Jiacheng-y":1,"melissaharijanto":22}},{"path":"src/main/java/tracko/logic/commands/order/AddOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands.order;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import javafx.util.Pair;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.CommandResult;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.MultiLevelCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.model.order.ItemQuantityPair;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":" * Adds an order to TrackO. The AddOrderCommand is a multi-level command in which the user initiates the order to be","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":" * added using the command word, before progressively adding an order item and associated quantity to the order to be","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":" * added.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"public class AddOrderCommand extends MultiLevelCommand {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    public static final String COMMAND_WORD \u003d \"addo\";","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Initiates an order to add to TrackO. \\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"            + CliSyntax.PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"            + CliSyntax.PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"            + CliSyntax.PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"            + CliSyntax.PREFIX_ADDRESS + \"ADDRESS \\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"            + CliSyntax.PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"            + CliSyntax.PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"            + CliSyntax.PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"            + CliSyntax.PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \";","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_USAGE_2 \u003d \"To add an item and its quantity to the order being created: \\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"        + CliSyntax.PREFIX_ITEM + \"ITEM_NAME \"","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"        + CliSyntax.PREFIX_QUANTITY + \"ITEM_QUANTITY \\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"        + \"Enter \u0027done\u0027 or \u0027cancel\u0027 to finish or abort the command accordingly\";","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_ADDED_ITEM \u003d \"New item and quantity added:\\n %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New order added: %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"    private final Order toAdd;","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"    private Pair\u003cString, Integer\u003e lastItemQuantityPair;","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"     * Creates an AddOrderCommand that is set to await further input from the user.","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"     * @param order The base order to be created, includes all customer details","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"    public AddOrderCommand(Order order) {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"        requireNonNull(order);","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"        toAdd \u003d order;","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"        if (this.isCancelled) {","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"            return new CommandResult(\"Add Order Command Cancelled\");","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"        if (this.isAwaitingInput() \u0026\u0026 lastItemQuantityPair !\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"            return new CommandResult(String.format(MESSAGE_ADDED_ITEM, lastItemQuantityPair));","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"        } else if (this.isAwaitingInput()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"            return new CommandResult(MESSAGE_USAGE_2);","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"        model.addOrder(toAdd);","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"     * Adds an item and quantity pair to the item list.","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"     * @param itemQuantityPair The item and quantity pair","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"    public void addToItemList(ItemQuantityPair itemQuantityPair) {","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"        this.toAdd.addToItemList(itemQuantityPair);","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"        this.lastItemQuantityPair \u003d itemQuantityPair;","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"                || (other instanceof AddOrderCommand // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"                \u0026\u0026 toAdd.equals(((AddOrderCommand) other).toAdd));","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":65,"-":25}},{"path":"src/main/java/tracko/logic/commands/order/DeleteOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands.order;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sohenze"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"sohenze"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"sohenze"},"content":"import tracko.commons.core.Messages;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.Command;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.CommandResult;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"sohenze"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"sohenze"},"content":" * Deletes an order identified using it\u0027s displayed index in TrackO.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"public class DeleteOrderCommand extends Command {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"sohenze"},"content":"    public static final String COMMAND_WORD \u003d \"deleteo\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"sohenze"},"content":"            + \": Deletes the order identified by the index number used in the displayed order list.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"sohenze"},"content":"    public static final String MESSAGE_DELETE_ORDER_SUCCESS \u003d \"Deleted Order: %1$s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    public DeleteOrderCommand(Index targetIndex) {","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"sohenze"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"sohenze"},"content":"        ObservableList\u003cOrder\u003e lastShownList \u003d model.getOrderList();","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"sohenze"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"sohenze"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"sohenze"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"sohenze"},"content":"        Order orderToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"sohenze"},"content":"        model.deleteOrder(orderToDelete);","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"sohenze"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ORDER_SUCCESS, orderToDelete));","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"                || (other instanceof DeleteOrderCommand // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteOrderCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":10,"-":25,"sohenze":19}},{"path":"src/main/java/tracko/logic/commands/order/EditOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands.order;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.Command;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.CommandResult;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"import tracko.model.person.Person;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"import tracko.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"public class EditOrderCommand extends Command {","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"            + \"[\" + CliSyntax.PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"            + \"[\" + CliSyntax.PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"            + \"[\" + CliSyntax.PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"            + \"[\" + CliSyntax.PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"            + \"[\" + CliSyntax.PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"            + CliSyntax.PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"            + CliSyntax.PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"    public EditOrderCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"        // requireNonNull(model);","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"        // List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"        //","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"        // if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"        //    throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"        // }","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"        //","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"        // Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"        // Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"        //","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"        // if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"        //    throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"        // }","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"        //","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"        // model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"        // model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"        // return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"        // TODO: implement edit order functionality","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"        return null;","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"donljh"},"content":"        if (!(other instanceof EditOrderCommand)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"donljh"},"content":"        EditOrderCommand e \u003d (EditOrderCommand) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"donljh":44,"-":179}},{"path":"src/main/java/tracko/logic/commands/order/FindOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands.order;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.Command;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.CommandResult;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import tracko.model.order.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"public class FindOrderCommand extends Command {","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    public FindOrderCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"        // requireNonNull(model);","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        // model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        // return new CommandResult(","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"        //        String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"        return null;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"                || (other instanceof FindOrderCommand // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"                \u0026\u0026 predicate.equals(((FindOrderCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"donljh":14,"-":28}},{"path":"src/main/java/tracko/logic/commands/order/ListOrdersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands.order;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.Command;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.CommandResult;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"public class ListOrdersCommand extends Command {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"        // requireNonNull(model);","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"        // model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"        // return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"        // TODO: implement list functionality for orders","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"        return null;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"donljh":25}},{"path":"src/main/java/tracko/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"donljh":1,"-":59}},{"path":"src/main/java/tracko/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"donljh":1,"-":147}},{"path":"src/main/java/tracko/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    public static final Prefix PREFIX_ITEM \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    public static final Prefix PREFIX_QUANTITY \u003d new Prefix(\"q/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"Jiacheng-y"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"donljh":3,"Jiacheng-y":1,"-":13}},{"path":"src/main/java/tracko/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"donljh":3,"-":13}},{"path":"src/main/java/tracko/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.commons.util.StringUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.Description;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.ItemName;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.Quantity;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"import tracko.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"Jiacheng-y"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"Jiacheng-y"},"content":"     * Parses a {@code String itemName} into a {@code ItemName}.","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"Jiacheng-y"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"Jiacheng-y"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"Jiacheng-y"},"content":"     * @throws ParseException if the given {@code itemName} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"Jiacheng-y"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"Jiacheng-y"},"content":"    public static ItemName parseItemName(String itemName) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"Jiacheng-y"},"content":"        requireNonNull(itemName);","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"Jiacheng-y"},"content":"        String trimmedName \u003d itemName.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"Jiacheng-y"},"content":"        if (!ItemName.isValidItemName(trimmedName)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"Jiacheng-y"},"content":"            throw new ParseException(ItemName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"Jiacheng-y"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"Jiacheng-y"},"content":"        return new ItemName(trimmedName);","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"Jiacheng-y"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"Jiacheng-y"},"content":"     * Parses {@code String quantity} into an {@code Quantity} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"Jiacheng-y"},"content":"     * trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"Jiacheng-y"},"content":"     * @throws ParseException if the specified quantity is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"Jiacheng-y"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"Jiacheng-y"},"content":"    public static Quantity parseQuantity(String quantity) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"Jiacheng-y"},"content":"        String trimmedQuantity \u003d quantity.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"Jiacheng-y"},"content":"        if (!StringUtil.isNonNegativeUnsignedInteger(trimmedQuantity)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"Jiacheng-y"},"content":"            throw new ParseException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"Jiacheng-y"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"Jiacheng-y"},"content":"        return new Quantity(Integer.parseInt(trimmedQuantity));","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"Jiacheng-y"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"Jiacheng-y"},"content":"     * Parses a {@code String description} into an {@code Description}.","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"Jiacheng-y"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"Jiacheng-y"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"Jiacheng-y"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"Jiacheng-y"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"Jiacheng-y"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"Jiacheng-y"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"Jiacheng-y"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"Jiacheng-y"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"Jiacheng-y"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"Jiacheng-y"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"Jiacheng-y"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"donljh":9,"Jiacheng-y":46,"-":115}},{"path":"src/main/java/tracko/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"donljh":1,"-":38}},{"path":"src/main/java/tracko/logic/parser/TrackOParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.MultiLevelCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.logic.commands.item.AddItemCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"sohenze"},"content":"import tracko.logic.commands.item.DeleteItemCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"sohenze"},"content":"import tracko.logic.commands.order.DeleteOrderCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.logic.parser.item.AddItemCommandParser;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"sohenze"},"content":"import tracko.logic.parser.item.DeleteItemCommandParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.order.AddOrderCommandParser;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"sohenze"},"content":"import tracko.logic.parser.order.DeleteOrderCommandParser;","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"public class TrackOParser {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"     * Parses user input and update an in-progress command for execution.","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"     * @param userInput full user input string","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"     * @param command the in-progress command to be updated","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"     * @return The updated command based on the user input","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    public MultiLevelCommand parseAndUpdateCommand(String userInput, MultiLevelCommand command) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"        if (command instanceof AddOrderCommand) {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"            return new AddOrderCommandParser().parseStageTwo(userInput, (AddOrderCommand) command);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"        throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"        System.out.println(commandWord);","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"        System.out.println(arguments);","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"        case AddOrderCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"            return new AddOrderCommandParser().parse(arguments);","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"        // (commands kept for reference)","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"        // case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"        //     return new AddCommandParser().parse(arguments);","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"        //","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"        // case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"        //     return new EditCommandParser().parse(arguments);","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"        //","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"sohenze"},"content":"        case DeleteOrderCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"sohenze"},"content":"            return new DeleteOrderCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"        //","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"        // case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"        //     return new ClearCommand();","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"        //","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"        // case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"        //     return new FindCommandParser().parse(arguments);","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"        //","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"        // case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"        //     return new ListCommand();","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"        //","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"        // case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"        //     return new HelpCommand();","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":92,"author":{"gitId":"Jiacheng-y"},"content":"        case AddItemCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"Jiacheng-y"},"content":"            return new AddItemCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"sohenze"},"content":"        case DeleteItemCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"sohenze"},"content":"            return new DeleteItemCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"donljh"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"donljh"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":53,"Jiacheng-y":5,"-":39,"sohenze":9}},{"path":"src/main/java/tracko/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"donljh":2,"-":15}},{"path":"src/main/java/tracko/logic/parser/item/AddItemCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiacheng-y"},"content":"package tracko.logic.parser.item;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Jiacheng-y"},"content":"import static tracko.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Jiacheng-y"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Jiacheng-y"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Jiacheng-y"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Jiacheng-y"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Jiacheng-y"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.logic.commands.item.AddItemCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.logic.parser.Parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.logic.parser.Prefix;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.Description;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.Item;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.ItemName;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.Quantity;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Jiacheng-y"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Jiacheng-y"},"content":" * Parse inout arguments and creates a new/update AddItemCommand Object","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Jiacheng-y"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Jiacheng-y"},"content":"public class AddItemCommandParser implements Parser\u003cAddItemCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Jiacheng-y"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Jiacheng-y"},"content":"     * Parses the given {@code String} of arguments in the context of the AddItemCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Jiacheng-y"},"content":"     * and returns an AddItemCommand object for execution.","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Jiacheng-y"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Jiacheng-y"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Jiacheng-y"},"content":"    public AddItemCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Jiacheng-y"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Jiacheng-y"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ITEM, PREFIX_QUANTITY, PREFIX_DESCRIPTION);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Jiacheng-y"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ITEM, PREFIX_QUANTITY, PREFIX_DESCRIPTION)","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Jiacheng-y"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Jiacheng-y"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddItemCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Jiacheng-y"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Jiacheng-y"},"content":"        ItemName itemName \u003d ParserUtil.parseItemName(argMultimap.getValue(PREFIX_ITEM).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Jiacheng-y"},"content":"        Quantity quantity \u003d ParserUtil.parseQuantity(argMultimap.getValue(PREFIX_QUANTITY).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Jiacheng-y"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"Jiacheng-y"},"content":"        Item item \u003d new Item(itemName, description, quantity, new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Jiacheng-y"},"content":"        return new AddItemCommand(item);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"Jiacheng-y"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Jiacheng-y"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Jiacheng-y"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"Jiacheng-y"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"Jiacheng-y"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"Jiacheng-y"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"Jiacheng-y"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Jiacheng-y":59}},{"path":"src/main/java/tracko/logic/parser/item/DeleteItemCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sohenze"},"content":"package tracko.logic.parser.item;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"sohenze"},"content":"import static tracko.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"sohenze"},"content":"import tracko.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"sohenze"},"content":"import tracko.logic.commands.item.DeleteItemCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"sohenze"},"content":"import tracko.logic.parser.Parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"sohenze"},"content":"import tracko.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"sohenze"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"sohenze"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"sohenze"},"content":" * Parses input arguments and creates a new DeleteItemCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"sohenze"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"sohenze"},"content":"public class DeleteItemCommandParser implements Parser\u003cDeleteItemCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"sohenze"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"sohenze"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteItemCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"sohenze"},"content":"     * and returns a DeleteItemCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"sohenze"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"sohenze"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"sohenze"},"content":"    public DeleteItemCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"sohenze"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"sohenze"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"sohenze"},"content":"            return new DeleteItemCommand(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"sohenze"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"sohenze"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"sohenze"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteItemCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"sohenze"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"sohenze"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"sohenze"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"sohenze":31}},{"path":"src/main/java/tracko/logic/parser/order/AddOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser.order;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.Parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.Prefix;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Address;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Email;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"import tracko.model.order.ItemQuantityPair;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Name;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Phone;","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":" * Parses input arguments and creates a new/update AddOrderCommand object","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"public class AddOrderCommandParser implements Parser\u003cAddOrderCommand\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"     * Parses the given {@code String} of arguments in the context of the AddOrderCommand","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"     * and returns an AddOrderCommand object for execution.","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"    public AddOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"        Order order \u003d new Order(name, phone, email, address, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"        return new AddOrderCommand(order);","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"     * Parses the given {@code String} of arguments in the context of the given AddOrderCommand that is awaiting","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"     * further input of order items and quantities.","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"     * @param args The user input","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"     * @param command The given AddOrderCommand","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"     * @return The updated command.","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"    public AddOrderCommand parseStageTwo(String args, AddOrderCommand command) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"        if (args.equals(\"done\")) {","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"            command.setAwaitingInput(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"            return command;","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"        } else if (args.equals(\"cancel\")) {","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"            command.setAwaitingInput(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"            command.cancel();","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"            return command;","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"            ArgumentTokenizer.tokenize(\" \" + args, PREFIX_ITEM, PREFIX_QUANTITY);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ITEM, PREFIX_QUANTITY)","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE_2));","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"        String item \u003d argMultimap.getValue(PREFIX_ITEM).get();","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"        Integer quantity \u003d Integer.parseInt(argMultimap.getValue(PREFIX_QUANTITY).get());","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"        command.addToItemList(new ItemQuantityPair(item, quantity));","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"        return command;","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"donljh":72,"-":26}},{"path":"src/main/java/tracko/logic/parser/order/DeleteOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser.order;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.order.DeleteOrderCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.Parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"sohenze"},"content":" * Parses input arguments and creates a new DeleteOrderCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"public class DeleteOrderCommandParser implements Parser\u003cDeleteOrderCommand\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"sohenze"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteOrderCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"sohenze"},"content":"     * and returns a DeleteOrderCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    public DeleteOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"            return new DeleteOrderCommand(index);","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"donljh":11,"-":17,"sohenze":3}},{"path":"src/main/java/tracko/logic/parser/order/EditOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser.order;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.order.EditOrderCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.order.EditOrderCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.Parser;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"import tracko.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"public class EditOrderCommandParser implements Parser\u003cEditOrderCommand\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    public EditOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"                    CliSyntax.PREFIX_EMAIL, CliSyntax.PREFIX_ADDRESS, CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get()));","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(CliSyntax.PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(CliSyntax.PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"                argMultimap.getValue(CliSyntax.PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"        parseTagsForEdit(argMultimap.getAllValues(CliSyntax.PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"            throw new ParseException(EditOrderCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"        return new EditOrderCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"donljh":29,"-":55}},{"path":"src/main/java/tracko/logic/parser/order/FindOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser.order;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.order.FindOrderCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.Parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.model.order.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"public class FindOrderCommandParser implements Parser\u003cFindOrderCommand\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    public FindOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        return new FindOrderCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"donljh":10,"-":24}},{"path":"src/main/java/tracko/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.Item;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"    // TrackO \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    // TODO: add item related methods","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"     * Returns the user pref\u0027s orders file path.","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"    Path getOrdersFilePath();","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"     * Sets the user pref\u0027s orders file path.","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    void setOrdersFilePath(Path ordersFilePath);","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"     * Replaces application data with the data in {@code trackO}","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"    void setTrackO(ReadOnlyTrackO trackO);","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"    /** Returns the TrackO */","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"    ReadOnlyTrackO getTrackO();","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"     * Adds the given order.","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"    void addOrder(Order order);","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"Jiacheng-y"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"sohenze"},"content":"     * Deletes the given order.","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"Jiacheng-y"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"sohenze"},"content":"    void deleteOrder(Order order);","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"     * Returns the order list.","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"    ObservableList\u003cOrder\u003e getOrderList();","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"Jiacheng-y"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"Jiacheng-y"},"content":"     * Adds the given item.","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Jiacheng-y"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Jiacheng-y"},"content":"    void addItem(Item item);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"sohenze"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"sohenze"},"content":"     * Deletes the given item.","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"sohenze"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"sohenze"},"content":"    void deleteItem(Item item);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"sohenze"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"sohenze"},"content":"     * Returns the item list.","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"sohenze"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"sohenze"},"content":"    ObservableList\u003cItem\u003e getInventoryList();","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"donljh":34,"Jiacheng-y":8,"-":35,"sohenze":13}},{"path":"src/main/java/tracko/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.Item;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":" * Represents the in-memory model of the application data.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    private final TrackO trackO;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    public ModelManager(ReadOnlyTrackO trackO, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        // After iteration, remove addressbook-related data/fields","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"        requireAllNonNull(trackO, userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        logger.fine(\"Initializing with TrackO: \" + trackO + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"        this.trackO \u003d new TrackO(trackO);","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"        this(new TrackO(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"    public Path getOrdersFilePath() {","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"        return userPrefs.getOrdersFilePath();","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"    public void setOrdersFilePath(Path ordersFilePath) {","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"        requireNonNull(ordersFilePath);","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"        userPrefs.setOrdersFilePath(ordersFilePath);","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"    // TODO: add items file path related methods","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TrackO \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"    // TODO: add items related methods","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"    public void setTrackO(ReadOnlyTrackO trackO) {","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"        this.trackO.resetData(trackO);","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"    public ReadOnlyTrackO getTrackO() {","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"        return trackO;","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"donljh"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"donljh"},"content":"        trackO.addOrder(order);","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"sohenze"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"sohenze"},"content":"    public void deleteOrder(Order order) {","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"sohenze"},"content":"        trackO.deleteOrder(order);","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"sohenze"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"donljh"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"donljh"},"content":"        return trackO.getOrderList();","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":104,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"Jiacheng-y"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"Jiacheng-y"},"content":"    public void addItem(Item item) {","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"Jiacheng-y"},"content":"        trackO.addItem(item);","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"sohenze"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"sohenze"},"content":"    public void deleteItem(Item item) {","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"sohenze"},"content":"        trackO.deleteItem(item);","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"sohenze"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"sohenze"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"sohenze"},"content":"    public ObservableList\u003cItem\u003e getInventoryList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"sohenze"},"content":"        return trackO.getInventoryList();","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"sohenze"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"donljh"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"donljh"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"donljh"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"donljh"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"donljh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"donljh"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"donljh"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"donljh"},"content":"        // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"donljh"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"donljh"},"content":"        return trackO.equals(other.trackO)","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"donljh"},"content":"            \u0026\u0026 userPrefs.equals(other.userPrefs);","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":63,"Jiacheng-y":6,"-":53,"sohenze":15}},{"path":"src/main/java/tracko/model/ReadOnlyTrackO.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.Item;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" * Unmodifiable view of the TrackO application.","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"public interface ReadOnlyTrackO {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"     * Returns an unmodifeable view of the orders list.","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    ObservableList\u003cOrder\u003e getOrderList();","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"Jiacheng-y"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Jiacheng-y"},"content":"     * Returns an unmodifeable view of the inventory list.","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Jiacheng-y"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Jiacheng-y"},"content":"    ObservableList\u003cItem\u003e getInventoryList();","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"donljh":16,"Jiacheng-y":6}},{"path":"src/main/java/tracko/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"donljh":2,"-":14}},{"path":"src/main/java/tracko/model/TrackO.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.InventoryList;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.Item;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.model.order.OrderList;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":" * Wraps all data at the root level","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"public class TrackO implements ReadOnlyTrackO {","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    private final OrderList orders;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"Jiacheng-y"},"content":"    private final InventoryList items;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    {","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"        orders \u003d new OrderList();","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"Jiacheng-y"},"content":"        items \u003d new InventoryList();","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    public TrackO() {}","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"     * Creates an AddressBook using the data in the {@code toBeCopied}","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    public TrackO(ReadOnlyTrackO toBeCopied) {","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"        this();","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"        this.orders.setOrders(orders);","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"Jiacheng-y"},"content":"    public void setItems(List\u003cItem\u003e items) {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Jiacheng-y"},"content":"        this.items.setItems(items);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"    public void resetData(ReadOnlyTrackO newData) {","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"        setOrders(newData.getOrderList());","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"     * Adds an order to be tracked.","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"     * @param order The order to be added","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"        orders.add(order);","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"sohenze"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"sohenze"},"content":"     * Deletes an order to be tracked.","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"sohenze"},"content":"     * @param order The order to be deleted","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"sohenze"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"sohenze"},"content":"    public void deleteOrder(Order order) {","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"sohenze"},"content":"        orders.delete(order);","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"sohenze"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Jiacheng-y"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"Jiacheng-y"},"content":"     * Adds an item to be tracked.","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"Jiacheng-y"},"content":"     * @param item The item to be added","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"Jiacheng-y"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"Jiacheng-y"},"content":"    public void addItem(Item item) {","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"Jiacheng-y"},"content":"        items.add(item);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"sohenze"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"sohenze"},"content":"     * Deletes an item to be tracked.","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"sohenze"},"content":"     * @param item The item to be added","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"sohenze"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"sohenze"},"content":"    public void deleteItem(Item item) {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"sohenze"},"content":"        items.delete(item);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"sohenze"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"        return orders.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"Jiacheng-y"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"Jiacheng-y"},"content":"    public ObservableList\u003cItem\u003e getInventoryList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"Jiacheng-y"},"content":"        return items.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"donljh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"donljh"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"donljh"},"content":"                || (other instanceof TrackO)","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"donljh"},"content":"                \u0026\u0026 orders.equals(((TrackO) other).orders);","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"donljh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"donljh"},"content":"        return orders.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"donljh":69,"Jiacheng-y":21,"sohenze":16}},{"path":"src/main/java/tracko/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Jiacheng-y"},"content":"    private Path ordersFilePath \u003d Paths.get(\"data\", \"trackO.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"    public Path getOrdersFilePath() {","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"        return ordersFilePath;","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"    public void setOrdersFilePath(Path ordersFilePath) {","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"        requireNonNull(ordersFilePath);","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"        this.ordersFilePath \u003d ordersFilePath;","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"                \u0026\u0026 ordersFilePath.equals(o.ordersFilePath)","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, ordersFilePath);","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"donljh"},"content":"        sb.append(\"\\nLocal order data file location : \" + ordersFilePath);","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":14,"Jiacheng-y":1,"-":84}},{"path":"src/main/java/tracko/model/items/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"melissaharijanto"},"content":"package tracko.model.items;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"melissaharijanto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"melissaharijanto"},"content":"import static tracko.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"melissaharijanto"},"content":" * Represents an item\u0027s description.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":"public class Description {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Descriptions can take any values, and it should not be blank\";","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":"    public final String value;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"     * Constructs an {@code description}.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"     * @param description","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"    public Description(String description) {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"melissaharijanto"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"melissaharijanto"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"melissaharijanto"},"content":"        value \u003d description;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"melissaharijanto"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"melissaharijanto"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"melissaharijanto"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"melissaharijanto"},"content":"        return value;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"melissaharijanto"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"melissaharijanto"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"melissaharijanto"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"melissaharijanto"},"content":"                \u0026\u0026 value.equals(((Description) other).value)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"melissaharijanto"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"melissaharijanto"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"melissaharijanto"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"melissaharijanto":46}},{"path":"src/main/java/tracko/model/items/InventoryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"melissaharijanto"},"content":"package tracko.model.items;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Jiacheng-y"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Jiacheng-y"},"content":"import static tracko.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Jiacheng-y"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":" * Represents the list of items in the inventory.","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"melissaharijanto"},"content":"public class InventoryList implements Iterable\u003cItem\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"    private final ObservableList\u003cItem\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"    private final ObservableList\u003cItem\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Jiacheng-y"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Jiacheng-y"},"content":"     * Adds an item to the inventory list.","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Jiacheng-y"},"content":"     * @param toAdd Item to be added to the list","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Jiacheng-y"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Jiacheng-y"},"content":"    public void add(Item toAdd) {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Jiacheng-y"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Jiacheng-y"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"sohenze"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"sohenze"},"content":"     * Deletes an item from the inventory list.","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"sohenze"},"content":"     * @param toDelete Item to be deleted from the list","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"sohenze"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"sohenze"},"content":"    public void delete(Item toDelete) {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"sohenze"},"content":"        requireNonNull(toDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"sohenze"},"content":"        internalList.remove(toDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"sohenze"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Jiacheng-y"},"content":"    public void setItems(InventoryList replacement) {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Jiacheng-y"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Jiacheng-y"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Jiacheng-y"},"content":"    public void setItems(List\u003cItem\u003e items) {","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Jiacheng-y"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Jiacheng-y"},"content":"        internalList.setAll(items);","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"melissaharijanto"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"melissaharijanto"},"content":"    public ObservableList\u003cItem\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"melissaharijanto"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"melissaharijanto"},"content":"    public Iterator\u003cItem\u003e iterator() {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"melissaharijanto"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"melissaharijanto"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"melissaharijanto"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"melissaharijanto"},"content":"                || (other instanceof InventoryList // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"melissaharijanto"},"content":"                \u0026\u0026 internalList.equals(((InventoryList) other).internalList));","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"melissaharijanto"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"melissaharijanto"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"melissaharijanto"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Jiacheng-y":23,"melissaharijanto":42,"sohenze":9}},{"path":"src/main/java/tracko/model/items/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"melissaharijanto"},"content":"package tracko.model.items;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"melissaharijanto"},"content":"import static tracko.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"melissaharijanto"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"melissaharijanto"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"import tracko.model.tag.Tag;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":" * Represents an item in the inventory list.","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"melissaharijanto"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"public class Item {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"    public final ItemName itemName;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"    public final Description description;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"    public final Quantity quantity;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"    public final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"melissaharijanto"},"content":"     * Constructs an {@code item}.","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"melissaharijanto"},"content":"     * @param itemName The name of the item.","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"melissaharijanto"},"content":"     * @param description The description of the item.","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"melissaharijanto"},"content":"     * @param quantity The quantity of the item.","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"melissaharijanto"},"content":"     * @param tags The tags associated with the item.","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"melissaharijanto"},"content":"    public Item(ItemName itemName, Description description, Quantity quantity, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"melissaharijanto"},"content":"        requireAllNonNull(itemName, description, tags);","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"melissaharijanto"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"melissaharijanto"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"melissaharijanto"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"melissaharijanto"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"melissaharijanto"},"content":"    public ItemName getItemName() {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"melissaharijanto"},"content":"        return itemName;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"melissaharijanto"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"melissaharijanto"},"content":"        return description;","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"melissaharijanto"},"content":"    public Quantity getQuantity() {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"melissaharijanto"},"content":"        return quantity;","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"melissaharijanto"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"melissaharijanto"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"melissaharijanto"},"content":"     * Returns true if both items have the same identity and data fields.","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"melissaharijanto"},"content":"     * This defines a stronger notion of equality between two items.","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"melissaharijanto"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"melissaharijanto"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"melissaharijanto"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"melissaharijanto"},"content":"        if (!(other instanceof Item)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"melissaharijanto"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"melissaharijanto"},"content":"        Item otherItem \u003d (Item) other;","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"melissaharijanto"},"content":"        return otherItem.getItemName().equals(getItemName())","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"melissaharijanto"},"content":"                \u0026\u0026 otherItem.getDescription().equals(getDescription())","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"melissaharijanto"},"content":"                \u0026\u0026 otherItem.getQuantity().equals(getQuantity())","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"melissaharijanto"},"content":"                \u0026\u0026 otherItem.getTags().equals(getTags());","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"melissaharijanto"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"melissaharijanto"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"melissaharijanto"},"content":"        return Objects.hash(itemName, description, quantity, tags);","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"melissaharijanto"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"melissaharijanto"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"melissaharijanto"},"content":"        builder.append(getItemName())","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"melissaharijanto"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"melissaharijanto"},"content":"                .append(getDescription())","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"melissaharijanto"},"content":"                .append(\"; Quantity: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"melissaharijanto"},"content":"                .append(getQuantity());","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"melissaharijanto"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"melissaharijanto"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"melissaharijanto"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"melissaharijanto"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"melissaharijanto"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"melissaharijanto"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"melissaharijanto":97}},{"path":"src/main/java/tracko/model/items/ItemName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"melissaharijanto"},"content":"package tracko.model.items;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"melissaharijanto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"melissaharijanto"},"content":"import static tracko.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"melissaharijanto"},"content":" * Represents an item\u0027s name.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":"public class ItemName {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":"            \"Item names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"melissaharijanto"},"content":"    public final String itemName;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"     * Constructs an {@code ItemName}.","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"     * @param itemName The name of the item.","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"melissaharijanto"},"content":"    public ItemName(String itemName) {","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"melissaharijanto"},"content":"        requireNonNull(itemName);","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"melissaharijanto"},"content":"        checkArgument(isValidItemName(itemName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"melissaharijanto"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"melissaharijanto"},"content":"    public static boolean isValidItemName(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"melissaharijanto"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"melissaharijanto"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"melissaharijanto"},"content":"        return itemName;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"melissaharijanto"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"melissaharijanto"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"melissaharijanto"},"content":"                || (other instanceof ItemName // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"melissaharijanto"},"content":"                \u0026\u0026 itemName.equals(((ItemName) other).itemName)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"melissaharijanto"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"melissaharijanto"},"content":"        return itemName.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"melissaharijanto"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"melissaharijanto":50}},{"path":"src/main/java/tracko/model/items/Quantity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"melissaharijanto"},"content":"package tracko.model.items;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"melissaharijanto"},"content":"import static tracko.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"melissaharijanto"},"content":"import static tracko.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"melissaharijanto"},"content":" * Represents the quantity of an item.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":"public class Quantity {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":"            \"Quantity should not be negative.\";","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":"    public final int quantity;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"     * Constructs a {@code Quantity}.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"     * @param quantity The quantity of an item.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"    public Quantity(int quantity) {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"        requireAllNonNull(quantity);","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"melissaharijanto"},"content":"        checkArgument(isValidQuantity(quantity), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"melissaharijanto"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"melissaharijanto"},"content":"    public static boolean isValidQuantity(int quantity) {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"melissaharijanto"},"content":"        return !(quantity \u003c 0);","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"melissaharijanto"},"content":"    public Integer getQuantity() {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"melissaharijanto"},"content":"        return this.quantity;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"melissaharijanto"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"melissaharijanto"},"content":"        return String.valueOf(quantity);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"melissaharijanto"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"melissaharijanto"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"melissaharijanto"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"melissaharijanto"},"content":"        if (!(other instanceof Quantity)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"melissaharijanto"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"melissaharijanto"},"content":"        Quantity otherPair \u003d (Quantity) other;","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"melissaharijanto"},"content":"        return this.equals(otherPair.getQuantity());","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"melissaharijanto"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"melissaharijanto":51}},{"path":"src/main/java/tracko/model/order/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.order;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * Represents a Order\u0027s customer address in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":3,"-":54}},{"path":"src/main/java/tracko/model/order/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.order;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * Represents a Order\u0027s customer email in the order list.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":3,"-":68}},{"path":"src/main/java/tracko/model/order/ItemQuantityPair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.order;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import javafx.util.Pair;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" * Represents an item and quantity pair to be added to an {@code Order\u0027s} item list.","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":" * */","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"public class ItemQuantityPair extends Pair\u003cString, Integer\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"     * Constructs an ItemQuantityPair with the given item and quantity.","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"     * @param item The given item","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"     * @param quantity The given quantity","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    public ItemQuantityPair(String item, Integer quantity) {","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"        super(item, quantity);","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"        requireAllNonNull(item, quantity);","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    public String getItem() {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"        return this.getKey();","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    public Integer getQuantity() {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"        return this.getValue();","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"        return this.getQuantity() + \" * \" + this.getItem();","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"        if (!(other instanceof ItemQuantityPair)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"        ItemQuantityPair otherPair \u003d (ItemQuantityPair) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"        return getItem().equals(otherPair.getItem())","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"            \u0026\u0026 getQuantity().equals(otherPair.getQuantity());","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"donljh":49}},{"path":"src/main/java/tracko/model/order/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.order;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * Represents a Order\u0027s customer name in the order list.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":4,"-":55}},{"path":"src/main/java/tracko/model/order/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.order;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import tracko.commons.util.StringUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":" * Tests that a {@code Order}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(order.getName().fullName, keyword));","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"donljh":6,"-":25}},{"path":"src/main/java/tracko/model/order/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.order;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":" * Represents an Order in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"public class Order {","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    private final Name name;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    private final Phone phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    private final Email email;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    private final Address address;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    private final LocalDateTime timeCreated;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    private final List\u003cItemQuantityPair\u003e itemList;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    public Order(Name name, Phone phone, Email email, Address address, List\u003cItemQuantityPair\u003e itemList) {","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"        requireAllNonNull(name, phone, email, address, itemList);","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        this.itemList \u003d itemList;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        this.timeCreated \u003d LocalDateTime.now();","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    public Name getName() {","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"        return name;","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"        return phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"    public Email getEmail() {","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"        return email;","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"    public Address getAddress() {","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"        return address;","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"    public List\u003cItemQuantityPair\u003e getItemList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"        return itemList;","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"    public void addToItemList(ItemQuantityPair itemQuantityPair) {","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"        this.itemList.add(itemQuantityPair);","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"    public LocalDateTime getTimeCreated() {","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"        return timeCreated;","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"        return Objects.hash(name, phone, email, address, timeCreated, itemList);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"        if (!(other instanceof Order)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"        Order otherOrder \u003d (Order) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"        return otherOrder.getName().equals(getName())","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"            \u0026\u0026 otherOrder.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"            \u0026\u0026 otherOrder.getEmail().equals(getEmail())","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"            \u0026\u0026 otherOrder.getAddress().equals(getAddress())","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"            \u0026\u0026 otherOrder.getItemList().equals(getItemList());","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"        sb.append(\"Name: \" + getName().fullName + \"\\n\");","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"        sb.append(\"Phone: \" + getPhone().value + \"\\n\");","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"        sb.append(\"Email: \" + getEmail().value + \"\\n\");","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"donljh"},"content":"        sb.append(\"Address: \" + getAddress().value + \"\\n\");","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"donljh"},"content":"        sb.append(\"Item List: \\n\");","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"donljh"},"content":"        for (ItemQuantityPair itemQuantityPair : getItemList()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"donljh"},"content":"            sb.append(\"\\u2022 \" + itemQuantityPair.toString() + \"\\n\");","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"donljh"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"donljh":98}},{"path":"src/main/java/tracko/model/order/OrderList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.order;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":" * A list of orders.","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":" * Supports a minimal set of list operations","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"public class OrderList implements Iterable\u003cOrder\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    private final ObservableList\u003cOrder\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    private final ObservableList\u003cOrder\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"sohenze"},"content":"     * Adds an order to the list.","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"sohenze"},"content":"     * The order must not already exist in the list.","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    public void add(Order toAdd) {","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"sohenze"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"sohenze"},"content":"     * Delete an order from the list.","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"sohenze"},"content":"     * The order exist in the list.","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"sohenze"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"sohenze"},"content":"    public void delete(Order toDelete) {","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"sohenze"},"content":"        requireNonNull(toDelete);","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"sohenze"},"content":"        internalList.remove(toDelete);","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"sohenze"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    public void setOrders(OrderList replacement) {","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"        requireAllNonNull(orders);","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"        internalList.setAll(orders);","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"    public ObservableList\u003cOrder\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"    public Iterator\u003cOrder\u003e iterator() {","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"            || (other instanceof OrderList // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"            \u0026\u0026 internalList.equals(((OrderList) other).internalList));","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"donljh":63,"sohenze":11}},{"path":"src/main/java/tracko/model/order/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.order;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * Represents a Order\u0027s customer phone number in the order list.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":3,"-":50}},{"path":"src/main/java/tracko/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import tracko.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":7,"-":120}},{"path":"src/main/java/tracko/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":4,"-":133}},{"path":"src/main/java/tracko/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.person.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"donljh":1,"-":10}},{"path":"src/main/java/tracko/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.person.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"donljh":1,"-":5}},{"path":"src/main/java/tracko/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donljh":2,"-":52}},{"path":"src/main/java/tracko/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyTrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import tracko.model.TrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Address;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Email;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.model.order.ItemQuantityPair;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Name;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Phone;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    // /**","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    //  * Returns a tag set containing the list of strings given.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    //  */","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    // public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    //     return Arrays.stream(strings)","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    //             .map(Tag::new)","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    //             .collect(Collectors.toSet());","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    public static Order[] getSampleOrders() {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"        return new Order[] {","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"            new Order(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"                List.of(new ItemQuantityPair(\"Keychain\", 3))),","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"            new Order(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"                List.of(new ItemQuantityPair(\"Bolster\", 2))),","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"            new Order(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"                List.of(new ItemQuantityPair(\"Pillow\", 4))),","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"            new Order(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"                List.of(new ItemQuantityPair(\"Mattress\", 1)))","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"        };","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"    public static ReadOnlyTrackO getSampleTrackO() {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"        TrackO sampleTrackO \u003d new TrackO();","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"        for (Order sampleOrder : getSampleOrders()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"            sampleTrackO.addOrder(sampleOrder);","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"        return sampleTrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"donljh":42,"-":10}},{"path":"src/main/java/tracko/storage/JsonAdaptedItem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiacheng-y"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Jiacheng-y"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Jiacheng-y"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Jiacheng-y"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.Description;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.Item;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.ItemName;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.Quantity;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Jiacheng-y"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Jiacheng-y"},"content":" * Jackson-friendly version of {@link Item}.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Jiacheng-y"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Jiacheng-y"},"content":"public class JsonAdaptedItem {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Jiacheng-y"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Item\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Jiacheng-y"},"content":"    private final String itemName;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Jiacheng-y"},"content":"    private final Integer quantity;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Jiacheng-y"},"content":"    private final String description;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Jiacheng-y"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Jiacheng-y"},"content":"     * Constructs a {@code JsonAdaptedItem} with the given item details.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Jiacheng-y"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Jiacheng-y"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Jiacheng-y"},"content":"    public JsonAdaptedItem(@JsonProperty(\"itemName\") String itemName, @JsonProperty(\"quantity\") Integer quantity,","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Jiacheng-y"},"content":"                            @JsonProperty(\"description\") String description) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Jiacheng-y"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Jiacheng-y"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Jiacheng-y"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Jiacheng-y"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Jiacheng-y"},"content":"     * Converts a given {@code Item} into this class for Jackson use.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Jiacheng-y"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Jiacheng-y"},"content":"    public JsonAdaptedItem(Item source) {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Jiacheng-y"},"content":"        itemName \u003d source.getItemName().itemName;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Jiacheng-y"},"content":"        quantity \u003d source.getQuantity().getQuantity();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Jiacheng-y"},"content":"        description \u003d source.getDescription().value;","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Jiacheng-y"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Jiacheng-y"},"content":"     * Converts this Jackson-friendly adapted item object into the model\u0027s {@code Item} object.","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Jiacheng-y"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Jiacheng-y"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted item.","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Jiacheng-y"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Jiacheng-y"},"content":"    public Item toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Jiacheng-y"},"content":"        if (itemName \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Jiacheng-y"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Jiacheng-y"},"content":"                    ItemName.class.getSimpleName()));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"Jiacheng-y"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Jiacheng-y"},"content":"        if (!ItemName.isValidItemName(itemName)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Jiacheng-y"},"content":"            throw new IllegalValueException(ItemName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Jiacheng-y"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"Jiacheng-y"},"content":"        final ItemName modelItemName \u003d new ItemName(itemName);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Jiacheng-y"},"content":"        if (quantity \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Jiacheng-y"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"Jiacheng-y"},"content":"                    Quantity.class.getSimpleName()));","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Jiacheng-y"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Jiacheng-y"},"content":"        if (!Quantity.isValidQuantity(quantity)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Jiacheng-y"},"content":"            throw new IllegalValueException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"Jiacheng-y"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"Jiacheng-y"},"content":"        final Quantity modelQuantity \u003d new Quantity(quantity);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Jiacheng-y"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Jiacheng-y"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"Jiacheng-y"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"Jiacheng-y"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"Jiacheng-y"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Jiacheng-y"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"Jiacheng-y"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"Jiacheng-y"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Jiacheng-y"},"content":"        return new Item(modelItemName, modelDescription, modelQuantity, new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Jiacheng-y"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"Jiacheng-y"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Jiacheng-y":80}},{"path":"src/main/java/tracko/storage/JsonAdaptedItemQuantityPair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.model.order.ItemQuantityPair;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":" * Jackson-friendly version of {@link ItemQuantityPair}.","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"public class JsonAdaptedItemQuantityPair {","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Pair\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    private final String item;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    private final String quantity;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"     * Constructs a {@code JsonAdaptedItemQuantityPair} with the given {@code item} and {@code quantity}","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    public JsonAdaptedItemQuantityPair(@JsonProperty(\"item\") String item, @JsonProperty(\"quantity\") String quantity) {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"        this.item \u003d item;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"     * Converts a given {@code item} and {@code quantity} into this class for Jackson use.","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    public JsonAdaptedItemQuantityPair(ItemQuantityPair itemQuantityPair) {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        this.item \u003d itemQuantityPair.getItem();","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"        this.quantity \u003d itemQuantityPair.getQuantity().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"     * Converts this Jackson","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    public ItemQuantityPair toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"        if (item \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"            throw new IllegalValueException(String.format((MISSING_FIELD_MESSAGE_FORMAT), \"Item name\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"        if (quantity \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"            throw new IllegalValueException(String.format((MISSING_FIELD_MESSAGE_FORMAT), \"Quantity\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"        return new ItemQuantityPair(item, Integer.parseInt(quantity));","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"donljh":52}},{"path":"src/main/java/tracko/storage/JsonAdaptedOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Address;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Email;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.model.order.ItemQuantityPair;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Name;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Phone;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":" * Jackson-friendly version of {@link Order}.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"public class JsonAdaptedOrder {","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Orders\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    private final List\u003cJsonAdaptedItemQuantityPair\u003e itemList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"     * Constructs a {@code JsonAdaptedOrder} with the given order details.","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    public JsonAdaptedOrder(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"                            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"                            @JsonProperty(\"itemList\") List\u003cJsonAdaptedItemQuantityPair\u003e itemList) {","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"        if (itemList !\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"            this.itemList.addAll(itemList);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"     * Converts a given {@code Order} into this class for Jackson use.","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"    public JsonAdaptedOrder(Order source) {","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"        source.getItemList().stream()","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"            .forEach(item -\u003e itemList.add(new JsonAdaptedItemQuantityPair(item)));","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"    public Order toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"        List\u003cItemQuantityPair\u003e itemQuantityPairs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"        for (JsonAdaptedItemQuantityPair pair : itemList) {","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"            itemQuantityPairs.add(pair.toModelType());","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"donljh"},"content":"        if (itemList \u003d\u003d null || itemList.isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"donljh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Item List\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"donljh"},"content":"        return new Order(modelName, modelPhone, modelEmail, modelAddress, itemQuantityPairs);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"donljh":34,"-":75}},{"path":"src/main/java/tracko/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"donljh":3,"-":45}},{"path":"src/main/java/tracko/storage/JsonSerializableTrackO.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyTrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.model.TrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.Item;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":" * An immutable TrackO that is serializable to JSON format.","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"@JsonRootName(value \u003d \"tracko\")","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"public class JsonSerializableTrackO {","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"Jiacheng-y"},"content":"    private final List\u003cJsonAdaptedItem\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    private final List\u003cJsonAdaptedOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"Jiacheng-y"},"content":"     * Constructs a {@code JsonSerializableTrackO} with the given orders and items.","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"Jiacheng-y"},"content":"    public JsonSerializableTrackO(@JsonProperty(\"items\") List\u003cJsonAdaptedItem\u003e items,","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Jiacheng-y"},"content":"                                  @JsonProperty(\"orders\") List\u003cJsonAdaptedOrder\u003e orders) {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Jiacheng-y"},"content":"        this.items.addAll(items);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"        this.orders.addAll(orders);","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"     * Converts a given {@code ReadOnlyTrackO} into this class for Jackson use.","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"    public JsonSerializableTrackO(ReadOnlyTrackO source) {","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Jiacheng-y"},"content":"        items.addAll(source.getInventoryList().stream().map(JsonAdaptedItem::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"        orders.addAll(source.getOrderList().stream().map(JsonAdaptedOrder::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"     * Converts this TrackO instance into the model\u0027s {@code TrackO} object","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"    public TrackO toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"        // TODO: add items here (before orders)","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"        TrackO trackO \u003d new TrackO();","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"Jiacheng-y"},"content":"        for (JsonAdaptedItem jsonAdaptedItem : items) {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Jiacheng-y"},"content":"            Item item \u003d jsonAdaptedItem.toModelType();","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"Jiacheng-y"},"content":"            trackO.addItem(item);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"Jiacheng-y"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"        for (JsonAdaptedOrder jsonAdaptedOrder : orders) {","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"            Order order \u003d jsonAdaptedOrder.toModelType();","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"            trackO.addOrder(order);","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"        return trackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"donljh":54,"Jiacheng-y":12}},{"path":"src/main/java/tracko/storage/JsonTrackOStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.commons.util.FileUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import tracko.commons.util.JsonUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyTrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":" * A class to access TrackO data stored as json file(s) on the hard disk.","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"public class JsonTrackOStorage implements TrackOStorage {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTrackOStorage.class);","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"Jiacheng-y"},"content":"    private Path trackOFilePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"Jiacheng-y"},"content":"    public JsonTrackOStorage(Path trackOFilePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Jiacheng-y"},"content":"        this.trackOFilePath \u003d trackOFilePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"Jiacheng-y"},"content":"    public Path getTrackOFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Jiacheng-y"},"content":"        return trackOFilePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    public Optional\u003cReadOnlyTrackO\u003e readTrackO() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"Jiacheng-y"},"content":"        return readTrackO(trackOFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"     * Similar to {@link #readTrackO()}","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"Jiacheng-y"},"content":"     * @param trackOFilePath Location of the orders data file. Cannot be null.","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"Jiacheng-y"},"content":"    public Optional\u003cReadOnlyTrackO\u003e readTrackO(Path trackOFilePath) throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Jiacheng-y"},"content":"        requireNonNull(trackOFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"        Optional\u003cJsonSerializableTrackO\u003e jsonTrackO \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"Jiacheng-y"},"content":"                trackOFilePath, JsonSerializableTrackO.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"        if (!jsonTrackO.isPresent()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"            return Optional.of(jsonTrackO.get().toModelType());","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"Jiacheng-y"},"content":"            logger.info(\"Illegal values found in \" + trackOFilePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"    public void saveTrackO(ReadOnlyTrackO trackO) throws IOException {","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"Jiacheng-y"},"content":"        saveTrackO(trackO, trackOFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"     * Similar to {@link #saveTrackO(ReadOnlyTrackO)}.","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"Jiacheng-y"},"content":"     * @param trackOFilePath Location of the orders data file. Cannot be null.","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"Jiacheng-y"},"content":"    public void saveTrackO(ReadOnlyTrackO trackO, Path trackOFilePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"        requireNonNull(trackO);","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"Jiacheng-y"},"content":"        requireNonNull(trackOFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"Jiacheng-y"},"content":"        FileUtil.createIfMissing(trackOFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Jiacheng-y"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTrackO(trackO), trackOFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"donljh":64,"Jiacheng-y":17}},{"path":"src/main/java/tracko/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.commons.util.JsonUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"donljh":5,"-":42}},{"path":"src/main/java/tracko/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyTrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"public interface Storage extends TrackOStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    // TrackO methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"Jiacheng-y"},"content":"    Path getTrackOFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    Optional\u003cReadOnlyTrackO\u003e readTrackO() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    void saveTrackO(ReadOnlyTrackO trackO) throws IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"donljh":16,"Jiacheng-y":1,"-":17}},{"path":"src/main/java/tracko/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyTrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    private TrackOStorage trackOStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"     * Creates a {@code StorageManager} with the given {@code TrackOStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    public StorageManager(TrackOStorage trackOStorage,","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        this.trackOStorage \u003d trackOStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TrackO methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"Jiacheng-y"},"content":"    public Path getTrackOFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Jiacheng-y"},"content":"        return trackOStorage.getTrackOFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"    public Optional\u003cReadOnlyTrackO\u003e readTrackO() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"Jiacheng-y"},"content":"        return readTrackO(trackOStorage.getTrackOFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"Jiacheng-y"},"content":"    public Optional\u003cReadOnlyTrackO\u003e readTrackO(Path trackOFilePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Jiacheng-y"},"content":"        logger.fine(\"[TrackO] Attempting to read data from file: \" + trackOFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Jiacheng-y"},"content":"        return trackOStorage.readTrackO(trackOFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"    public void saveTrackO(ReadOnlyTrackO trackO) throws IOException {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"Jiacheng-y"},"content":"        saveTrackO(trackO, trackOStorage.getTrackOFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"Jiacheng-y"},"content":"    public void saveTrackO(ReadOnlyTrackO trackO, Path trackOFilePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Jiacheng-y"},"content":"        logger.fine(\"[TrackO] Attempting to write to data file: \" + trackOFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"Jiacheng-y"},"content":"        trackOStorage.saveTrackO(trackO, trackOFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":30,"Jiacheng-y":10,"-":38}},{"path":"src/main/java/tracko/storage/TrackOStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyTrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.TrackO;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":" * Represents a storage for {@link TrackO}","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"public interface TrackOStorage {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"Jiacheng-y"},"content":"    Path getTrackOFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"     * Returns TrackO data as a {@link ReadOnlyTrackO}","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    Optional\u003cReadOnlyTrackO\u003e readTrackO() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"Jiacheng-y"},"content":"    Optional\u003cReadOnlyTrackO\u003e readTrackO(Path trackOFilePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"     * Saves the given {@link ReadOnlyTrackO} to the storage.","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"     * @param trackO cannot be null.","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    void saveTrackO(ReadOnlyTrackO trackO) throws IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"Jiacheng-y"},"content":"    void saveTrackO(ReadOnlyTrackO trackO, Path trackOFilePath) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"donljh":31,"Jiacheng-y":4}},{"path":"src/main/java/tracko/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"donljh":6,"-":30}},{"path":"src/main/java/tracko/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.logic.Logic;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"donljh":6,"-":80}},{"path":"src/main/java/tracko/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String USERGUIDE_URL \u003d \"https://se-education.org/addressbook-level3/UserGuide.html\";","lastModifiedDate":"2019-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"donljh":2,"-":100}},{"path":"src/main/java/tracko/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.logic.Logic;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    private OrderListPanel orderListPanel;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"donljh"},"content":"        orderListPanel \u003d new OrderListPanel(logic.getOrderList());","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"donljh"},"content":"        personListPanelPlaceholder.getChildren().add(orderListPanel.getRoot());","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"donljh"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getOrdersFilePath());","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"donljh"},"content":"    public OrderListPanel getPersonListPanel() {","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"donljh"},"content":"        return orderListPanel;","lastModifiedDate":"2022-10-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"donljh"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2022-10-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"donljh":14,"-":182}},{"path":"src/main/java/tracko/ui/OrderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"public class OrderCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    private static final String FXML \u003d \"OrderListCard.fxml\";","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    public final Order order;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    private VBox items;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"    public OrderCard(Order order, int displayedIndex) {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"        this.order \u003d order;","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"        name.setText(order.getName().fullName);","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"        phone.setText(order.getPhone().value);","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"        address.setText(order.getAddress().value);","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"        email.setText(order.getEmail().value);","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"        order.getItemList().stream()","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"                .forEach(item -\u003e items.getChildren().add(","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"                    new Label(\"\\u2022 \" + item.getQuantity() + \" * \" + item.getItem())));","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"        if (!(other instanceof OrderCard)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"        OrderCard card \u003d (OrderCard) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"                \u0026\u0026 order.equals(card.order);","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"donljh":19,"-":56}},{"path":"src/main/java/tracko/ui/OrderListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"public class OrderListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    private static final String FXML \u003d \"OrderListPanel.fxml\";","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OrderListPanel.class);","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    private ListView\u003cOrder\u003e orderListView;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    public OrderListPanel(ObservableList\u003cOrder\u003e orderList) {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        orderListView.setItems(orderList);","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"        orderListView.setCellFactory(listView -\u003e new OrderListViewCell());","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    class OrderListViewCell extends ListCell\u003cOrder\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"        protected void updateItem(Order order, boolean empty) {","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"            super.updateItem(order, empty);","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"            if (empty || order \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"                setGraphic(new OrderCard(order, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"donljh":15,"-":34}},{"path":"src/main/java/tracko/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"donljh":1,"-":27}},{"path":"src/main/java/tracko/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":1,"-":27}},{"path":"src/main/java/tracko/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"donljh":1,"-":12}},{"path":"src/main/java/tracko/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.MainApp;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.commons.util.StringUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.logic.Logic;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"donljh":5,"-":83}},{"path":"src/main/java/tracko/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.MainApp;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"donljh":2,"-":86}},{"path":"src/main/resources/view/OrderListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"      \u003cVBox fx:id\u003d\"items\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":4,"-":35}},{"path":"src/main/resources/view/OrderListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"  \u003cListView fx:id\u003d\"orderListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":1,"-":7}},{"path":"src/test/java/tracko/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"donljh":1,"-":57}},{"path":"src/test/java/tracko/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.core;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"donljh":1,"-":26}},{"path":"src/test/java/tracko/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.core;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":2,"-":133}},{"path":"src/test/java/tracko/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.core.index;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"donljh":2,"-":58}},{"path":"src/test/java/tracko/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"donljh":2,"-":34}},{"path":"src/test/java/tracko/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"donljh":3,"-":105}},{"path":"src/test/java/tracko/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.Config;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"donljh":4,"-":112}},{"path":"src/test/java/tracko/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":2,"-":21}},{"path":"src/test/java/tracko/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.testutil.TestUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":3,"-":42}},{"path":"src/test/java/tracko/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"donljh":2,"-":141}},{"path":"src/test/java/tracko/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"// import static tracko.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"// import static tracko.testutil.TypicalOrders.ORDER_10;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"// import tracko.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"// import tracko.logic.commands.order.ListOrdersCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"import tracko.model.ModelManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyTrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"import tracko.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"// import tracko.model.order.Order;","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"// import tracko.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"import tracko.storage.JsonTrackOStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"import tracko.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"import tracko.storage.StorageManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"// import tracko.testutil.OrderBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"        JsonTrackOStorage trackOStorage \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"                new JsonTrackOStorage(temporaryFolder.resolve(\"orders.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"        StorageManager storage \u003d new StorageManager(trackOStorage, userPrefsStorage);","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"    // public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"    //     String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"    //     assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"    // public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"    //     String listCommand \u003d ListOrdersCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"    //     assertCommandSuccess(listCommand, ListOrdersCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"    // public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"    //     // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"    //     JsonTrackOStorage trackOStorage \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"    //             new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"    //     JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"    //             new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"    //     StorageManager storage \u003d new StorageManager(trackOStorage, userPrefsStorage);","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"    //     logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"    //     // Execute add command","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"    //     String addCommand \u003d AddOrderCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"    //             + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"    //     Order expectedOrder \u003d new OrderBuilder(ORDER_10).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"    //     ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"    //     expectedModel.addOrder(expectedOrder);","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"    //     String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"    //     assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"donljh"},"content":"    // public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"donljh"},"content":"    //     assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"donljh"},"content":"        Model expectedModel \u003d new ModelManager(model.getTrackO(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"donljh"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonTrackOStorage {","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"Jiacheng-y"},"content":"        public void saveTrackO(ReadOnlyTrackO trackO, Path trackOFilePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"donljh":62,"Jiacheng-y":1,"-":100}},{"path":"src/test/java/tracko/logic/commands/AddOrderCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalOrders.getTrackOWithTypicalOrders;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.model.ModelManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.testutil.OrderBuilder;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"public class AddOrderCommandIntegrationTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"        model \u003d new ModelManager(getTrackOWithTypicalOrders(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    public void execute_newOrder_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        Order validOrder \u003d new OrderBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"        Model expectedModel \u003d new ModelManager(model.getTrackO(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"        expectedModel.addOrder(validOrder);","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"        AddOrderCommand command \u003d new AddOrderCommand(validOrder);","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"        command.setAwaitingInput(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"        assertCommandSuccess(command, model,","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"                String.format(AddOrderCommand.MESSAGE_SUCCESS, validOrder), expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"    // public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"    //    Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"    //    assertCommandFailure(new AddOrderCommand(personInList), model, AddOrderCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"donljh":25,"-":23}},{"path":"src/test/java/tracko/logic/commands/AddOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"// import tracko.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyTrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"import tracko.model.TrackO;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Jiacheng-y"},"content":"import tracko.model.items.Item;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"// import tracko.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"import tracko.testutil.OrderBuilder;","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"public class AddOrderCommandTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    public void constructor_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddOrderCommand(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    public void execute_orderAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"        ModelStubAcceptingOrderAdded modelStub \u003d new ModelStubAcceptingOrderAdded();","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"        Order validOrder \u003d new OrderBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"        AddOrderCommand command \u003d new AddOrderCommand(validOrder);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"        command.setAwaitingInput(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"        CommandResult commandResult \u003d command.execute(modelStub);","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"        assertEquals(String.format(AddOrderCommand.MESSAGE_SUCCESS, validOrder), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"        assertEquals(Arrays.asList(validOrder), modelStub.ordersAdded);","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    // public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"    //     Person validPerson \u003d new OrderBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"    //     AddOrderCommand addOrderCommand \u003d new AddOrderCommand(validPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"    //     ModelStub modelStub \u003d new ModeulStubWithOrder(validPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"    //     assertThrows(CommandException.class, AddOrderCommand.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"    //         () -\u003e addOrderCommand.execute(modelStub));","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"        Order alice \u003d new OrderBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"        Order bob \u003d new OrderBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"        AddOrderCommand addAliceCommand \u003d new AddOrderCommand(alice);","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"        AddOrderCommand addBobCommand \u003d new AddOrderCommand(bob);","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"        AddOrderCommand addAliceCommandCopy \u003d new AddOrderCommand(alice);","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"donljh"},"content":"        public Path getOrdersFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"donljh"},"content":"        public void setOrdersFilePath(Path ordersFilePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"donljh"},"content":"        public void addOrder(Order order) {","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"sohenze"},"content":"        @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":123,"author":{"gitId":"sohenze"},"content":"        public void deleteOrder(Order order) {","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"sohenze"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"sohenze"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"donljh"},"content":"        public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"Jiacheng-y"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"Jiacheng-y"},"content":"        public void addItem(Item item) {","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"Jiacheng-y"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"Jiacheng-y"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"Jiacheng-y"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"sohenze"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"sohenze"},"content":"        public void deleteItem(Item item) {","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"sohenze"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"sohenze"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"sohenze"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"sohenze"},"content":"        public ObservableList\u003cItem\u003e getInventoryList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"sohenze"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"sohenze"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"donljh"},"content":"        public void setTrackO(ReadOnlyTrackO newData) {","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"donljh"},"content":"        public ReadOnlyTrackO getTrackO() {","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"donljh"},"content":"    // /**","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"donljh"},"content":"    //  * A Model stub that contains a single person.","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"donljh"},"content":"    //  */","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"donljh"},"content":"    // private class ModeulStubWithOrder extends ModelStub {","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"donljh"},"content":"    //     private final Order order;","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"donljh"},"content":"    //     ModeulStubWithOrder(Order order) {","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"donljh"},"content":"    //         requireNonNull(order);","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"donljh"},"content":"    //         this.order \u003d order;","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"donljh"},"content":"    //     }","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-06"},{"lineNumber":169,"author":{"gitId":"donljh"},"content":"    //     @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"donljh"},"content":"    //     public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"donljh"},"content":"    //         requireNonNull(person);","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"donljh"},"content":"    //         return this.person.isSamePerson(person);","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"donljh"},"content":"    //     }","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"donljh"},"content":"    private class ModelStubAcceptingOrderAdded extends ModelStub {","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"donljh"},"content":"        final ArrayList\u003cOrder\u003e ordersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"donljh"},"content":"        // @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"donljh"},"content":"        // public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"donljh"},"content":"        //     requireNonNull(person);","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"donljh"},"content":"        //     return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"donljh"},"content":"        // }","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"donljh"},"content":"        public void addOrder(Order order) {","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"donljh"},"content":"            requireNonNull(order);","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"donljh"},"content":"            ordersAdded.add(order);","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"donljh"},"content":"        public ReadOnlyTrackO getTrackO() {","lastModifiedDate":"2022-10-05"},{"lineNumber":196,"author":{"gitId":"donljh"},"content":"            return new TrackO();","lastModifiedDate":"2022-10-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"donljh":74,"Jiacheng-y":6,"-":105,"sohenze":15}},{"path":"src/test/java/tracko/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"// import static tracko.testutil.TypicalOrders.getTrackOWithTypicalOrders;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"// import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"// import tracko.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"// import tracko.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"// import tracko.model.TrackO;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"// import tracko.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    // public void execute_emptyTrackO_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    //     Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    //     Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    //     assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    // public void execute_nonEmptyTrackO_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    //     Model model \u003d new ModelManager(getTrackOWithTypicalOrders(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    //     Model expectedModel \u003d new ModelManager(getTrackOWithTypicalOrders(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    //     expectedModel.setTrackO(new TrackO());","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    //     assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"donljh":26,"-":6}},{"path":"src/test/java/tracko/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"donljh":1,"-":53}},{"path":"src/test/java/tracko/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"// import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"// import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"// import tracko.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"// import tracko.logic.commands.order.EditOrderCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"import tracko.model.TrackO;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"// import tracko.model.order.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"// import tracko.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"    public static final String VALID_ITEM_NAME_AMY \u003d \"Pen\";","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"    public static final String VALID_ITEM_NAME_BOB \u003d \"Eraser\";","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    public static final Integer VALID_ITEM_QUANTITY_AMY \u003d 2;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    public static final Integer VALID_ITEM_QUANTITY_BOB \u003d 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"    // public static final EditOrderCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"    // public static final EditOrderCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"    // static {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"    //    DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"    //            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"    //            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"    //    DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"    //            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"    //            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"donljh"},"content":"        TrackO expectedTrackO \u003d new TrackO(actualModel.getTrackO());","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"donljh"},"content":"        List\u003cOrder\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getOrderList());","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":111,"author":{"gitId":"donljh"},"content":"        assertEquals(expectedTrackO, actualModel.getTrackO());","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"donljh"},"content":"    // /**","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"donljh"},"content":"    //  * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"donljh"},"content":"    //  * {@code model}\u0027s order list.","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"donljh"},"content":"    //  */","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"donljh"},"content":"    // public static void showOrderAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"donljh"},"content":"    //     assertTrue(targetIndex.getZeroBased() \u003c model.getOrderList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"donljh"},"content":"    //     Order order \u003d model.getOrderList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"donljh"},"content":"    //     final String[] splitName \u003d order.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"donljh"},"content":"    //     model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"donljh"},"content":"    //     assertEquals(1, model.getOrderList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"donljh":47,"-":81}},{"path":"src/test/java/tracko/logic/commands/DeleteOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sohenze"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"sohenze"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"sohenze"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"sohenze"},"content":"import static tracko.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"sohenze"},"content":"import static tracko.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"sohenze"},"content":"//import static tracko.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"sohenze"},"content":"import static tracko.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"sohenze"},"content":"import static tracko.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"sohenze"},"content":"import static tracko.testutil.TypicalOrders.getTrackOWithTypicalOrders;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"sohenze"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"sohenze"},"content":"import tracko.commons.core.Messages;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"sohenze"},"content":"import tracko.commons.core.index.Index;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"sohenze"},"content":"import tracko.logic.commands.order.DeleteOrderCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"sohenze"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"sohenze"},"content":"import tracko.model.ModelManager;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"sohenze"},"content":"import tracko.model.UserPrefs;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"sohenze"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"sohenze"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"sohenze"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"sohenze"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"sohenze"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"sohenze"},"content":"public class DeleteOrderCommandTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"sohenze"},"content":"    private Model model \u003d new ModelManager(getTrackOWithTypicalOrders(), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"sohenze"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"sohenze"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"sohenze"},"content":"        Order orderToDelete \u003d model.getOrderList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"sohenze"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"sohenze"},"content":"        String expectedMessage \u003d String.format(DeleteOrderCommand.MESSAGE_DELETE_ORDER_SUCCESS, orderToDelete);","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"sohenze"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTrackO(), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"sohenze"},"content":"        expectedModel.deleteOrder(orderToDelete);","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"sohenze"},"content":"        assertCommandSuccess(deleteOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"sohenze"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"sohenze"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"sohenze"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"sohenze"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getOrderList().size() + 1);","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"sohenze"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"sohenze"},"content":"        assertCommandFailure(deleteOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"sohenze"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"sohenze"},"content":"    //Test for filtered list, currently not implemented","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"sohenze"},"content":"    //    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"sohenze"},"content":"    //    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"sohenze"},"content":"    //        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"sohenze"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"sohenze"},"content":"    //        Order orderToDelete \u003d model.getOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"sohenze"},"content":"    //        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"sohenze"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"sohenze"},"content":"    //        String expectedMessage \u003d String.format(DeleteOrderCommand.MESSAGE_DELETE_ORDER_SUCCESS, orderToDelete);","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"sohenze"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"sohenze"},"content":"    //        Model expectedModel \u003d new ModelManager(model.getTrackO(), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"sohenze"},"content":"    //        expectedModel.deleteOrder(orderToDelete);","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"sohenze"},"content":"    //        showNoPerson(expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"sohenze"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"sohenze"},"content":"    //        assertCommandSuccess(deleteOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"sohenze"},"content":"    //    }","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"sohenze"},"content":"    //Test for filtered list, currently not implemented","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"sohenze"},"content":"    //    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"sohenze"},"content":"    //    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"sohenze"},"content":"    //        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"sohenze"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"sohenze"},"content":"    //        Index outOfBoundIndex \u003d INDEX_SECOND_ORDER;","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"sohenze"},"content":"    //        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"sohenze"},"content":"    //        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTrackO().getOrderList().size());","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"sohenze"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"sohenze"},"content":"    //        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"sohenze"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"sohenze"},"content":"    //        assertCommandFailure(deleteOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"sohenze"},"content":"    //    }","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"sohenze"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"sohenze"},"content":"    public void equals() {","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"sohenze"},"content":"        DeleteOrderCommand deleteFirstCommand \u003d new DeleteOrderCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"sohenze"},"content":"        DeleteOrderCommand deleteSecondCommand \u003d new DeleteOrderCommand(INDEX_SECOND);","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"sohenze"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"sohenze"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"sohenze"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"sohenze"},"content":"        DeleteOrderCommand deleteFirstCommandCopy \u003d new DeleteOrderCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"sohenze"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"sohenze"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"sohenze"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"sohenze"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"sohenze"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"sohenze"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"sohenze"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-10-08"},{"lineNumber":102,"author":{"gitId":"sohenze"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":103,"author":{"gitId":"sohenze"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":104,"author":{"gitId":"sohenze"},"content":"    //    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":105,"author":{"gitId":"sohenze"},"content":"    //     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"sohenze"},"content":"    //     */","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"sohenze"},"content":"    //    private void showNoPerson(Model model) {","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"sohenze"},"content":"    //        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"sohenze"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"sohenze"},"content":"    //        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"sohenze"},"content":"    //    }","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"sohenze"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"sohenze":112}},{"path":"src/test/java/tracko/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"sohenze"},"content":"//import static tracko.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"sohenze"},"content":"//import static tracko.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"//import static tracko.testutil.TypicalOrders.getTrackOWithTypicalOrders;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"//import tracko.commons.core.Messages;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"//import tracko.commons.core.index.Index;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"//import tracko.logic.commands.order.EditOrderCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"//import tracko.logic.commands.order.EditOrderCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"//import tracko.model.Model;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"//import tracko.model.ModelManager;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"//import tracko.model.UserPrefs;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"//import tracko.model.person.Person;","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"//import tracko.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"//import tracko.testutil.OrderBuilder;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"//    private Model model \u003d new ModelManager(getTrackOWithTypicalOrders(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"//    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"//    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"//        Person editedPerson \u003d new OrderBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"//        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"//        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"//        assertCommandSuccess(editOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"//    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"//    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"//        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"//        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"//        OrderBuilder personInList \u003d new OrderBuilder(lastPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"//        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"//                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"//                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"//        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"//        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"//        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"//        assertCommandSuccess(editOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"//    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"//    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"//        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"//        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"//        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"//        assertCommandSuccess(editOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"//    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"//    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"//        showOrderAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"//        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"//        Person editedPerson \u003d new OrderBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"//        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"donljh"},"content":"//        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"donljh"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"donljh"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"donljh"},"content":"//        assertCommandSuccess(editOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"donljh"},"content":"//    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"donljh"},"content":"//    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"donljh"},"content":"//        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"donljh"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"donljh"},"content":"//        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"donljh"},"content":"//        assertCommandFailure(editOrderCommand, model, EditOrderCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"donljh"},"content":"//    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"donljh"},"content":"//    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"donljh"},"content":"//        showOrderAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"donljh"},"content":"//        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"donljh"},"content":"//        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"donljh"},"content":"//        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"donljh"},"content":"//                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"donljh"},"content":"//        assertCommandFailure(editOrderCommand, model, EditOrderCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"donljh"},"content":"//    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"donljh"},"content":"//    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"donljh"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"donljh"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"donljh"},"content":"//        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"donljh"},"content":"//        assertCommandFailure(editOrderCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"donljh"},"content":"//    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"donljh"},"content":"//     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"donljh"},"content":"//     * but smaller than size of address book","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"donljh"},"content":"//     */","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"donljh"},"content":"//    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"donljh"},"content":"//    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"donljh"},"content":"//        showOrderAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"donljh"},"content":"//        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"donljh"},"content":"//        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"donljh"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"donljh"},"content":"//        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"donljh"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"donljh"},"content":"//        assertCommandFailure(editOrderCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"donljh"},"content":"//    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"donljh"},"content":"//    public void equals() {","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"donljh"},"content":"//        final EditOrderCommand standardCommand \u003d new EditOrderCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"donljh"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"donljh"},"content":"//        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"donljh"},"content":"//        EditOrderCommand commandWithSameValues \u003d new EditOrderCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"donljh"},"content":"//        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"donljh"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"donljh"},"content":"//        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"donljh"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"donljh"},"content":"//        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"donljh"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"donljh"},"content":"//        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"donljh"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"donljh"},"content":"//        assertFalse(standardCommand.equals(new EditOrderCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"donljh"},"content":"//        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"donljh"},"content":"//        assertFalse(standardCommand.equals(new EditOrderCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"donljh":161,"-":9,"sohenze":2}},{"path":"src/test/java/tracko/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"// import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"// import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"// import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"// import tracko.logic.commands.order.EditOrderCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"// import tracko.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    // public void equals() {","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    //     // same values -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    //     EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    //     assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    //     // same object -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    //     assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    //     // null -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    //     assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    //     // different types -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"    //     assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    //     // different values -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    //     assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"    //     // different name -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"    //     EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    //     assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"    //     // different phone -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"    //     editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"    //     assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"    //     // different email -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"    //     editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"    //     assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"    //     // different address -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    //     editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"    //     assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"    //     // different tags -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"    //     editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"    //     assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"donljh":58}},{"path":"src/test/java/tracko/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.model.ModelManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"donljh":5,"-":15}},{"path":"src/test/java/tracko/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"// import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"// import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"// import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"// import static tracko.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"// import static tracko.testutil.TypicalOrders.ORDER_3;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"// import static tracko.testutil.TypicalOrders.ORDER_5;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"// import static tracko.testutil.TypicalOrders.ORDER_6;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"// import static tracko.testutil.TypicalOrders.getTrackOWithTypicalOrders;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"// import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"// import java.util.Collections;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"// import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"// import tracko.logic.commands.order.FindOrderCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"// import tracko.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"// import tracko.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"// import tracko.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"// import tracko.model.order.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    // TODO: Update test cases according to new implementations","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"//    private Model model \u003d new ModelManager(getTrackOWithTypicalOrders(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"//    private Model expectedModel \u003d new ModelManager(getTrackOWithTypicalOrders(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"//    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"//    public void equals() {","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"//        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"//                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"//        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"//                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"//        FindOrderCommand findFirstCommand \u003d new FindOrderCommand(firstPredicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"//        FindOrderCommand findSecondCommand \u003d new FindOrderCommand(secondPredicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"//        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"//        FindOrderCommand findFirstCommandCopy \u003d new FindOrderCommand(firstPredicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"//        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"//        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"//        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"//        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"//    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"//    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"//        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"//        FindOrderCommand command \u003d new FindOrderCommand(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"//        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"//        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"//        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"//    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"//    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"//        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"//        FindOrderCommand command \u003d new FindOrderCommand(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"//        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"//        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"//        assertEquals(Arrays.asList(ORDER_3, ORDER_5, ORDER_6), model.getFilteredPersonList());","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"//    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"//     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"//     */","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"//    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"//        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"donljh":78,"-":8}},{"path":"src/test/java/tracko/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"// import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"// import tracko.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"// import tracko.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"public class HelpCommandTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    // // TODO: Update test cases according to new implementations","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    // private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    // private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    // public void execute_help_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    //     CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    //     assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"donljh":22}},{"path":"src/test/java/tracko/logic/commands/ListOrdersCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"//import static tracko.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"//import static tracko.testutil.TypicalOrders.getTrackOWithTypicalOrders;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"//import tracko.logic.commands.order.ListOrdersCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"//import tracko.model.Model;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"//import tracko.model.ModelManager;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"//import tracko.model.UserPrefs;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"public class ListOrdersCommandTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    // TODO: Update test cases according to new implementations","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"//    private Model model;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"//    private Model expectedModel;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"//    @BeforeEach","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"//    public void setUp() {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"//        model \u003d new ModelManager(getTrackOWithTypicalOrders(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"//        expectedModel \u003d new ModelManager(model.getTrackO(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"//    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"//    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"//        assertCommandSuccess(new ListOrdersCommand(), model, ListOrdersCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"//    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"//    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"//        showOrderAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"//        assertCommandSuccess(new ListOrdersCommand(), model, ListOrdersCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"//    }","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"donljh":41}},{"path":"src/test/java/tracko/logic/parser/AddOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"// import static tracko.testutil.TypicalOrders.ORDER_10;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalOrders.ORDER_11;","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.order.AddOrderCommandParser;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Address;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Email;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Phone;","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"import tracko.testutil.OrderBuilder;","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"public class AddOrderCommandParserTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"    private AddOrderCommandParser parser \u003d new AddOrderCommandParser();","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"    public void parseInitial_allFieldsPresent_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"        Order expectedOrder \u003d new OrderBuilder(ORDER_11).withEmptyItemList().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"                + ADDRESS_DESC_BOB, new AddOrderCommand(expectedOrder));","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"                + ADDRESS_DESC_BOB, new AddOrderCommand(expectedOrder));","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"                + ADDRESS_DESC_BOB, new AddOrderCommand(expectedOrder));","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"                + ADDRESS_DESC_BOB, new AddOrderCommand(expectedOrder));","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"                + ADDRESS_DESC_BOB, new AddOrderCommand(expectedOrder));","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"    // public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"    //     // zero tags","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"    //     Person expectedPerson \u003d new OrderBuilder(ORDER_10).withTags().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"    //     assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"    //             new AddOrderCommand(expectedPerson));","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"    public void parseInitial_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"        // missing name prefix","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"        // missing phone prefix","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-02"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-02"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"        // missing email prefix","lastModifiedDate":"2022-10-02"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-02"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-02"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"        // missing address prefix","lastModifiedDate":"2022-10-02"},{"lineNumber":91,"author":{"gitId":"donljh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-10-02"},{"lineNumber":92,"author":{"gitId":"donljh"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-02"},{"lineNumber":93,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":94,"author":{"gitId":"donljh"},"content":"        // all prefixes missing","lastModifiedDate":"2022-10-02"},{"lineNumber":95,"author":{"gitId":"donljh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-10-02"},{"lineNumber":96,"author":{"gitId":"donljh"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-02"},{"lineNumber":97,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":98,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":99,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":100,"author":{"gitId":"donljh"},"content":"    public void parseInitial_invalidValue_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"donljh"},"content":"        // invalid name","lastModifiedDate":"2022-10-02"},{"lineNumber":102,"author":{"gitId":"donljh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"donljh"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"donljh"},"content":"        // invalid phone","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"donljh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"donljh"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":109,"author":{"gitId":"donljh"},"content":"        // invalid email","lastModifiedDate":"2022-10-02"},{"lineNumber":110,"author":{"gitId":"donljh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"donljh"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":113,"author":{"gitId":"donljh"},"content":"        // invalid address","lastModifiedDate":"2022-10-02"},{"lineNumber":114,"author":{"gitId":"donljh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"donljh"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":117,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":118,"author":{"gitId":"donljh"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"donljh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-10-02"},{"lineNumber":120,"author":{"gitId":"donljh"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":121,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":122,"author":{"gitId":"donljh"},"content":"        // non-empty preamble","lastModifiedDate":"2022-10-02"},{"lineNumber":123,"author":{"gitId":"donljh"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-02"},{"lineNumber":124,"author":{"gitId":"donljh"},"content":"                + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"donljh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":127,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"donljh":127}},{"path":"src/test/java/tracko/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"donljh":1,"-":149}},{"path":"src/test/java/tracko/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"donljh":3,"-":36}},{"path":"src/test/java/tracko/logic/parser/DeleteOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"sohenze"},"content":"import static tracko.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.order.DeleteOrderCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.order.DeleteOrderCommandParser;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"public class DeleteOrderCommandParserTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    // TODO: Update test cases according to new implementations","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    private DeleteOrderCommandParser parser \u003d new DeleteOrderCommandParser();","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"sohenze"},"content":"        assertParseSuccess(parser, \"1\", new DeleteOrderCommand(INDEX_FIRST));","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"donljh":11,"-":22,"sohenze":2}},{"path":"src/test/java/tracko/logic/parser/EditOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"//import static tracko.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"//import static tracko.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"//import static tracko.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"//import static tracko.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"//import static tracko.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"//import tracko.commons.core.index.Index;","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"//import tracko.logic.commands.order.EditOrderCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"//import tracko.logic.commands.order.EditOrderCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"//import tracko.logic.parser.order.EditOrderCommandParser;","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"//import tracko.model.order.Address;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"//import tracko.model.order.Email;","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"//import tracko.model.order.Name;","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"//import tracko.model.order.Phone;","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"//import tracko.model.tag.Tag;","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"//import tracko.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"public class EditOrderCommandParserTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"    // TODO: Update test cases according to new implementations","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"    // private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"    // private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"    //        String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditOrderCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"    // private EditOrderCommandParser parser \u003d new EditOrderCommandParser();","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"    // public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"    //    // no index specified","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"    //    // no field specified","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"1\", EditOrderCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"    //    // no index and no field specified","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"    // public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"    //    // negative index","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"    //    // zero index","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"    //    // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"    //    // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"    // public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"donljh"},"content":"    //    // invalid phone followed by valid email","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"donljh"},"content":"    //    // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"donljh"},"content":"    //    // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"donljh"},"content":"    //    // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"donljh"},"content":"    //    // parsing it together with a valid tag results in error","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"donljh"},"content":"    //    // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"donljh"},"content":"    //    assertParseFailure(parser,\"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"donljh"},"content":"    //                       Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"donljh"},"content":"    // public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"donljh"},"content":"    //    Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"donljh"},"content":"    //    String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"donljh"},"content":"    //            + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"donljh"},"content":"    //    EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"donljh"},"content":"    //            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"donljh"},"content":"    //            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"donljh"},"content":"    //    EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"donljh"},"content":"    //    assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"donljh"},"content":"    // public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"donljh"},"content":"    //    Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"donljh"},"content":"    //    String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"donljh"},"content":"    //    EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"donljh"},"content":"    //            .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"donljh"},"content":"    //    EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"donljh"},"content":"    //    assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"donljh"},"content":"    // public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"donljh"},"content":"    //    // name","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"donljh"},"content":"    //    Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"donljh"},"content":"    //    String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"donljh"},"content":"    //    EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"donljh"},"content":"    //    EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"donljh"},"content":"    //    assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"donljh"},"content":"    //    // phone","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"donljh"},"content":"    //    userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"donljh"},"content":"    //    descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"donljh"},"content":"    //    expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"donljh"},"content":"    //    assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"donljh"},"content":"    //    // email","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"donljh"},"content":"    //    userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"donljh"},"content":"    //    descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"donljh"},"content":"    //    expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"donljh"},"content":"    //    assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"donljh"},"content":"    //    // address","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"donljh"},"content":"    //    userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"donljh"},"content":"    //    descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"donljh"},"content":"    //    expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"donljh"},"content":"    //    assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"donljh"},"content":"    //    // tags","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"donljh"},"content":"    //    userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"donljh"},"content":"    //    descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"donljh"},"content":"    //    expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"donljh"},"content":"    //    assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"donljh"},"content":"    // public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"donljh"},"content":"    //    Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"donljh"},"content":"    //    String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"donljh"},"content":"    //            + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"donljh"},"content":"    //            + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"donljh"},"content":"    //    EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"donljh"},"content":"    //        .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"donljh"},"content":"    //        .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"donljh"},"content":"    //        .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"donljh"},"content":"    //    EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"donljh"},"content":"    //    assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"donljh"},"content":"    // public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"donljh"},"content":"    //    // no other valid values specified","lastModifiedDate":"2022-10-05"},{"lineNumber":189,"author":{"gitId":"donljh"},"content":"    //    Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"donljh"},"content":"    //    String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"donljh"},"content":"    //    EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"donljh"},"content":"    //    EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":193,"author":{"gitId":"donljh"},"content":"    //    assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":194,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":195,"author":{"gitId":"donljh"},"content":"    //    // other valid values specified","lastModifiedDate":"2022-10-05"},{"lineNumber":196,"author":{"gitId":"donljh"},"content":"    //    userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-05"},{"lineNumber":197,"author":{"gitId":"donljh"},"content":"    //            + PHONE_DESC_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":198,"author":{"gitId":"donljh"},"content":"    //    descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":199,"author":{"gitId":"donljh"},"content":"    //            .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":200,"author":{"gitId":"donljh"},"content":"    //    expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":201,"author":{"gitId":"donljh"},"content":"    //    assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":202,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":203,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":204,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":205,"author":{"gitId":"donljh"},"content":"    // public void parse_resetTags_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":206,"author":{"gitId":"donljh"},"content":"    //    Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"donljh"},"content":"    //    String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2022-10-05"},{"lineNumber":208,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":209,"author":{"gitId":"donljh"},"content":"    //    EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":210,"author":{"gitId":"donljh"},"content":"    //    EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":211,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":212,"author":{"gitId":"donljh"},"content":"    //    assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":213,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":214,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"donljh":214}},{"path":"src/test/java/tracko/logic/parser/FindOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.order.FindOrderCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.order.FindOrderCommandParser;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.model.order.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"public class FindOrderCommandParserTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    // TODO: Update test cases according to new implementations","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    private FindOrderCommandParser parser \u003d new FindOrderCommandParser();","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"        FindOrderCommand expectedFindOrderCommand \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"                new FindOrderCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindOrderCommand);","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindOrderCommand);","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"donljh":37}},{"path":"src/test/java/tracko/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"sohenze"},"content":"import static tracko.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"import tracko.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"sohenze"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"sohenze"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"donljh":9,"-":184,"sohenze":3}},{"path":"src/test/java/tracko/logic/parser/TrackOParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.logic.parser;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import static tracko.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import tracko.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import tracko.testutil.OrderBuilder;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.testutil.OrderUtil;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"public class TrackOParserTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    // TODO: Update test cases according to new implementations","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    private final TrackOParser parser \u003d new TrackOParser();","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"        Order baseOrder \u003d new OrderBuilder().withEmptyItemList().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"        AddOrderCommand command \u003d (AddOrderCommand) parser.parseCommand(OrderUtil.getBaseAddOrderCommand(baseOrder));","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        assertEquals(new AddOrderCommand(baseOrder), command);","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        Order orderWithItems \u003d new OrderBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        AddOrderCommand commandWithUpdates \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"            (AddOrderCommand) parser.parseAndUpdateCommand(","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"                OrderUtil.getItemQuantityPairDetails(orderWithItems), command);","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"        assertEquals(new AddOrderCommand(orderWithItems), commandWithUpdates);","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"    // public void parseCommand_clear() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"    //     assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    //     assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"    // public void parseCommand_delete() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"    //     DeleteOrderCommand command \u003d (DeleteOrderCommand) parser.parseCommand(","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"    //             DeleteOrderCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"    //     assertEquals(new DeleteOrderCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    // public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"    //     Person person \u003d new OrderBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"    //     EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"    //     EditOrderCommand command \u003d (EditOrderCommand) parser.parseCommand(EditOrderCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"    //             + INDEX_FIRST_PERSON.getOneBased() + \" \" + OrderUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"    //     assertEquals(new EditOrderCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"    // public void parseCommand_find() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"    //     List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"    //     FindOrderCommand command \u003d (FindOrderCommand) parser.parseCommand(","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"    //             FindOrderCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"    //     assertEquals(new FindOrderCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"    // public void parseCommand_help() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"    //     assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"    //     assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"    // public void parseCommand_list() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"    //     assertTrue(parser.parseCommand(ListOrdersCommand.COMMAND_WORD) instanceof ListOrdersCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"    //     assertTrue(parser.parseCommand(ListOrdersCommand.COMMAND_WORD + \" 3\") instanceof ListOrdersCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"donljh"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"donljh"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"donljh":95}},{"path":"src/test/java/tracko/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"// import static tracko.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalOrders.ORDER_1;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalOrders.ORDER_2;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"// import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"// import tracko.model.order.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"import tracko.testutil.TrackOBuilder;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"        assertEquals(new TrackO(), new TrackO(modelManager.getTrackO()));","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"    public void setOrdersFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setOrdersFilePath(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"    public void setOrdersFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"        Path path \u003d Paths.get(\"tracko/orders/file/path\");","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"        modelManager.setOrdersFilePath(path);","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"        assertEquals(path, modelManager.getOrdersFilePath());","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"    // public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"    //     assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"    // public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"    //     assertFalse(modelManager.hasPerson(ORDER_1));","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"    // public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"    //     modelManager.addPerson(ORDER_1);","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"    //     assertTrue(modelManager.hasPerson(ORDER_1));","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"donljh"},"content":"    // public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"donljh"},"content":"    //     assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"donljh"},"content":"        TrackO trackO \u003d new TrackOBuilder().withOrder(ORDER_1).withOrder(ORDER_2).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"donljh"},"content":"        TrackO differentTrackO \u003d new TrackO();","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"donljh"},"content":"        modelManager \u003d new ModelManager(trackO, userPrefs);","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"donljh"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(trackO, userPrefs);","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"donljh"},"content":"        // different trackO -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"donljh"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentTrackO, userPrefs)));","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"donljh"},"content":"        // // different filteredList -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"donljh"},"content":"        // String[] keywords \u003d ORDER_1.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"donljh"},"content":"        // modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"donljh"},"content":"        // assertFalse(modelManager.equals(new ModelManager(trackO, userPrefs)));","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"donljh"},"content":"        //","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"donljh"},"content":"        // // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"donljh"},"content":"        // modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"donljh"},"content":"        assertFalse(modelManager.equals(new ModelManager(trackO, differentUserPrefs)));","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"donljh":50,"-":82}},{"path":"src/test/java/tracko/model/TrackOTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"// import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"// import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"// import static tracko.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"// import static tracko.testutil.TypicalOrders.ORDER_1;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalOrders.getTrackOWithTypicalOrders;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"// import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"// import java.util.Collection;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"// import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"// import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"// import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"// import tracko.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"// import tracko.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"// import tracko.testutil.OrderBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"public class TrackOTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    private final TrackO addressBook \u003d new TrackO();","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        assertEquals(Collections.emptyList(), addressBook.getOrderList());","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"        TrackO newData \u003d getTrackOWithTypicalOrders();","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"    // public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"    //     // Two persons with the same identity fields","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"    //     Person editedAlice \u003d new OrderBuilder(ORDER_1).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"    //             .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    //     List\u003cPerson\u003e newPersons \u003d Arrays.asList(ORDER_1, editedAlice);","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"    //     AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"    //        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"    // public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"    //     assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"    // public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"    //     assertFalse(addressBook.hasPerson(ORDER_1));","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"    // public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"    //     addressBook.addPerson(ORDER_1);","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"    //     assertTrue(addressBook.hasPerson(ORDER_1));","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"    // public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"    //     addressBook.addPerson(ORDER_1);","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"    //     Person editedAlice \u003d new OrderBuilder(ORDER_1).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"    //             .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"    //     assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"    // public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"    //     assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"    // /**","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"    //  * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"    //  */","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"    // private static class AddressBookStub implements ReadOnlyTrackO {","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"    //     private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"donljh"},"content":"    //     AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"donljh"},"content":"    //         this.persons.setAll(persons);","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"donljh"},"content":"    //     }","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"donljh"},"content":"    //     @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"donljh"},"content":"    //     public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"donljh"},"content":"    //         return persons;","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"donljh"},"content":"    //     }","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"donljh":102}},{"path":"src/test/java/tracko/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"donljh":2,"-":19}},{"path":"src/test/java/tracko/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"donljh":3,"-":35}},{"path":"src/test/java/tracko/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"donljh":3,"-":67}},{"path":"src/test/java/tracko/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.model.order.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.testutil.OrderBuilder;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"        assertTrue(predicate.test(new OrderBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"        assertTrue(predicate.test(new OrderBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"        assertTrue(predicate.test(new OrderBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"        assertTrue(predicate.test(new OrderBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"        assertFalse(predicate.test(new OrderBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"        assertFalse(predicate.test(new OrderBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"        assertFalse(predicate.test(new OrderBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"donljh":10,"-":66}},{"path":"src/test/java/tracko/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"donljh":3,"-":39}},{"path":"src/test/java/tracko/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"donljh":3,"-":39}},{"path":"src/test/java/tracko/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.model.tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"donljh":2,"-":24}},{"path":"src/test/java/tracko/storage/JsonAdaptedItemQuantityPairTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.storage.JsonAdaptedItemQuantityPair.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalItemQuantityPairs.PAIR_2;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"public class JsonAdaptedItemQuantityPairTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    private static final String VALID_ITEM_NAME \u003d PAIR_2.getItem();","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    private static final String VALID_QUANTITY \u003d PAIR_2.getQuantity().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    public void toModelType_validitemDetails_returnsitemquantitypair() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"        JsonAdaptedItemQuantityPair pair \u003d new JsonAdaptedItemQuantityPair(PAIR_2);","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"        assertEquals(PAIR_2, pair.toModelType());","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    public void toModelType_nullItemName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"        JsonAdaptedItemQuantityPair order \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"            new JsonAdaptedItemQuantityPair(null, VALID_QUANTITY);","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Item name\");","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    public void toModelType_nullQuantity_throwsIllegalValueException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"        JsonAdaptedItemQuantityPair order \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"            new JsonAdaptedItemQuantityPair(VALID_ITEM_NAME, null);","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Quantity\");","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"donljh":38}},{"path":"src/test/java/tracko/storage/JsonAdaptedOrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.storage.JsonAdaptedOrder.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalOrders.ORDER_2;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"public class JsonAdaptedOrderTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    private static final List\u003cJsonAdaptedItemQuantityPair\u003e EMPTY_ITEM_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    private static final String VALID_NAME \u003d ORDER_2.getName().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    private static final String VALID_PHONE \u003d ORDER_2.getPhone().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    private static final String VALID_EMAIL \u003d ORDER_2.getEmail().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    private static final String VALID_ADDRESS \u003d ORDER_2.getAddress().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    private static final List\u003cJsonAdaptedItemQuantityPair\u003e VALID_ITEM_LIST \u003d ORDER_2.getItemList().stream()","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"            .map(JsonAdaptedItemQuantityPair::new)","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    public void toModelType_validorderDetails_returnsorder() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(ORDER_2);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"        assertEquals(ORDER_2, order.toModelType());","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"                new JsonAdaptedOrder(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ITEM_LIST);","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"            new JsonAdaptedOrder(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ITEM_LIST);","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"                new JsonAdaptedOrder(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ITEM_LIST);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"            new JsonAdaptedOrder(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_ITEM_LIST);","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"                new JsonAdaptedOrder(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_ITEM_LIST);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"            new JsonAdaptedOrder(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_ITEM_LIST);","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"donljh"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"donljh"},"content":"                new JsonAdaptedOrder(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_ITEM_LIST);","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"donljh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"donljh"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"donljh"},"content":"            new JsonAdaptedOrder(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_ITEM_LIST);","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"donljh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"donljh"},"content":"    public void toModelType_nullItemList_throwsIllegalValueException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"donljh"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"donljh"},"content":"            new JsonAdaptedOrder(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, null);","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"donljh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Item List\");","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"donljh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"donljh"},"content":"    public void toModelType_emptyItemList_throwsIllegalValueException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"donljh"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"donljh"},"content":"            new JsonAdaptedOrder(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, EMPTY_ITEM_LIST);","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"donljh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Item List\");","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"donljh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"donljh":64,"-":56}},{"path":"src/test/java/tracko/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"// import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"// import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"// import java.nio.file.Path;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"// import java.nio.file.Paths;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"// import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"//","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"// import tracko.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"// import tracko.commons.util.JsonUtil;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"// import tracko.model.AddressBook;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"// import tracko.testutil.TypicalOrders;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    // private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    // private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    // private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidOrderOrders.json\");","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    // private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    // public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    //     JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    //             JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    //     AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    //     AddressBook typicalPersonsAddressBook \u003d TypicalOrders.getTrackOWithTypicalOrders();","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    //     assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"    // public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    //     JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    //             JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    //     assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"    //","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    // public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    //     JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"    //             JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"    //     assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"    //             dataFromFile::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"donljh":42,"-":5}},{"path":"src/test/java/tracko/storage/JsonTrackOStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalOrders.ORDER_8;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalOrders.ORDER_9;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalOrders.getTrackOWithTypicalOrders;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyTrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"import tracko.model.TrackO;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"public class JsonTrackOStorageTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTrackOStorageTest\");","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTrackO(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    private java.util.Optional\u003cReadOnlyTrackO\u003e readTrackO(String filePath) throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"        return new JsonTrackOStorage(Paths.get(filePath)).readTrackO(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"        assertFalse(readTrackO(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTrackO(\"notJsonFormatOrders.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTrackO(\"invalidOrderOrders.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTrackO(\"invalidAndValidOrderOrders.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"        TrackO original \u003d getTrackOWithTypicalOrders();","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"        JsonTrackOStorage jsonTrackOStorage \u003d new JsonTrackOStorage(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"        jsonTrackOStorage.saveTrackO(original, filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"        ReadOnlyTrackO readBack \u003d jsonTrackOStorage.readTrackO(filePath).get();","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"        assertEquals(original, new TrackO(readBack));","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"        original.addOrder(ORDER_8);","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"        // re-add after implementation of remove order","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"        // original.removePerson(ORDER_1);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"        jsonTrackOStorage.saveTrackO(original, filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"        readBack \u003d jsonTrackOStorage.readTrackO(filePath).get();","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"        assertEquals(original, new TrackO(readBack));","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"        original.addOrder(ORDER_9);","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"        jsonTrackOStorage.saveTrackO(original); // file path not specified","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"        readBack \u003d jsonTrackOStorage.readTrackO().get(); // file path not specified","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"        assertEquals(original, new TrackO(readBack));","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"donljh"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTrackO(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"donljh"},"content":"    private void saveTrackO(ReadOnlyTrackO trackO, String filePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"donljh"},"content":"            new JsonTrackOStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"donljh"},"content":"                    .saveTrackO(trackO, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"donljh"},"content":"    public void saveTrackO_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"donljh"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTrackO(new TrackO(), null));","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"donljh":40,"-":72}},{"path":"src/test/java/tracko/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import tracko.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"donljh":5,"-":118}},{"path":"src/test/java/tracko/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalOrders.getTrackOWithTypicalOrders;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import tracko.model.ReadOnlyTrackO;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.model.TrackO;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import tracko.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"        JsonTrackOStorage trackOStorage \u003d new JsonTrackOStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"        storageManager \u003d new StorageManager(trackOStorage, userPrefsStorage);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    public void trackOSave() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"        TrackO original \u003d getTrackOWithTypicalOrders();","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"        storageManager.saveTrackO(original);","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"        ReadOnlyTrackO retrieved \u003d storageManager.readTrackO().get();","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"        assertEquals(original, new TrackO(retrieved));","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"    public void getOrdersFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"Jiacheng-y"},"content":"        assertNotNull(storageManager.getTrackOFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":14,"Jiacheng-y":1,"-":53}},{"path":"src/test/java/tracko/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"donljh":1,"-":33}},{"path":"src/test/java/tracko/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.order.EditOrderCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import tracko.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"donljh":8,"-":79}},{"path":"src/test/java/tracko/testutil/ItemQuantityPairBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.testutil;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import tracko.model.order.ItemQuantityPair;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":" * A utility class to help with building ItemQuantityPair objects.","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"public class ItemQuantityPairBuilder {","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"    public static final String DEFAULT_ITEM_NAME \u003d \"Mechanical Pencil\";","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"    public static final Integer DEFAULT_QUANTITY \u003d 3;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    private String itemName;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    private Integer quantity;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"     * Creates a {@code ItemQuantityPairBuilder} with the default details.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    public ItemQuantityPairBuilder() {","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"        itemName \u003d DEFAULT_ITEM_NAME;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"        quantity \u003d DEFAULT_QUANTITY;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"     * Initializes the OrderBuilder with the data of {@code pairToCopy}.","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    public ItemQuantityPairBuilder(ItemQuantityPair pairToCopy) {","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"        itemName \u003d pairToCopy.getItem();","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        quantity \u003d pairToCopy.getQuantity();","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"     * Sets the {@code itemName} of the {@code ItemQuantityPair} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    public ItemQuantityPairBuilder withItemName(String itemName) {","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"     * Sets the {@code quantity} of the {@code ItemQuantityPair} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"    public ItemQuantityPairBuilder withQuantity(Integer quantity) {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"    public ItemQuantityPair build() {","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"        return new ItemQuantityPair(itemName, quantity);","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"donljh":50}},{"path":"src/test/java/tracko/testutil/OrderBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Address;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Email;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.model.order.ItemQuantityPair;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Phone;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":" * A utility class to help with building Order objects.","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"public class OrderBuilder {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    public static final String DEFAULT_ITEM \u003d \"Keychain\";","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    public static final Integer DEFAULT_QUANTITY \u003d 2;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    private List\u003cItemQuantityPair\u003e itemList;","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"     * Creates a {@code OrderBuilder} with the default details.","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    public OrderBuilder() {","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"        itemList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"        itemList.add(new ItemQuantityPair(DEFAULT_ITEM, DEFAULT_QUANTITY));","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"     * Initializes the OrderBuilder with the data of {@code orderToCopy}.","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"    public OrderBuilder(Order orderToCopy) {","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"        name \u003d orderToCopy.getName();","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"        phone \u003d orderToCopy.getPhone();","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"        email \u003d orderToCopy.getEmail();","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"        address \u003d orderToCopy.getAddress();","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"        itemList \u003d orderToCopy.getItemList();","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"     * Sets the {@code Name} of the {@code Order} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"    public OrderBuilder withName(String name) {","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"     * Sets the {@code Address} of the {@code Order} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"    public OrderBuilder withAddress(String address) {","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"     * Sets the {@code Phone} of the {@code Order} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"    public OrderBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"     * Sets the {@code Email} of the {@code Order} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"    public OrderBuilder withEmail(String email) {","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"     * Adds an item and associated quantity to the list of items ordered","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"    public OrderBuilder withItemQuantityPair(ItemQuantityPair itemQuantityPair) {","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"        itemList.add(itemQuantityPair);","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"donljh"},"content":"     * Clears the item list.","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"donljh"},"content":"    public OrderBuilder withEmptyItemList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"donljh"},"content":"        itemList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"donljh"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"donljh"},"content":"    public Order build() {","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"donljh"},"content":"        return new Order(name, phone, email, address, itemList);","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"donljh":50,"-":56}},{"path":"src/test/java/tracko/testutil/OrderUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import static tracko.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import tracko.logic.commands.order.EditOrderCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import tracko.model.order.ItemQuantityPair;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import tracko.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":" * A utility class for Order.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"public class OrderUtil {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"     * Returns an add command string for adding the {@code order}.","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    public static String getBaseAddOrderCommand(Order order) {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        return AddOrderCommand.COMMAND_WORD + \" \" + getBaseOrderDetails(order);","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"     * Returns the part of command string for initiating the given {@code order}\u0027s details.","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    public static String getBaseOrderDetails(Order order) {","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"        sb.append(PREFIX_NAME + order.getName().fullName + \" \");","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"        sb.append(PREFIX_PHONE + order.getPhone().value + \" \");","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"        sb.append(PREFIX_EMAIL + order.getEmail().value + \" \");","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"        sb.append(PREFIX_ADDRESS + order.getAddress().value + \" \");","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"     * Returns the part of the command string that adds items to the {@code order}\u0027s details.","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"    public static String getItemQuantityPairDetails(Order order) {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"        for (ItemQuantityPair itemQuantityPair: order.getItemList()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"            sb.append(PREFIX_ITEM + itemQuantityPair.getItem() + \" \");","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"            sb.append(PREFIX_QUANTITY + itemQuantityPair.getQuantity().toString());","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"donljh":37,"-":37}},{"path":"src/test/java/tracko/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":1,"-":71}},{"path":"src/test/java/tracko/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import tracko.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s order list.","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"    public static Index getMidIndexOfOrderList(Model model) {","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"        return Index.fromOneBased(model.getOrderList().size() / 2);","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"     * Returns the last index of the person in the {@code model}\u0027s order list.","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"    public static Index getLastIndexOfOrderList(Model model) {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"        return Index.fromOneBased(model.getOrderList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"    public static Order getOrder(Model model, Index index) {","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"        return model.getOrderList().get(index.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":12,"-":43}},{"path":"src/test/java/tracko/testutil/TrackOBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import tracko.model.TrackO;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * A utility class to help with building TrackO objects.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"public class TrackOBuilder {","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    private TrackO trackO;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    public TrackOBuilder() {","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"        trackO \u003d new TrackO();","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    public TrackOBuilder(TrackO trackO) {","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"        this.trackO \u003d trackO;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"     * Adds a new {@code Person} to the {@code TrackO} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    public TrackOBuilder withOrder(Order order) {","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"        trackO.addOrder(order);","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    public TrackO build() {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        return trackO;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donljh":15,"-":17}},{"path":"src/test/java/tracko/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import tracko.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"sohenze"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"sohenze"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"sohenze"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"donljh":2,"-":7,"sohenze":3}},{"path":"src/test/java/tracko/testutil/TypicalItemQuantityPairs.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.testutil;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_ITEM_NAME_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_ITEM_NAME_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_ITEM_QUANTITY_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_ITEM_QUANTITY_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import tracko.model.order.ItemQuantityPair;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":" * A utility class containing a list of {@code ItemQuantityPair} objects to be used in tests.","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"public class TypicalItemQuantityPairs {","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    public static final ItemQuantityPair PAIR_1 \u003d new ItemQuantityPairBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"        .withItemName(\"Mattress\").withQuantity(1).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    public static final ItemQuantityPair PAIR_2 \u003d new ItemQuantityPairBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"        .withItemName(\"Bolster\").withQuantity(2).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    public static final ItemQuantityPair PAIR_3 \u003d new ItemQuantityPairBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"        .withItemName(\"Pillow\").withQuantity(3).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    public static final ItemQuantityPair PAIR_4 \u003d new ItemQuantityPairBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"        .withItemName(\"Chair\").withQuantity(4).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    public static final ItemQuantityPair PAIR_5 \u003d new ItemQuantityPairBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"        .withItemName(\"Table\").withQuantity(5).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    public static final ItemQuantityPair PAIR_6 \u003d new ItemQuantityPairBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"        .withItemName(\"Cushion\").withQuantity(6).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    public static final ItemQuantityPair PAIR_7 \u003d new ItemQuantityPairBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        .withItemName(\"Towel\").withQuantity(7).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    public static final ItemQuantityPair PAIR_8 \u003d new ItemQuantityPairBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        .withItemName(\"Apple\").withQuantity(8).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    public static final ItemQuantityPair PAIR_9 \u003d new ItemQuantityPairBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"        .withItemName(\"Pineapple\").withQuantity(9).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    public static final ItemQuantityPair PAIR_10 \u003d new ItemQuantityPairBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"        .withItemName(VALID_ITEM_NAME_AMY).withQuantity(VALID_ITEM_QUANTITY_AMY).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    public static final ItemQuantityPair PAIR_11 \u003d new ItemQuantityPairBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"        .withItemName(VALID_ITEM_NAME_BOB).withQuantity(VALID_ITEM_QUANTITY_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"donljh":40}},{"path":"src/test/java/tracko/testutil/TypicalOrders.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import static tracko.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalItemQuantityPairs.PAIR_1;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalItemQuantityPairs.PAIR_10;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalItemQuantityPairs.PAIR_11;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalItemQuantityPairs.PAIR_2;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalItemQuantityPairs.PAIR_3;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalItemQuantityPairs.PAIR_4;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalItemQuantityPairs.PAIR_5;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalItemQuantityPairs.PAIR_6;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalItemQuantityPairs.PAIR_7;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalItemQuantityPairs.PAIR_8;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.TypicalItemQuantityPairs.PAIR_9;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"import tracko.model.TrackO;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"import tracko.model.order.Order;","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":" * A utility class containing a list of {@code Order} objects to be used in tests.","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"public class TypicalOrders {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    public static final Order ORDER_1 \u003d new OrderBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"            .withPhone(\"94351253\").withItemQuantityPair(PAIR_1).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"    public static final Order ORDER_2 \u003d new OrderBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"            .withPhone(\"98765432\").withItemQuantityPair(PAIR_2).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    public static final Order ORDER_3 \u003d new OrderBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"            .withPhone(\"95352563\").withEmail(\"heinz@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"            .withAddress(\"wall street\").withItemQuantityPair(PAIR_3).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"    public static final Order ORDER_4 \u003d new OrderBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"            .withPhone(\"87652533\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"            .withAddress(\"10th street\").withItemQuantityPair(PAIR_4).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"    public static final Order ORDER_5 \u003d new OrderBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"            .withPhone(\"9482224\").withEmail(\"werner@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"            .withAddress(\"michegan ave\").withItemQuantityPair(PAIR_5).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"    public static final Order ORDER_6 \u003d new OrderBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"            .withPhone(\"9482427\").withEmail(\"lydia@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"            .withAddress(\"little tokyo\").withItemQuantityPair(PAIR_6).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"    public static final Order ORDER_7 \u003d new OrderBuilder().withName(\"George Best\")","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"            .withPhone(\"9482442\").withEmail(\"anna@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"            .withAddress(\"4th street\").withItemQuantityPair(PAIR_7).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"    public static final Order ORDER_8 \u003d new OrderBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"            .withPhone(\"8482424\").withEmail(\"stefan@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"            .withAddress(\"little india\").withItemQuantityPair(PAIR_8).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"    public static final Order ORDER_9 \u003d new OrderBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"            .withPhone(\"8482131\").withEmail(\"hans@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"            .withAddress(\"chicago ave\").withItemQuantityPair(PAIR_9).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"    // Manually added - Order\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"    public static final Order ORDER_10 \u003d new OrderBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withItemQuantityPair(PAIR_10).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"    public static final Order ORDER_11 \u003d new OrderBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withItemQuantityPair(PAIR_11).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"    private TypicalOrders() {} // prevents instantiation","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"     * Returns an {@code TrackO} with all the typical {@code Order}.","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"    public static TrackO getTrackOWithTypicalOrders() {","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"        TrackO trackO \u003d new TrackO();","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"        for (Order order : getTypicalOrders()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"            trackO.addOrder(order);","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"        return trackO;","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"    public static List\u003cOrder\u003e getTypicalOrders() {","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ORDER_1, ORDER_2, ORDER_3, ORDER_4, ORDER_5, ORDER_6, ORDER_7));","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"donljh":64,"-":25}},{"path":"src/test/java/tracko/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"donljh":1,"-":34}},{"path":"src/test/java/tracko/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package tracko.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static tracko.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import tracko.MainApp;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"donljh":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"\u003c?import tracko.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"donljh":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"\u003c?import tracko.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"\u003cfx:root type\u003d\"TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"donljh":2,"-":5}}]
