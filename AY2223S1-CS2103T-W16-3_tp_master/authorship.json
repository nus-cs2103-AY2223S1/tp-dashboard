[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W16-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W16-3/tp/actions)","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W16-3/tp/branch/master/graph/badge.svg?token\u003dKXLMFZTCKN)](https://codecov.io/gh/AY2223S1-CS2103T-W16-3/tp)","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"## checkUp","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"`checkUp` is an application that enables hospital staff to efficiently keep track of all the patient details within a hospital.","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"We offer an **AMAZING** Command Line Interface (CLI) for you to manage your patients *efficiently* and *effectively*.","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"As for those who are not as tech-savvy, fret not.","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"We also offer a comprehensive [user guide](docs/UserGuide.md) for you to learn how to use our application!","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":"## Relevant Sources","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"- [User Guide](docs/UserGuide.md)","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":"- [Developer Guide](docs/DeveloperGuide.md)","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"- [About Us](docs/AboutUs.md)","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":"### Acknowledgement","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nehcuy":13,"PeiYee88":4,"kxrt":1,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"kxrt"},"content":"    archiveFileName \u003d \u0027checkUp.jar\u0027","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"kxrt"},"content":"run {","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"kxrt"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"-":71,"kxrt":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"You can reach us at our emails:","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"1. Pei Yee: `peiyee88@u.nus.edu`","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":"2. Kartik: `kartikeya@u.nus.edu`","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"3. Zhehao: `x_z@u.nus.edu`","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"4. Ryan: `e0725246@u.nus.edu`","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":"5. Yuchen: `hyuchen@u.nus.edu`","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"### Pei Yee Cheng","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"\u003cimg src\u003d\"images/peiyee88.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"nehcuy"},"content":"[[github](https://github.com/peiyee88)]","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"nehcuy"},"content":"[[portfolio](team/peiyee88.md)]","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"* Role: Developer","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"* Responsibilities: Scheduling, Testing, Model","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"### Kartikeya","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"\u003cimg src\u003d\"images/kxrt.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"nehcuy"},"content":"[[github](http://github.com/kxrt)]","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"nehcuy"},"content":"[[portfolio](team/kxrt.md)]","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"* Role: Developer, Team Lead","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"kxrt"},"content":"* Responsibilities: Integration, Git, UI","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"### Zhehao","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"\u003cimg src\u003d\"images/charles1026.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"nehcuy"},"content":"[[github](http://github.com/Charles1026)]","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"[[portfolio](team/charles1026.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"kxrt"},"content":"* Responsibilities: Deadlines, Sandbagging, Storage","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"### Ryan Tan","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"\u003cimg src\u003d\"images/ryan-tan00.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"nehcuy"},"content":"[[github](https://github.com/Ryan-Tan00)]","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"[[portfolio](team/ryan-tan00.md)]","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"kxrt"},"content":"* Responsibilities: Documentation, Commons","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"nehcuy"},"content":"### Huang Yuchen","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"nehcuy"},"content":"\u003cimg src\u003d\"images/nehcuy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"nehcuy"},"content":"[[github](http://github.com/nehcuy)]","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"nehcuy"},"content":"[[portfolio](team/nehcuy.md)]","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"kxrt"},"content":"* Role: Developer, Co-Team Lead","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"kxrt"},"content":"* Responsibilities: Code Quality, Logic","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"nehcuy":16,"Charles1026":7,"-":32,"kxrt":8,"Ryan-Tan00":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"kxrt"},"content":"### Appointments feature","lastModifiedDate":"2022-10-21"},{"lineNumber":238,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":239,"author":{"gitId":"kxrt"},"content":"![AppointmentClassDiagram](images/AppointmentClassDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":240,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":241,"author":{"gitId":"kxrt"},"content":"The class diagram above visualises the `Appointment` package. The members of the `Medication` class have been hidden.","lastModifiedDate":"2022-10-22"},{"lineNumber":242,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":243,"author":{"gitId":"kxrt"},"content":"**Implementation**","lastModifiedDate":"2022-10-21"},{"lineNumber":244,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":245,"author":{"gitId":"kxrt"},"content":"The appointment creation mechanism is facilitated by its own `Appointment` component under the `Model` component. There","lastModifiedDate":"2022-10-21"},{"lineNumber":246,"author":{"gitId":"kxrt"},"content":"are 2 types of appointments, namely, `PastAppointment` and `UpcomingAppointment`.","lastModifiedDate":"2022-10-22"},{"lineNumber":247,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":248,"author":{"gitId":"kxrt"},"content":"- Both of these extend the abstract `Appointment` class, which implements the `Appointment#getDate()` operation.","lastModifiedDate":"2022-10-22"},{"lineNumber":249,"author":{"gitId":"kxrt"},"content":"- The static method `Appointment#isValidDate()` helps check against invalid date inputs for appointment creation.","lastModifiedDate":"2022-10-22"},{"lineNumber":250,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":251,"author":{"gitId":"kxrt"},"content":"#### `PastAppointment`","lastModifiedDate":"2022-10-21"},{"lineNumber":252,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":253,"author":{"gitId":"kxrt"},"content":"`PastAppointment`s represent a completed appointment for a patient. They are guaranteed to be immutable as they","lastModifiedDate":"2022-10-21"},{"lineNumber":254,"author":{"gitId":"kxrt"},"content":"constitute of sensitive patient data. Apart from `date`, `PastAppointment`s also require the following:","lastModifiedDate":"2022-10-21"},{"lineNumber":255,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":256,"author":{"gitId":"kxrt"},"content":"* `diagnosis`","lastModifiedDate":"2022-10-21"},{"lineNumber":257,"author":{"gitId":"kxrt"},"content":"  * Stored as a string, and is compulsory for the creation of a `PastAppointment`. Represents the doctor\u0027s analysis of","lastModifiedDate":"2022-10-22"},{"lineNumber":258,"author":{"gitId":"kxrt"},"content":"    the patient\u0027s state in the appointment, and is input using the `diag/` prefix.","lastModifiedDate":"2022-10-22"},{"lineNumber":259,"author":{"gitId":"kxrt"},"content":"  * Exposed using the `PastAppointment#getDiagnosis()` method for use in `JsonAdaptedPastAppointment`.","lastModifiedDate":"2022-10-21"},{"lineNumber":260,"author":{"gitId":"kxrt"},"content":"* `medication`","lastModifiedDate":"2022-10-21"},{"lineNumber":261,"author":{"gitId":"kxrt"},"content":"  * Stored as a set of medication tags, a `PastAppointment` may contain 0 or more medicine tags. Each medicine tag is","lastModifiedDate":"2022-10-21"},{"lineNumber":262,"author":{"gitId":"kxrt"},"content":"    input separately with a `m/` prefix.","lastModifiedDate":"2022-10-21"},{"lineNumber":263,"author":{"gitId":"kxrt"},"content":"  * Exposed using the `PastApointment#getMedication()` method for use in `JsonAdaptedPastAppointment`.","lastModifiedDate":"2022-10-21"},{"lineNumber":264,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":265,"author":{"gitId":"kxrt"},"content":"#### `UpcomingAppointment`","lastModifiedDate":"2022-10-22"},{"lineNumber":266,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":267,"author":{"gitId":"kxrt"},"content":"`UpcomingAppointment`s represent an upcoming appointment for a patient. They only contain the `date` of the upcoming","lastModifiedDate":"2022-10-22"},{"lineNumber":268,"author":{"gitId":"kxrt"},"content":"appointment. A patient can only have  a **maximum of 1** `UpcomingAppointment` at any given time.","lastModifiedDate":"2022-10-22"},{"lineNumber":269,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":270,"author":{"gitId":"kxrt"},"content":"Given below is an example usage scenario and how the appointment mechanism behaves at each step.","lastModifiedDate":"2022-10-22"},{"lineNumber":271,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":272,"author":{"gitId":"kxrt"},"content":"Context: Patient `John Davis` had a past appointment on `12-06-2022` where they were diagnosed with a `headache` and","lastModifiedDate":"2022-10-22"},{"lineNumber":273,"author":{"gitId":"kxrt"},"content":"prescribed `paracetamol` medication as a painkiller. They are scheduled for a follow-up appointment on `16-06-2022`.","lastModifiedDate":"2022-10-22"},{"lineNumber":274,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":275,"author":{"gitId":"kxrt"},"content":"Step 1. The medical assistant opens the application and executes `get /n John Davis` to find the target patient. The","lastModifiedDate":"2022-10-22"},{"lineNumber":276,"author":{"gitId":"kxrt"},"content":"assistant notices John is at index 2. John Davis currently has 0 `PastAppointment`s and no `UpcomingAppointment`.","lastModifiedDate":"2022-10-22"},{"lineNumber":277,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":278,"author":{"gitId":"kxrt"},"content":"![AppointmentObjectDiagramBefore](images/AppointmentObjectDiagramBefore.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":279,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":280,"author":{"gitId":"kxrt"},"content":"The values of John\u0027s default details have been hidden in the above diagram.","lastModifiedDate":"2022-10-22"},{"lineNumber":281,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":282,"author":{"gitId":"kxrt"},"content":"Step 2. The medical assistant creates a `PastAppointment` for John by executing `appt 2 on/12-06-2022 diag/headache","lastModifiedDate":"2022-10-22"},{"lineNumber":283,"author":{"gitId":"kxrt"},"content":"m/paracetamol`. The `PastAppointment` count is now at `1`.","lastModifiedDate":"2022-10-22"},{"lineNumber":284,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":285,"author":{"gitId":"kxrt"},"content":"![AppointmentObjectDiagramWithPastAppt](images/AppointmentObjectDiagramWithPastAppt.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":286,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":287,"author":{"gitId":"kxrt"},"content":"Step 3. The medical assistant creates an `UpcomingAppointment` for John by executing `edit upcoming/16-06-2022`. John","lastModifiedDate":"2022-10-22"},{"lineNumber":288,"author":{"gitId":"kxrt"},"content":"now has an `UpcomingAppointment` associated with him.","lastModifiedDate":"2022-10-22"},{"lineNumber":289,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":290,"author":{"gitId":"kxrt"},"content":"![AppointmentObjectDiagramWithBothAppt](images/AppointmentObjectDiagramWithBothAppt.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":291,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":292,"author":{"gitId":"nehcuy"},"content":"### Get Features (By prefixes)","lastModifiedDate":"2022-10-22"},{"lineNumber":293,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":294,"author":{"gitId":"nehcuy"},"content":"The get feature contains a series of sub-features that allows the user to get","lastModifiedDate":"2022-10-22"},{"lineNumber":295,"author":{"gitId":"nehcuy"},"content":"a list of persons based on the prefixes inputted. It is implemented the same way as the `AddressBookParser` class,","lastModifiedDate":"2022-10-22"},{"lineNumber":296,"author":{"gitId":"nehcuy"},"content":"but it matches the following prefix of the user input instead of the first command word.","lastModifiedDate":"2022-10-22"},{"lineNumber":297,"author":{"gitId":"nehcuy"},"content":"By having a parent `GetCommand` class, we can have a series of sub-commands that inherits from it.","lastModifiedDate":"2022-10-22"},{"lineNumber":298,"author":{"gitId":"nehcuy"},"content":"This way, new implementations of other items to be filtered when using the get command can be easily","lastModifiedDate":"2022-10-22"},{"lineNumber":299,"author":{"gitId":"nehcuy"},"content":"added in the future.","lastModifiedDate":"2022-10-22"},{"lineNumber":300,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":301,"author":{"gitId":"nehcuy"},"content":"This Sequence Diagram below illustrates the implementation of the `GetCommand` component using `GetWardNumberCommand`","lastModifiedDate":"2022-10-22"},{"lineNumber":302,"author":{"gitId":"nehcuy"},"content":"as an example of the sequence of events of a typical get command call.  ","lastModifiedDate":"2022-10-22"},{"lineNumber":303,"author":{"gitId":"nehcuy"},"content":"![GetCommandSequence](images/tracing/GetCommandSequenceDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":304,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":305,"author":{"gitId":"nehcuy"},"content":"All get commands are implemented in the following steps:","lastModifiedDate":"2022-10-22"},{"lineNumber":306,"author":{"gitId":"nehcuy"},"content":"1. User input prefix is matched in `GetCommandParser` class","lastModifiedDate":"2022-10-22"},{"lineNumber":307,"author":{"gitId":"nehcuy"},"content":"2. Parser for the get command corresponding to the prefix is called and parses the user input","lastModifiedDate":"2022-10-22"},{"lineNumber":308,"author":{"gitId":"nehcuy"},"content":"3. Specific child classes of `GetCommand` is instantiated and executed","lastModifiedDate":"2022-10-22"},{"lineNumber":309,"author":{"gitId":"nehcuy"},"content":"4. The model is then updated such that the *filtered* list only displays patients whose details match the query","lastModifiedDate":"2022-10-22"},{"lineNumber":310,"author":{"gitId":"nehcuy"},"content":"arguments of that prefix","lastModifiedDate":"2022-10-22"},{"lineNumber":311,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":312,"author":{"gitId":"nehcuy"},"content":"#### Floor Number (/fn)","lastModifiedDate":"2022-10-22"},{"lineNumber":313,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":314,"author":{"gitId":"nehcuy"},"content":"Getting the list of patients in the query floor number involves the following steps:","lastModifiedDate":"2022-10-22"},{"lineNumber":315,"author":{"gitId":"nehcuy"},"content":"1. prefix \"/fn\" is matched in `GetCommandParser` class","lastModifiedDate":"2022-10-22"},{"lineNumber":316,"author":{"gitId":"nehcuy"},"content":"2. a new `GetFloorNumberCommandParser` instance is created and parses the user input","lastModifiedDate":"2022-10-22"},{"lineNumber":317,"author":{"gitId":"nehcuy"},"content":"3. a `GetFloorNumberCommand` instance is returned","lastModifiedDate":"2022-10-22"},{"lineNumber":318,"author":{"gitId":"nehcuy"},"content":"4. the model is updated such that the *filtered* list only displays patients who are on the query floor number","lastModifiedDate":"2022-10-22"},{"lineNumber":319,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":320,"author":{"gitId":"nehcuy"},"content":"Strict restrictions are placed to prevent querying and parsing of invalid floor numbers. Invalid floor numbers include","lastModifiedDate":"2022-10-22"},{"lineNumber":321,"author":{"gitId":"nehcuy"},"content":"floor numbers less than 1, negative numbers and characters or strings. ","lastModifiedDate":"2022-10-22"},{"lineNumber":322,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":323,"author":{"gitId":"nehcuy"},"content":"#### Hospital Wing (/hw)","lastModifiedDate":"2022-10-22"},{"lineNumber":324,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":325,"author":{"gitId":"nehcuy"},"content":"Getting the list of patients in the query hospital wing involves the following steps:","lastModifiedDate":"2022-10-22"},{"lineNumber":326,"author":{"gitId":"nehcuy"},"content":"1. prefix \"/hw\" is matched in `GetCommandParser` class","lastModifiedDate":"2022-10-22"},{"lineNumber":327,"author":{"gitId":"nehcuy"},"content":"2. a new `GetHospitalWingCommandParser` instance is created and parses the user input","lastModifiedDate":"2022-10-22"},{"lineNumber":328,"author":{"gitId":"nehcuy"},"content":"3. a `GetHospitalWingCommand` instance is returned","lastModifiedDate":"2022-10-22"},{"lineNumber":329,"author":{"gitId":"nehcuy"},"content":"4. the model is updated such that the *filtered* list only displays patients who are in the query hospital wing","lastModifiedDate":"2022-10-22"},{"lineNumber":330,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":331,"author":{"gitId":"nehcuy"},"content":"#### Next of Kin (/nok)","lastModifiedDate":"2022-10-22"},{"lineNumber":332,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":333,"author":{"gitId":"nehcuy"},"content":"Getting the information of the next of kin of the list of query patient names involves the following steps:","lastModifiedDate":"2022-10-22"},{"lineNumber":334,"author":{"gitId":"nehcuy"},"content":"1. prefix \"/nok\" is matched in `GetCommandParser` class","lastModifiedDate":"2022-10-22"},{"lineNumber":335,"author":{"gitId":"nehcuy"},"content":"2. a new `GetNextOfKinCommandParser` instance is created and parses the user input","lastModifiedDate":"2022-10-22"},{"lineNumber":336,"author":{"gitId":"nehcuy"},"content":"3. a `GetNextOfKinCommand` instance is returned","lastModifiedDate":"2022-10-22"},{"lineNumber":337,"author":{"gitId":"nehcuy"},"content":"4. the model is updated such that the *filtered* list only displays queried patients\u0027 next of kin details","lastModifiedDate":"2022-10-22"},{"lineNumber":338,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":339,"author":{"gitId":"nehcuy"},"content":"Details of the next of kin include the name, relationship to patient and phone number.","lastModifiedDate":"2022-10-22"},{"lineNumber":340,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":341,"author":{"gitId":"nehcuy"},"content":"#### Ward Number (/wn)","lastModifiedDate":"2022-10-22"},{"lineNumber":342,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":343,"author":{"gitId":"nehcuy"},"content":"Getting the list of patients in the query ward number involves the following steps:","lastModifiedDate":"2022-10-22"},{"lineNumber":344,"author":{"gitId":"nehcuy"},"content":"1. prefix \"/wn\" is matched in `GetCommandParser` class","lastModifiedDate":"2022-10-22"},{"lineNumber":345,"author":{"gitId":"nehcuy"},"content":"2. a new `GetWardNumberCommandParser` instance is created and parses the user input","lastModifiedDate":"2022-10-22"},{"lineNumber":346,"author":{"gitId":"nehcuy"},"content":"3. a `GetWardNumberCommand` instance is returned","lastModifiedDate":"2022-10-22"},{"lineNumber":347,"author":{"gitId":"nehcuy"},"content":"4. the model is updated such that the *filtered* list only displays patients who are in the query ward number","lastModifiedDate":"2022-10-22"},{"lineNumber":348,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":349,"author":{"gitId":"nehcuy"},"content":"Strict restrictions are placed to prevent too many varieties of ward number inputs. This way the regex for searching","lastModifiedDate":"2022-10-22"},{"lineNumber":350,"author":{"gitId":"nehcuy"},"content":"for ward numbers is simplified. Due to differing places having different ways of numbering their ward numbers, we","lastModifiedDate":"2022-10-22"},{"lineNumber":351,"author":{"gitId":"nehcuy"},"content":"have standardised it to be in the format of `Alphabet` + `3 Numbers`. For example, `A123`, `B241, `C005`, etc.","lastModifiedDate":"2022-10-22"},{"lineNumber":352,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":353,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"Ryan-Tan00"},"content":"### Get inpatients and outpatients feature (`get /inp` \u0026 `get /outp`)","lastModifiedDate":"2022-10-22"},{"lineNumber":358,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":359,"author":{"gitId":"Ryan-Tan00"},"content":"#### Current implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":360,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":361,"author":{"gitId":"Ryan-Tan00"},"content":"The current implementation of `get /inp` and `get /outp` is similar to how other commands are executed. ","lastModifiedDate":"2022-10-22"},{"lineNumber":362,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":363,"author":{"gitId":"Ryan-Tan00"},"content":"When `get /inp` or `get /outp` is inputted, the `AddressBookParser` object creates a `GetCommandParser` that parses the ","lastModifiedDate":"2022-10-22"},{"lineNumber":364,"author":{"gitId":"Ryan-Tan00"},"content":"prefix of the `get` command inputted. If additional parameters are inputted (e.g. `get /inp hello world`), the extra","lastModifiedDate":"2022-10-22"},{"lineNumber":365,"author":{"gitId":"Ryan-Tan00"},"content":"parameters will be ignored, similar to how `help`, `list`, `exit` and `clear` are executed. ","lastModifiedDate":"2022-10-22"},{"lineNumber":366,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":367,"author":{"gitId":"Ryan-Tan00"},"content":"The `GetCommandParser` object will then create the corresponding `GetInpatientCommand` or `GetOutpatientCommand` to be ","lastModifiedDate":"2022-10-22"},{"lineNumber":368,"author":{"gitId":"Ryan-Tan00"},"content":"returned. When executing the `Command`, the model is updated such that the *filtered* list only displays inpatients or","lastModifiedDate":"2022-10-22"},{"lineNumber":369,"author":{"gitId":"Ryan-Tan00"},"content":"outpatients.","lastModifiedDate":"2022-10-22"},{"lineNumber":370,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":371,"author":{"gitId":"Ryan-Tan00"},"content":"![GetInpatientSequenceDiagram](images/GetInpatientSequenceDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":372,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":373,"author":{"gitId":"Ryan-Tan00"},"content":"### \\[Proposed\\] Getting the past appointments of a patient (`get /appt INDEX`)","lastModifiedDate":"2022-10-22"},{"lineNumber":374,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":375,"author":{"gitId":"Ryan-Tan00"},"content":"#### Proposed implementation","lastModifiedDate":"2022-10-22"},{"lineNumber":376,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":377,"author":{"gitId":"Charles1026"},"content":"### New Add Command","lastModifiedDate":"2022-10-22"},{"lineNumber":378,"author":{"gitId":"Charles1026"},"content":"The new `Add` Command incorporates support for the necessary fields for a patient, namely they are the: `NextOfKin`,","lastModifiedDate":"2022-10-22"},{"lineNumber":379,"author":{"gitId":"Charles1026"},"content":"`PatientType`,`HospitalWing`, `FloorNumber`, `WardNumber` and `Medications` fields. The new command still follows the","lastModifiedDate":"2022-10-22"},{"lineNumber":380,"author":{"gitId":"Charles1026"},"content":"flow of the old command, as illustrated in the Activity Diagram below.","lastModifiedDate":"2022-10-22"},{"lineNumber":381,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":382,"author":{"gitId":"Charles1026"},"content":"![AddCommandSequenceDiagram](images/AddCommandSequenceDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":383,"author":{"gitId":"Charles1026"},"content":"![AddCommandParseArgsSequenceDiagram](images/AddCommandParseArgsSequenceDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":384,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":385,"author":{"gitId":"Charles1026"},"content":"As the Add Command now includes more fields for the patients, the Person class has also been updated to store these","lastModifiedDate":"2022-10-22"},{"lineNumber":386,"author":{"gitId":"Charles1026"},"content":"fields, as shown in the class diagram below.","lastModifiedDate":"2022-10-22"},{"lineNumber":387,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":388,"author":{"gitId":"Charles1026"},"content":"![PersonClassDiagram](images/PersonClassDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":389,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":390,"author":{"gitId":"Charles1026"},"content":"The usage of the Add Command remains the same as before.","lastModifiedDate":"2022-10-22"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"PeiYee88"},"content":"### Get hospital wing feature (`get /hw`)","lastModifiedDate":"2022-10-22"},{"lineNumber":393,"author":{"gitId":"PeiYee88"},"content":"When `get /hw` is inputted, the `AddressBookParser` object creates a `GetCommandParser` that parses the","lastModifiedDate":"2022-10-22"},{"lineNumber":394,"author":{"gitId":"PeiYee88"},"content":"prefix of the `get` command inputted. If additional parameters are inputted (e.g. `get /hw south`), the extra","lastModifiedDate":"2022-10-22"},{"lineNumber":395,"author":{"gitId":"PeiYee88"},"content":"parameters will be ignored, similar to how `help`, `list`, `exit` and `clear` are executed.","lastModifiedDate":"2022-10-22"},{"lineNumber":396,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":397,"author":{"gitId":"PeiYee88"},"content":"The `GetCommandParser` object will then create the corresponding `GetHospitalWingCommand`  to be","lastModifiedDate":"2022-10-22"},{"lineNumber":398,"author":{"gitId":"PeiYee88"},"content":"returned. When executing the `Command`, the model is updated such that the *filtered* list only displays ","lastModifiedDate":"2022-10-22"},{"lineNumber":399,"author":{"gitId":"PeiYee88"},"content":"patients within the inputted hospital wing.","lastModifiedDate":"2022-10-22"},{"lineNumber":400,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":401,"author":{"gitId":"PeiYee88"},"content":"![GetHospitalWingDiagram](images/GetHospitalWingSequenceDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":402,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":403,"author":{"gitId":"PeiYee88"},"content":"### Get next-of-kin data feature (`get /nok`)","lastModifiedDate":"2022-10-22"},{"lineNumber":404,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":405,"author":{"gitId":"PeiYee88"},"content":"When `get /nok` is inputted, the `AddressBookParser` object creates a `GetCommandParser` that parses the","lastModifiedDate":"2022-10-22"},{"lineNumber":406,"author":{"gitId":"PeiYee88"},"content":"prefix of the `get` command inputted. If additional parameters are inputted (e.g. `get /nok John`), the extra","lastModifiedDate":"2022-10-22"},{"lineNumber":407,"author":{"gitId":"PeiYee88"},"content":"parameters will be ignored, similar to how `help`, `list`, `exit` and `clear` are executed.","lastModifiedDate":"2022-10-22"},{"lineNumber":408,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":409,"author":{"gitId":"PeiYee88"},"content":"The `GetCommandParser` object will then create the corresponding `GetNextOfKinCommand`  to be","lastModifiedDate":"2022-10-22"},{"lineNumber":410,"author":{"gitId":"PeiYee88"},"content":"returned. When executing the `Command`, the model is updated such that the *filtered* list only displays","lastModifiedDate":"2022-10-22"},{"lineNumber":411,"author":{"gitId":"PeiYee88"},"content":"the next-of-kin details of the inputted patient.","lastModifiedDate":"2022-10-22"},{"lineNumber":412,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":413,"author":{"gitId":"PeiYee88"},"content":"![GetNextOfKinSequenceDiagram](images/GetNextOfKinSequenceDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":414,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":415,"author":{"gitId":"PeiYee88"},"content":"### Get appointment by date feature (`get /appton`)","lastModifiedDate":"2022-10-22"},{"lineNumber":416,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":417,"author":{"gitId":"PeiYee88"},"content":"When `get /appton` is inputted, the `AddressBookParser` object creates a `GetAppointmentByDateParser` that parses the","lastModifiedDate":"2022-10-22"},{"lineNumber":418,"author":{"gitId":"PeiYee88"},"content":"prefix of the `get` command inputted. If additional parameters are inputted (e.g. `get .appton 12-12-1212`), the extra","lastModifiedDate":"2022-10-22"},{"lineNumber":419,"author":{"gitId":"PeiYee88"},"content":"parameters will be ignored, similar to how `help`, `list`, `exit` and `clear` are executed.","lastModifiedDate":"2022-10-22"},{"lineNumber":420,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":421,"author":{"gitId":"PeiYee88"},"content":"The `GetCommandParser` object will then create the corresponding `GetAppointmentByDateCommand`  to be","lastModifiedDate":"2022-10-22"},{"lineNumber":422,"author":{"gitId":"PeiYee88"},"content":"returned. When executing the `Command`, the model is updated such that the *filtered* list only displays","lastModifiedDate":"2022-10-22"},{"lineNumber":423,"author":{"gitId":"PeiYee88"},"content":"all the patients\u0027 appointment given a specific date.","lastModifiedDate":"2022-10-22"},{"lineNumber":424,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":425,"author":{"gitId":"PeiYee88"},"content":"![GetAppointmentByDateSequenceDiagram](images/GetAppointmentByDateSequenceDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":426,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":427,"author":{"gitId":"PeiYee88"},"content":"#### Proposed implementation","lastModifiedDate":"2022-10-22"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":429,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":434,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":435,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":436,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":437,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"PeiYee88"},"content":"* for hospital staff","lastModifiedDate":"2022-09-30"},{"lineNumber":448,"author":{"gitId":"PeiYee88"},"content":"* prefer CLI over GUI","lastModifiedDate":"2022-09-30"},{"lineNumber":449,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":451,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":454,"author":{"gitId":"PeiYee88"},"content":"**Value proposition**: The product aims to enhance and increase the productivity and efficiency of hospital staff in terms of patients management, within a single hospital/clinic only.","lastModifiedDate":"2022-09-30"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":462,"author":{"gitId":"Ryan-Tan00"},"content":"| Priority | As a …                 | I want to …                                        | So that I can …                                                                             |","lastModifiedDate":"2022-10-22"},{"lineNumber":463,"author":{"gitId":"Ryan-Tan00"},"content":"|----------|------------------------|----------------------------------------------------|---------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-21"},{"lineNumber":464,"author":{"gitId":"PeiYee88"},"content":"| `* * *`  | doctor                 | search for patients by name                        | view medication patient is currently taking and prescribe new medication based on that info |","lastModifiedDate":"2022-09-30"},{"lineNumber":465,"author":{"gitId":"PeiYee88"},"content":"| `* * *`  | doctor                 | retrieve patient contact info and next-of-kin data | quickly and efficiently contact the patient or someone near them                            |","lastModifiedDate":"2022-09-30"},{"lineNumber":466,"author":{"gitId":"Ryan-Tan00"},"content":"| `* * *`  | hospital administrator | check the total number of patients in my hospital  | know when my hospital is oversubscribed                                                     |","lastModifiedDate":"2022-10-21"},{"lineNumber":467,"author":{"gitId":"PeiYee88"},"content":"| `* * *`  | hospital staff         | retrieve patients by ward number                   | attend to them quickly                                                                      |","lastModifiedDate":"2022-09-30"},{"lineNumber":468,"author":{"gitId":"PeiYee88"},"content":"| `* * *`  | hospital staff         | retrieve patients by floor number                  | attend to them quickly                                                                      |","lastModifiedDate":"2022-09-30"},{"lineNumber":469,"author":{"gitId":"PeiYee88"},"content":"| `* * *`  | hospital staff         | retrieve patients by hospital wings                | attend to them quickly                                                                      |","lastModifiedDate":"2022-09-30"},{"lineNumber":470,"author":{"gitId":"Ryan-Tan00"},"content":"| `* * *`  | hospital staff         | have a list of inpatients and outpatients          | easily see which patients are staying in the hospital                                       |","lastModifiedDate":"2022-10-21"},{"lineNumber":471,"author":{"gitId":"PeiYee88"},"content":"| `* * *`  | hospital staff         | check if patient is inpatient or for daily checkup | knows where to direct them                                                                  |","lastModifiedDate":"2022-09-30"},{"lineNumber":472,"author":{"gitId":"PeiYee88"},"content":"| `* * *`  | hospital staff         | create patient profiles                            | store new patients into the system                                                          |","lastModifiedDate":"2022-09-30"},{"lineNumber":473,"author":{"gitId":"PeiYee88"},"content":"| `* * *`  | nurse                  | retrieve patients by medication                    | find out a list of patients under each medication                                           |","lastModifiedDate":"2022-09-30"},{"lineNumber":474,"author":{"gitId":"PeiYee88"},"content":"| `* * *`  | hospital staff         | remove patients from the database                  | remove redundant entries that are no longer necessary                                       |","lastModifiedDate":"2022-09-30"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"PeiYee88"},"content":"**Use case: Delete a patient**","lastModifiedDate":"2022-09-30"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":506,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":507,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"PeiYee88"},"content":"2.  Should be able to hold up to 1000 patients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-30"},{"lineNumber":513,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"kxrt"},"content":"* **Hospital Administrator/Staff**: Member of hospital management, able to view and edit ALL patient contact details (including private contact details).","lastModifiedDate":"2022-10-02"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nehcuy":61,"Charles1026":14,"PeiYee88":55,"-":364,"kxrt":56,"Ryan-Tan00":24}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"# checkUp","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"is a **desktop app for managing patient details, optimized for use via a Command Line Interface** (CLI) while still","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, checkUp can get your patient management","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"1. Download the latest `checkUp.jar` from [here](https://github.com/AY2223S1-CS2103T-W16-3/tp/releases).","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your checkUp instance.","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"   contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"    * **`add`**`add nf/John nl/Doe c/12345678 m/Beclometasone nasal spray nok/Sam nokc/87654321 wn/B12 fn/12 hw/South io/Inpatient` :","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"      Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"    * **`del`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"    * **`get`** : Retrieve contact\u0027s information","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"  e.g. in `get /n NAME`, `NAME` is a parameter which can be used as `get /n John Doe`.","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"kxrt"},"content":"  e.g `n/NAME [m/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"kxrt"},"content":"  e.g. `[m/TAG]…​` can be used as ` ` (i.e. 0 times), `m/ibuprofen`, `t/ibuprofen t/lozenges` etc.","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"kxrt"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"kxrt"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"kxrt"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"kxrt"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"kxrt"},"content":"### Adding a patient: `add`","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"kxrt"},"content":"Adds a patient to checkUp.","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"kxrt"},"content":"### Locating patients: `get`","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"PeiYee88"},"content":"#### by name: `/n`","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"kxrt"},"content":"Finds patients whose names contain any of the given keywords.","lastModifiedDate":"2022-10-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"PeiYee88"},"content":"Format: `get /n NAME`","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"kxrt"},"content":"* Patients matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans Bo` will return `Hans Gruber`","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"kxrt"},"content":"  , `Bo Yang`","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"PeiYee88"},"content":"* `get /n john` returns `john` and `John Doe`","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"PeiYee88"},"content":"* `get /n alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"PeiYee88"},"content":"#### by next-of-kin data: `/nok`","lastModifiedDate":"2022-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"PeiYee88"},"content":"Finds next-of-kin data which contain any of the given keywords.","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"PeiYee88"},"content":"Format: `get /nok NEXT-OF-KIN_NAME`","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"kxrt"},"content":"* The patient\u0027s contact matching the keyword will be returned. e.g. `Hans Bo` will return `12345678`","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"PeiYee88"},"content":"#### by hospital wing: `/hw`","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"PeiYee88"},"content":"Finds patients in that particular hospital wing.","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"PeiYee88"},"content":"Format: `get /hw HOSPITAL_WING`","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":118,"author":{"gitId":"PeiYee88"},"content":"* The search is case-insensitive. e.g `souTh` will match `South`","lastModifiedDate":"2022-09-28"},{"lineNumber":119,"author":{"gitId":"kxrt"},"content":"* All the patients in that hospital wing will be returned. e.g. `get /hw SOUTH` will return `John` `Peter` `Mary`","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":121,"author":{"gitId":"nehcuy"},"content":"#### by floor number: `/fn`","lastModifiedDate":"2022-10-01"},{"lineNumber":122,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":123,"author":{"gitId":"nehcuy"},"content":"Finds patients in that particular floor number.","lastModifiedDate":"2022-10-01"},{"lineNumber":124,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":125,"author":{"gitId":"nehcuy"},"content":"Format: `get /fn FLOOR_NUMBER`","lastModifiedDate":"2022-10-01"},{"lineNumber":126,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":127,"author":{"gitId":"nehcuy"},"content":"* All the patients in that floor number will be returned.","lastModifiedDate":"2022-10-01"},{"lineNumber":128,"author":{"gitId":"kxrt"},"content":"* The floor number refers to the floor number the patient is on. e.g. `get /fn 2` will return `John` `Peter` `Mary`","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":130,"author":{"gitId":"nehcuy"},"content":"#### by ward number: `/wn`","lastModifiedDate":"2022-10-01"},{"lineNumber":131,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":132,"author":{"gitId":"nehcuy"},"content":"Finds patients in that particular ward number.","lastModifiedDate":"2022-10-01"},{"lineNumber":133,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":134,"author":{"gitId":"nehcuy"},"content":"Format: `get /wn WARD_NUMBER`","lastModifiedDate":"2022-10-01"},{"lineNumber":135,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":136,"author":{"gitId":"nehcuy"},"content":"* All the patients in that ward number will be returned.","lastModifiedDate":"2022-10-01"},{"lineNumber":137,"author":{"gitId":"kxrt"},"content":"* The ward number refers to the ward the patient is in. e.g. `get /wn D12` will return `John` `Peter` `Mary`","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":139,"author":{"gitId":"Ryan-Tan00"},"content":"#### by patient type: `/inp`","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"Ryan-Tan00"},"content":"Finds inpatients in checkUp.","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"Ryan-Tan00"},"content":"Format: `get /inp`","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"Ryan-Tan00"},"content":"Example:","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"Ryan-Tan00"},"content":"* `get /inp` returns `Alex`, `Charlotte` and `Roy`","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"Ryan-Tan00"},"content":"#### by patient type: `/outp`","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"Ryan-Tan00"},"content":"Finds outpatients in checkUp.","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"Ryan-Tan00"},"content":"Format: `get /outp`","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"Ryan-Tan00"},"content":"Example:","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"Ryan-Tan00"},"content":"* `get /outp` returns `Bernice`, `David` and `Irfan`","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"kxrt"},"content":"### Obtaining total patient count: `count`","lastModifiedDate":"2022-10-02"},{"lineNumber":173,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":174,"author":{"gitId":"kxrt"},"content":"Finds total number of patients.","lastModifiedDate":"2022-10-02"},{"lineNumber":175,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":176,"author":{"gitId":"kxrt"},"content":"Format: `count`","lastModifiedDate":"2022-10-02"},{"lineNumber":177,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":178,"author":{"gitId":"kxrt"},"content":"* A count of all existing patients in the hospital will be returned.","lastModifiedDate":"2022-10-02"},{"lineNumber":179,"author":{"gitId":"kxrt"},"content":"* The count will be a non-negative integer (\u003e\u003d 0). eg. `count` returns `452` when there are 452 patients noted within","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"kxrt"},"content":"  the hospital.","lastModifiedDate":"2022-10-16"},{"lineNumber":181,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":182,"author":{"gitId":"kxrt"},"content":"### Create past appointment for patient: `appt`","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"kxrt"},"content":"Creates a past appointment for the specified patient in checkUp.","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"kxrt"},"content":"Format: `appt INDEX on/DATE diag/DIAGNOSIS m/MEDICINE...`","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"kxrt"},"content":"* Past appointment is created for a person at the specified `INDEX`.","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"kxrt"},"content":"* The index refers to the index number showed in the displayed person list.","lastModifiedDate":"2022-10-16"},{"lineNumber":190,"author":{"gitId":"kxrt"},"content":"* The index **must be a positive integer**, eg. 1, 2, 3...","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"kxrt"},"content":"* The date can only be input in the `dd-MM-yyyy` format.","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"kxrt"},"content":"* The `DIAGNOSIS` field **cannot be empty**.","lastModifiedDate":"2022-10-16"},{"lineNumber":193,"author":{"gitId":"kxrt"},"content":"* The `MEDICINE` field(s) is/are optional. Use multiple `m/` prefixes if multiple medicines are prescribed.","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":195,"author":{"gitId":"kxrt"},"content":"Examples:","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"kxrt"},"content":"* `get /n John` returns `John` at index 1 and `John Doe` at index 2.","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"kxrt"},"content":"* Following this, `appt 1 on/12-06-2022 diag/Common cold, viral flu m/Panadol m/Lozenges` will create a past appointment","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"kxrt"},"content":"  for John.","lastModifiedDate":"2022-10-16"},{"lineNumber":200,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2022-10-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"kxrt"},"content":"Empties checkUp of all patients stored.","lastModifiedDate":"2022-10-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2022-10-16"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"kxrt"},"content":"* All patients will be removed from storage.","lastModifiedDate":"2022-10-16"},{"lineNumber":208,"author":{"gitId":"kxrt"},"content":"* This command is **nuclear**, and cannot be reversed. It should only be executed when absolutely necessary.","lastModifiedDate":"2022-10-16"},{"lineNumber":209,"author":{"gitId":"kxrt"},"content":"* This command is provided for privacy reasons, or to start afresh.","lastModifiedDate":"2022-10-16"},{"lineNumber":210,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":211,"author":{"gitId":"Ryan-Tan00"},"content":"### Editing the data file: `edit`","lastModifiedDate":"2022-10-16"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":213,"author":{"gitId":"Ryan-Tan00"},"content":"Edits a patient in checkUp.","lastModifiedDate":"2022-10-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":215,"author":{"gitId":"Ryan-Tan00"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [nok/NEXT OF KIN] [pt/PATIENT TYPE] [hw/HOSPITAL WING]","lastModifiedDate":"2022-10-16"},{"lineNumber":216,"author":{"gitId":"kxrt"},"content":"        [fn/FLOOR NUMBER] [wn/WARD NUMBER] [upcoming/DATE] [m/MEDICATION]...`","lastModifiedDate":"2022-10-22"},{"lineNumber":217,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":218,"author":{"gitId":"Ryan-Tan00"},"content":"* Edits the details of the patient at the specified `INDEX`. The index refers to the index number shown in the","lastModifiedDate":"2022-10-16"},{"lineNumber":219,"author":{"gitId":"Ryan-Tan00"},"content":"displayed patient list. The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2022-10-16"},{"lineNumber":220,"author":{"gitId":"Ryan-Tan00"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-10-16"},{"lineNumber":221,"author":{"gitId":"Ryan-Tan00"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-10-16"},{"lineNumber":222,"author":{"gitId":"Ryan-Tan00"},"content":"* When editing medication, the existing medication of the person will be removed i.e adding of medication is not","lastModifiedDate":"2022-10-16"},{"lineNumber":223,"author":{"gitId":"Ryan-Tan00"},"content":"cumulative.","lastModifiedDate":"2022-10-16"},{"lineNumber":224,"author":{"gitId":"Ryan-Tan00"},"content":"* You can remove all the person’s tags by typing m/ without specifying any medication after it.","lastModifiedDate":"2022-10-16"},{"lineNumber":225,"author":{"gitId":"kxrt"},"content":"* When editing upcoming appointment dates, the date must be in `dd-MM-yyyy` format, eg. `12-06-2022`.","lastModifiedDate":"2022-10-22"},{"lineNumber":226,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":227,"author":{"gitId":"Ryan-Tan00"},"content":"Examples:","lastModifiedDate":"2022-10-16"},{"lineNumber":228,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":229,"author":{"gitId":"Ryan-Tan00"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` edits the phone number and email address of the 1st patient to be `91234567`","lastModifiedDate":"2022-10-16"},{"lineNumber":230,"author":{"gitId":"Ryan-Tan00"},"content":"and `johndoe@example.com` respectively.","lastModifiedDate":"2022-10-16"},{"lineNumber":231,"author":{"gitId":"Ryan-Tan00"},"content":"* `edit 2 n/Betsy Crower m/` edits the name of the 2nd patient to be `Betsy Crower` and clears all existing medication.","lastModifiedDate":"2022-10-16"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2022-10-16"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"kxrt"},"content":"Exits checkUp.","lastModifiedDate":"2022-10-16"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2022-10-16"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":239,"author":{"gitId":"kxrt"},"content":"* GUI settings (window height and width) are reset during this process.","lastModifiedDate":"2022-10-16"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2022-10-16"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":243,"author":{"gitId":"kxrt"},"content":"checkUp has been created in such a manner that you do not need to manually save data. Simply executing commands saves","lastModifiedDate":"2022-10-16"},{"lineNumber":244,"author":{"gitId":"kxrt"},"content":"any data created or deleted from the application!","lastModifiedDate":"2022-10-16"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":246,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2022-10-16"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"kxrt"},"content":"* checkUp stores data in the JSON format, improving readability and allowing for manually editing the data file.","lastModifiedDate":"2022-10-16"},{"lineNumber":249,"author":{"gitId":"kxrt"},"content":"* The data file can be found in `data/addressbook.json` in the home folder where checkUp\u0027s `jar` file is stored.","lastModifiedDate":"2022-10-16"},{"lineNumber":250,"author":{"gitId":"kxrt"},"content":"* Care needs to be taken to follow data storage formats properly, or else the application will **reject** the data file.","lastModifiedDate":"2022-10-16"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"kxrt"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2022-10-16"},{"lineNumber":258,"author":{"gitId":"kxrt"},"content":"the data of your previous checkUp home folder.","lastModifiedDate":"2022-10-16"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"PeiYee88"},"content":"| Action       | Format, Examples                                                                                                                                                                                                                                                                  |","lastModifiedDate":"2022-09-30"},{"lineNumber":265,"author":{"gitId":"Ryan-Tan00"},"content":"|--------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-17"},{"lineNumber":266,"author":{"gitId":"Ryan-Tan00"},"content":"| **Add**      | `add n/NAME p/PHONE e/EMAIL nok/NEXT OF KIN pt/PATIENT TYPE [hw/HOSPITAL WING] [fn/FLOOR NUMBER] [wn/WARD NUMBER] [m/MEDICATION]...`\u003cbr\u003e e.g., `add n/John Doe p/98765432 e/johnd@example.com nok/Jane Doe, Wife, 82858285 pt/inpatient hw/south fn/3 wn/2 m/panadol m/ibuprofen` |","lastModifiedDate":"2022-10-17"},{"lineNumber":267,"author":{"gitId":"PeiYee88"},"content":"| **Clear**    | `clear`                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2022-09-30"},{"lineNumber":268,"author":{"gitId":"PeiYee88"},"content":"| **Delete**   | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                                                                                               |","lastModifiedDate":"2022-09-30"},{"lineNumber":269,"author":{"gitId":"Ryan-Tan00"},"content":"| **Edit**     | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [nok/NEXT OF KIN] [pt/PATIENT TYPE] [hw/HOSPITAL WING] [fn/FLOOR NUMBER] [wn/WARD NUMBER] [upcoming/UPCOMING APPOINTMENT DATE] [m/MEDICATION]...`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                   |","lastModifiedDate":"2022-10-17"},{"lineNumber":270,"author":{"gitId":"PeiYee88"},"content":"| **Get /n**   | `get /n NAME`\u003cbr\u003e e.g., `get /n John`                                                                                                                                                                                                                                             |","lastModifiedDate":"2022-09-30"},{"lineNumber":271,"author":{"gitId":"PeiYee88"},"content":"| **Get /nok** | `get /nok NEXT-OF-KIN_DATA`\u003cbr\u003e e.g., `get /nok John`                                                                                                                                                                                                                             |","lastModifiedDate":"2022-09-30"},{"lineNumber":272,"author":{"gitId":"PeiYee88"},"content":"| **Get /hw**  | `get /hw HOSPITAL_WING`\u003cbr\u003e e.g., `get /hw South`                                                                                                                                                                                                                                 |","lastModifiedDate":"2022-09-30"},{"lineNumber":273,"author":{"gitId":"nehcuy"},"content":"| **Get /fn**  | `get /fn FLOOR_NUMBER` \u003cbr\u003e e.g., `get /fn 2`                                                                                                                                                                                                                                     |","lastModifiedDate":"2022-10-01"},{"lineNumber":274,"author":{"gitId":"nehcuy"},"content":"| **Get /wn**  | `get /wn WARD_NUMBER` \u003cbr\u003e e.g., `get /wn D12`                                                                                                                                                                                                                                    |","lastModifiedDate":"2022-10-01"},{"lineNumber":275,"author":{"gitId":"kxrt"},"content":"| **Count**    | `count`                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2022-10-02"},{"lineNumber":276,"author":{"gitId":"kxrt"},"content":"| **Appt**     | `appt INDEX on/DATE diag/DIAGNOSIS [m/MEDICINE]...` \u003cbr\u003e e.g., `appt 1 on/12-06-2022 diag/Common cold, viral flu m/panadol m/lozenges`                                                                                                                                            |","lastModifiedDate":"2022-10-16"},{"lineNumber":277,"author":{"gitId":"PeiYee88"},"content":"| **List**     | `list`                                                                                                                                                                                                                                                                            |","lastModifiedDate":"2022-09-30"},{"lineNumber":278,"author":{"gitId":"PeiYee88"},"content":"| **Help**     | `help`                                                                                                                                                                                                                                                                            |","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"nehcuy":18,"PeiYee88":31,"kxrt":70,"-":122,"Ryan-Tan00":37}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"PeiYee88"},"content":"    content: \"checkUp\";","lastModifiedDate":"2022-10-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"PeiYee88":1,"-":294}},{"path":"docs/diagrams/AppointmentClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"show members","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"package Appointment {","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"Class \"{abstract}\\nAppointment\" as Appointment {","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"- date: LocalDate","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"+ getDate(): LocalDate","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"+ {static} isValidDate(String): boolean","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"Class UpcomingAppointment","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"Class PastAppointment {","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"- diagnosis: String","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"+ getMedication(): Set\u003cMedication\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"+ getDiagnosis(): String","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"Class Medication {","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"UpcomingAppointment -up-|\u003e Appointment","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"PastAppointment -up-|\u003e Appointment","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"Medication \"*\\nmedication\" --\u003e  PastAppointment","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"kxrt"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"kxrt":32}},{"path":"docs/diagrams/AppointmentObjectDiagramBefore.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"show members","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"\u0027https://plantuml.com/object-diagram","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003eJohn Davis:Person\" as John","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:Name\" as Name","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:Phone\" as Phone","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:NextofKin\" as NextofKin","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:PatientType\" as PatientType","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:Email\" as Email","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"John : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"Name : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"Email : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"NextofKin : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"PatientType : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"Phone : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"Name -left-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"Phone -up-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"NextofKin -down-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"PatientType -right-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"Email -down-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"kxrt":30}},{"path":"docs/diagrams/AppointmentObjectDiagramWithBothAppt.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"show members","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"\u0027https://plantuml.com/object-diagram","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003eJohn Davis:Person\" as John","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:Name\" as Name","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:NextofKin\" as NextofKin","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:PatientType\" as PatientType","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:PastAppointment\" as PastAppointment","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:Phone\" as Phone","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:UpcomingAppointment\" as UpcomingAppointment","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:Email\" as Email","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"John : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"Name : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"Email : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"NextofKin : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"PatientType : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"Phone : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"PastAppointment : date \u003d \"12-06-2022\"","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"PastAppointment : medication \u003d {\"paracetamol\"}","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"UpcomingAppointment : date \u003d \"16-06-2022\"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"kxrt"},"content":"Name -left-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"kxrt"},"content":"Phone -up-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"kxrt"},"content":"NextofKin -down-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"PatientType -right-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"kxrt"},"content":"Email -down-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"kxrt"},"content":"PastAppointment -up-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"kxrt"},"content":"UpcomingAppointment -down-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"kxrt"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"kxrt":39}},{"path":"docs/diagrams/AppointmentObjectDiagramWithPastAppt.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"show members","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"\u0027https://plantuml.com/object-diagram","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003eJohn Davis:Person\" as John","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:Name\" as Name","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:NextofKin\" as NextofKin","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:PatientType\" as PatientType","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:Email\" as Email","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:PastAppointment\" as PastAppointment","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"object \"\u003cu\u003e:Phone\" as Phone","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"John : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"Name : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"Email : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"NextofKin : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"PatientType : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"Phone : ...","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"PastAppointment : date \u003d \"12-06-2022\"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"PastAppointment : medication \u003d {\"paracetamol\"}","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"Name -left-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"Phone -up-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"NextofKin -down-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"kxrt"},"content":"PatientType -right-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"kxrt"},"content":"Email -down-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"kxrt"},"content":"PastAppointment -up-\u003e John","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"kxrt":35}},{"path":"docs/diagrams/GetAppointmentByDate.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"participant \":GetCommandParser\" as GetCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"participant \"appton:GetAppointmentByDateCommand\" as GetAppointmentByDateCommand LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"[-\u003e LogicManager : execute(\"get /appton\")","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"activate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"get /appton\")","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"create GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"AddressBookParser -\u003e GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"activate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"GetCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"deactivate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"AddressBookParser -\u003e GetCommandParser : parse(\"/appton\")","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"activate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"create GetAppointmentByDateCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"GetCommandParser -\u003e GetAppointmentByDateCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"activate GetAppointmentByDateCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"GetAppointmentByDateCommand --\u003e GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"deactivate GetAppointmentByDateCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"GetCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"deactivate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"GetCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"destroy GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"LogicManager -\u003e GetAppointmentByDateCommand : execute()","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"activate GetAppointmentByDateCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"GetAppointmentByDateCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"activate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"Model --\u003e GetAppointmentByDateCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"deactivate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"create CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"GetAppointmentByDateCommand -\u003e CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"activate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"CommandResult --\u003e GetAppointmentByDateCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"GetAppointmentByDateCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"deactivate GetAppointmentByDateCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"PeiYee88"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"PeiYee88"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"PeiYee88":69}},{"path":"docs/diagrams/GetHospitalWing.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"participant \":GetCommandParser\" as GetCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"participant \"hw:GetHospitalWingCommand\" as GetHospitalWingCommand LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"[-\u003e LogicManager : execute(\"get /hw\")","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"activate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"get /hw\")","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"create GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"AddressBookParser -\u003e GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"activate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"GetCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"deactivate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"AddressBookParser -\u003e GetCommandParser : parse(\"/hw\")","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"activate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"create GetHospitalWingCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"GetCommandParser -\u003e GetHospitalWingCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"activate GetHospitalWingCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"GetHospitalWingCommand --\u003e GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"deactivate GetHospitalWingCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"GetCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"deactivate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"GetCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"destroy GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"LogicManager -\u003e GetHospitalWingCommand : execute()","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"activate GetHospitalWingCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"GetHospitalWingCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"activate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"Model --\u003e GetHospitalWingCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"deactivate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"create CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"GetHospitalWingCommand -\u003e CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"activate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"CommandResult --\u003e GetHospitalWingCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"GetHospitalWingCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"deactivate GetHospitalWingCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"PeiYee88"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"PeiYee88"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"PeiYee88":69}},{"path":"docs/diagrams/GetInpatientSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"participant \":GetCommandParser\" as GetCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"participant \"g:GetInpatientCommand\" as GetInpatientCommand LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"[-\u003e LogicManager : execute(\"get /inp\")","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"activate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"get /inp\")","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"create GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"AddressBookParser -\u003e GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"activate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"GetCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"deactivate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"AddressBookParser -\u003e GetCommandParser : parse(\"/inp\")","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"activate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"create GetInpatientCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"GetCommandParser -\u003e GetInpatientCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"activate GetInpatientCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"GetInpatientCommand --\u003e GetCommandParser : g","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"deactivate GetInpatientCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"GetCommandParser --\u003e AddressBookParser : g","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"deactivate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"GetCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"destroy GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"AddressBookParser --\u003e LogicManager : g","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"LogicManager -\u003e GetInpatientCommand : execute()","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"activate GetInpatientCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"GetInpatientCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"activate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"Model --\u003e GetInpatientCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"deactivate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"create CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"GetInpatientCommand -\u003e CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"activate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"CommandResult --\u003e GetInpatientCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"GetInpatientCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"deactivate GetInpatientCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"Ryan-Tan00":69}},{"path":"docs/diagrams/GetNextOfKin.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"participant \":GetCommandParser\" as GetCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"participant \"nok:GetNextOfKinCommand\" as GetNextOfKinCommand LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"[-\u003e LogicManager : execute(\"get /nok\")","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"activate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"get /nok\")","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"create GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"AddressBookParser -\u003e GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"activate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"GetCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"deactivate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"AddressBookParser -\u003e GetCommandParser : parse(\"/nok\")","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"activate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"create GetNextOfKinCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"GetCommandParser -\u003e GetNextOfKinCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"activate GetNextOfKinCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"GetNextOfKinCommand --\u003e GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"deactivate GetNextOfKinCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"GetCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"deactivate GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"GetCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"destroy GetCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"LogicManager -\u003e GetNextOfKinCommand : execute()","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"activate GetNextOfKinCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"GetNextOfKinCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"activate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"Model --\u003e GetNextOfKinCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"deactivate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"create CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"GetNextOfKinCommand -\u003e CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"activate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"CommandResult --\u003e GetNextOfKinCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"GetNextOfKinCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"deactivate GetNextOfKinCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"PeiYee88"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"PeiYee88"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"PeiYee88":69}},{"path":"docs/diagrams/tracing/GetCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"nehcuy"},"content":"!include ../style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"nehcuy"},"content":"Participant \": AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"nehcuy"},"content":"Participant \": GetCommandParser\" as gcp LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"Participant \": GetWardNumberCommandParser\" as gwncp LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":"Participant \": GetWardNumberCommand\" as gwn LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"[-\u003e abp: parseCommand(commandText)","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"activate abp","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"create gcp","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":"abp -\u003e gcp","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":"abp -\u003e gcp ++: parse(commandText)","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"create gwncp","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":"gcp -\u003e gwncp","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"gcp -\u003e gwncp ++: parse(commandText)","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":"create gwn","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":"gwncp -\u003e gwn ++: predicate","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"gwn --\u003e gwncp --","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"nehcuy"},"content":"gwncp --\u003e gcp --: command","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"nehcuy"},"content":"gcp --\u003e abp --:command","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"nehcuy":24}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"title: checkUp","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W16-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W16-3/tp/actions)","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W16-3/tp/branch/master/graph/badge.svg?token\u003dKXLMFZTCKN)](https://codecov.io/gh/AY2223S1-CS2103T-W16-3/tp)","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"**checkUp is a desktop application for managing your patients\u0027 details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"* If you are interested in using checkUp, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"* If you are interested about developing checkUp, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":13,"kxrt":6}},{"path":"docs/team/charles1026.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"title: Zhehao\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"### Project: My TP Project","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Charles1026":8}},{"path":"docs/team/kxrt.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"title: Kartikeya\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"# Project: AddressBook Level 3","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"## Overview","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"## Summary of Contributions","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"### Code contributed","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"RepoSense: [link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dkxrt\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"### Enhancements implemented","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"- Obtaining count of all patients: `count`","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"  - What it does: Returns count of all patients in the application.","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"  - Justification: Allows medical staff to easily keep track of total patient count.","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"- Creating past appointments for patients: `appt`","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"  - What it does: Creates a record of a past appointment for a patient in the application, with details such as the date","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"  of the appointment, the doctor\u0027s diagnosis and the medication prescribed during the appointment.","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"  - Justification: Significant feature for the application as it allows storing a history of patient visits that can","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"  later be accessed by date or by patient. This improves the medical record system by integrating patient history.","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"  - Highlights: Adding this impacted many currently existing commands, such as `add` and side effects caused by the","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"  `edit` command. This was a challenging addition that required editing of over 20 files simultaneously.","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"- Creating upcoming appointments for patients: `edit upcoming/`","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"kxrt"},"content":"  - What it does: Schedules a future appointment for a patient.","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"kxrt"},"content":"  - Justification: Allows medical staff to keep track of when a patient is next due for a visit.","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"### Contributions to the UG","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"kxrt"},"content":"- Added user documentation for `count`.","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"kxrt"},"content":"- Renamed all instances of \"person(s)\" to \"patient(s)\" for consistency.","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"kxrt"},"content":"- Updated introductory line to match checkUp\u0027s identity.","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"kxrt"},"content":"- Updated command summary.","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"kxrt"},"content":"- Added user documentation for `appt`.","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"kxrt"},"content":"- Updated `edit` documentation to include the `upcoming/` tag.","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"kxrt"},"content":"### Contributions to the DG","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"kxrt"},"content":"- Added \"Patient Administrator/Staff\" to glossary.","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"kxrt"},"content":"- Added documentation for the Appointment feature as a whole, including:","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"kxrt"},"content":"  - A description of the feature.","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"kxrt"},"content":"  - Class and object diagrams for the feature\u0027s implementation.","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"kxrt"},"content":"  - A possible use case with outlined steps for the feature.","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"kxrt"},"content":"  - A sequence diagram of the use case with method calls shown. [TBA]","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"kxrt"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"kxrt"},"content":"- Set up project workspace and team repository with member management.","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"kxrt"},"content":"- Set up CodeCov.io on team repository.","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"kxrt"},"content":"- Set up CI on team repository.","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"kxrt"},"content":"- Set up CD for pull requests on team repository using Netlify.","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"kxrt"},"content":"- Created priority and type tags in team repository.","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"kxrt"},"content":"- Updated CI status and CodeCov badges in `index.md`.","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"kxrt"},"content":"- Created and managed milestones `v1.1`, `v1.2`, `v1.2b`, `v1.3` progress in the team.","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"kxrt"},"content":"- Ensured team was on schedule with frequent reminders on deadlines and pending tasks.","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"kxrt"},"content":"### Review/mentoring contributions","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"kxrt"},"content":"- Reviewed multiple PRs across the different SDLC versions.","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"kxrt"},"content":"- Planned Appointment feature and its integration with the other features in the application.","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"kxrt"},"content":"### Contributions beyond the project team","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"kxrt"},"content":"- https://github.com/nus-cs2103-AY2223S1/forum/issues/323#issuecomment-1265182783","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"kxrt"},"content":"- https://github.com/nus-cs2103-AY2223S1/forum/issues/335#issuecomment-1272447673","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"kxrt"},"content":"- https://github.com/nus-cs2103-AY2223S1/forum/issues/366","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"kxrt"},"content":"- https://github.com/nus-cs2103-AY2223S1/forum/issues/315#issuecomment-1263175854","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"kxrt":74}},{"path":"docs/team/nehcuy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"---","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"nehcuy"},"content":"layout: page","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"title: Yuchen\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"nehcuy"},"content":"---","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"### Project: checkUp","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"\"checkUp\" is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"* **New Feature**: Allows retrieval of patients by floor number and ward number [coming soon]","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dnehcuy\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":"* **Project management**:","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"    * Managed releases `v1.1` on GitHub","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"nehcuy"},"content":"* **Documentation**:","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"nehcuy"},"content":"    * User Guide:","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"nehcuy"},"content":"        * Added documentation for the get features `/fn` and `/wn`","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"    * Developer Guide:","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"nehcuy"},"content":"* **Community**:","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"nehcuy"},"content":"* **Tools**:","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"nehcuy":28}},{"path":"docs/team/peiyee88.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"title: Pei Yee\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"# Project: checkUp","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"## Overview","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"checkUp is a desktop address book application used for managing patients\u0027 details efficiently. ","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"## Summary of Contributions","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"### Code contributed","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"RepoSense: [link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dpeiyee88\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"### Enhancements implemented","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"- Retrieve patient\u0027s next-of-kin data: `get /nok`","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"    - What it does: Returns that particular patient\u0027s next-of-kin data.","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"    - Justification: Allows medical staff to easily contact the patient\u0027s next-of-kin when needed.","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"- Retrieve a list of patients within a hospital wing: `get /hw`","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"    - What it does: Returns all the patients details staying within a hospital wing.","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"    - Justification: Allow medical staff to easily know that whether a particular hospital wing is oversubscribed.","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"    - Also, it allows nurses to attend to the patients faster.","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"- Retrieve a list of appointments by date: `get /appton`","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"    - What it does: Returns a list of patients that has appointment scheduled on the particular date.","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"    - Justification: Allows medical staff to keep track of all the appointments.","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"### Contributions to the UG","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"- Create skeletal version of user guide.","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"- Added user documentation for `get /nok`, ","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"- Added user documentation for `get /appton`","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"- Added user documentation for `get /hw`","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"- Updated command summary.","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"### Contributions to the DG","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"- Added documentation for the following features `get /nok` `get /hw` `get /appton` which includ:","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"    - A description of the feature.","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"    - Class and object diagrams for the feature\u0027s implementation. [TBA]","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"    - A possible use case with outlined steps for the feature. [TBA]","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"    - A sequence diagram of the use case with method calls shown. ","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"- Create skeletal version of documentation.","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"- Updated CI status and CodeCov badges in `index.md`.","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"- Managed milestones `v1.1`, `v1.2`, `v1.2b`, `v1.3` progress in the team.","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"- Ensured team was on schedule with frequent reminders on deadlines and pending tasks.","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"### Review/mentoring contributions","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"- Reviewed multiple PRs across the different SDLC versions.","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"### Contributions beyond the project team","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"PeiYee88":59}},{"path":"docs/team/ryan-tan00.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"---","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"layout: page","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"title: Ryan Tan\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"---","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"# Project: CS2103 tP","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"## Overview","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"## Summary of contributions","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"### Enhancements implemented","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"### Contributions to the UG","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"### Contributions to the DG","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"### Review/mentoring contributions","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"### Contributions beyond the project team","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"Ryan-Tan00":22}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"kxrt"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":182,"kxrt":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command!\";","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"    public static final String MESSAGE_INVALID_GET_PREFIX \u003d \"Invalid get command prefix! \\n%1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid!\";","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"    public static final String MESSAGE_MISSING_DIAGNOSIS \u003d \"The diagnosis cannot be empty!\";","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"    public static final String MESSAGE_MISSING_DATE \u003d \"The date field is missing!\";","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nehcuy":1,"-":11,"kxrt":4}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"    /** Returns the Person currently selected */","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"    Person getCurrentlyViewedPerson();","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"kxrt"},"content":"    String getCensus();","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Charles1026":3,"-":50,"kxrt":2}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"Charles1026"},"content":"    public Person getCurrentlyViewedPerson() {","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"Charles1026"},"content":"        return model.getCurrentlyViewedPerson();","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"kxrt"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"kxrt"},"content":"    public String getCensus() {","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"kxrt"},"content":"        return model.getCensus();","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Charles1026":5,"-":81,"kxrt":5}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FLOOR_NUMBER;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOSPITAL_WING;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICATION;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_TYPE;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WARD_NUMBER;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"            + PREFIX_NEXT_OF_KIN + \"NEXT OF KIN \"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"            + PREFIX_PATIENT_TYPE + \"PATIENT TYPE \"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"nehcuy"},"content":"            + \"[\" + PREFIX_HOSPITAL_WING + \"HOSPITAL WING] \"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"nehcuy"},"content":"            + \"[\" + PREFIX_FLOOR_NUMBER + \"FLOOR NUMBER] \"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"nehcuy"},"content":"            + \"[\" + PREFIX_WARD_NUMBER + \"WARD NUMBER] \"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"            + \"[\" + PREFIX_MEDICATION + \"MEDICATION]...\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"            + PREFIX_NEXT_OF_KIN + \"Jane Doe, Wife, 82858285 \"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"            + PREFIX_PATIENT_TYPE + \"inpatient \"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"            + PREFIX_HOSPITAL_WING + \"south \"","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"            + PREFIX_FLOOR_NUMBER + \"3 \"","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"nehcuy"},"content":"            + PREFIX_WARD_NUMBER + \"D690 \"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"            + PREFIX_MEDICATION + \"panadol \"","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"            + PREFIX_MEDICATION + \"ibuprofen \";","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nehcuy":5,"Charles1026":14,"PeiYee88":1,"-":59}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"    private final boolean showCount;","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean showCount) {","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"        this.showCount \u003d showCount;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"        this(feedbackToUser, showHelp, exit, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"kxrt"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"kxrt"},"content":"    public CommandResult(String feedbackToUser, boolean showCount) {","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"        this(feedbackToUser, false, false, showCount);","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"kxrt"},"content":"    public boolean isShowCount() {","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"kxrt"},"content":"        return showCount;","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 showCount \u003d\u003d otherCommandResult.showCount;","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"Charles1026"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, showCount);","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"kxrt"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"kxrt"},"content":"    public String toString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"kxrt"},"content":"        return feedbackToUser;","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Charles1026":13,"-":68,"kxrt":16}},{"path":"src/main/java/seedu/address/logic/commands/CountCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":" * Returns count of all patients in the hospital.","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"public class CountCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"    public static final String COMMAND_WORD \u003d \"count\";","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"            + \": Shows count of all patients in the hospital.\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"            + \"Parameters: NONE\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"            + \"Example: count\";","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"    public static final String MESSAGE_COUNT \u003d \"Total patients: %d\";","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"    public static final String MEDICATION_COUNT \u003d \"Types of medication: %d\";","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"    public static final String EACH_MEDICATION_COUNT \u003d \"%s: %d\";","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"    public static final String UI_CONFIRMATION \u003d \"Opened count window.\";","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"        return new CommandResult(UI_CONFIRMATION, true);","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"        return obj instanceof CountCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"kxrt":32}},{"path":"src/main/java/seedu/address/logic/commands/CreatePastAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICATION;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.PastAppointment;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":" * Creates a past appointment for a patient.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"public class CreatePastAppointmentCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"    public static final String COMMAND_WORD \u003d \"appt\";","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"            + \": Creates a past appointment for a patient.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"            + \"Parameters: INDEX (Must be a positive integer) \"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"            + PREFIX_DATE + \"DATE (Must follow dd-MM-yyyy syntax) \"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"            + PREFIX_MEDICATION + \"MEDICATION \"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"            + PREFIX_DIAGNOSIS + \"DIAGNOSIS \\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"            + PREFIX_DATE + \"01-01-2001 \"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"            + PREFIX_MEDICATION + \"ibuprofen \"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"            + PREFIX_DIAGNOSIS + \"headache, medicine given for 3 days \";","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"kxrt"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Past appointment created for %1$s.\\n\";","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"kxrt"},"content":"    public static final String MESSAGE_NOT_CREATED \u003d \"Missing fields, please try again!\";","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"kxrt"},"content":"    private final Index index;","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"    private final PastAppointment appt;","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"kxrt"},"content":"     * Creates a command to add past appointments to a patient\u0027s record.","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"kxrt"},"content":"     * @param index of the patient in the filtered patient list to edit","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"kxrt"},"content":"    public CreatePastAppointmentCommand(Index index, PastAppointment appt) {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"kxrt"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"kxrt"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"kxrt"},"content":"        this.appt \u003d appt;","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"kxrt"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"kxrt"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"kxrt"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"kxrt"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"kxrt"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"kxrt"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"kxrt"},"content":"        Person patient \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"kxrt"},"content":"        patient.addPastAppointment(appt);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"kxrt"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, patient.getName()) + appt);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"kxrt":58}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FLOOR_NUMBER;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOSPITAL_WING;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICATION;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_TYPE;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UPCOMING_APPOINTMENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WARD_NUMBER;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.PastAppointment;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.UpcomingAppointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.FloorNumber;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.HospitalWing;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.WardNumber;","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":" * Edits the details of an existing patient in the database.","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the patient identified \"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"            + \"by the index number used in the displayed patient list. \"","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"            + \"[\" + PREFIX_NEXT_OF_KIN + \"NEXT OF KIN] \"","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"            + \"[\" + PREFIX_PATIENT_TYPE + \"PATIENT TYPE] \"","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"            + \"[\" + PREFIX_HOSPITAL_WING + \"HOSPITAL WING] \"","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"            + \"[\" + PREFIX_FLOOR_NUMBER + \"FLOOR NUMBER] \"","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"Charles1026"},"content":"            + \"[\" + PREFIX_WARD_NUMBER + \"WARD NUMBER] \"","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"kxrt"},"content":"            + \"[\" + PREFIX_UPCOMING_APPOINTMENT + \"UPCOMING APPOINTMENT DATE] \"","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"            + \"[\" + PREFIX_MEDICATION + \"MEDICATION]...\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"Charles1026"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"Charles1026"},"content":"            + PREFIX_FLOOR_NUMBER + \"12\";","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"Charles1026"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Patient: %1$s\";","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"Charles1026"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This patient already exists in the address book.\";","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"Charles1026"},"content":"     * @param index of the patient in the filtered patient list to edit","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"Charles1026"},"content":"     * @param editPersonDescriptor details to edit the patient with","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"Charles1026"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"Charles1026"},"content":"            throws CommandException {","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":118,"author":{"gitId":"Charles1026"},"content":"        NextOfKin updatedNextOfKin \u003d editPersonDescriptor.getNextOfKin().orElse(personToEdit.getNextOfKin());","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"Charles1026"},"content":"        PatientType updatedPatientType \u003d editPersonDescriptor.getPatientType().orElse(personToEdit.getPatientType());","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"Charles1026"},"content":"        HospitalWing updatedHospitalWing \u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"Charles1026"},"content":"        FloorNumber updatedFloorNumber \u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"Charles1026"},"content":"        WardNumber updatedWardNumber \u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"Charles1026"},"content":"        if (updatedPatientType.isInpatient()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"Charles1026"},"content":"            updatedHospitalWing \u003d editPersonDescriptor.getHospitalWing()","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"Charles1026"},"content":"                    .orElse(personToEdit.getHospitalWing().orElse(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"Charles1026"},"content":"            updatedFloorNumber \u003d editPersonDescriptor.getFloorNumber()","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"Charles1026"},"content":"                    .orElse(personToEdit.getFloorNumber().orElse(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"Charles1026"},"content":"            updatedWardNumber \u003d editPersonDescriptor.getWardNumber()","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"Charles1026"},"content":"                    .orElse(personToEdit.getWardNumber().orElse(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"Charles1026"},"content":"            if (updatedHospitalWing \u003d\u003d null || updatedFloorNumber \u003d\u003d null || updatedWardNumber \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"Charles1026"},"content":"                throw new CommandException(String.format(PatientType.DEPENDENCY_CONSTRAINTS, MESSAGE_USAGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"Charles1026"},"content":"        Set\u003cMedication\u003e updatedMedications \u003d editPersonDescriptor.getMedications()","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"Charles1026"},"content":"                .orElse(personToEdit.getMedications());","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"kxrt"},"content":"        List\u003cPastAppointment\u003e pastAppointments \u003d editPersonDescriptor.getPastAppointments();","lastModifiedDate":"2022-10-25"},{"lineNumber":138,"author":{"gitId":"kxrt"},"content":"        UpcomingAppointment updatedUpcomingAppointment \u003d editPersonDescriptor.getUpcomingAppointment()","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"kxrt"},"content":"                .orElse(personToEdit.getUpcomingAppointment().orElse(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"Charles1026"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedNextOfKin, updatedPatientType,","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"kxrt"},"content":"                updatedHospitalWing, updatedFloorNumber, updatedWardNumber, updatedMedications, pastAppointments,","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"kxrt"},"content":"                updatedUpcomingAppointment);","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"Charles1026"},"content":"        private NextOfKin nextOfKin;","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"Charles1026"},"content":"        private PatientType patientType;","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"PeiYee88"},"content":"        private HospitalWing hospitalWing;","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"Charles1026"},"content":"        private FloorNumber floorNumber;","lastModifiedDate":"2022-10-04"},{"lineNumber":176,"author":{"gitId":"Charles1026"},"content":"        private WardNumber wardNumber;","lastModifiedDate":"2022-10-04"},{"lineNumber":177,"author":{"gitId":"Charles1026"},"content":"        private Set\u003cMedication\u003e medications;","lastModifiedDate":"2022-10-04"},{"lineNumber":178,"author":{"gitId":"kxrt"},"content":"        private List\u003cPastAppointment\u003e pastAppointments;","lastModifiedDate":"2022-10-25"},{"lineNumber":179,"author":{"gitId":"kxrt"},"content":"        private UpcomingAppointment upcomingAppointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":191,"author":{"gitId":"Charles1026"},"content":"            setNextOfKin(toCopy.nextOfKin);","lastModifiedDate":"2022-10-04"},{"lineNumber":192,"author":{"gitId":"Charles1026"},"content":"            setPatientType(toCopy.patientType);","lastModifiedDate":"2022-10-05"},{"lineNumber":193,"author":{"gitId":"PeiYee88"},"content":"            setHospitalWing(toCopy.hospitalWing);","lastModifiedDate":"2022-10-04"},{"lineNumber":194,"author":{"gitId":"Charles1026"},"content":"            setFloorNumber(toCopy.floorNumber);","lastModifiedDate":"2022-10-05"},{"lineNumber":195,"author":{"gitId":"Charles1026"},"content":"            setWardNumber(toCopy.wardNumber);","lastModifiedDate":"2022-10-05"},{"lineNumber":196,"author":{"gitId":"Charles1026"},"content":"            setMedications(toCopy.medications);","lastModifiedDate":"2022-10-05"},{"lineNumber":197,"author":{"gitId":"kxrt"},"content":"            setUpcomingAppointment(toCopy.upcomingAppointment);","lastModifiedDate":"2022-10-14"},{"lineNumber":198,"author":{"gitId":"kxrt"},"content":"            setPastAppointments(toCopy.pastAppointments);","lastModifiedDate":"2022-10-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"Charles1026"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, nextOfKin, patientType,","lastModifiedDate":"2022-10-04"},{"lineNumber":206,"author":{"gitId":"kxrt"},"content":"                    hospitalWing, floorNumber, wardNumber, medications, upcomingAppointment);","lastModifiedDate":"2022-10-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"Charles1026"},"content":"        public void setNextOfKin(NextOfKin nextOfKin) {","lastModifiedDate":"2022-10-04"},{"lineNumber":234,"author":{"gitId":"Charles1026"},"content":"            this.nextOfKin \u003d nextOfKin;","lastModifiedDate":"2022-10-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"Charles1026"},"content":"        public Optional\u003cNextOfKin\u003e getNextOfKin() {","lastModifiedDate":"2022-10-04"},{"lineNumber":238,"author":{"gitId":"Charles1026"},"content":"            return Optional.ofNullable(nextOfKin);","lastModifiedDate":"2022-10-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":241,"author":{"gitId":"Charles1026"},"content":"        public void setPatientType(PatientType patientType) {","lastModifiedDate":"2022-10-05"},{"lineNumber":242,"author":{"gitId":"Charles1026"},"content":"            this.patientType \u003d patientType;","lastModifiedDate":"2022-10-05"},{"lineNumber":243,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":244,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":245,"author":{"gitId":"Charles1026"},"content":"        public Optional\u003cPatientType\u003e getPatientType() {","lastModifiedDate":"2022-10-05"},{"lineNumber":246,"author":{"gitId":"Charles1026"},"content":"            return Optional.ofNullable(patientType);","lastModifiedDate":"2022-10-05"},{"lineNumber":247,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":248,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":249,"author":{"gitId":"PeiYee88"},"content":"        public void setHospitalWing(HospitalWing hospitalWing) {","lastModifiedDate":"2022-10-04"},{"lineNumber":250,"author":{"gitId":"PeiYee88"},"content":"            this.hospitalWing \u003d hospitalWing;","lastModifiedDate":"2022-10-04"},{"lineNumber":251,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":252,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":253,"author":{"gitId":"PeiYee88"},"content":"        public Optional\u003cHospitalWing\u003e getHospitalWing() {","lastModifiedDate":"2022-10-04"},{"lineNumber":254,"author":{"gitId":"PeiYee88"},"content":"            return Optional.ofNullable(hospitalWing);","lastModifiedDate":"2022-10-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":257,"author":{"gitId":"Charles1026"},"content":"        public void setFloorNumber(FloorNumber floorNumber) {","lastModifiedDate":"2022-10-05"},{"lineNumber":258,"author":{"gitId":"Charles1026"},"content":"            this.floorNumber \u003d floorNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":259,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":260,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":261,"author":{"gitId":"Charles1026"},"content":"        public Optional\u003cFloorNumber\u003e getFloorNumber() {","lastModifiedDate":"2022-10-05"},{"lineNumber":262,"author":{"gitId":"Charles1026"},"content":"            return Optional.ofNullable(floorNumber);","lastModifiedDate":"2022-10-05"},{"lineNumber":263,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":264,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":265,"author":{"gitId":"Charles1026"},"content":"        public void setWardNumber(WardNumber wardNumber) {","lastModifiedDate":"2022-10-05"},{"lineNumber":266,"author":{"gitId":"Charles1026"},"content":"            this.wardNumber \u003d wardNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":267,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":268,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":269,"author":{"gitId":"Charles1026"},"content":"        public Optional\u003cWardNumber\u003e getWardNumber() {","lastModifiedDate":"2022-10-05"},{"lineNumber":270,"author":{"gitId":"Charles1026"},"content":"            return Optional.ofNullable(wardNumber);","lastModifiedDate":"2022-10-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":275,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":277,"author":{"gitId":"Charles1026"},"content":"        public void setMedications(Set\u003cMedication\u003e medications) {","lastModifiedDate":"2022-10-05"},{"lineNumber":278,"author":{"gitId":"Charles1026"},"content":"            this.medications \u003d (medications !\u003d null) ? new HashSet\u003c\u003e(medications) : null;","lastModifiedDate":"2022-10-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":283,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":285,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":286,"author":{"gitId":"Charles1026"},"content":"        public Optional\u003cSet\u003cMedication\u003e\u003e getMedications() {","lastModifiedDate":"2022-10-05"},{"lineNumber":287,"author":{"gitId":"Charles1026"},"content":"            return (medications !\u003d null) ? Optional.of(Collections.unmodifiableSet(medications)) : Optional.empty();","lastModifiedDate":"2022-10-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":290,"author":{"gitId":"kxrt"},"content":"        public void setUpcomingAppointment(UpcomingAppointment upcomingAppointment) {","lastModifiedDate":"2022-10-14"},{"lineNumber":291,"author":{"gitId":"kxrt"},"content":"            this.upcomingAppointment \u003d upcomingAppointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":292,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":293,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":294,"author":{"gitId":"kxrt"},"content":"        public Optional\u003cUpcomingAppointment\u003e getUpcomingAppointment() {","lastModifiedDate":"2022-10-14"},{"lineNumber":295,"author":{"gitId":"kxrt"},"content":"            return Optional.ofNullable(upcomingAppointment);","lastModifiedDate":"2022-10-14"},{"lineNumber":296,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":315,"author":{"gitId":"Charles1026"},"content":"                    \u0026\u0026 getNextOfKin().equals(e.getNextOfKin())","lastModifiedDate":"2022-10-04"},{"lineNumber":316,"author":{"gitId":"Charles1026"},"content":"                    \u0026\u0026 getPatientType().equals(e.getPatientType())","lastModifiedDate":"2022-10-05"},{"lineNumber":317,"author":{"gitId":"PeiYee88"},"content":"                    \u0026\u0026 getHospitalWing().equals(e.getHospitalWing())","lastModifiedDate":"2022-10-04"},{"lineNumber":318,"author":{"gitId":"Charles1026"},"content":"                    \u0026\u0026 getFloorNumber().equals(e.getFloorNumber())","lastModifiedDate":"2022-10-05"},{"lineNumber":319,"author":{"gitId":"Charles1026"},"content":"                    \u0026\u0026 getWardNumber().equals(e.getWardNumber())","lastModifiedDate":"2022-10-05"},{"lineNumber":320,"author":{"gitId":"Charles1026"},"content":"                    \u0026\u0026 getMedications().equals(e.getMedications());","lastModifiedDate":"2022-10-05"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":322,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":323,"author":{"gitId":"kxrt"},"content":"        public void setPastAppointments(List\u003cPastAppointment\u003e pastAppointments) {","lastModifiedDate":"2022-10-25"},{"lineNumber":324,"author":{"gitId":"kxrt"},"content":"            this.pastAppointments \u003d pastAppointments;","lastModifiedDate":"2022-10-25"},{"lineNumber":325,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":326,"author":{"gitId":"kxrt"},"content":"        public List\u003cPastAppointment\u003e getPastAppointments() {","lastModifiedDate":"2022-10-25"},{"lineNumber":327,"author":{"gitId":"kxrt"},"content":"            if (pastAppointments \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":328,"author":{"gitId":"kxrt"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":329,"author":{"gitId":"kxrt"},"content":"            } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":330,"author":{"gitId":"kxrt"},"content":"                return pastAppointments;","lastModifiedDate":"2022-10-25"},{"lineNumber":331,"author":{"gitId":"kxrt"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Charles1026":95,"PeiYee88":10,"-":197,"kxrt":32}},{"path":"src/main/java/seedu/address/logic/commands/GetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.commands.getcommands.GetAppointmentByDateCommand.APPOINTMENT_BY_DATE_PREFIX;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"nehcuy"},"content":"import static seedu.address.logic.commands.getcommands.GetFloorNumberCommand.FLOOR_NUMBER_PREFIX;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"import static seedu.address.logic.commands.getcommands.GetHospitalWingCommand.HOSPITAL_WING_PREFIX;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":"import static seedu.address.logic.commands.getcommands.GetInpatientCommand.INPATIENT_PREFIX;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"import static seedu.address.logic.commands.getcommands.GetNameCommand.NAME_PREFIX;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.commands.getcommands.GetNextOfKinCommand.NEXT_OF_KIN_PREFIX;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":"import static seedu.address.logic.commands.getcommands.GetOutpatientCommand.OUTPATIENT_PREFIX;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":" * Lists all filtered persons in the address book according to the given condition prefix","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":"public class GetCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"    public static final String COMMAND_WORD \u003d \"get\";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"nehcuy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Gets all persons whose information corresponds to the \"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"nehcuy"},"content":"            + \"query prefix.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"            + \"Prefixes to choose from: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"            + OUTPATIENT_PREFIX + \", \"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"nehcuy"},"content":"            + INPATIENT_PREFIX + \", \"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"nehcuy"},"content":"            + FLOOR_NUMBER_PREFIX + \" FLOOR NUMBER, \"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"nehcuy"},"content":"            + HOSPITAL_WING_PREFIX + \" HOSPITAL WING, \"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"            + NAME_PREFIX + \" NAME\"","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"            + NEXT_OF_KIN_PREFIX + \" PATIENT NAME\"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"            + APPOINTMENT_BY_DATE_PREFIX + \" DATE\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"nehcuy"},"content":"            + \"Examples: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"nehcuy"},"content":"            + COMMAND_WORD + \" \" + OUTPATIENT_PREFIX + \", \"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"nehcuy"},"content":"            + COMMAND_WORD + \" \" + INPATIENT_PREFIX + \", \"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"nehcuy"},"content":"            + COMMAND_WORD + \" \" + FLOOR_NUMBER_PREFIX + \" 3 5 9, \"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"nehcuy"},"content":"            + COMMAND_WORD + \" \" + HOSPITAL_WING_PREFIX + \" south\"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"            + COMMAND_WORD + \" \" + NAME_PREFIX + \" alice bob charlie\"","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"            + COMMAND_WORD + \" \" + NEXT_OF_KIN_PREFIX + \"john doe\"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"            + COMMAND_WORD + \" \" + APPOINTMENT_BY_DATE_PREFIX + \"01-01-2022\";","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"nehcuy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"nehcuy"},"content":"        // Only subclasses of GetCommand can be executed","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"nehcuy"},"content":"        throw new CommandException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"nehcuy"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"nehcuy":38,"PeiYee88":8}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":" * Shows a person on Detailed Person View identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows the details of the patient identified \"","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"            + \"by the index number used in the displayed patient list. \"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"            + \"Parameters: INDEX (must be a positive integer) \";","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"    public static final String MESSAGE_VIEW_PERSON_SUCCESS \u003d \"Showing Person: %1$s\";","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"    private final Index index;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"     * Generates a View Command with the given Index.","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"     * @param index the index of the patient to view.","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"    public ViewCommand(Index index) {","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"        Person person \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"        model.updateCurrentlyViewedPerson(person);","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_PERSON_SUCCESS,","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"                person.getName()));","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 index.equals(((ViewCommand) other).index)); // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"Charles1026":56}},{"path":"src/main/java/seedu/address/logic/commands/getcommands/GetAppointmentByDateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.logic.commands.getcommands;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.commands.GetCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.AppointmentByDatePredicate;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":" * Finds and lists all patients on the same appointment date.","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":" *","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"public class GetAppointmentByDateCommand extends GetCommand {","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"    public static final String APPOINTMENT_BY_DATE_PREFIX \u003d \"/appton\";","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Gets all patients who are on the same appointment\"","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"            + \"date \"","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"            + \"and displays them as a list with index numbers. \\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"            + APPOINTMENT_BY_DATE_PREFIX + \" DATE [dd-MM-yyyy]\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"            + \"Example: \"","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"            + APPOINTMENT_BY_DATE_PREFIX","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"            + \" 21-12-2020\";","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"    private final AppointmentByDatePredicate predicate;","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"     * Constructor for GetAppointmentByDateCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"     * @param predicate predicate for appointments.","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"    public GetAppointmentByDateCommand(AppointmentByDatePredicate predicate) {","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"     * Executes the command.","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"     * @return the result of the executed command.","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"     * Compares the similarity of two objects.","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"     * @param other the object to be compared","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"     * @return true if they are equal objects, otherwise false","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"                || (other instanceof GetAppointmentByDateCommand // instanceof handles nulls","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"                \u0026\u0026 predicate.equals(((GetAppointmentByDateCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"PeiYee88":64}},{"path":"src/main/java/seedu/address/logic/commands/getcommands/GetFloorNumberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.logic.commands.getcommands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"nehcuy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.GetCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.person.FloorNumberPredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.person.PatientTypePredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":" * Finds and lists all patients within all given floor numbers separated by a whitespace.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":" * Integers must be positive.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"public class GetFloorNumberCommand extends GetCommand {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"nehcuy"},"content":"    public static final String FLOOR_NUMBER_PREFIX \u003d \"/fn\";","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Gets all patients within the same floor number \"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"nehcuy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"nehcuy"},"content":"            + FLOOR_NUMBER_PREFIX + \" FLOOR NUMBER (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"nehcuy"},"content":"            + \"Example: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"nehcuy"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"nehcuy"},"content":"            + FLOOR_NUMBER_PREFIX","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"nehcuy"},"content":"            + \" 10 4 3\";","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"nehcuy"},"content":"    private final FloorNumberPredicate predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"nehcuy"},"content":"    public GetFloorNumberCommand(FloorNumberPredicate predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"nehcuy"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"nehcuy"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"nehcuy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"nehcuy"},"content":"        PatientTypePredicate inPatientPredicate \u003d new PatientTypePredicate(PatientType.PatientTypes.INPATIENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"nehcuy"},"content":"        Predicate\u003cPerson\u003e floorNumberPredicate \u003d inPatientPredicate.and(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"nehcuy"},"content":"        model.updateFilteredPersonList(floorNumberPredicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"nehcuy"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"nehcuy"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"nehcuy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"nehcuy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"nehcuy"},"content":"                || (other instanceof GetFloorNumberCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"nehcuy"},"content":"                \u0026\u0026 predicate.equals(((GetFloorNumberCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"nehcuy"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"nehcuy":56}},{"path":"src/main/java/seedu/address/logic/commands/getcommands/GetHospitalWingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.logic.commands.getcommands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.GetCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.HospitalWingContainsKeywordsPredicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.PatientTypePredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":" * Finds and lists all patients within a hospital wing.","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"public class GetHospitalWingCommand extends GetCommand {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"nehcuy"},"content":"    public static final String HOSPITAL_WING_PREFIX \u003d \"/hw\";","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Gets all patients within the same hospital wing \"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"            + \"and displays them as a list with index numbers. The specified keywords are case-insensitive.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"nehcuy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"nehcuy"},"content":"            + HOSPITAL_WING_PREFIX + \" HOSPITAL WING\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"nehcuy"},"content":"            + \"Example: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"nehcuy"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"nehcuy"},"content":"            + HOSPITAL_WING_PREFIX","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"nehcuy"},"content":"            + \" south north\";","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"    private final HospitalWingContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"     * Constructor for GetHospitalWingCommand.","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"     * @param predicate hospital wing predicate.","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"    public GetHospitalWingCommand(HospitalWingContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"     * Executes the command.","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"     * @return the result of the command being executed.","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"nehcuy"},"content":"        PatientTypePredicate inPatientPredicate \u003d new PatientTypePredicate(PatientType.PatientTypes.INPATIENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"nehcuy"},"content":"        Predicate\u003cPerson\u003e hospitalWingPredicate \u003d inPatientPredicate.and(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"nehcuy"},"content":"        model.updateFilteredPersonList(hospitalWingPredicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"     * Compares the similarity of two objects.","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"     * @param other the object to be compared","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"     * @return true if they are equal objects, otherwise false","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"                || (other instanceof GetHospitalWingCommand // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"PeiYee88"},"content":"                \u0026\u0026 predicate.equals(((GetHospitalWingCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"nehcuy":16,"PeiYee88":54}},{"path":"src/main/java/seedu/address/logic/commands/getcommands/GetInpatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.logic.commands.getcommands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.GetCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.model.person.PatientTypePredicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":" * Lists all inpatients in the address book to the user.","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"public class GetInpatientCommand extends GetCommand {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"    public static final String INPATIENT_PREFIX \u003d \"/inp\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"    private final PatientTypePredicate predicate \u003d new PatientTypePredicate(PatientType.PatientTypes.INPATIENT);","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"nehcuy":5,"Ryan-Tan00":23}},{"path":"src/main/java/seedu/address/logic/commands/getcommands/GetMedicationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.logic.commands.getcommands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"nehcuy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.GetCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.person.MedicationContainsKeywordsPredicate;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":" * Finds and lists all patients taking a type of medication.","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"public class GetMedicationCommand extends GetCommand {","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"    public static final String MEDICATION_PREFIX \u003d \"/m\";","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Gets all patients who are on the same medication \"","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"            + \"and displays them as a list with index numbers. The specified keywords are case-insensitive.\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"nehcuy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"nehcuy"},"content":"            + MEDICATION_PREFIX + \" MEDICATION\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"nehcuy"},"content":"            + \"Example: \"","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"            + MEDICATION_PREFIX","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"nehcuy"},"content":"            + \" paracetamol\";","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"nehcuy"},"content":"    private final MedicationContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"nehcuy"},"content":"    public GetMedicationCommand(MedicationContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"nehcuy"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"nehcuy"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"nehcuy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"nehcuy"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"nehcuy"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"nehcuy"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"nehcuy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"nehcuy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"nehcuy"},"content":"                || (other instanceof GetMedicationCommand // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"nehcuy"},"content":"                \u0026\u0026 predicate.equals(((GetMedicationCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"nehcuy"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"nehcuy":48}},{"path":"src/main/java/seedu/address/logic/commands/getcommands/GetNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.logic.commands.getcommands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"nehcuy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.GetCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":" * Finds and lists all persons in checkUp whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"public class GetNameCommand extends GetCommand {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"    public static final String NAME_PREFIX \u003d \"/n\";","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Gets all persons whose names contain any of \"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"nehcuy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"nehcuy"},"content":"            + NAME_PREFIX + \" NAME\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"nehcuy"},"content":"            + \"Example: \"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"            + NAME_PREFIX","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"nehcuy"},"content":"            + \" alice bob charlie\";","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"nehcuy"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"nehcuy"},"content":"    public GetNameCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"nehcuy"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"nehcuy"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"nehcuy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"nehcuy"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"nehcuy"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"nehcuy"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"nehcuy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"nehcuy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"nehcuy"},"content":"                || (other instanceof GetNameCommand // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"nehcuy"},"content":"                \u0026\u0026 predicate.equals(((GetNameCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"nehcuy"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"nehcuy":48}},{"path":"src/main/java/seedu/address/logic/commands/getcommands/GetNextOfKinCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.logic.commands.getcommands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.commands.GetCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.NextOfKinPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":" * Finds the next-of-kin data of the given patient.","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"public class GetNextOfKinCommand extends GetCommand {","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"    public static final String NEXT_OF_KIN_PREFIX \u003d \"/nok\";","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds the next-of-kin data with the given  \"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"            + \"specified keywords (patient name; case insensitive) \\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"            + NEXT_OF_KIN_PREFIX + \" PATIENT NAME\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"            + \"Example: \"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"            + NEXT_OF_KIN_PREFIX","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"            + \" alice \";","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"    private final NextOfKinPredicate predicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"     * Constructor for GetNextOfKinCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"     * @param predicate next-of-kin command.","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"    public GetNextOfKinCommand(NextOfKinPredicate predicate) {","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"     * Executes the command.","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"     * @return the result of the command being executed.","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"     * Compares the similarity of two objects.","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"     * @param other the object to be compared","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"     * @return true if they are equal objects, otherwise false","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"                || (other instanceof GetNextOfKinCommand // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"                \u0026\u0026 predicate.equals(((GetNextOfKinCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"PeiYee88":62}},{"path":"src/main/java/seedu/address/logic/commands/getcommands/GetOutpatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.logic.commands.getcommands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.GetCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.model.person.PatientTypePredicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":" * Lists all outpatients in the address book to the user.","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"public class GetOutpatientCommand extends GetCommand {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"    public static final String OUTPATIENT_PREFIX \u003d \"/outp\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"    private final PatientTypePredicate predicate \u003d new PatientTypePredicate(PatientType.PatientTypes.OUTPATIENT);","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"nehcuy":5,"Ryan-Tan00":23}},{"path":"src/main/java/seedu/address/logic/commands/getcommands/GetPastAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package seedu.address.logic.commands.getcommands;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.logic.commands.GetCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.model.appointment.PastAppointment;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":" * Gets and displays all the previous appointments of a patient identified using it\u0027s displayed index from the address","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":" * book.","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"public class GetPastAppointmentCommand extends GetCommand {","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"    public static final String PAST_APPOINTMENT_PREFIX \u003d \"/appt\";","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + PAST_APPOINTMENT_PREFIX","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"            + \": Gets all past appointments of patient identified by \"","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"            + \"the index number and displays them from most recent to oldest.\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PAST_APPOINTMENT_PREFIX + \" 3\";","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"    public static final String MESSAGE_OBTAIN_PAST_APPOINTMENTS_SUCCESS \u003d","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"            \"Obtained Past Appointments of Patient:\\n%1$s\";","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"    public GetPastAppointmentCommand(Index targetIndex) {","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"        Person selectedPatient \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"        List\u003cPastAppointment\u003e pastAppointments \u003d selectedPatient.getPastAppointments();","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"        for (PastAppointment appointment : pastAppointments) {","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"            output.append(appointment.toString()).append(\"\\n\");","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"        return new CommandResult(String.format(MESSAGE_OBTAIN_PAST_APPOINTMENTS_SUCCESS, output));","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"Ryan-Tan00":58}},{"path":"src/main/java/seedu/address/logic/commands/getcommands/GetWardNumberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.logic.commands.getcommands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"nehcuy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.GetCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.person.PatientTypePredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.person.WardNumberPredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":" * Finds and lists all patients within a ward number.","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":" * Integers must be positive.","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"public class GetWardNumberCommand extends GetCommand {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"nehcuy"},"content":"    public static final String WARD_NUMBER_PREFIX \u003d \"/wn\";","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + WARD_NUMBER_PREFIX","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"            + \": Gets all patients within the same ward number and displays them as a list with index numbers. \"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"nehcuy"},"content":"            + \"The specified keywords are case-insensitive.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"nehcuy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"nehcuy"},"content":"            + WARD_NUMBER_PREFIX + \" WARD NUMBER\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"nehcuy"},"content":"            + \"Example: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"nehcuy"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"nehcuy"},"content":"            + WARD_NUMBER_PREFIX","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"nehcuy"},"content":"            + \" D312 T36\";","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"nehcuy"},"content":"    private final WardNumberPredicate predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"nehcuy"},"content":"    public GetWardNumberCommand(WardNumberPredicate predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"nehcuy"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"nehcuy"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"nehcuy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"nehcuy"},"content":"        PatientTypePredicate inPatientPredicate \u003d new PatientTypePredicate(PatientType.PatientTypes.INPATIENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"nehcuy"},"content":"        Predicate\u003cPerson\u003e wardNumberPredicate \u003d inPatientPredicate.and(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"nehcuy"},"content":"        model.updateFilteredPersonList(wardNumberPredicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"nehcuy"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"nehcuy"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"nehcuy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"nehcuy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"nehcuy"},"content":"                || (other instanceof GetWardNumberCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"nehcuy"},"content":"                \u0026\u0026 predicate.equals(((GetWardNumberCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"nehcuy"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"nehcuy":57}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FLOOR_NUMBER;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOSPITAL_WING;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICATION;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_TYPE;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WARD_NUMBER;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.UpcomingAppointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.FloorNumber;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.HospitalWing;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.WardNumber;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_NEXT_OF_KIN,","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"                        PREFIX_PATIENT_TYPE, PREFIX_HOSPITAL_WING, PREFIX_FLOOR_NUMBER,","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"                        PREFIX_WARD_NUMBER, PREFIX_MEDICATION);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"                PREFIX_NEXT_OF_KIN, PREFIX_PATIENT_TYPE)","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"        NextOfKin nextOfKin \u003d ParserUtil.parseNextOfKin(argMultimap.getValue(PREFIX_NEXT_OF_KIN).get());","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"        PatientType patientType \u003d ParserUtil.parsePatientType(argMultimap.getValue(PREFIX_PATIENT_TYPE).get());","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"Charles1026"},"content":"        Set\u003cMedication\u003e medicationList \u003d ParserUtil.parseMedications(argMultimap.getAllValues(PREFIX_MEDICATION));","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"        if (patientType.isInpatient() \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_HOSPITAL_WING, PREFIX_FLOOR_NUMBER,","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"Charles1026"},"content":"                PREFIX_WARD_NUMBER)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"Charles1026"},"content":"            throw new ParseException(String.format(PatientType.DEPENDENCY_CONSTRAINTS, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"Charles1026"},"content":"        HospitalWing hospitalWing \u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"Charles1026"},"content":"        FloorNumber floorNumber \u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"Charles1026"},"content":"        WardNumber wardNumber \u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"Charles1026"},"content":"        if (patientType.isInpatient()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Charles1026"},"content":"            hospitalWing \u003d ParserUtil.parseHospitalWing(argMultimap.getValue(PREFIX_HOSPITAL_WING).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"            floorNumber \u003d ParserUtil.parseFloorNumber(argMultimap.getValue(PREFIX_FLOOR_NUMBER).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"Charles1026"},"content":"            wardNumber \u003d ParserUtil.parseWardNumber(argMultimap.getValue(PREFIX_WARD_NUMBER).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"kxrt"},"content":"        UpcomingAppointment upcomingAppointment \u003d null;","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"Charles1026"},"content":"        Person person \u003d new Person(name, phone, email, nextOfKin, patientType, hospitalWing,","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"kxrt"},"content":"                floorNumber, wardNumber, medicationList, new ArrayList\u003c\u003e(), upcomingAppointment);","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Charles1026":33,"PeiYee88":2,"-":51,"kxrt":5}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"import seedu.address.logic.commands.CountCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"import seedu.address.logic.commands.CreatePastAppointmentCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.GetCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"        final Matcher basicCommandMatcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"        if (basicCommandMatcher.matches()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"            final String commandWord \u003d basicCommandMatcher.group(\"commandWord\");","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"            final String arguments \u003d basicCommandMatcher.group(\"arguments\");","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":74,"author":{"gitId":"kxrt"},"content":"            case CountCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"kxrt"},"content":"                return new CountCommand();","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"nehcuy"},"content":"            case GetCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"nehcuy"},"content":"                return new GetCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"kxrt"},"content":"            case CreatePastAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"kxrt"},"content":"                return new CreatePastAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"Charles1026"},"content":"            case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"Charles1026"},"content":"                return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2016-08-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"nehcuy"},"content":"        if (!basicCommandMatcher.matches()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"PeiYee88"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"PeiYee88"},"content":"        return null;","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nehcuy":4,"Charles1026":4,"PeiYee88":9,"-":73,"kxrt":6}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"    public static final Prefix PREFIX_NEXT_OF_KIN \u003d new Prefix(\"nok/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"    public static final Prefix PREFIX_PATIENT_TYPE \u003d new Prefix(\"pt/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"    public static final Prefix PREFIX_HOSPITAL_WING \u003d new Prefix(\"hw/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"    public static final Prefix PREFIX_FLOOR_NUMBER \u003d new Prefix(\"fn/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"    public static final Prefix PREFIX_WARD_NUMBER \u003d new Prefix(\"wn/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"    public static final Prefix PREFIX_MEDICATION \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"on/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"    public static final Prefix PREFIX_DIAGNOSIS \u003d new Prefix(\"diag/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"    public static final Prefix PREFIX_UPCOMING_APPOINTMENT \u003d new Prefix(\"upcoming/\");","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Charles1026":5,"PeiYee88":1,"-":13,"kxrt":3}},{"path":"src/main/java/seedu/address/logic/parser/CreatePastAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MISSING_DATE;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MISSING_DIAGNOSIS;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICATION;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"import seedu.address.logic.commands.CreatePastAppointmentCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.PastAppointment;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":" * Parses input arguments and creates a new CreatePastAppointmentCommand object.","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"public class CreatePastAppointmentCommandParser implements Parser\u003cCreatePastAppointmentCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"    public CreatePastAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"kxrt"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"kxrt"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"kxrt"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MEDICATION, PREFIX_DATE, PREFIX_DIAGNOSIS);","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"kxrt"},"content":"        Index index;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"kxrt"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"kxrt"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"kxrt"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"kxrt"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"kxrt"},"content":"                    CreatePastAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"kxrt"},"content":"        if (argMultimap.getValue(PREFIX_DIAGNOSIS).isEmpty()","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"kxrt"},"content":"                || argMultimap.getValue(PREFIX_DIAGNOSIS).get().equals(\"\")) {","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"kxrt"},"content":"            throw new ParseException(MESSAGE_MISSING_DIAGNOSIS);","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"kxrt"},"content":"        Set\u003cMedication\u003e medicationSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"kxrt"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_MEDICATION)).ifPresent(medicationSet::addAll);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"kxrt"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isEmpty()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"kxrt"},"content":"            throw new ParseException(MESSAGE_MISSING_DATE);","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"kxrt"},"content":"        if (!Appointment.isValidDate(argMultimap.getValue(PREFIX_DATE).get())) {","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"kxrt"},"content":"            throw new ParseException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"kxrt"},"content":"        PastAppointment appt \u003d new PastAppointment(","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"kxrt"},"content":"                LocalDate.parse(argMultimap.getValue(PREFIX_DATE).get(), DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")),","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"kxrt"},"content":"                medicationSet, argMultimap.getValue(PREFIX_DIAGNOSIS).get());","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"kxrt"},"content":"        return new CreatePastAppointmentCommand(index, appt);","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"kxrt"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"kxrt"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"kxrt"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"kxrt"},"content":"    private Optional\u003cSet\u003cMedication\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e medications) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"kxrt"},"content":"        assert medications !\u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"kxrt"},"content":"        if (medications.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"kxrt"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"kxrt"},"content":"        Collection\u003cString\u003e medicationSet \u003d medications.size() \u003d\u003d 1 \u0026\u0026 medications.contains(\"\")","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"kxrt"},"content":"                ? Collections.emptySet() : medications;","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"kxrt"},"content":"        return Optional.of(ParserUtil.parseMedications(medicationSet));","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"kxrt":77}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":" * Parses input arguments and creates a new DeleteCommand object.","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":27,"Ryan-Tan00":2}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FLOOR_NUMBER;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOSPITAL_WING;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICATION;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_TYPE;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UPCOMING_APPOINTMENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WARD_NUMBER;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_NEXT_OF_KIN,","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"                        PREFIX_PATIENT_TYPE, PREFIX_HOSPITAL_WING, PREFIX_FLOOR_NUMBER,","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"kxrt"},"content":"                        PREFIX_WARD_NUMBER, PREFIX_MEDICATION, PREFIX_UPCOMING_APPOINTMENT);","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"Charles1026"},"content":"        if (argMultimap.getValue(PREFIX_NEXT_OF_KIN).isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"Charles1026"},"content":"            editPersonDescriptor.setNextOfKin(ParserUtil.parseNextOfKin(","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"Charles1026"},"content":"                    argMultimap.getValue(PREFIX_NEXT_OF_KIN).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"Charles1026"},"content":"        if (argMultimap.getValue(PREFIX_PATIENT_TYPE).isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"Charles1026"},"content":"            editPersonDescriptor.setPatientType(ParserUtil.parsePatientType(","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"Charles1026"},"content":"                    argMultimap.getValue(PREFIX_PATIENT_TYPE).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"PeiYee88"},"content":"        if (argMultimap.getValue(PREFIX_HOSPITAL_WING).isPresent()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"PeiYee88"},"content":"            editPersonDescriptor.setHospitalWing(ParserUtil.parseHospitalWing(","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"PeiYee88"},"content":"                    argMultimap.getValue(PREFIX_HOSPITAL_WING).get()));","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"Charles1026"},"content":"        if (argMultimap.getValue(PREFIX_FLOOR_NUMBER).isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"Charles1026"},"content":"            editPersonDescriptor.setFloorNumber(ParserUtil.parseFloorNumber(","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"Charles1026"},"content":"                    argMultimap.getValue(PREFIX_FLOOR_NUMBER).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"Charles1026"},"content":"        if (argMultimap.getValue(PREFIX_WARD_NUMBER).isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Charles1026"},"content":"            editPersonDescriptor.setWardNumber(ParserUtil.parseWardNumber(","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"Charles1026"},"content":"                    argMultimap.getValue(PREFIX_WARD_NUMBER).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"kxrt"},"content":"        if (argMultimap.getValue(PREFIX_UPCOMING_APPOINTMENT).isPresent()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"kxrt"},"content":"            editPersonDescriptor.setUpcomingAppointment(ParserUtil.parseUpcomingAppointment(","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"kxrt"},"content":"                    argMultimap.getValue(PREFIX_UPCOMING_APPOINTMENT).get()));","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"Charles1026"},"content":"        /*","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"Charles1026"},"content":"        If the changed person\u0027s patient type outpatient, it cannot have Hospital Wing, Floor Number or Ward Number.","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"Charles1026"},"content":"         */","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"Charles1026"},"content":"        if ((editPersonDescriptor.getPatientType().isPresent()","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 !editPersonDescriptor.getPatientType().get().isInpatient())","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 (editPersonDescriptor.getHospitalWing().isPresent()","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"Charles1026"},"content":"                || editPersonDescriptor.getFloorNumber().isPresent()","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"Charles1026"},"content":"                || editPersonDescriptor.getWardNumber().isPresent())) {","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"Charles1026"},"content":"            throw new ParseException(String.format(PatientType.DEPENDENCY_CONSTRAINTS, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"Charles1026"},"content":"        /*","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"Charles1026"},"content":"        If the changed person\u0027s patient type inpatient, it must have Hospital Wing, Floor Number or Ward Number.","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"Charles1026"},"content":"         */","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"Charles1026"},"content":"        if ((editPersonDescriptor.getPatientType().isPresent()","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 editPersonDescriptor.getPatientType().get().isInpatient())","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 (editPersonDescriptor.getHospitalWing().isEmpty()","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"Charles1026"},"content":"                || editPersonDescriptor.getFloorNumber().isEmpty()","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"Charles1026"},"content":"                || editPersonDescriptor.getWardNumber().isEmpty())) {","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"Charles1026"},"content":"            throw new ParseException(String.format(PatientType.DEPENDENCY_CONSTRAINTS, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"Charles1026"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_MEDICATION)).ifPresent(editPersonDescriptor::setMedications);","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":123,"author":{"gitId":"Charles1026"},"content":"    private Optional\u003cSet\u003cMedication\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e medications) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"Charles1026"},"content":"        assert medications !\u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":126,"author":{"gitId":"Charles1026"},"content":"        if (medications.isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":129,"author":{"gitId":"Charles1026"},"content":"        Collection\u003cString\u003e medicationSet \u003d medications.size() \u003d\u003d 1 \u0026\u0026 medications.contains(\"\")","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"Charles1026"},"content":"                ? Collections.emptySet() : medications;","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"Charles1026"},"content":"        return Optional.of(ParserUtil.parseMedications(medicationSet));","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Charles1026":54,"PeiYee88":5,"-":70,"kxrt":5}},{"path":"src/main/java/seedu/address/logic/parser/GetCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"nehcuy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_GET_PREFIX;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.GetCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.commands.getcommands.GetAppointmentByDateCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.getcommands.GetFloorNumberCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.getcommands.GetHospitalWingCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.getcommands.GetInpatientCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.getcommands.GetMedicationCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.getcommands.GetNameCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.commands.getcommands.GetNextOfKinCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.getcommands.GetOutpatientCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.logic.commands.getcommands.GetPastAppointmentCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.getcommands.GetWardNumberCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.parser.getparsers.GetAppointmentByDateCommandParser;","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.parser.getparsers.GetFloorNumberCommandParser;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.parser.getparsers.GetHospitalWingCommandParser;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.parser.getparsers.GetMedicationCommandParser;","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.parser.getparsers.GetNameCommandParser;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.parser.getparsers.GetNextOfKinCommandParser;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.logic.parser.getparsers.GetPastAppointmentCommandParser;","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.parser.getparsers.GetWardNumberCommandParser;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"nehcuy"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"nehcuy"},"content":" * Parses get command input","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"nehcuy"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"nehcuy"},"content":"public class GetCommandParser implements Parser\u003cGetCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"nehcuy"},"content":"    private static final Pattern GET_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003cprefix\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"nehcuy"},"content":"    public GetCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"nehcuy"},"content":"        final Matcher getCommandMatcher \u003d GET_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"nehcuy"},"content":"        if (getCommandMatcher.matches()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"nehcuy"},"content":"            final String prefix \u003d getCommandMatcher.group(\"prefix\");","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"nehcuy"},"content":"            final String arguments \u003d getCommandMatcher.group(\"arguments\");","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"nehcuy"},"content":"            switch (prefix) {","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"nehcuy"},"content":"            case GetOutpatientCommand.OUTPATIENT_PREFIX:","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"nehcuy"},"content":"                return new GetOutpatientCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"nehcuy"},"content":"            case GetInpatientCommand.INPATIENT_PREFIX:","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"nehcuy"},"content":"                return new GetInpatientCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"nehcuy"},"content":"            case GetFloorNumberCommand.FLOOR_NUMBER_PREFIX:","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"nehcuy"},"content":"                return new GetFloorNumberCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"nehcuy"},"content":"            case GetHospitalWingCommand.HOSPITAL_WING_PREFIX:","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"nehcuy"},"content":"                return new GetHospitalWingCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"nehcuy"},"content":"            case GetWardNumberCommand.WARD_NUMBER_PREFIX:","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"nehcuy"},"content":"                return new GetWardNumberCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"nehcuy"},"content":"            case GetNameCommand.NAME_PREFIX:","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"nehcuy"},"content":"                return new GetNameCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"            case GetNextOfKinCommand.NEXT_OF_KIN_PREFIX:","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"                return new GetNextOfKinCommandParser().parse(arguments);","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"            case GetPastAppointmentCommand.PAST_APPOINTMENT_PREFIX:","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"                return new GetPastAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"nehcuy"},"content":"            case GetMedicationCommand.MEDICATION_PREFIX:","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"nehcuy"},"content":"                return new GetMedicationCommandParser().parse(arguments);","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"PeiYee88"},"content":"            case GetAppointmentByDateCommand.APPOINTMENT_BY_DATE_PREFIX:","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"PeiYee88"},"content":"                return new GetAppointmentByDateCommandParser().parse(arguments);","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"nehcuy"},"content":"            default:","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"nehcuy"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_GET_PREFIX,","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"nehcuy"},"content":"                        GetCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"nehcuy"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"nehcuy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"nehcuy"},"content":"        if (!getCommandMatcher.matches()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"nehcuy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"nehcuy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"nehcuy"},"content":"        return null;","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"nehcuy"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"nehcuy":72,"PeiYee88":11,"Ryan-Tan00":5}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.UpcomingAppointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.FloorNumber;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.HospitalWing;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType.PatientTypes;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.WardNumber;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"Charles1026"},"content":"     * Parses a {@code String nextOfKin} into an {@code NextOfKin}.","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"Charles1026"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"Charles1026"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"Charles1026"},"content":"     * @throws ParseException if the given {@code nextOfKin} is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"Charles1026"},"content":"    public static NextOfKin parseNextOfKin(String nextOfKin) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"Charles1026"},"content":"        requireNonNull(nextOfKin);","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"Charles1026"},"content":"        String trimmedNextOfKin \u003d nextOfKin.trim();","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"Charles1026"},"content":"        if (!NextOfKin.isValidNextOfKin(trimmedNextOfKin)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"Charles1026"},"content":"            throw new ParseException(NextOfKin.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"Charles1026"},"content":"        return new NextOfKin(trimmedNextOfKin);","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"Charles1026"},"content":"     * Parses a {@code String patientType} into an {@code PatientType}.","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"Charles1026"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"Charles1026"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"Charles1026"},"content":"     * @throws ParseException if the given {@code patientType} is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"Charles1026"},"content":"    public static PatientType parsePatientType(String patientType) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"Charles1026"},"content":"        requireNonNull(patientType);","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"Charles1026"},"content":"        String trimmedPatientType \u003d patientType.trim();","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"Charles1026"},"content":"        if (!PatientType.isValidPatientType(trimmedPatientType)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"Charles1026"},"content":"            throw new ParseException(PatientType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"Charles1026"},"content":"        PatientTypes pt \u003d PatientTypes.parsePatientType(trimmedPatientType);","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"Charles1026"},"content":"        if (pt \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"Charles1026"},"content":"            throw new ParseException(PatientType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"Charles1026"},"content":"        return new PatientType(pt);","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"PeiYee88"},"content":"     * Parses a {@code String hospitalWing} into an {@code hospitalWing}.","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"PeiYee88"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"PeiYee88"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"PeiYee88"},"content":"     * @throws ParseException if the given {@code hospital wing} is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"PeiYee88"},"content":"    public static HospitalWing parseHospitalWing(String hospitalWing) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"PeiYee88"},"content":"        requireNonNull(hospitalWing);","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"PeiYee88"},"content":"        String trimmedHospitalWing \u003d hospitalWing.trim();","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"PeiYee88"},"content":"        if (!HospitalWing.isValidHospitalWing(trimmedHospitalWing)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"PeiYee88"},"content":"            throw new ParseException(HospitalWing.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"PeiYee88"},"content":"        return new HospitalWing(trimmedHospitalWing);","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"Charles1026"},"content":"     * Parses a {@code String floorNumber} into an {@code FloorNumber}.","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"Charles1026"},"content":"     * String will be converted to an Integer.","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"Charles1026"},"content":"     * @throws ParseException if the given {@code floorNumber} is invalid.","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"Charles1026"},"content":"    public static FloorNumber parseFloorNumber(String floorNumber) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"Charles1026"},"content":"        requireNonNull(floorNumber);","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"Charles1026"},"content":"        String trimmedFloorNumber \u003d floorNumber.trim();","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"Charles1026"},"content":"        Integer parsedFloorNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"Charles1026"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"Charles1026"},"content":"            parsedFloorNumber \u003d Integer.valueOf(trimmedFloorNumber);","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"Charles1026"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"Charles1026"},"content":"            throw new ParseException(FloorNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"Charles1026"},"content":"        if (!FloorNumber.isValidFloorNumber(parsedFloorNumber)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"Charles1026"},"content":"            throw new ParseException(FloorNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"Charles1026"},"content":"        return new FloorNumber(parsedFloorNumber);","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"Charles1026"},"content":"     * Parses a {@code String wardNumber} into an {@code WardNumber}.","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"Charles1026"},"content":"     * String will be converted to an Integer.","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"Charles1026"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"Charles1026"},"content":"     * @throws ParseException if the given {@code wardNumber} is invalid.","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"Charles1026"},"content":"    public static WardNumber parseWardNumber(String wardNumber) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"Charles1026"},"content":"        requireNonNull(wardNumber);","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"Charles1026"},"content":"        String trimmedWardNumber \u003d wardNumber.trim();","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"nehcuy"},"content":"        if (!WardNumber.isValidWardNumber(trimmedWardNumber)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"Charles1026"},"content":"            throw new ParseException(WardNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"nehcuy"},"content":"        return new WardNumber(trimmedWardNumber);","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"Charles1026"},"content":"     * Parses a {@code String medication} into a {@code Medication}.","lastModifiedDate":"2022-10-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"Charles1026"},"content":"     * @throws ParseException if the given {@code medication} is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"Charles1026"},"content":"    public static Medication parseMedication(String medication) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":183,"author":{"gitId":"Charles1026"},"content":"        requireNonNull(medication);","lastModifiedDate":"2022-10-04"},{"lineNumber":184,"author":{"gitId":"Charles1026"},"content":"        String trimmedMedication \u003d medication.trim();","lastModifiedDate":"2022-10-04"},{"lineNumber":185,"author":{"gitId":"Charles1026"},"content":"        if (!Medication.isValidMedicationName(trimmedMedication)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":186,"author":{"gitId":"Charles1026"},"content":"            throw new ParseException(Medication.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"Charles1026"},"content":"        return new Medication(trimmedMedication);","lastModifiedDate":"2022-10-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":194,"author":{"gitId":"Charles1026"},"content":"    public static Set\u003cMedication\u003e parseMedications(Collection\u003cString\u003e medications) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":195,"author":{"gitId":"Charles1026"},"content":"        requireNonNull(medications);","lastModifiedDate":"2022-10-04"},{"lineNumber":196,"author":{"gitId":"Charles1026"},"content":"        final Set\u003cMedication\u003e medicationSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":197,"author":{"gitId":"Charles1026"},"content":"        for (String medicationName : medications) {","lastModifiedDate":"2022-10-04"},{"lineNumber":198,"author":{"gitId":"Charles1026"},"content":"            medicationSet.add(parseMedication(medicationName));","lastModifiedDate":"2022-10-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":200,"author":{"gitId":"Charles1026"},"content":"        return medicationSet;","lastModifiedDate":"2022-10-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":202,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":203,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":204,"author":{"gitId":"kxrt"},"content":"     * Parses {@code String upcomingAppointment} into a {@code UpcomingAppointment}.","lastModifiedDate":"2022-10-14"},{"lineNumber":205,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":206,"author":{"gitId":"kxrt"},"content":"    public static UpcomingAppointment parseUpcomingAppointment(String upcomingAppointment) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":207,"author":{"gitId":"kxrt"},"content":"        if (upcomingAppointment \u003d\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":208,"author":{"gitId":"kxrt"},"content":"            return new UpcomingAppointment((LocalDate) null);","lastModifiedDate":"2022-10-14"},{"lineNumber":209,"author":{"gitId":"kxrt"},"content":"        } else if (!UpcomingAppointment.isValidDate(upcomingAppointment)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":210,"author":{"gitId":"kxrt"},"content":"            throw new ParseException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":211,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":212,"author":{"gitId":"kxrt"},"content":"        return new UpcomingAppointment(upcomingAppointment);","lastModifiedDate":"2022-10-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"},{"lineNumber":215,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"nehcuy":2,"Charles1026":79,"PeiYee88":17,"-":103,"kxrt":14}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Charles1026":1,"-":39}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":" * Parses input arguments and creates a new ViewCommand object.","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"Charles1026":31}},{"path":"src/main/java/seedu/address/logic/parser/getparsers/GetAppointmentByDateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.logic.parser.getparsers;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.commands.getcommands.GetAppointmentByDateCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.AppointmentByDatePredicate;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":" * Parses input arguments and creates a new GetAppointmentByDateCommand object","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"public class GetAppointmentByDateCommandParser implements Parser\u003cGetAppointmentByDateCommand\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"     * Parses the given {@code String} of arguments in the context of the GetAppointmentByDate","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"     * and returns a GetAppointmentByDateCommand object for execution.","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"    public GetAppointmentByDateCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"        String trimmedArgs \u003d userInput.trim();","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetAppointmentByDateCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"        List\u003cLocalDate\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"        for (String arg : trimmedArgs.split(\"\\\\s+\")) {","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"            try {","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"                LocalDate appointment \u003d LocalDate.parse(arg, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"                appointments.add(appointment);","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"                throw new ParseException(","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetAppointmentByDateCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"        return new GetAppointmentByDateCommand(new AppointmentByDatePredicate(appointments));","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"PeiYee88":48}},{"path":"src/main/java/seedu/address/logic/parser/getparsers/GetFloorNumberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.logic.parser.getparsers;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"nehcuy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.getcommands.GetFloorNumberCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.person.FloorNumberPredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":" * Parses input arguments and creates a new GetFloorNumberCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":"public class GetFloorNumberCommandParser implements Parser\u003cGetFloorNumberCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":"     * Parses the given {@code String} of arguments in the context of the GetFloorNumberCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"     * and returns a GetFloorNumberCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"nehcuy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"nehcuy"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"    public GetFloorNumberCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"        String trimmedArgs \u003d userInput.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"nehcuy"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"nehcuy"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"nehcuy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetFloorNumberCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"nehcuy"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"nehcuy"},"content":"        List\u003cInteger\u003e floorNumbers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"nehcuy"},"content":"        for (String arg : trimmedArgs.split(\"\\\\s+\")) {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"nehcuy"},"content":"            try {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"nehcuy"},"content":"                int floor \u003d Integer.parseInt(arg);","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"nehcuy"},"content":"                if (floor \u003c 1) { // Throw exception if input is invalid floor number.","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"nehcuy"},"content":"                    throw new ParseException(","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"nehcuy"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetFloorNumberCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"nehcuy"},"content":"                }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"nehcuy"},"content":"                floorNumbers.add(floor);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"nehcuy"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"nehcuy"},"content":"                throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"nehcuy"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetFloorNumberCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"nehcuy"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"nehcuy"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"nehcuy"},"content":"        return new GetFloorNumberCommand(new FloorNumberPredicate(floorNumbers));","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"nehcuy"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"nehcuy":49}},{"path":"src/main/java/seedu/address/logic/parser/getparsers/GetHospitalWingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.logic.parser.getparsers;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.getcommands.GetHospitalWingCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.HospitalWingContainsKeywordsPredicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":" * Parses input arguments and creates a new GetHospitalWingCommand object","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"public class GetHospitalWingCommandParser implements Parser\u003cGetHospitalWingCommand\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":"     * Parses the given {@code String} of arguments in the context of the GetHospitalWingCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"     * and returns a GetHospitalWingCommand object for execution.","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"nehcuy"},"content":"    public GetHospitalWingCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"        String trimmedArgs \u003d userInput.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetHospitalWingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"        List\u003cString\u003e hospitalWings \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"        hospitalWings.add(trimmedArgs);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"        return new GetHospitalWingCommand(new HospitalWingContainsKeywordsPredicate(hospitalWings));","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"nehcuy":7,"PeiYee88":29}},{"path":"src/main/java/seedu/address/logic/parser/getparsers/GetMedicationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.logic.parser.getparsers;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"nehcuy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.getcommands.GetMedicationCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.person.MedicationContainsKeywordsPredicate;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":" * Parses input arguments and creates a new GetMedicationCommand object","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"public class GetMedicationCommandParser implements Parser\u003cGetMedicationCommand\u003e {","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":"    public GetMedicationCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":"        String trimmedArgs \u003d userInput.trim();","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"nehcuy"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"nehcuy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetMedicationCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"nehcuy"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"        String[] medications \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"nehcuy"},"content":"        return new GetMedicationCommand(new MedicationContainsKeywordsPredicate(Arrays.asList(medications)));","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"nehcuy"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"nehcuy":30}},{"path":"src/main/java/seedu/address/logic/parser/getparsers/GetNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.logic.parser.getparsers;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"nehcuy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.getcommands.GetNameCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":" * Parses input arguments and creates a new GetNameCommand object","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"public class GetNameCommandParser implements Parser\u003cGetNameCommand\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":"     * Parses the given {@code String} of arguments in the context of the GetNameCommand","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":"     * and returns a GetNameCommand object for execution.","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"nehcuy"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"nehcuy"},"content":"    public GetNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"nehcuy"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"nehcuy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"nehcuy"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"nehcuy"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"nehcuy"},"content":"        return new GetNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"nehcuy"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"nehcuy":34}},{"path":"src/main/java/seedu/address/logic/parser/getparsers/GetNextOfKinCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.logic.parser.getparsers;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.commands.getcommands.GetNextOfKinCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.NextOfKinPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":" * Parses input arguments and creates a new GetNextOfKinCommand object","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"public class GetNextOfKinCommandParser implements Parser\u003cGetNextOfKinCommand\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"     * Parses the given {@code String} of arguments in the context of the GetNextOfKinCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"     * and returns a GetNextOfKinCommand object for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"    public GetNextOfKinCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetNextOfKinCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"        String[] nextOfKinKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"        return new GetNextOfKinCommand(new NextOfKinPredicate(Arrays.asList(nextOfKinKeywords)));","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"PeiYee88":34}},{"path":"src/main/java/seedu/address/logic/parser/getparsers/GetPastAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package seedu.address.logic.parser.getparsers;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.logic.commands.getcommands.GetPastAppointmentCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":" * Parses input arguments and creates a new GetPastAppointmentCommand object.","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"public class GetPastAppointmentCommandParser implements Parser\u003cGetPastAppointmentCommand\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"     * Parses the given {@code String} of arguments in the context of the GetAppointmentCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"     * and returns a GetAppointmentCommand object for execution.","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"    public GetPastAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"        try {","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"            return new GetPastAppointmentCommand(index);","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetPastAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"Ryan-Tan00":30}},{"path":"src/main/java/seedu/address/logic/parser/getparsers/GetWardNumberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.logic.parser.getparsers;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"nehcuy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.commands.getcommands.GetWardNumberCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":"import seedu.address.model.person.WardNumberPredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":" * Parses input arguments and creates a new GetWardNumberCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"public class GetWardNumberCommandParser implements Parser\u003cGetWardNumberCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":"    public GetWardNumberCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":"        String trimmedArgs \u003d userInput.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"nehcuy"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"nehcuy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetWardNumberCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"nehcuy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"        String[] wardNumbers \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"nehcuy"},"content":"        return new GetWardNumberCommand(new WardNumberPredicate(Arrays.asList(wardNumbers)));","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"nehcuy"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"nehcuy":30}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"import static seedu.address.logic.commands.CountCommand.MESSAGE_COUNT;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.tag.MedicationMap;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"    private final MedicationMap medicationMap;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"        medicationMap \u003d new MedicationMap();","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"kxrt"},"content":"        // update medication map to only contain data from new persons","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"kxrt"},"content":"        medicationMap.updateMedicationMap(persons);","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"kxrt"},"content":"        setMedicationMap(newData.getStringifiedMedicationMap());","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"kxrt"},"content":"    private void setMedicationMap(String stringifiedMedicationMap) {","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"kxrt"},"content":"        this.medicationMap.setStringifiedMedicationMap(stringifiedMedicationMap);","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"kxrt"},"content":"        medicationMap.addMedicationsOfPatient(p);","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"kxrt"},"content":"        medicationMap.clearMedicationsOfPatient(target);","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":98,"author":{"gitId":"kxrt"},"content":"        medicationMap.addMedicationsOfPatient(editedPerson);","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":107,"author":{"gitId":"kxrt"},"content":"        medicationMap.clearMedicationsOfPatient(key);","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":123,"author":{"gitId":"kxrt"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":124,"author":{"gitId":"kxrt"},"content":"    public String getMedicationMap() {","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"kxrt"},"content":"        return medicationMap.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"kxrt"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"kxrt"},"content":"    public String getStringifiedMedicationMap() {","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"kxrt"},"content":"        return medicationMap.getStringifiedMedicationMap();","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"kxrt"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"kxrt"},"content":"    public String getCensus(Model model) {","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"kxrt"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"kxrt"},"content":"        sb.append(String.format(MESSAGE_COUNT, model.getPersonCount()));","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"kxrt"},"content":"        sb.append(getMedicationMap());","lastModifiedDate":"2022-10-24"},{"lineNumber":138,"author":{"gitId":"kxrt"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":119,"kxrt":33}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"Charles1026"},"content":"    /** Returns an unmodifiable view of the filtered person list. */","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"Charles1026"},"content":"    /** Returns the Person currently being viewed. */","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"Charles1026"},"content":"    Person getCurrentlyViewedPerson();","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"Charles1026"},"content":"     * Updates the Person currently being viewed.","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"Charles1026"},"content":"     * @param person The person to set as the new Person to view.","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"Charles1026"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"Charles1026"},"content":"    void updateCurrentlyViewedPerson(Person person);","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"kxrt"},"content":"     * Returns count of people stored in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"kxrt"},"content":"     * @return count of people stored in the address book","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"kxrt"},"content":"    int getPersonCount();","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"kxrt"},"content":"     * Returns a string representation of the address book\u0027s census.","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"kxrt"},"content":"    String getCensus();","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Charles1026":11,"PeiYee88":1,"-":86,"kxrt":11}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"    private Person currentlyViewedPerson;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"        if (filteredPersons.size() \u003e 0) {","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"            currentlyViewedPerson \u003d filteredPersons.get(0);","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"        } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"            currentlyViewedPerson \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"Charles1026"},"content":"        if (target.equals(currentlyViewedPerson)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"Charles1026"},"content":"            currentlyViewedPerson \u003d filteredPersons.size() \u003e 0 ? filteredPersons.get(0) : null;","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"Charles1026"},"content":"        if (target.equals(currentlyViewedPerson)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"Charles1026"},"content":"            currentlyViewedPerson \u003d editedPerson;","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"Charles1026"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Currently Viewed Person Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"Charles1026"},"content":"    public Person getCurrentlyViewedPerson() {","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"Charles1026"},"content":"        return currentlyViewedPerson;","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"Charles1026"},"content":"    public void updateCurrentlyViewedPerson(Person person) {","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"Charles1026"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"Charles1026"},"content":"        currentlyViewedPerson \u003d person;","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"kxrt"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":175,"author":{"gitId":"kxrt"},"content":"    public int getPersonCount() {","lastModifiedDate":"2022-10-09"},{"lineNumber":176,"author":{"gitId":"kxrt"},"content":"        return addressBook.getPersonList().size();","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":179,"author":{"gitId":"kxrt"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":180,"author":{"gitId":"kxrt"},"content":"    public String getCensus() {","lastModifiedDate":"2022-10-24"},{"lineNumber":181,"author":{"gitId":"kxrt"},"content":"        return addressBook.getCensus(this);","lastModifiedDate":"2022-10-24"},{"lineNumber":182,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Charles1026":24,"-":150,"kxrt":9}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"     * Returns an unmodifiable view of the medications list.","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"     * This list will not contain any duplicate medications.","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"    String getMedicationMap();","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"     * Returns a string representation of the address book\u0027s census.","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"    String getCensus(Model model);","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"     * Returns a string representation of the address book\u0027s medication map.","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"    String getStringifiedMedicationMap();","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":17,"kxrt":15}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":" * Represents an appointment for a patient.","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"public abstract class Appointment {","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date string should be of the format dd-MM-yyyy.\";","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"     * Constructs an {@code Appointment} for a {@code Patient}.","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"     * @param date of the appointment","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"    public Appointment(LocalDate date) {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"     * Constructs an {@code Appointment} for a {@code Patient}.","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"     * @param dateString string representation of date of the appointment","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"    public Appointment(String dateString) {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"        if (dateString.equals(\"\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"            this.date \u003d null;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"            try {","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"                this.date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"kxrt"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"kxrt"},"content":"                throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"kxrt"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"kxrt"},"content":"     * Returns date of {@code Appointment}.","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"kxrt"},"content":"     * @return the date of the appointment","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"kxrt"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"kxrt"},"content":"        return this.date;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"kxrt"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"kxrt"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"kxrt"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"kxrt"},"content":"            return true;","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"kxrt"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"kxrt"},"content":"            LocalDate.parse(test, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"kxrt"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"kxrt"},"content":"            return false;","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"kxrt"},"content":"        return true;","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"kxrt":60}},{"path":"src/main/java/seedu/address/model/appointment/PastAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":" * Represents a completed appointment for a patient.","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":" * Guarantees: immutable as it is a sensitive record.","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"public class PastAppointment extends Appointment {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"    private final Set\u003cMedication\u003e medication;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"    private final String diagnosis;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"     * Constructs a {@code PastAppointment} for a {@code Patient}.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"     * @param date of the appointment","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"     * @param medication the medications prescribed to the patient","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"     * @param diagnosis the doctor\u0027s analysis of the patient\u0027s state","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"    public PastAppointment(LocalDate date, Set\u003cMedication\u003e medication, String diagnosis) {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"        super(date);","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"        this.medication \u003d medication;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"        this.diagnosis \u003d diagnosis;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"     * Getter for the medications prescribed in the appointment.","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"kxrt"},"content":"     * @returns prescription for the patient","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"kxrt"},"content":"    public Set\u003cMedication\u003e getMedication() {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"        return this.medication;","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"kxrt"},"content":"     * Getter for the doctor\u0027s diagnosis.","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"kxrt"},"content":"     * @return diagnosis for the patient","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"kxrt"},"content":"    public String getDiagnosis() {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"kxrt"},"content":"        return this.diagnosis;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"     * Returns a string representation of the medications.","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"    public String getMedicationString() {","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Medication: \");","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"        getMedication().stream().sorted(Comparator.comparing(medication -\u003e medication.medicationName))","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"                .forEach(medication -\u003e sb.append(medication.medicationName).append(\", \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"        // remove trailing comma","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"        sb.delete(sb.length() - 2, sb.length());","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"kxrt"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"kxrt"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"kxrt"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"kxrt"},"content":"        builder.append(\"On: \").append(getDate().format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")));","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"kxrt"},"content":"        builder.append(\"; Diagnosis: \").append(getDiagnosis());","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"kxrt"},"content":"        Set\u003cMedication\u003e tags \u003d getMedication();","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"kxrt"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"kxrt"},"content":"            builder.append(\"; Prescribed Medication: \");","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"kxrt"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"kxrt"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"kxrt"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"kxrt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"kxrt"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"kxrt"},"content":"                || (other instanceof PastAppointment // instanceof handles nulls","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"kxrt"},"content":"                \u0026\u0026 getDate().equals(((PastAppointment) other).getDate())","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"kxrt"},"content":"                \u0026\u0026 getMedication().equals(((PastAppointment) other).getMedication())","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"kxrt"},"content":"                \u0026\u0026 getDiagnosis().equals(((PastAppointment) other).getDiagnosis())); // state check","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Charles1026":13,"kxrt":66}},{"path":"src/main/java/seedu/address/model/appointment/UpcomingAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":" * Represents an upcoming appointment for a patient.","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"public class UpcomingAppointment extends Appointment {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"    public final String value;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"     * Constructs an {@code UpcomingAppointment} for a {@code Patient}.","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"     * @param date of the appointment","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"    public UpcomingAppointment(LocalDate date) {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"        super(date);","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"            this.value \u003d null;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"        } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"            this.value \u003d date.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"     * Constructs an {@code UpcomingAppointment} for a {@code Patient}.","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"     * @param dateString string representation of date of the appointment","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"    public UpcomingAppointment(String dateString) {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"        super(dateString);","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"        this.value \u003d dateString;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"kxrt"},"content":"     * Returns true if a given string is a valid date; false otherwise.","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"kxrt"},"content":"        if (test.equals(\"\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"kxrt"},"content":"            return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"kxrt"},"content":"        return Appointment.isValidDate(test);","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"kxrt"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"kxrt"},"content":"    public String toString() {","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"kxrt"},"content":"        return \"Upcoming Appointment Date: \" + (value \u003d\u003d null || value.equals(\"\") ? \"None\" : value);","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"kxrt":46}},{"path":"src/main/java/seedu/address/model/person/AppointmentByDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":" * Tests that a {@code Person}\u0027s {@code Appointment Date} matches any of the appointment dates given.","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"public class AppointmentByDatePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"    private final List\u003cLocalDate\u003e appointments;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"     * Constructor for AppointmentByDatePredicate.","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"     * @param appointments patients\u0027 appointments","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"    public AppointmentByDatePredicate(List\u003cLocalDate\u003e appointments) {","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"        this.appointments \u003d appointments;","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"     * Tests if the input argument matches the person\u0027s details","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"     * @param person the input argument","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"     * @return the test result","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"        Boolean hasMatchPastAppointments \u003d false;","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"        Boolean hasMatchUpcomingAppointments \u003d false;","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"        if (isPresentPastAppointment(person)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"            hasMatchPastAppointments \u003d appointments.stream().anyMatch(","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"                    keyword -\u003e person.getPastAppointments().stream()","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"                            .anyMatch(appointment -\u003e keyword.compareTo(appointment.getDate()) \u003d\u003d 0));","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"        if (isPresentUpcomingAppointment(person)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"            hasMatchUpcomingAppointments \u003d appointments.stream().anyMatch(","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"                   keyword -\u003e person.getUpcomingAppointment().stream()","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"                            .anyMatch(appointment -\u003e keyword.compareTo(appointment.getDate()) \u003d\u003d 0));","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"        return hasMatchUpcomingAppointments || hasMatchPastAppointments;","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"    private boolean isPresentUpcomingAppointment(Person person) {","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"        return person.getUpcomingAppointment().get().value !\u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"    private boolean isPresentPastAppointment(Person person) {","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"        return person.getPastAppointments().size() !\u003d 0;","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"     * Tests the similarity of two objects","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"     * @param other the object to be tested","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"     * @return true if the objects are equal, otherwise false","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"                || (other instanceof AppointmentByDatePredicate // instanceof handles nulls","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"                \u0026\u0026 appointments.equals(((AppointmentByDatePredicate) other).appointments)); // state check","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"PeiYee88":64}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"        return \"Email: \" + value;","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Charles1026":1,"-":70}},{"path":"src/main/java/seedu/address/model/person/FloorNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":" * Represents the Floor Number of an inpatient in the database.","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidFloorNumber(Integer)}","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"public class FloorNumber {","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Floor Number is a positive integer for inpatient patients \"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"            + \"and blank for outpatient patients\";","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"    public final Integer value;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"     * Constructs an {@code Floor Number}.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"     * @param floorNumber A valid floor number.","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"    public FloorNumber(Integer floorNumber) {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"        checkArgument(isValidFloorNumber(floorNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"        value \u003d floorNumber;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"     * Returns true if a given string is a valid floor number.","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"    public static boolean isValidFloorNumber(Integer test) {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"        return test \u003e 0;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"        return \"Floor: \" + value.toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"                || (other instanceof FloorNumber // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 value.equals(((FloorNumber) other).value)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Charles1026":48}},{"path":"src/main/java/seedu/address/model/person/FloorNumberPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"nehcuy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":" * Tests that a {@code Person}\u0027s {@code Floor Number} matches any of the floor numbers given.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"public class FloorNumberPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":"    private final List\u003cInteger\u003e floorNumbers;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"    public FloorNumberPredicate(List\u003cInteger\u003e floorNumbers) {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":"        this.floorNumbers \u003d floorNumbers;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"        Boolean isInpatient \u003d person.getPatientType().value.equals(PatientType.PatientTypes.INPATIENT);","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"        if (isInpatient) {","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"            return floorNumbers.stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"                    .anyMatch(floorNumber -\u003e person.getFloorNumber().get().value.equals(floorNumber));","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"        return false;","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"nehcuy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"nehcuy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"nehcuy"},"content":"                || (other instanceof FloorNumberPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"nehcuy"},"content":"                \u0026\u0026 floorNumbers.equals(((FloorNumberPredicate) other).floorNumbers)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"nehcuy"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"nehcuy":27,"PeiYee88":5}},{"path":"src/main/java/seedu/address/model/person/HospitalWing.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":" * Represents an inpatient\u0027s currently located hospital wing in the database.","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidHospitalWing(String)}","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"public class HospitalWing {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Hospital Wing should be of the following values \"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"            + \"(east, west, north, south; case-insensitive)\"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"            + \" and spaces for inpatients \"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"            + \"and blank for outpatients\";","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"    public final String value;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"     * Enum for Hospital wing type","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"    public enum HospitalWingTypes {","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"        SOUTH {","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"            @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"            public String toString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"                return \"S\";","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"        },","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"        NORTH {","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"            @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"            public String toString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"                return \"N\";","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"        },","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"        EAST {","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"            @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"            public String toString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"                return \"E\";","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"        },","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"        WEST {","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"            @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"            public String toString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"                return \"W\";","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"     * Constructs an {@code Hospital Wing}.","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"     * @param hospitalWing A valid hospital wing.","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"    public HospitalWing(String hospitalWing) {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"        requireNonNull(hospitalWing);","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"        checkArgument(isValidHospitalWing(hospitalWing), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"        value \u003d hospitalWing;","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"     * Returns true if a given string is a valid hospital wing.","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"    public static boolean isValidHospitalWing(String test) {","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"PeiYee88"},"content":"        String[] enumArr \u003d Arrays.stream(HospitalWingTypes.values())","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"PeiYee88"},"content":"                .map(HospitalWingTypes::name).toArray(String[]::new);","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"PeiYee88"},"content":"        return StringUtil.containsWordIgnoreCase(String.join(\" \", enumArr), test);","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"PeiYee88"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"Charles1026"},"content":"        return \"Wing: \" + value;","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"PeiYee88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"PeiYee88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"PeiYee88"},"content":"                || (other instanceof HospitalWing // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"PeiYee88"},"content":"                \u0026\u0026 value.equals(((HospitalWing) other).value)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"PeiYee88"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"PeiYee88"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Charles1026":3,"PeiYee88":87}},{"path":"src/main/java/seedu/address/model/person/HospitalWingContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":" * Tests that a {@code Person}\u0027s {@code Hospital Wing} matches any of the keywords given.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"public class HospitalWingContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"    private final List\u003cString\u003e hospitalWings;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"     * Constructor for HospitalWingContainsKeywordsPredicate.","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"     * @param keywords patients\u0027 hospital wings","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"    public HospitalWingContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"        this.hospitalWings \u003d keywords.stream()","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"                .map(String::toLowerCase)","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"     * Tests if the input argument matches the person\u0027s details","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"     * @param person the input argument","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"     * @return the test result","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"        Boolean isInpatient \u003d person.getPatientType().value.equals(PatientType.PatientTypes.INPATIENT);","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"        if (isInpatient) {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"            return hospitalWings.stream()","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"                    .anyMatch(hospitalWing -\u003e person.getHospitalWing().get().value.equals(hospitalWing));","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"        return false;","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"     * Tests the similarity of two objects","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"     * @param other the object to be tested","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"     * @return true if the objects are equal, otherwise false","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"                || (other instanceof HospitalWingContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"                \u0026\u0026 hospitalWings.equals(((HospitalWingContainsKeywordsPredicate) other).hospitalWings)); // state check","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"PeiYee88":50}},{"path":"src/main/java/seedu/address/model/person/MedicationContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"nehcuy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":" * Tests that a {@code Person}\u0027s {@code Medication} matches any of the keywords given.","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"public class MedicationContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"    public MedicationContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"nehcuy"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"nehcuy"},"content":"                .anyMatch(keyword -\u003e person.getMedications().stream()","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"nehcuy"},"content":"                        .anyMatch(medication -\u003e StringUtil.containsWordIgnoreCase(medication.medicationName, keyword)));","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"nehcuy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"nehcuy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"nehcuy"},"content":"                || (other instanceof MedicationContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"nehcuy"},"content":"                \u0026\u0026 keywords.equals(((MedicationContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"nehcuy"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"nehcuy":33}},{"path":"src/main/java/seedu/address/model/person/NextOfKin.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":" * Represents a Patient\u0027s Next of Kin in the Patient Database.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNextOfKin(String)}","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"public class NextOfKin {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Next of Kin should not be blank \"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"            + \"and should come in the format: Name, Relationship, Contact\";","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Za-z\\\\s]+,[a-zA-Z\\\\s]+,[0-9\\\\s]+\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"     * @param nextOfKin A valid address.","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"    public NextOfKin(String nextOfKin) {","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"        requireNonNull(nextOfKin);","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"        checkArgument(isValidNextOfKin(nextOfKin), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"        value \u003d nextOfKin;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"     * Returns true if a given string is a valid Next of Kin.","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"    public static boolean isValidNextOfKin(String test) {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"        return \"Next of Kin: \" + value;","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"    public String getNextOfKinName() {","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"        return value.split(\",\", 3)[0].trim();","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"    public String getNextOfKinRelationship() {","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"        return value.split(\",\", 3)[1].trim();","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"    public String getNextOfKinContact() {","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"        return value.split(\",\", 3)[2].trim();","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"                || (other instanceof NextOfKin // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 value.equals(((NextOfKin) other).value)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Charles1026":16,"PeiYee88":12,"-":38}},{"path":"src/main/java/seedu/address/model/person/NextOfKinPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":" * Tests that a {@code Person}\u0027s {@code Next Of Kin Data} matches any of the keywords given.","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"public class NextOfKinPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"    private final List\u003cString\u003e patientName;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"    public NextOfKinPredicate(List\u003cString\u003e patientName) {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"        this.patientName \u003d patientName;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"        return patientName.stream()","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"                || (other instanceof NextOfKinPredicate// instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"                \u0026\u0026 patientName.equals(((NextOfKinPredicate) other).patientName)); // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"PeiYee88":30}},{"path":"src/main/java/seedu/address/model/person/PatientType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import java.util.Locale;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":" * Represents whether a patient is inpatient or outpatient in the Patient Database.","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPatientType(String)}","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"public class PatientType {","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Patient type can only be i(inpatient) or o(outpatient),\"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"            + \" and should not be blank\";","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"    public static final String DEPENDENCY_CONSTRAINTS \u003d \"Only inpatient patients can and must have a hospital wing, \"","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"            + \"floor number and ward number. \\n%1$s\";","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"    public final PatientTypes value;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"     * Constructs an {@code Hospital Wing}.","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"     * @param patientType A valid patient type.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"    public PatientType(PatientTypes patientType) {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"        requireNonNull(patientType);","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"        value \u003d patientType;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"     * Returns true if a given string is a valid Patient Type.","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"    public static boolean isValidPatientType(String test) {","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"        return PatientTypes.parsePatientType(test) !\u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"    public boolean isInpatient() {","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"        return value.equals(PatientTypes.INPATIENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"        return \"Patient Type: \" + value.name();","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"                || (other instanceof PatientType // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 value.equals(((PatientType) other).value)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"Charles1026"},"content":"     * Enum to Describe the type of patient","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"Charles1026"},"content":"    public enum PatientTypes {","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"Charles1026"},"content":"        INPATIENT {","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"Charles1026"},"content":"            @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"Charles1026"},"content":"            public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"Charles1026"},"content":"                return \"I\";","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"Charles1026"},"content":"        },","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"Charles1026"},"content":"        OUTPATIENT {","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"Charles1026"},"content":"            @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"            public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"Charles1026"},"content":"                return \"O\";","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"Charles1026"},"content":"        };","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"Charles1026"},"content":"        /**","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Charles1026"},"content":"         * Returns an {@code PatientTypes} enum.","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"Charles1026"},"content":"         *","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Charles1026"},"content":"         * @param strPatientType the string patient type to be parsed.","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"Charles1026"},"content":"         */","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Charles1026"},"content":"        public static PatientTypes parsePatientType(String strPatientType) {","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Charles1026"},"content":"            String capsPatientType \u003d strPatientType.toUpperCase(Locale.ROOT);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"Charles1026"},"content":"            PatientTypes[] patientTypes \u003d PatientTypes.values();","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"Charles1026"},"content":"            for (PatientTypes pt : patientTypes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"Charles1026"},"content":"                if (capsPatientType.equals(pt.name()) || capsPatientType.equals(pt.toString())) {","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"Charles1026"},"content":"                    return pt;","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"Charles1026"},"content":"                }","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"Charles1026"},"content":"            return null;","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Charles1026":92}},{"path":"src/main/java/seedu/address/model/person/PatientTypePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":" * Tests that a {@code Person} is of the given {@code Patient type}.","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"public class PatientTypePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"    private final PatientType.PatientTypes patientType;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"    public PatientTypePredicate(PatientType.PatientTypes patientType) {","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"        this.patientType \u003d patientType;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"        return person.getPatientType().value \u003d\u003d patientType;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"Ryan-Tan00":17}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.PastAppointment;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.UpcomingAppointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"    private final NextOfKin nextOfKin;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"    private final PatientType patientType;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"    private final Optional\u003cHospitalWing\u003e hospitalWing;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"    private final Optional\u003cFloorNumber\u003e floorNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"    private final Optional\u003cWardNumber\u003e wardNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"    private final Set\u003cMedication\u003e medications \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"kxrt"},"content":"    private final List\u003cPastAppointment\u003e pastAppointments;","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"kxrt"},"content":"    private final Optional\u003cUpcomingAppointment\u003e upcomingAppointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"    public Person(Name name, Phone phone, Email email, NextOfKin nextOfKin, PatientType patientType,","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"kxrt"},"content":"                  HospitalWing hospitalWing, FloorNumber floorNumber, WardNumber wardNumber,","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"kxrt"},"content":"                  Set\u003cMedication\u003e medications, List\u003cPastAppointment\u003e pastAppointments,","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"kxrt"},"content":"                  UpcomingAppointment upcomingAppointment) {","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"kxrt"},"content":"        requireAllNonNull(name, phone, email, nextOfKin, patientType, medications, pastAppointments);","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"        this.nextOfKin \u003d nextOfKin;","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"        this.patientType \u003d patientType;","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"        this.hospitalWing \u003d Optional.ofNullable(hospitalWing);","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"        this.floorNumber \u003d Optional.ofNullable(floorNumber);","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"        this.wardNumber \u003d Optional.ofNullable(wardNumber);","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"        this.medications.addAll(medications);","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"kxrt"},"content":"        this.pastAppointments \u003d pastAppointments;","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"kxrt"},"content":"        this.upcomingAppointment \u003d Optional.ofNullable(upcomingAppointment);","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"     * Adds input {@code PastAppointment} to stored list of {@code PastAppointment}s.","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param appt the {@code PastAppointment} to be added","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"    public void addPastAppointment(PastAppointment appt) {","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"        // TODO optimise","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"        int length \u003d pastAppointments.size();","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalDate apptDate \u003d appt.getDate();","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"kxrt"},"content":"        // if appt is equal to any current past appointment, do not add as duplicate","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"kxrt"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"kxrt"},"content":"            if (pastAppointments.get(i).equals(appt)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"kxrt"},"content":"                return;","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"kxrt"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"Ryan-Tan00"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"Ryan-Tan00"},"content":"            LocalDate currentApptDate \u003d pastAppointments.get(i).getDate();","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"Ryan-Tan00"},"content":"            if (apptDate.compareTo(currentApptDate) \u003e 0) { //apptDate is more recent than currentApptDate","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"Ryan-Tan00"},"content":"                pastAppointments.add(i, appt);","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"Ryan-Tan00"},"content":"                break;","lastModifiedDate":"2022-10-22"},{"lineNumber":81,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":82,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":83,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":84,"author":{"gitId":"Ryan-Tan00"},"content":"        if (pastAppointments.size() \u003d\u003d length) { //an appointment has not been added","lastModifiedDate":"2022-10-22"},{"lineNumber":85,"author":{"gitId":"Ryan-Tan00"},"content":"            pastAppointments.add(appt);","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"Charles1026"},"content":"    public NextOfKin getNextOfKin() {","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"Charles1026"},"content":"        return nextOfKin;","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":105,"author":{"gitId":"Charles1026"},"content":"    public PatientType getPatientType() {","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"Charles1026"},"content":"        return patientType;","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"Charles1026"},"content":"    public Optional\u003cHospitalWing\u003e getHospitalWing() {","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"Charles1026"},"content":"        return hospitalWing;","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"Charles1026"},"content":"    public Optional\u003cWardNumber\u003e getWardNumber() {","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"Charles1026"},"content":"        return wardNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"Charles1026"},"content":"    public Optional\u003cFloorNumber\u003e getFloorNumber() {","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"Charles1026"},"content":"        return floorNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"Charles1026"},"content":"    public Set\u003cMedication\u003e getMedications() {","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"Charles1026"},"content":"        return Collections.unmodifiableSet(medications);","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"kxrt"},"content":"     * Returns a string representation of the medications.","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"kxrt"},"content":"    public String getMedicationString() {","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"kxrt"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Medication: \");","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"kxrt"},"content":"        getMedications().stream().sorted(Comparator.comparing(medication -\u003e medication.medicationName))","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"kxrt"},"content":"                .forEach(medication -\u003e sb.append(medication.medicationName).append(\", \"));","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"kxrt"},"content":"        // remove trailing comma","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"kxrt"},"content":"        sb.delete(sb.length() - 2, sb.length());","lastModifiedDate":"2022-10-24"},{"lineNumber":138,"author":{"gitId":"kxrt"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":142,"author":{"gitId":"Ryan-Tan00"},"content":"     * Returns list of {@code PastAppointment}s tagged to this patient.","lastModifiedDate":"2022-10-18"},{"lineNumber":143,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return the list of {@code PastAppointment}s","lastModifiedDate":"2022-10-18"},{"lineNumber":144,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":145,"author":{"gitId":"Ryan-Tan00"},"content":"    public List\u003cPastAppointment\u003e getPastAppointments() {","lastModifiedDate":"2022-10-18"},{"lineNumber":146,"author":{"gitId":"Ryan-Tan00"},"content":"        return pastAppointments;","lastModifiedDate":"2022-10-18"},{"lineNumber":147,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":148,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":149,"author":{"gitId":"Ryan-Tan00"},"content":"    public Optional\u003cUpcomingAppointment\u003e getUpcomingAppointment() {","lastModifiedDate":"2022-10-18"},{"lineNumber":150,"author":{"gitId":"Ryan-Tan00"},"content":"        return upcomingAppointment;","lastModifiedDate":"2022-10-18"},{"lineNumber":151,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":152,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":153,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":154,"author":{"gitId":"Ryan-Tan00"},"content":"     * Returns count of {@code PastAppointment}s to this patient.","lastModifiedDate":"2022-10-18"},{"lineNumber":155,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return the count of {@code PastAppointment}s","lastModifiedDate":"2022-10-18"},{"lineNumber":156,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":157,"author":{"gitId":"Ryan-Tan00"},"content":"    public int getPastAppointmentCount() {","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"Ryan-Tan00"},"content":"        return pastAppointments.size();","lastModifiedDate":"2022-10-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"Charles1026"},"content":"        boolean isEqual \u003d otherPerson.getName().equals(getName())","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":192,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 otherPerson.getNextOfKin().equals(getNextOfKin())","lastModifiedDate":"2022-10-05"},{"lineNumber":193,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 otherPerson.getPatientType().equals(getPatientType())","lastModifiedDate":"2022-10-05"},{"lineNumber":194,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 otherPerson.getMedications().equals(getMedications());","lastModifiedDate":"2022-10-05"},{"lineNumber":195,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":196,"author":{"gitId":"Charles1026"},"content":"        if (otherPerson.getPatientType().isInpatient() \u0026\u0026 getPatientType().isInpatient()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":197,"author":{"gitId":"Charles1026"},"content":"            isEqual \u003d isEqual \u0026\u0026 otherPerson.getHospitalWing().equals(getHospitalWing())","lastModifiedDate":"2022-10-06"},{"lineNumber":198,"author":{"gitId":"Charles1026"},"content":"                    \u0026\u0026 otherPerson.getFloorNumber().equals(getFloorNumber())","lastModifiedDate":"2022-10-06"},{"lineNumber":199,"author":{"gitId":"Charles1026"},"content":"                    \u0026\u0026 otherPerson.getWardNumber().equals(getWardNumber());","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"kxrt"},"content":"        List\u003cPastAppointment\u003e otherPastAppointments \u003d otherPerson.getPastAppointments();","lastModifiedDate":"2022-10-25"},{"lineNumber":202,"author":{"gitId":"kxrt"},"content":"        if (otherPastAppointments \u003d\u003d null \u0026\u0026 pastAppointments \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":203,"author":{"gitId":"kxrt"},"content":"            isEqual \u003d isEqual \u0026\u0026 true;","lastModifiedDate":"2022-10-25"},{"lineNumber":204,"author":{"gitId":"kxrt"},"content":"        } else if (otherPastAppointments \u003d\u003d null || pastAppointments \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":205,"author":{"gitId":"kxrt"},"content":"            isEqual \u003d isEqual \u0026\u0026 false;","lastModifiedDate":"2022-10-25"},{"lineNumber":206,"author":{"gitId":"kxrt"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":207,"author":{"gitId":"kxrt"},"content":"            isEqual \u003d isEqual \u0026\u0026 otherPastAppointments.size() \u003d\u003d pastAppointments.size();","lastModifiedDate":"2022-10-25"},{"lineNumber":208,"author":{"gitId":"kxrt"},"content":"            for (int i \u003d 0; i \u003c pastAppointments.size(); i++) {","lastModifiedDate":"2022-10-25"},{"lineNumber":209,"author":{"gitId":"kxrt"},"content":"                isEqual \u003d isEqual \u0026\u0026 otherPastAppointments.get(i).equals(pastAppointments.get(i));","lastModifiedDate":"2022-10-25"},{"lineNumber":210,"author":{"gitId":"kxrt"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":211,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":212,"author":{"gitId":"Charles1026"},"content":"        return isEqual;","lastModifiedDate":"2022-10-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":218,"author":{"gitId":"Charles1026"},"content":"        return Objects.hash(name, phone, email, nextOfKin, patientType, hospitalWing,","lastModifiedDate":"2022-10-05"},{"lineNumber":219,"author":{"gitId":"Charles1026"},"content":"                floorNumber, wardNumber, medications);","lastModifiedDate":"2022-10-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":230,"author":{"gitId":"Charles1026"},"content":"                .append(\"; Next of Kin: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":231,"author":{"gitId":"Charles1026"},"content":"                .append(getNextOfKin())","lastModifiedDate":"2022-10-05"},{"lineNumber":232,"author":{"gitId":"Charles1026"},"content":"                .append(\"; Patient Type: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":233,"author":{"gitId":"Charles1026"},"content":"                .append(getPatientType());","lastModifiedDate":"2022-10-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":235,"author":{"gitId":"Charles1026"},"content":"        if (getPatientType().isInpatient()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":236,"author":{"gitId":"Charles1026"},"content":"            builder.append(\"; Hospital Wing: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":237,"author":{"gitId":"Charles1026"},"content":"                    .append(getHospitalWing())","lastModifiedDate":"2022-10-05"},{"lineNumber":238,"author":{"gitId":"Charles1026"},"content":"                    .append(\"; Floor Number: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":239,"author":{"gitId":"Charles1026"},"content":"                    .append(getFloorNumber())","lastModifiedDate":"2022-10-05"},{"lineNumber":240,"author":{"gitId":"Charles1026"},"content":"                    .append(\"; Ward Number: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":241,"author":{"gitId":"Charles1026"},"content":"                    .append(getWardNumber());","lastModifiedDate":"2022-10-05"},{"lineNumber":242,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":243,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":245,"author":{"gitId":"Charles1026"},"content":"        Set\u003cMedication\u003e tags \u003d getMedications();","lastModifiedDate":"2022-10-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":247,"author":{"gitId":"Charles1026"},"content":"            builder.append(\"; Medications: \");","lastModifiedDate":"2022-10-05"},{"lineNumber":248,"author":{"gitId":"kxrt"},"content":"            tags.forEach(tag -\u003e builder.append(tag.medicationName).append(\", \"));","lastModifiedDate":"2022-10-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":250,"author":{"gitId":"kxrt"},"content":"        builder.append(\"; Past Appointments: \").append(getPastAppointmentCount());","lastModifiedDate":"2022-10-13"},{"lineNumber":251,"author":{"gitId":"kxrt"},"content":"        builder.append(\" Upcoming Appointment: \").append(getUpcomingAppointment());","lastModifiedDate":"2022-10-14"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":256,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Charles1026":61,"PeiYee88":1,"-":110,"kxrt":45,"Ryan-Tan00":39}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"        return \"Phone: \" + value;","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Charles1026":1,"-":52}},{"path":"src/main/java/seedu/address/model/person/WardNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":" * Represents the Ward Number of a patient in the database.","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidWardNumber(String)}","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"public class WardNumber {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Ward Number is one alphabet followed by a 3 digit number for \"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"            + \"inpatient patients and blank for outpatient patients\";","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":"    /*","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"    * The first character of the ward number must be an alphabet,","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":"    * and the rest must be a 3 digit number.","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"    */","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Z]\\\\d{3}$\";","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"nehcuy"},"content":"    public final String value;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"     * Constructs an {@code Ward Number}.","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"     * @param wardNumber A valid ward number.","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"nehcuy"},"content":"    public WardNumber(String wardNumber) {","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"nehcuy"},"content":"        requireNonNull(wardNumber);","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"        checkArgument(isValidWardNumber(wardNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"        value \u003d wardNumber;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"     * Returns true if a given string is a valid ward number.","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"nehcuy"},"content":"    public static boolean isValidWardNumber(String test) {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"nehcuy"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"nehcuy"},"content":"        return \"Ward: \" + value;","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"                || (other instanceof WardNumber // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 value.equals(((WardNumber) other).value)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"nehcuy":17,"Charles1026":39}},{"path":"src/main/java/seedu/address/model/person/WardNumberPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nehcuy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"nehcuy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"nehcuy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"nehcuy"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"nehcuy"},"content":" * Tests that a {@code Person}\u0027s {@code Ward Number} matches any of the ward numbers given.","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"nehcuy"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"nehcuy"},"content":"public class WardNumberPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"nehcuy"},"content":"    private final List\u003cString\u003e wardNumbers;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"nehcuy"},"content":"    public WardNumberPredicate(List\u003cString\u003e wardNumbers) {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"nehcuy"},"content":"        this.wardNumbers \u003d wardNumbers;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"nehcuy"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"        Boolean isInpatient \u003d person.getPatientType().value.equals(PatientType.PatientTypes.INPATIENT);","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"        if (isInpatient) {","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"nehcuy"},"content":"            return wardNumbers.stream()","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"                    .anyMatch(wardNumber -\u003e person.getWardNumber().get().value.equals(wardNumber));","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"        return false;","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"nehcuy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"nehcuy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"nehcuy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"nehcuy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"nehcuy"},"content":"                || (other instanceof WardNumberPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"nehcuy"},"content":"                \u0026\u0026 wardNumbers.equals(((WardNumberPredicate) other).wardNumbers)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"nehcuy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"nehcuy"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"nehcuy":28,"PeiYee88":5}},{"path":"src/main/java/seedu/address/model/tag/Medication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"import java.util.Locale;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":" * Represents a Medication of a patient in the database.","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidMedicationName(String)}","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"public class Medication {","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Medication names should be alphanumeric and spaces only\";","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Za-z0-9\\\\s]+\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"    public final String medicationName;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"     * @param medicationName A valid medication name.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"    public Medication(String medicationName) {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"        requireNonNull(medicationName);","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"        checkArgument(isValidMedicationName(medicationName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"        this.medicationName \u003d medicationName.toLowerCase(Locale.ENGLISH);","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"    public static boolean isValidMedicationName(String test) {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"                || (other instanceof Medication // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 medicationName.equals(((Medication) other).medicationName)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"        return medicationName.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"        return \u0027[\u0027 + medicationName + \u0027]\u0027;","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Charles1026":50,"kxrt":5}},{"path":"src/main/java/seedu/address/model/tag/MedicationMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"import static seedu.address.logic.commands.CountCommand.EACH_MEDICATION_COUNT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"import static seedu.address.logic.commands.CountCommand.MEDICATION_COUNT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":" * Encapsulates a map of medications and the number of times they have been assigned to patients.","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"public class MedicationMap {","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"    public static final String COUNT_BY_MEDICATION \u003d \"Patient count by medication:\";","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"    // used internally here to separate medication and count when resetting the address book","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"    private static final String SEPARATOR \u003d \" /-/-/ \";","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"    private final ObservableMap\u003cString, Integer\u003e medicationMap \u003d FXCollections.observableHashMap();","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"     * Adds a medication to the medication map.","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"     * @param medication The medication to be added.","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"    public void add(Medication medication) {","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"        medicationMap.putIfAbsent(medication.medicationName, 0);","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"        medicationMap.put(medication.medicationName, medicationMap.get(medication.medicationName) + 1);","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"     * Removes a medication from the medication map.","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"kxrt"},"content":"     * @param medication The medication to be removed.","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"kxrt"},"content":"    public void remove(Medication medication) {","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"        if (medicationMap.containsKey(medication.medicationName)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"kxrt"},"content":"            medicationMap.put(medication.medicationName, medicationMap.get(medication.medicationName) - 1);","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"kxrt"},"content":"        medicationMap.entrySet().removeIf(entry -\u003e entry.getValue() \u003c\u003d 0);","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"kxrt"},"content":"     * Adds a person\u0027s medications to the medication map.","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"kxrt"},"content":"     * @param patient The person whose medications are to be added.","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"kxrt"},"content":"    public void addMedicationsOfPatient(Person patient) {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"kxrt"},"content":"        patient.getMedications().forEach(this::add);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"kxrt"},"content":"     * Clears the medication map of medications allocated to the patient.","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"kxrt"},"content":"     * @param patient The patient to be removed.","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"kxrt"},"content":"    public void clearMedicationsOfPatient(Person patient) {","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"kxrt"},"content":"        patient.getMedications().forEach(this::remove);","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"kxrt"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"kxrt"},"content":"    public String toString() {","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"kxrt"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"kxrt"},"content":"        sb.append(\"\\n\").append(String.format(MEDICATION_COUNT, medicationMap.size()));","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"kxrt"},"content":"        sb.append(\"\\n\").append(COUNT_BY_MEDICATION);","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"kxrt"},"content":"        medicationMap.keySet().stream().sorted()","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"kxrt"},"content":"                .forEach(medication -\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"kxrt"},"content":"                        sb.append(\"\\n   \")","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"kxrt"},"content":"                                .append(String.format(EACH_MEDICATION_COUNT,","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"kxrt"},"content":"                                        medication, medicationMap.get(medication))));","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"kxrt"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"kxrt"},"content":"     * Sets the medication map to the given map.","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"kxrt"},"content":"    public void setStringifiedMedicationMap(String stringifiedMedicationMap) {","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"kxrt"},"content":"        medicationMap.clear();","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"kxrt"},"content":"        String[] medicationArray \u003d stringifiedMedicationMap.split(SEPARATOR);","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"kxrt"},"content":"        if (medicationArray.length \u003d\u003d 1 \u0026\u0026 medicationArray[0].equals(\"\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"kxrt"},"content":"            return;","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"kxrt"},"content":"        for (int i \u003d 0; i \u003c medicationArray.length; i +\u003d 2) {","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"kxrt"},"content":"            medicationMap.put(medicationArray[i], Integer.parseInt(medicationArray[i + 1]));","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"kxrt"},"content":"     * Returns a stringified version of the medication map.","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"kxrt"},"content":"    public String getStringifiedMedicationMap() {","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"kxrt"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"kxrt"},"content":"        medicationMap.keySet().stream().sorted()","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"kxrt"},"content":"                .forEach(medication -\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"kxrt"},"content":"                        sb.append(medication)","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"kxrt"},"content":"                                .append(SEPARATOR)","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"kxrt"},"content":"                                .append(medicationMap.get(medication))","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"kxrt"},"content":"                                .append(SEPARATOR));","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"kxrt"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"kxrt"},"content":"     * Updates the medication map to data from the list of persons.","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"kxrt"},"content":"     * @param persons The list of persons to be updated.","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"kxrt"},"content":"    public void updateMedicationMap(List\u003cPerson\u003e persons) {","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"kxrt"},"content":"        medicationMap.clear();","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"kxrt"},"content":"        persons.forEach(this::addMedicationsOfPatient);","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"kxrt":106}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.PastAppointment;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.UpcomingAppointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.FloorNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.HospitalWing;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType.PatientTypes;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.WardNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"                    new NextOfKin(\"Kwee Yeoh, Husband, 91912626\"), new PatientType(PatientTypes.INPATIENT),","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"nehcuy"},"content":"                    new HospitalWing(\"South\"), new FloorNumber(10), new WardNumber(\"D312\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"                    getMedicationSet(\"Paracetamol\", \"IV Drip\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"kxrt"},"content":"                    new UpcomingAppointment(\"\")),","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"                    new NextOfKin(\"Joe Yu, Husband, 82869128\"), new PatientType(PatientTypes.OUTPATIENT),","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"kxrt"},"content":"                    null, null, null, getMedicationSet(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"kxrt"},"content":"                    new UpcomingAppointment(\"12-06-2022\")),","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"                    new NextOfKin(\"Kenneth Oliverio, Son, 81249567\"), new PatientType(PatientTypes.INPATIENT),","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"kxrt"},"content":"                    new HospitalWing(\"East\"), new FloorNumber(1), new WardNumber(\"T349\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"nehcuy"},"content":"                    getMedicationSet(), new ArrayList\u003c\u003e(), new UpcomingAppointment(\"12-06-2022\")),","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"                    new NextOfKin(\"Candince Yeo, Wife, 87598274\"), new PatientType(PatientTypes.OUTPATIENT),","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"kxrt"},"content":"                    null, null, null, getMedicationSet(\"Ibuprofen\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"kxrt"},"content":"                    new ArrayList\u003c\u003e(), new UpcomingAppointment(\"12-06-2022\")),","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"                    new NextOfKin(\"Mary Balakrishnan, Cousin, 87259826\"), new PatientType(PatientTypes.OUTPATIENT),","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"kxrt"},"content":"                    null, null, null, getMedicationSet(\"Anarax\", \"Canabeez\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"kxrt"},"content":"                    new ArrayList\u003c\u003e(), new UpcomingAppointment(\"12-06-2022\")),","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"                    new NextOfKin(\"Mary Balakrishnan, Wife, 87259826\"), new PatientType(PatientTypes.INPATIENT),","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"nehcuy"},"content":"                    new HospitalWing(\"South\"), new FloorNumber(5), new WardNumber(\"A001\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"nehcuy"},"content":"                    getMedicationSet(), new ArrayList\u003c\u003e(), new UpcomingAppointment(\"12-06-2022\"))","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"    public static Set\u003cMedication\u003e getMedicationSet(String... strings) {","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":73,"author":{"gitId":"Charles1026"},"content":"                .map(Medication::new)","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"kxrt"},"content":"     * Returns a PastAppointment created from the data given.","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"kxrt"},"content":"    public static PastAppointment getPastAppointment(String... strings) {","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"kxrt"},"content":"        return new PastAppointment(LocalDate.parse(strings[0], DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")),","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"kxrt"},"content":"                getMedicationSet(strings[1].split(\" \")), strings[2]);","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"nehcuy":4,"Charles1026":14,"PeiYee88":1,"-":44,"kxrt":21}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMedication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":" * Jackson-friendly version of {@link Medication}.","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"class JsonAdaptedMedication {","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"    private final String medicationName;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"    public JsonAdaptedMedication(String medicationName) {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"        this.medicationName \u003d medicationName;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"     * Converts a given {@code Medication} into this class for Jackson use.","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"    public JsonAdaptedMedication(Medication source) {","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"        medicationName \u003d source.medicationName;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"        return medicationName;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Medication} object.","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"    public Medication toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"        if (!Medication.isValidMedicationName(medicationName)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"            throw new IllegalValueException(Medication.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"        return new Medication(medicationName);","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Charles1026":15,"-":33}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPastAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.PastAppointment;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":" * Jackson-friendly version of {@link PastAppointment}.","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"public class JsonAdaptedPastAppointment {","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"    public static final String APPT_MISSING_FIELD_MESSAGE_FORMAT \u003d \"PastAppointment\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"    private final String pastAppointmentDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"    private final String pastAppointmentDiagnosis;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"    private final List\u003cJsonAdaptedMedication\u003e pastAppointmentMedication \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"     * Constructs a {@code JsonAdaptedPastAppointment} with the given person details.","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"    public JsonAdaptedPastAppointment(@JsonProperty(\"date\") String date,","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"kxrt"},"content":"                                      @JsonProperty(\"diagnosis\") String diagnosis,","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"kxrt"},"content":"                                      @JsonProperty(\"medication\") List\u003cJsonAdaptedMedication\u003e medication) {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"kxrt"},"content":"        this.pastAppointmentDate \u003d date;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"        this.pastAppointmentDiagnosis \u003d diagnosis;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"kxrt"},"content":"        if (medication !\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"kxrt"},"content":"            this.pastAppointmentMedication.addAll(medication);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"kxrt"},"content":"     * Converts a given {@code PastAppointment} into this class for Jackson use.","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"kxrt"},"content":"    public JsonAdaptedPastAppointment(PastAppointment source) {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"kxrt"},"content":"        this.pastAppointmentDate \u003d source.getDate().format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"kxrt"},"content":"        this.pastAppointmentDiagnosis \u003d source.getDiagnosis();","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"kxrt"},"content":"        this.pastAppointmentMedication.addAll(source.getMedication().stream()","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"kxrt"},"content":"                .map(JsonAdaptedMedication::new)","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"kxrt"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"kxrt"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code PastAppointment} object.","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"kxrt"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"kxrt"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"kxrt"},"content":"    public PastAppointment toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"kxrt"},"content":"        final List\u003cMedication\u003e personMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"kxrt"},"content":"        for (JsonAdaptedMedication medication : pastAppointmentMedication) {","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"kxrt"},"content":"            personMedications.add(medication.toModelType());","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"kxrt"},"content":"        if (pastAppointmentDate \u003d\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"kxrt"},"content":"            throw new IllegalValueException(String.format(APPT_MISSING_FIELD_MESSAGE_FORMAT, \"date\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"kxrt"},"content":"        final LocalDate modelPastAppointmentDate \u003d LocalDate.parse(pastAppointmentDate,","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"kxrt"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"kxrt"},"content":"        if (pastAppointmentMedication \u003d\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"kxrt"},"content":"            throw new IllegalValueException(String.format(APPT_MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"kxrt"},"content":"                    Medication.class.getSimpleName()));","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"kxrt"},"content":"        final Set\u003cMedication\u003e modelMedication \u003d new HashSet\u003c\u003e(personMedications);","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"kxrt"},"content":"        final String modelDiagnosis \u003d pastAppointmentDiagnosis;","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"kxrt"},"content":"        return new PastAppointment(modelPastAppointmentDate, modelMedication, modelDiagnosis);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"kxrt":76}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.PastAppointment;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.UpcomingAppointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.FloorNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.HospitalWing;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType.PatientTypes;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.WardNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"    private final String nextOfKin;","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"    private final String patientType;","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"    private final String hospitalWing;","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"    private final String floorNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"    private final String wardNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"    private final List\u003cJsonAdaptedMedication\u003e medications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"kxrt"},"content":"    private final List\u003cJsonAdaptedPastAppointment\u003e pastAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"kxrt"},"content":"    private final String upcomingAppointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"nextOfKin\") String nextOfKin,","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"                             @JsonProperty(\"patientType\") String patientType,","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"                             @JsonProperty(\"hospitalWing\") String hospitalWing,","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"                             @JsonProperty(\"floorNumber\") String floorNumber,","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"                             @JsonProperty(\"wardNumber\") String wardNumber,","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"kxrt"},"content":"                             @JsonProperty(\"medications\") List\u003cJsonAdaptedMedication\u003e medications,","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"kxrt"},"content":"                             @JsonProperty(\"pastAppointments\") List\u003cJsonAdaptedPastAppointment\u003e pastAppointments,","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"kxrt"},"content":"                             @JsonProperty(\"upcomingAppointment\") String upcomingAppointment) {","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Charles1026"},"content":"        this.nextOfKin \u003d nextOfKin;","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"Charles1026"},"content":"        this.patientType \u003d patientType;","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"        this.hospitalWing \u003d hospitalWing;","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"Charles1026"},"content":"        this.floorNumber \u003d floorNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"Charles1026"},"content":"        this.wardNumber \u003d wardNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Charles1026"},"content":"        if (medications !\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"            this.medications.addAll(medications);","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"kxrt"},"content":"        if (pastAppointments !\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"kxrt"},"content":"            this.pastAppointments.addAll(pastAppointments);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"kxrt"},"content":"        this.upcomingAppointment \u003d upcomingAppointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"Charles1026"},"content":"        nextOfKin \u003d source.getNextOfKin().value;","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"Charles1026"},"content":"        patientType \u003d source.getPatientType().value.name();","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"Charles1026"},"content":"        if (source.getHospitalWing().isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"Charles1026"},"content":"            hospitalWing \u003d source.getHospitalWing().get().value;","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"Charles1026"},"content":"        } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"Charles1026"},"content":"            hospitalWing \u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"Charles1026"},"content":"        if (source.getFloorNumber().isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"Charles1026"},"content":"            floorNumber \u003d source.getFloorNumber().get().value.toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"Charles1026"},"content":"        } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"Charles1026"},"content":"            floorNumber \u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"Charles1026"},"content":"        if (source.getWardNumber().isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"nehcuy"},"content":"            wardNumber \u003d source.getWardNumber().get().value;","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"Charles1026"},"content":"        } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"Charles1026"},"content":"            wardNumber \u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"Charles1026"},"content":"        medications.addAll(source.getMedications().stream()","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"Charles1026"},"content":"                .map(JsonAdaptedMedication::new)","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"kxrt"},"content":"        pastAppointments.addAll(source.getPastAppointments().stream()","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"kxrt"},"content":"                .map(JsonAdaptedPastAppointment::new)","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"kxrt"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"kxrt"},"content":"        if (source.getUpcomingAppointment().isPresent()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"kxrt"},"content":"            upcomingAppointment \u003d source.getUpcomingAppointment().get().value;","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"kxrt"},"content":"        } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"kxrt"},"content":"            upcomingAppointment \u003d null;","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"Charles1026"},"content":"        final List\u003cMedication\u003e personMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"Charles1026"},"content":"        for (JsonAdaptedMedication medication : medications) {","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"Charles1026"},"content":"            personMedications.add(medication.toModelType());","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"kxrt"},"content":"        final List\u003cPastAppointment\u003e personPastAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"kxrt"},"content":"        for (JsonAdaptedPastAppointment pastAppointment : pastAppointments) {","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"kxrt"},"content":"            try {","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"kxrt"},"content":"                personPastAppointments.add(pastAppointment.toModelType());","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"kxrt"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"kxrt"},"content":"                throw new IllegalValueException(UpcomingAppointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"kxrt"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"Charles1026"},"content":"            System.out.println(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"Charles1026"},"content":"        if (nextOfKin \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"Charles1026"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"Charles1026"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, NextOfKin.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"Charles1026"},"content":"        if (!NextOfKin.isValidNextOfKin(nextOfKin)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"Charles1026"},"content":"            throw new IllegalValueException(NextOfKin.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"Charles1026"},"content":"        final NextOfKin modelNextOfKin \u003d new NextOfKin(nextOfKin);","lastModifiedDate":"2022-10-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"Charles1026"},"content":"        if (patientType \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"Charles1026"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"Charles1026"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, PatientType.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"Charles1026"},"content":"        PatientTypes pt \u003d PatientTypes.parsePatientType(patientType);","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"Charles1026"},"content":"        if (pt \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"Charles1026"},"content":"            throw new IllegalValueException(NextOfKin.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"Charles1026"},"content":"        final PatientType modelPatientType \u003d new PatientType(pt);","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"Charles1026"},"content":"        if (modelPatientType.isInpatient() \u0026\u0026 hospitalWing \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"PeiYee88"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-04"},{"lineNumber":181,"author":{"gitId":"PeiYee88"},"content":"                    HospitalWing.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":182,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":183,"author":{"gitId":"Charles1026"},"content":"        if (!modelPatientType.isInpatient() \u0026\u0026 hospitalWing !\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"Charles1026"},"content":"            throw new IllegalValueException(HospitalWing.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"Charles1026"},"content":"        if (hospitalWing !\u003d null \u0026\u0026 !HospitalWing.isValidHospitalWing(hospitalWing)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"PeiYee88"},"content":"            throw new IllegalValueException(HospitalWing.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":188,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":189,"author":{"gitId":"Charles1026"},"content":"        final HospitalWing modelHospitalWing \u003d hospitalWing \u003d\u003d null ? null : new HospitalWing(hospitalWing);","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"Charles1026"},"content":"        if (modelPatientType.isInpatient() \u0026\u0026 floorNumber \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":193,"author":{"gitId":"Charles1026"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-05"},{"lineNumber":194,"author":{"gitId":"Charles1026"},"content":"                    FloorNumber.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":195,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":196,"author":{"gitId":"Charles1026"},"content":"        if (!modelPatientType.isInpatient() \u0026\u0026 floorNumber !\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":197,"author":{"gitId":"Charles1026"},"content":"            throw new IllegalValueException(FloorNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":198,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":199,"author":{"gitId":"Charles1026"},"content":"        Integer fN \u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":200,"author":{"gitId":"Charles1026"},"content":"        if (floorNumber !\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":201,"author":{"gitId":"Charles1026"},"content":"            try {","lastModifiedDate":"2022-10-05"},{"lineNumber":202,"author":{"gitId":"Charles1026"},"content":"                fN \u003d Integer.valueOf(floorNumber);","lastModifiedDate":"2022-10-05"},{"lineNumber":203,"author":{"gitId":"Charles1026"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-10-05"},{"lineNumber":204,"author":{"gitId":"Charles1026"},"content":"                throw new IllegalValueException(FloorNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":205,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":206,"author":{"gitId":"Charles1026"},"content":"            if (!FloorNumber.isValidFloorNumber(fN)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"Charles1026"},"content":"                throw new IllegalValueException(FloorNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":208,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":209,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":210,"author":{"gitId":"Charles1026"},"content":"        final FloorNumber modelFloorNumber \u003d floorNumber \u003d\u003d null ? null : new FloorNumber(fN);","lastModifiedDate":"2022-10-05"},{"lineNumber":211,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":212,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":213,"author":{"gitId":"Charles1026"},"content":"        if (modelPatientType.isInpatient() \u0026\u0026 wardNumber \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":214,"author":{"gitId":"Charles1026"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-05"},{"lineNumber":215,"author":{"gitId":"Charles1026"},"content":"                    WardNumber.class.getSimpleName()));","lastModifiedDate":"2022-10-05"},{"lineNumber":216,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":217,"author":{"gitId":"Charles1026"},"content":"        if (!modelPatientType.isInpatient() \u0026\u0026 wardNumber !\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":218,"author":{"gitId":"Charles1026"},"content":"            throw new IllegalValueException(WardNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":219,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":220,"author":{"gitId":"nehcuy"},"content":"        if (wardNumber !\u003d null \u0026\u0026 !WardNumber.isValidWardNumber(wardNumber)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":221,"author":{"gitId":"Charles1026"},"content":"            throw new IllegalValueException(WardNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":222,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":223,"author":{"gitId":"nehcuy"},"content":"        final WardNumber modelWardNumber \u003d wardNumber \u003d\u003d null ? null : new WardNumber(wardNumber);","lastModifiedDate":"2022-10-16"},{"lineNumber":224,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":225,"author":{"gitId":"Charles1026"},"content":"        final Set\u003cMedication\u003e modelMedication \u003d new HashSet\u003c\u003e(personMedications);","lastModifiedDate":"2022-10-05"},{"lineNumber":226,"author":{"gitId":"kxrt"},"content":"        final List\u003cPastAppointment\u003e modelPastAppointments \u003d new ArrayList\u003c\u003e(personPastAppointments);","lastModifiedDate":"2022-10-13"},{"lineNumber":227,"author":{"gitId":"kxrt"},"content":"        final UpcomingAppointment modelUpcomingAppointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":228,"author":{"gitId":"kxrt"},"content":"        if (upcomingAppointment \u003d\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":229,"author":{"gitId":"kxrt"},"content":"            modelUpcomingAppointment \u003d new UpcomingAppointment((LocalDate) null);","lastModifiedDate":"2022-10-14"},{"lineNumber":230,"author":{"gitId":"kxrt"},"content":"        } else if (!UpcomingAppointment.isValidDate(upcomingAppointment)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":231,"author":{"gitId":"kxrt"},"content":"            throw new IllegalValueException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":232,"author":{"gitId":"kxrt"},"content":"        } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":233,"author":{"gitId":"kxrt"},"content":"            modelUpcomingAppointment \u003d new UpcomingAppointment(upcomingAppointment);","lastModifiedDate":"2022-10-14"},{"lineNumber":234,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":236,"author":{"gitId":"Charles1026"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelNextOfKin, modelPatientType,","lastModifiedDate":"2022-10-05"},{"lineNumber":237,"author":{"gitId":"kxrt"},"content":"                modelHospitalWing, modelFloorNumber, modelWardNumber, modelMedication, modelPastAppointments,","lastModifiedDate":"2022-10-14"},{"lineNumber":238,"author":{"gitId":"kxrt"},"content":"                modelUpcomingAppointment);","lastModifiedDate":"2022-10-14"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nehcuy":3,"Charles1026":98,"PeiYee88":10,"-":89,"kxrt":40}},{"path":"src/main/java/seedu/address/ui/ContactCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"public class ContactCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"    private static final String FXML \u003d \"ContactListCard.fxml\";","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"    public final Person person;","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"    private Label name;","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"    private Label id;","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"    private Label nextOfKinName;","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"    private Label nextOfKinPhone;","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"    private Label nextOfKinRelationship;","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"    public ContactCard(Person person, int displayedIndex) {","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"        super(FXML);","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"        this.person \u003d person;","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"        nextOfKinName.setText(person.getNextOfKin().getNextOfKinName());","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"        nextOfKinPhone.setText(person.getNextOfKin().getNextOfKinContact());","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"        nextOfKinRelationship.setText(person.getNextOfKin().getNextOfKinRelationship());","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"     * Generates a Contact card of the given person.","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"     * @param person person to generate contact card from.","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"    public ContactCard(Person person) {","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"        this(person, 0);","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"        id.setVisible(false);","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"Charles1026"},"content":"        name.setVisible(false);","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"            return true;","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"PeiYee88"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"PeiYee88"},"content":"        if (!(other instanceof ContactCard)) {","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"PeiYee88"},"content":"            return false;","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"PeiYee88"},"content":"        // state check","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"PeiYee88"},"content":"        ContactCard card \u003d (ContactCard) other;","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"PeiYee88"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"PeiYee88"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"Charles1026":10,"PeiYee88":69}},{"path":"src/main/java/seedu/address/ui/CountWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":" * Controller for a help page","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"public class CountWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CountWindow.class);","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"    private static final String FXML \u003d \"CountWindow.fxml\";","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"    private Button copyButton;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"    private Label countMessage;","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"kxrt"},"content":"    public CountWindow(Stage root) {","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"kxrt"},"content":"        super(FXML, root);","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"kxrt"},"content":"     * Creates a new CountWindow.","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"kxrt"},"content":"    public CountWindow(String countMessage) {","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"kxrt"},"content":"        this(new Stage());","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"kxrt"},"content":"        this.countMessage.setText(countMessage);","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"kxrt"},"content":"     * Shows the help window.","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"kxrt"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"kxrt"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"kxrt"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"kxrt"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"kxrt"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"kxrt"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"kxrt"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"kxrt"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"kxrt"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"kxrt"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"kxrt"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"kxrt"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"kxrt"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"kxrt"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"kxrt"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"kxrt"},"content":"    public void show() {","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"kxrt"},"content":"        logger.fine(\"Showing count page.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"kxrt"},"content":"        getRoot().show();","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"kxrt"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"kxrt"},"content":"     * Returns true if the count window is currently being shown.","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"kxrt"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"kxrt"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"kxrt"},"content":"     * Hides the count window.","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"kxrt"},"content":"    public void hide() {","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"kxrt"},"content":"        getRoot().hide();","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"kxrt"},"content":"     * Focuses on the count window.","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"kxrt"},"content":"    public void focus() {","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"kxrt"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"kxrt"},"content":"     * Copies the count to the user guide to the clipboard.","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"kxrt"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"kxrt"},"content":"    private void copyCount() {","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"kxrt"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"kxrt"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"kxrt"},"content":"        url.putString(countMessage.getText());","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"kxrt"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"kxrt":99}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.commands.GetCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.commands.getcommands.GetNextOfKinCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"    private StackPane personViewPanelPlaceholder;","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"PeiYee88"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), false);","lastModifiedDate":"2022-10-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"Ryan-Tan00"},"content":"        // TODO add detailed person card implementation","lastModifiedDate":"2022-10-25"},{"lineNumber":131,"author":{"gitId":"Charles1026"},"content":"        handleView();","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":179,"author":{"gitId":"kxrt"},"content":"     * Opens the count window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-10-24"},{"lineNumber":180,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":181,"author":{"gitId":"kxrt"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":182,"author":{"gitId":"kxrt"},"content":"    public void handleCount() {","lastModifiedDate":"2022-10-24"},{"lineNumber":183,"author":{"gitId":"kxrt"},"content":"        CountWindow countWindow \u003d new CountWindow(logic.getCensus());","lastModifiedDate":"2022-10-24"},{"lineNumber":184,"author":{"gitId":"kxrt"},"content":"        countWindow.show();","lastModifiedDate":"2022-10-24"},{"lineNumber":185,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":186,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":187,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"Charles1026"},"content":"     * Updates the detailed person view panel with the newest info.","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"Charles1026"},"content":"    public void handleView() {","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"Charles1026"},"content":"        PersonViewPanel personViewPanel \u003d new PersonViewPanel(logic.getCurrentlyViewedPerson());","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"Charles1026"},"content":"        personViewPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-10-27"},{"lineNumber":194,"author":{"gitId":"Charles1026"},"content":"        personViewPanelPlaceholder.getChildren().setAll(personViewPanel.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"PeiYee88"},"content":"            if (commandText.contains(GetCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":209,"author":{"gitId":"PeiYee88"},"content":"                    + GetNextOfKinCommand.NEXT_OF_KIN_PREFIX)) {","lastModifiedDate":"2022-10-22"},{"lineNumber":210,"author":{"gitId":"PeiYee88"},"content":"                personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), true);","lastModifiedDate":"2022-10-22"},{"lineNumber":211,"author":{"gitId":"PeiYee88"},"content":"                personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2022-10-22"},{"lineNumber":212,"author":{"gitId":"PeiYee88"},"content":"            } else {","lastModifiedDate":"2022-10-22"},{"lineNumber":213,"author":{"gitId":"PeiYee88"},"content":"                personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), false);","lastModifiedDate":"2022-10-22"},{"lineNumber":214,"author":{"gitId":"PeiYee88"},"content":"                personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2022-10-22"},{"lineNumber":215,"author":{"gitId":"PeiYee88"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":216,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"kxrt"},"content":"            if (commandResult.isShowCount()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":226,"author":{"gitId":"kxrt"},"content":"                handleCount();","lastModifiedDate":"2022-10-24"},{"lineNumber":227,"author":{"gitId":"kxrt"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":228,"author":{"gitId":"Charles1026"},"content":"            handleView();","lastModifiedDate":"2022-10-26"},{"lineNumber":229,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Charles1026":16,"PeiYee88":12,"-":195,"kxrt":12,"Ryan-Tan00":2}},{"path":"src/main/java/seedu/address/ui/PastAppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.appointment.PastAppointment;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":" * Creates a {@code PastAppointmentCard} with the given {@code PastAppointment} and index to display.","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"public class PastAppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"    private static final String FXML \u003d \"PastAppointmentCard.fxml\";","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"    private static final String DATE_FORMAT \u003d \"Date: %s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"    private static final String DIAGNOSIS_FORMAT \u003d \"Diagnosis: %s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"    private static final String MEDICATION_FORMAT \u003d \"Medication: %s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"    public final PastAppointment pastAppointment;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"    private Label id;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"    private Label date;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"    private Label diagnosis;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"    private FlowPane medications;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"     * Generates a past appointment card.","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"     * @param pastAppointment Past appointment to display.","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"     * @param displayedIndex Index of the past appointment.","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"    public PastAppointmentCard(PastAppointment pastAppointment, int displayedIndex) {","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"        super(FXML);","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"        this.pastAppointment \u003d pastAppointment;","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"        date.setText(String.format(DATE_FORMAT, pastAppointment.getDate()));","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"        diagnosis.setText(String.format(DIAGNOSIS_FORMAT, pastAppointment.getDiagnosis()));","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"        if (pastAppointment.getMedication().size() \u003e 0) {","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"            Label meds \u003d new Label(pastAppointment.getMedicationString());","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"            meds.applyCss();","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"            medications.getChildren().add(meds);","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"        return (other \u003d\u003d this)","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"                || ((other instanceof PastAppointmentCard)","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"                \u0026\u0026 pastAppointment.equals(((PastAppointmentCard) other).pastAppointment));","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"Charles1026":53}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"    private Label patientType;","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"    private Label upcomingAppointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"        patientType.setText(person.getPatientType().toString());","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"kxrt"},"content":"        person.getUpcomingAppointment().ifPresentOrElse(ua -\u003e upcomingAppointment.setText(ua.toString()), () -\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"kxrt"},"content":"                upcomingAppointment.setVisible(false));","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Charles1026":2,"-":62,"kxrt":3}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, Boolean isNextOfKin) {","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"        if (!isNextOfKin) {","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"        } else {","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"            personListView.setItems(personList);","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"            personListView.setCellFactory(listView -\u003e new ContactListViewCell());","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code ContactCard}.","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"    class ContactListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"        @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"                setText(null);","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"            } else {","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"                setGraphic(new ContactCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"PeiYee88"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"PeiYee88":24,"-":48,"kxrt":1}},{"path":"src/main/java/seedu/address/ui/PersonViewPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import com.sun.javafx.collections.ObservableListWrapper;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.appointment.PastAppointment;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":" * Panel which has the detailed view of a patient.","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"public class PersonViewPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"    private static final String FXML \u003d \"PersonViewPanel.fxml\";","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"    private final Person person;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"    private Label name;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"    private Label email;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"    private Label phone;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"    private Label nokName;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"    private Label nokRelationship;","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"    private Label nokContact;","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"    private Label patientType;","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"    private Label hospitalWing;","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"    private Label floorNumber;","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"    private Label wardNumber;","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"    private Label upcomingAppointment;","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"    private ListView\u003cPastAppointment\u003e pastAppointments;","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"Charles1026"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"Charles1026"},"content":"    private FlowPane medications;","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"Charles1026"},"content":"     * Generates a Person View Panel.","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"Charles1026"},"content":"     * @param person Person to generate the panel about.","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"Charles1026"},"content":"    public PersonViewPanel(Person person) {","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"Charles1026"},"content":"        super(FXML);","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"Charles1026"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"Charles1026"},"content":"            this.person \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"Charles1026"},"content":"            return;","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"Charles1026"},"content":"        this.person \u003d person;","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"Charles1026"},"content":"        setPersonalDetails();","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"Charles1026"},"content":"        setHospitalisationDetails();","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"Charles1026"},"content":"        setAppointmentDetails();","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"Charles1026"},"content":"    private void setPersonalDetails() {","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"Charles1026"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"Charles1026"},"content":"        email.setText(person.getEmail().toString());","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"Charles1026"},"content":"        phone.setText(person.getPhone().toString());","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"Charles1026"},"content":"        ContactCard contactCard \u003d new ContactCard(person);","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"Charles1026"},"content":"        nokName.setText(\"Name: \" + person.getNextOfKin().getNextOfKinName());","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"Charles1026"},"content":"        nokRelationship.setText(\"Relationship: \" + person.getNextOfKin().getNextOfKinRelationship());","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"Charles1026"},"content":"        nokContact.setText(\"Contact: \" + person.getNextOfKin().getNextOfKinContact());","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"Charles1026"},"content":"        if (person.getMedications().size() \u003e 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"Charles1026"},"content":"            medications.getChildren().add(new Label(person.getMedicationString()));","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"Charles1026"},"content":"    private void setHospitalisationDetails() {","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"Charles1026"},"content":"        patientType.setText(person.getPatientType().toString());","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"Charles1026"},"content":"        person.getHospitalWing().ifPresentOrElse(hw -\u003e hospitalWing.setText(hw.toString()), () -\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"Charles1026"},"content":"                hospitalWing.setVisible(false));","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"Charles1026"},"content":"        person.getFloorNumber().ifPresentOrElse(fn -\u003e floorNumber.setText(fn.toString()), () -\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"Charles1026"},"content":"                floorNumber.setVisible(false));","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"Charles1026"},"content":"        person.getWardNumber().ifPresentOrElse(wn -\u003e wardNumber.setText(wn.toString()), () -\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"Charles1026"},"content":"                wardNumber.setVisible(false));","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"Charles1026"},"content":"    private void setAppointmentDetails() {","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"Charles1026"},"content":"        upcomingAppointment.setText(person.getUpcomingAppointment().get().toString());","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"Charles1026"},"content":"        ObservableList\u003cPastAppointment\u003e pastAppointmentsObservableList \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"Charles1026"},"content":"                new ObservableListWrapper\u003c\u003e(person.getPastAppointments());","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"Charles1026"},"content":"        pastAppointments.setItems(pastAppointmentsObservableList);","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"Charles1026"},"content":"        pastAppointments.setCellFactory(item -\u003e new PastAppointmentListViewCell());","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"Charles1026"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"Charles1026"},"content":"    class PastAppointmentListViewCell extends ListCell\u003cPastAppointment\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"Charles1026"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"Charles1026"},"content":"        protected void updateItem(PastAppointment pastAppointment, boolean empty) {","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"Charles1026"},"content":"            super.updateItem(pastAppointment, empty);","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"Charles1026"},"content":"            if (empty || pastAppointment \u003d\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"Charles1026"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"Charles1026"},"content":"                setText(null);","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"Charles1026"},"content":"            } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"Charles1026"},"content":"                setGraphic(new PastAppointmentCard(pastAppointment, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"Charles1026":125}},{"path":"src/main/resources/view/ContactListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"            \u003cLabel fx:id\u003d\"nextOfKinName\" styleClass\u003d\"cell_small_label\" text\u003d\"name + \\$nextOfKinName\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"            \u003cLabel fx:id\u003d\"nextOfKinRelationship\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nextOfKinRelationship\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"            \u003cLabel fx:id\u003d\"nextOfKinPhone\" styleClass\u003d\"cell_small_label\" text\u003d\"phone + \\$nextOfKinPhone\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"PeiYee88":34}},{"path":"src/main/resources/view/CountWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"#copyButton, #countMessage {","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"#copyButton {","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"#copyButton:hover {","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"#copyButton:armed {","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"#countMessageContainer {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: derive(#C6D8D3, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"PeiYee88":2,"kxrt":17}},{"path":"src/main/resources/view/CountWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Count\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"  \u003cicons\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"  \u003cscene\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"    \u003cScene\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"        \u003cURL value\u003d\"@CountWindow.css\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"countMessageContainer\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"          \u003cLabel fx:id\u003d\"countMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyCount\" text\u003d\"Copy\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"kxrt"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"kxrt"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"kxrt"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"kxrt"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"kxrt"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"kxrt"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"kxrt"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"kxrt"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"kxrt"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"kxrt"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"kxrt"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"kxrt"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"kxrt":44}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"    -fx-base: #C6D8D3;","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"    -fx-control-inner-background: #C6D8D3;","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: #C6D8D3;","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: derive(#C6D8D3, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: derive(#C6D8D3, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: derive(#C6D8D3, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: #F7EBEC;","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: #F7EBEC;","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: #DDBDDF;","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"PeiYee88"},"content":"    -fx-border-color: #F2C57C;","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"PeiYee88"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"Charles1026"},"content":".cell_small_label_hidden {","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"Charles1026"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"Charles1026"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"Charles1026"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":142,"author":{"gitId":"PeiYee88"},"content":"     -fx-background-color: derive(#F7EBEC, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":146,"author":{"gitId":"PeiYee88"},"content":"     -fx-background-color: derive(#1D1E2C, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"PeiYee88"},"content":"     -fx-border-color: derive(#C6D8D3, 10%);","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"PeiYee88"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"PeiYee88"},"content":"    -fx-text-fill: white !important;","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: derive(#F7EBEC, 30%);","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"PeiYee88"},"content":"    -fx-border-color: derive(#c1e3da, 25%);","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"PeiYee88"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: derive(#DDBDD5, 30%);","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"PeiYee88"},"content":"    -fx-border-color: derive(#DDBDD5, 30%);","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":190,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: derive(#DDBDD5, 30%);","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: derive(#DDBDD5, 50%);","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: derive(#1D1E2C, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: #c1e3da;","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: #c1e3da;","lastModifiedDate":"2022-10-27"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: #F7EBEC;","lastModifiedDate":"2022-10-27"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: #F7EBEC;","lastModifiedDate":"2022-10-27"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"PeiYee88"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-27"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":291,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: derive(#DDBDD5, 40%);","lastModifiedDate":"2022-10-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: derive(#DDBDD5, 70%);","lastModifiedDate":"2022-10-27"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: transparent #F7EBEC transparent #F7EBEC;","lastModifiedDate":"2022-10-27"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"PeiYee88"},"content":"    -fx-border-color: #c1e3da #c1e3da #ffffff #c1e3da;","lastModifiedDate":"2022-10-27"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"PeiYee88"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-27"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"PeiYee88"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-27"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: transparent, #F7EBEC, transparent,#F7EBEC;","lastModifiedDate":"2022-10-27"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: pink;","lastModifiedDate":"2022-10-27"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":360,"author":{"gitId":"PeiYee88"},"content":"#hospitalWing .label {","lastModifiedDate":"2022-10-04"},{"lineNumber":361,"author":{"gitId":"PeiYee88"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-04"},{"lineNumber":362,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: #9F2B68;","lastModifiedDate":"2022-10-04"},{"lineNumber":363,"author":{"gitId":"PeiYee88"},"content":"    -fx-padding: 0 3 1 3;","lastModifiedDate":"2022-10-04"},{"lineNumber":364,"author":{"gitId":"PeiYee88"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-04"},{"lineNumber":365,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-04"},{"lineNumber":366,"author":{"gitId":"PeiYee88"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-04"},{"lineNumber":367,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Charles1026":6,"PeiYee88":46,"-":315}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"    -fx-background: #C6D8D3;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"PeiYee88":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: #DDBDD5;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"    -fx-background-color: derive(#c1e3da, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"PeiYee88":3,"-":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"         title\u003d\"Address App\" minWidth\u003d\"720\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"        \u003cHBox styleClass\u003d\"pane-with-border\" VBox.vgrow \u003d \"ALWAYS\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"                HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"          \u003cVBox fx:id\u003d\"detailedPersonCard\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"                HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"            \u003cStackPane fx:id\u003d\"personViewPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Charles1026":2,"-":51,"Ryan-Tan00":20}},{"path":"src/main/resources/view/PastAppointmentCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"\u003cHBox prefWidth\u003d\"150.4\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"                  \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"                  \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"               \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"            \u003cLabel fx:id\u003d\"diagnosis\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$diagnosis\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"            \u003cFlowPane fx:id\u003d\"medications\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"Charles1026":21}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"      \u003cLabel fx:id\u003d\"patientType\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$patientType\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"      \u003cLabel fx:id\u003d\"upcomingAppointment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$upcomingAppointment\" /\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"      \u003cFlowPane fx:id\u003d\"medications\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Charles1026":12,"-":19,"kxrt":2}},{"path":"src/main/resources/view/PersonViewPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"\u003cScrollPane minWidth\u003d\"340\" prefWidth\u003d\"340.0\" style\u003d\"-fx-background-color: transparent;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"            xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"   \u003cVBox minWidth\u003d\"340\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel id\u003d\"name\" fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel alignment\u003d\"BOTTOM_CENTER\" styleClass\u003d\"cell_big_label\" text\u003d\"Personal Details\" textAlignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel alignment\u003d\"BOTTOM_CENTER\" styleClass\u003d\"cell_big_label\" text\u003d\"Next-of-Kin Details\" textAlignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel fx:id\u003d\"nokName\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel fx:id\u003d\"nokRelationship\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel fx:id\u003d\"nokContact\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel alignment\u003d\"BOTTOM_CENTER\" styleClass\u003d\"cell_big_label\" text\u003d\"Long Term Medications\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"         \u003cFlowPane fx:id\u003d\"medications\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel alignment\u003d\"BOTTOM_CENTER\" styleClass\u003d\"cell_big_label\" text\u003d\"Hospitalisation Details\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel fx:id\u003d\"patientType\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel fx:id\u003d\"hospitalWing\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel fx:id\u003d\"floorNumber\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel fx:id\u003d\"wardNumber\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel alignment\u003d\"BOTTOM_CENTER\" styleClass\u003d\"cell_big_label\" text\u003d\"Appointment Details\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"         \u003cLabel fx:id\u003d\"upcomingAppointment\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"         \u003cListView id\u003d\"pastAppointments\" fx:id\u003d\"pastAppointments\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"      \u003c/children\u003e\u003c/VBox\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"Charles1026":34}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FLOOR_NUMBER_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOSPITAL_WING_DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NEXT_OF_KIN_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PATIENT_TYPE_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WARD_NUMBER_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"Charles1026"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withMedication().build();","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Charles1026":7,"PeiYee88":1,"-":159}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"Charles1026"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":152,"author":{"gitId":"Charles1026"},"content":"        public Person getCurrentlyViewedPerson() {","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"Charles1026"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"Charles1026"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"Charles1026"},"content":"        public void updateCurrentlyViewedPerson(Person person) {","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"Charles1026"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"kxrt"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"kxrt"},"content":"        public int getPersonCount() {","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"kxrt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"kxrt"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"kxrt"},"content":"        public String getCensus() {","lastModifiedDate":"2022-10-24"},{"lineNumber":168,"author":{"gitId":"kxrt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Charles1026":10,"-":194,"kxrt":10}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FLOOR_NUMBER;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOSPITAL_WING;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICATION;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_TYPE;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WARD_NUMBER;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType.PatientTypes;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"    public static final String VALID_NEXT_OF_KIN_AMY \u003d \"Joe Bee, Husband, 82354371\";","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"    public static final String VALID_NEXT_OF_KIN_BOB \u003d \"Cec Choo, Son, 92723675\";","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"    public static final String VALID_PATIENT_TYPE_AMY \u003d \"i\";","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"    public static final String VALID_PATIENT_TYPE_BOB \u003d \"outpatient\";","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"    public static final String VALID_HOSPITAL_WING_AMY \u003d \"south\";","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"    public static final String VALID_HOSPITAL_WING_BOB \u003d \"hes an outpatient, so no hospital wing\";","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"    public static final String VALID_FLOOR_NUMBER_AMY \u003d \"1\";","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"    public static final String VALID_FLOOR_NUMBER_BOB \u003d \"hes an outpatient, so no floor number\";","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"nehcuy"},"content":"    public static final String VALID_WARD_NUMBER_AMY \u003d \"D312\";","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"    public static final String VALID_WARD_NUMBER_BOB \u003d \"hes an outpatient, so no ward number\";","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"    public static final String VALID_MEDICATION_IBUPROFEN \u003d \"Ibuprofen\";","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"    public static final String VALID_MEDICATION_PARACETAMOL \u003d \"Paracetamol\";","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"    public static final String VALID_MEDICATION_XANAX \u003d \"Xanax\";","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"Charles1026"},"content":"    public static final String NEXT_OF_KIN_DESC_AMY \u003d \" \" + PREFIX_NEXT_OF_KIN + VALID_NEXT_OF_KIN_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"    public static final String NEXT_OF_KIN_DESC_BOB \u003d \" \" + PREFIX_NEXT_OF_KIN + VALID_NEXT_OF_KIN_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"Charles1026"},"content":"    public static final String PATIENT_TYPE_DESC_AMY \u003d \" \" + PREFIX_PATIENT_TYPE + VALID_PATIENT_TYPE_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"Charles1026"},"content":"    public static final String PATIENT_TYPE_DESC_BOB \u003d \" \" + PREFIX_PATIENT_TYPE + VALID_PATIENT_TYPE_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"    public static final String HOSPITAL_WING_DESC_AMY \u003d \" \" + PREFIX_HOSPITAL_WING + VALID_HOSPITAL_WING_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"    public static final String HOSPITAL_WING_DESC_BOB \u003d \" \" + PREFIX_HOSPITAL_WING + VALID_HOSPITAL_WING_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"Charles1026"},"content":"    public static final String FLOOR_NUMBER_DESC_AMY \u003d \" \" + PREFIX_FLOOR_NUMBER + VALID_FLOOR_NUMBER_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"Charles1026"},"content":"    public static final String FLOOR_NUMBER_DESC_BOB \u003d \" \" + PREFIX_FLOOR_NUMBER + VALID_FLOOR_NUMBER_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"Charles1026"},"content":"    public static final String WARD_NUMBER_DESC_AMY \u003d \" \" + PREFIX_WARD_NUMBER + VALID_WARD_NUMBER_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"Charles1026"},"content":"    public static final String WARD_NUMBER_DESC_BOB \u003d \" \" + PREFIX_WARD_NUMBER + VALID_WARD_NUMBER_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"Charles1026"},"content":"    public static final String MEDICATION_DESC_IBUPROFEN \u003d \" \" + PREFIX_MEDICATION + VALID_MEDICATION_IBUPROFEN;","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"    public static final String MEDICATION_DESC_PARACETAMOL \u003d \" \" + PREFIX_MEDICATION + VALID_MEDICATION_PARACETAMOL;","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"Charles1026"},"content":"    public static final String MEDICATION_DESC_XANAX \u003d \" \" + PREFIX_MEDICATION + VALID_MEDICATION_XANAX;","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"Charles1026"},"content":"    public static final String INVALID_NEXT_OF_KIN_DESC \u003d \" \" + PREFIX_NEXT_OF_KIN","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"Charles1026"},"content":"            + \"Charlie is his mother with number 85854754\"; // must be in the format of name, relationship, contact","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"Charles1026"},"content":"    public static final String INVALID_PATIENT_TYPE_DESC \u003d \" \"","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"Charles1026"},"content":"            + PREFIX_PATIENT_TYPE + \"a\"; // patient type can only be i(inpatient) or o(outpatient)","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"PeiYee88"},"content":"    public static final String INVALID_HOSPITAL_WING_DESC \u003d \" \"","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"Charles1026"},"content":"            + PREFIX_HOSPITAL_WING + \"room@1north\"; // only alphanumeric chars and space allowed in hospital wing","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"Charles1026"},"content":"    public static final String INVALID_FLOOR_NUMBER_DESC \u003d \" \"","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"Charles1026"},"content":"            + PREFIX_FLOOR_NUMBER + \"-1\"; // non-positive numbers not allowed for floor number \u0026 ward number","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"Charles1026"},"content":"    public static final String INVALID_WARD_NUMBER_DESC \u003d \" \"","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"Charles1026"},"content":"            + PREFIX_WARD_NUMBER + \"hello\"; // non-numbers not allowed for floor number \u0026 ward number","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"Charles1026"},"content":"    public static final String INVALID_MEDICATION_DESC \u003d \" \"","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"Charles1026"},"content":"            + PREFIX_MEDICATION + \"hubby*\"; // \u0027*\u0027 not allowed in medications","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"Charles1026"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withNextOfKin(VALID_NEXT_OF_KIN_AMY)","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"Charles1026"},"content":"                .withPatientType(PatientTypes.parsePatientType(VALID_PATIENT_TYPE_AMY))","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"Charles1026"},"content":"                .withHospitalWing(VALID_HOSPITAL_WING_AMY).withFloorNumber(Integer.valueOf(VALID_FLOOR_NUMBER_AMY))","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"nehcuy"},"content":"                .withWardNumber(VALID_WARD_NUMBER_AMY)","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"Charles1026"},"content":"                .withMedication(VALID_MEDICATION_IBUPROFEN).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"Charles1026"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withNextOfKin(VALID_NEXT_OF_KIN_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"Charles1026"},"content":"                .withPatientType(PatientTypes.parsePatientType(VALID_PATIENT_TYPE_BOB))","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"Charles1026"},"content":"                .withMedication(VALID_MEDICATION_PARACETAMOL).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"nehcuy":2,"Charles1026":46,"PeiYee88":6,"-":112}},{"path":"src/test/java/seedu/address/logic/commands/CountCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"class CountCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"    void execute_countCommand_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(CountCommand.UI_CONFIRMATION, true);","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"        assertCommandSuccess(new CountCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Charles1026":4,"kxrt":18}},{"path":"src/test/java/seedu/address/logic/commands/CreatePastAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kxrt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.PastAppointment;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"kxrt"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"kxrt"},"content":" * Contains integration tests (interaction with the Model) and unit tests for CreatePastAppointmentCommand.","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"kxrt"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"kxrt"},"content":"class CreatePastAppointmentCommandTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"kxrt"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"kxrt"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"kxrt"},"content":"    public void execute_allFieldsSpecifiedFilteredList_success() {","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"kxrt"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"        Set\u003cMedication\u003e medication \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"        medication.add(new Medication(\"Paracetamol\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"kxrt"},"content":"        PastAppointment pastAppointment \u003d new PastAppointment(LocalDate.now(), medication, \"Fever\");","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"kxrt"},"content":"        CreatePastAppointmentCommand createPastAppointmentCommand \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"kxrt"},"content":"                new CreatePastAppointmentCommand(INDEX_FIRST_PERSON, pastAppointment);","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"kxrt"},"content":"        String expectedMessage \u003d String.format(CreatePastAppointmentCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"kxrt"},"content":"                personInFilteredList.getName()) + pastAppointment;","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"kxrt"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"kxrt"},"content":"        expectedModel.getFilteredPersonList().get(0).addPastAppointment(pastAppointment);","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"kxrt"},"content":"        assertCommandSuccess(createPastAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"kxrt"},"content":"        // remove the appointment from the model for tear down","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"kxrt"},"content":"        expectedModel.getFilteredPersonList().get(0).getPastAppointments().remove(pastAppointment);","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"kxrt"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"kxrt":47}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICATION_PARACETAMOL;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"                .withMedication(VALID_MEDICATION_PARACETAMOL).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"                .withPhone(VALID_PHONE_BOB).withMedication(VALID_MEDICATION_PARACETAMOL).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"kxrt"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().build();","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"kxrt"},"content":"        descriptor.setPastAppointments(editedPerson.getPastAppointments());","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"kxrt"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"kxrt"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"kxrt"},"content":"                        .withPastAppointments(editedPerson.getPastAppointments()).build());","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Charles1026":3,"-":168,"kxrt":5}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICATION_XANAX;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_TYPE_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType.PatientTypes;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"        // different nok -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withNextOfKin(VALID_NEXT_OF_KIN_BOB).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"        // different patient type -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"                .withPatientType(PatientTypes.parsePatientType(VALID_PATIENT_TYPE_BOB)).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"Charles1026"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"        // different medications -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"Charles1026"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withMedication(VALID_MEDICATION_XANAX).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Charles1026":13,"-":52}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"class ViewCommandTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"    void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_VIEW_PERSON_SUCCESS,","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"                personToView.getName().fullName);","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"    public void equals() {","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"Charles1026"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"Charles1026"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"Charles1026"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"Charles1026"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"Charles1026"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"Charles1026"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"Charles1026":75}},{"path":"src/test/java/seedu/address/logic/commands/getcommands/GetAppointmentByDateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.logic.commands.getcommands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"kxrt"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"import java.time.Month;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.AppointmentByDatePredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":" * Contains integration tests (interaction with the Model) for {@code GetAppointmentByDateCommand}.","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"public class GetAppointmentByDateCommandTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"    public void equals() {","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"        AppointmentByDatePredicate firstPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"                new AppointmentByDatePredicate(Collections.singletonList(LocalDate.of(2022, Month.APRIL, 12)));","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"        AppointmentByDatePredicate secondPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"                new AppointmentByDatePredicate(Collections.singletonList(LocalDate.of(2022, Month.MAY, 12)));","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"        GetAppointmentByDateCommand getFirstAppointmentByDateCommand \u003d new GetAppointmentByDateCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"        GetAppointmentByDateCommand getSecondHospitalWingCommand \u003d new GetAppointmentByDateCommand(secondPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(getFirstAppointmentByDateCommand.equals(getFirstAppointmentByDateCommand));","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"        GetAppointmentByDateCommand getFirstAppointmentByDateCommandCopy \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"                new GetAppointmentByDateCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(getFirstAppointmentByDateCommand.equals(getFirstAppointmentByDateCommandCopy));","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(getFirstAppointmentByDateCommand.equals(1));","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(getFirstAppointmentByDateCommand.equals(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(getFirstAppointmentByDateCommand.equals(getSecondHospitalWingCommand));","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"        AppointmentByDatePredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"        GetAppointmentByDateCommand command \u003d new GetAppointmentByDateCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"PeiYee88"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"PeiYee88"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"PeiYee88"},"content":"    public void execute_multiplePersonsFound() {","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"kxrt"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"PeiYee88"},"content":"        AppointmentByDatePredicate predicate \u003d preparePredicate(LocalDate.of(2022, Month.JUNE, 14).toString());","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"PeiYee88"},"content":"        GetAppointmentByDateCommand command \u003d new GetAppointmentByDateCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"PeiYee88"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"PeiYee88"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"kxrt"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"PeiYee88"},"content":"     * Parses {@code userInput} into a {@code AppointmentByDatePredicate}.","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"PeiYee88"},"content":"    private AppointmentByDatePredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"PeiYee88"},"content":"        String[] st \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"PeiYee88"},"content":"        List\u003cLocalDate\u003e dates \u003d new ArrayList\u003cLocalDate\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"PeiYee88"},"content":"        for (String i : st) {","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"PeiYee88"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"PeiYee88"},"content":"            LocalDate date \u003d LocalDate.parse(i.trim(), dateTimeFormatter);","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"PeiYee88"},"content":"            dates.add(date);","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"PeiYee88"},"content":"        return new AppointmentByDatePredicate(dates);","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"PeiYee88":92,"kxrt":3}},{"path":"src/test/java/seedu/address/logic/commands/getcommands/GetHospitalWingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.logic.commands.getcommands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.HospitalWingContainsKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":" * Contains integration tests (interaction with the Model) for {@code GetHospitalWingCommand}.","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"public class GetHospitalWingCommandTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"    public void equals() {","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"        HospitalWingContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"                new HospitalWingContainsKeywordsPredicate(Collections.singletonList(\"south\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"        HospitalWingContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"                new HospitalWingContainsKeywordsPredicate(Collections.singletonList(\"north\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"        GetHospitalWingCommand getFirstHospitalWingCommand \u003d new GetHospitalWingCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"        GetHospitalWingCommand getSecondHospitalWingCommand \u003d new GetHospitalWingCommand(secondPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(getFirstHospitalWingCommand.equals(getFirstHospitalWingCommand));","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"        GetHospitalWingCommand getFirstHospitalWingCommandCopy \u003d new GetHospitalWingCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(getFirstHospitalWingCommand.equals(getFirstHospitalWingCommandCopy));","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(getFirstHospitalWingCommand.equals(1));","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(getFirstHospitalWingCommand.equals(getSecondHospitalWingCommand));","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"        HospitalWingContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"        GetHospitalWingCommand command \u003d new GetHospitalWingCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"    public void execute_multiplePersonsFound() {","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"PeiYee88"},"content":"        HospitalWingContainsKeywordsPredicate predicate \u003d preparePredicate(\"south\");","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"PeiYee88"},"content":"        GetHospitalWingCommand command \u003d new GetHospitalWingCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"PeiYee88"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"PeiYee88"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"PeiYee88"},"content":"        assertEquals(Arrays.asList(BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"PeiYee88"},"content":"     * Parses {@code userInput} into a {@code HospitalWingContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"PeiYee88"},"content":"    private HospitalWingContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"PeiYee88"},"content":"        String[] st \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"PeiYee88"},"content":"        List\u003cString\u003e hospitalWings \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"PeiYee88"},"content":"        for (String i : st) {","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"PeiYee88"},"content":"            hospitalWings.add(i);","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"PeiYee88"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"PeiYee88"},"content":"        return new HospitalWingContainsKeywordsPredicate(hospitalWings);","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"PeiYee88":86}},{"path":"src/test/java/seedu/address/logic/commands/getcommands/GetNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.logic.commands.getcommands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":" * Contains integration tests (interaction with the Model) for {@code GetNameCommand}.","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"public class GetNameCommandTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"    public void equals() {","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"        GetNameCommand getFirstNameCommand \u003d new GetNameCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"        GetNameCommand getSecondNameCommand \u003d new GetNameCommand(secondPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(getFirstNameCommand.equals(getFirstNameCommand));","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"        GetNameCommand getFirstNameCommandCopy \u003d new GetNameCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(getFirstNameCommand.equals(getFirstNameCommandCopy));","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(getFirstNameCommand.equals(1));","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(getFirstNameCommand.equals(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(getFirstNameCommand.equals(getSecondNameCommand));","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"        GetNameCommand command \u003d new GetNameCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"PeiYee88"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"PeiYee88"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"PeiYee88"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"PeiYee88"},"content":"        GetNameCommand command \u003d new GetNameCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"PeiYee88"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"PeiYee88"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"PeiYee88"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"PeiYee88"},"content":"     * Parses {@code userInput} into a {@code NamePredicate}.","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"PeiYee88"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"PeiYee88"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"PeiYee88":83}},{"path":"src/test/java/seedu/address/logic/commands/getcommands/GetNextOfKinCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.logic.commands.getcommands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.NextOfKinPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":" * Contains integration tests (interaction with the Model) for {@code GetNextOfKinCommand}.","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"public class GetNextOfKinCommandTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"    public void equals() {","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"        NextOfKinPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"                new NextOfKinPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"        NextOfKinPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"                new NextOfKinPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"        GetNextOfKinCommand getFirstNextOfKinCommand \u003d new GetNextOfKinCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"        GetNextOfKinCommand getSecondNextOfKinCommand \u003d new GetNextOfKinCommand(secondPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(getFirstNextOfKinCommand.equals(getFirstNextOfKinCommand));","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"        GetNextOfKinCommand getFirstNextOfKinCommandCopy \u003d new GetNextOfKinCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(getFirstNextOfKinCommand.equals(getFirstNextOfKinCommandCopy));","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(getFirstNextOfKinCommand.equals(1));","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(getFirstNextOfKinCommand.equals(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(getFirstNextOfKinCommand.equals(getSecondNextOfKinCommand));","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"        NextOfKinPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"        GetNextOfKinCommand command \u003d new GetNextOfKinCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"PeiYee88"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"PeiYee88"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"PeiYee88"},"content":"        NextOfKinPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"PeiYee88"},"content":"        GetNextOfKinCommand command \u003d new GetNextOfKinCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"PeiYee88"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"PeiYee88"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"PeiYee88"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"PeiYee88"},"content":"     * Parses {@code userInput} into a {@code NextOfKinPredicate}.","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"PeiYee88"},"content":"    private NextOfKinPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"PeiYee88"},"content":"        return new NextOfKinPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"PeiYee88":83}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FLOOR_NUMBER_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOSPITAL_WING_DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FLOOR_NUMBER_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_HOSPITAL_WING_DESC;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MEDICATION_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NEXT_OF_KIN_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PATIENT_TYPE_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_WARD_NUMBER_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEDICATION_DESC_IBUPROFEN;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEDICATION_DESC_PARACETAMOL;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEDICATION_DESC_XANAX;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NEXT_OF_KIN_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NEXT_OF_KIN_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PATIENT_TYPE_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PATIENT_TYPE_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FLOOR_NUMBER_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOSPITAL_WING_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICATION_IBUPROFEN;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICATION_PARACETAMOL;","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICATION_XANAX;","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_TYPE_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WARD_NUMBER_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WARD_NUMBER_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.FloorNumber;","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.HospitalWing;","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.WardNumber;","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"Charles1026"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withMedication(\"Paracetamol\").build();","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_BOB + PATIENT_TYPE_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_PARACETAMOL, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"Charles1026"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_BOB + PATIENT_TYPE_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_PARACETAMOL, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"Charles1026"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_BOB + PATIENT_TYPE_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_PARACETAMOL, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"Charles1026"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_BOB + PATIENT_TYPE_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_PARACETAMOL, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"Charles1026"},"content":"        // multiple next of kin - last next of kin accepted","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"Charles1026"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + NEXT_OF_KIN_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_BOB + PATIENT_TYPE_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_PARACETAMOL, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"Charles1026"},"content":"        // multiple medications - all accepted","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"Charles1026"},"content":"        Person expectedPersonMultipleMedications \u003d new PersonBuilder(BOB).withMedication(VALID_MEDICATION_IBUPROFEN,","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"Charles1026"},"content":"                VALID_MEDICATION_PARACETAMOL, VALID_MEDICATION_XANAX).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"PeiYee88"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_BOB + PATIENT_TYPE_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_IBUPROFEN + MEDICATION_DESC_PARACETAMOL","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_XANAX, new AddCommand(expectedPersonMultipleMedications));","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"Charles1026"},"content":"        // zero medications","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"Charles1026"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withMedication().build();","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"Charles1026"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + NEXT_OF_KIN_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"Charles1026"},"content":"                + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY + FLOOR_NUMBER_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"Charles1026"},"content":"                + WARD_NUMBER_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"Charles1026"},"content":"     * Note: For all missing prefixes, they need to be placed at the front if not it will just be counted as part of","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"Charles1026"},"content":"     * the previous prefix.","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, VALID_NAME_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY , expectedMessage);","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + NAME_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY , expectedMessage);","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, VALID_EMAIL_AMY + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY , expectedMessage);","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"Charles1026"},"content":"        // missing next of kin prefix","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, VALID_NEXT_OF_KIN_AMY + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"Charles1026"},"content":"                + EMAIL_DESC_AMY + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY , expectedMessage);","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"Charles1026"},"content":"        // missing patient type prefix","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, VALID_PATIENT_TYPE_AMY + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"Charles1026"},"content":"                + EMAIL_DESC_AMY + NEXT_OF_KIN_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY , expectedMessage);","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"PeiYee88"},"content":"        // missing hospital wing prefix","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, VALID_HOSPITAL_WING_AMY + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"Charles1026"},"content":"                + EMAIL_DESC_AMY + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY , expectedMessage);","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"Charles1026"},"content":"        // missing floor number prefix","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, VALID_FLOOR_NUMBER_AMY + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"Charles1026"},"content":"                + EMAIL_DESC_AMY + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"Charles1026"},"content":"                + HOSPITAL_WING_DESC_AMY + WARD_NUMBER_DESC_AMY , expectedMessage);","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"Charles1026"},"content":"        // missing ward number prefix","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, VALID_WARD_NUMBER_AMY + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"Charles1026"},"content":"                + EMAIL_DESC_AMY + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"Charles1026"},"content":"                + HOSPITAL_WING_DESC_AMY + FLOOR_NUMBER_DESC_AMY, expectedMessage);","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, VALID_NAME_AMY + VALID_PHONE_AMY + VALID_EMAIL_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"Charles1026"},"content":"                + VALID_NEXT_OF_KIN_AMY + VALID_PATIENT_TYPE_AMY + VALID_HOSPITAL_WING_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"Charles1026"},"content":"                + VALID_FLOOR_NUMBER_AMY + VALID_WARD_NUMBER_AMY, expectedMessage);","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_IBUPROFEN + MEDICATION_DESC_PARACETAMOL, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + INVALID_PHONE_DESC + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_IBUPROFEN + MEDICATION_DESC_PARACETAMOL, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_IBUPROFEN + MEDICATION_DESC_PARACETAMOL, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"Charles1026"},"content":"        // invalid nok","lastModifiedDate":"2022-10-06"},{"lineNumber":189,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"Charles1026"},"content":"                + INVALID_NEXT_OF_KIN_DESC + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_IBUPROFEN + MEDICATION_DESC_PARACETAMOL, NextOfKin.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"Charles1026"},"content":"        // invalid patient type","lastModifiedDate":"2022-10-06"},{"lineNumber":195,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":196,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_AMY + INVALID_PATIENT_TYPE_DESC + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":197,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":198,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_IBUPROFEN + MEDICATION_DESC_PARACETAMOL, PatientType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":199,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":200,"author":{"gitId":"PeiYee88"},"content":"        // invalid hospital wing","lastModifiedDate":"2022-10-04"},{"lineNumber":201,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY + INVALID_HOSPITAL_WING_DESC","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":204,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_IBUPROFEN + MEDICATION_DESC_PARACETAMOL, HospitalWing.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":205,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":206,"author":{"gitId":"Charles1026"},"content":"        // invalid floor number","lastModifiedDate":"2022-10-06"},{"lineNumber":207,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":209,"author":{"gitId":"Charles1026"},"content":"                + INVALID_FLOOR_NUMBER_DESC + WARD_NUMBER_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":210,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_IBUPROFEN + MEDICATION_DESC_PARACETAMOL, FloorNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":211,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":212,"author":{"gitId":"Charles1026"},"content":"        // invalid ward number","lastModifiedDate":"2022-10-06"},{"lineNumber":213,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":214,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":215,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + INVALID_WARD_NUMBER_DESC","lastModifiedDate":"2022-10-06"},{"lineNumber":216,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_IBUPROFEN + MEDICATION_DESC_PARACETAMOL, WardNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":217,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":218,"author":{"gitId":"Charles1026"},"content":"        System.out.println(NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":219,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":220,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":221,"author":{"gitId":"Charles1026"},"content":"                + INVALID_MEDICATION_DESC);","lastModifiedDate":"2022-10-06"},{"lineNumber":222,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":223,"author":{"gitId":"Charles1026"},"content":"        // invalid medication","lastModifiedDate":"2022-10-06"},{"lineNumber":224,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":225,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":226,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":227,"author":{"gitId":"Charles1026"},"content":"                + INVALID_MEDICATION_DESC, Medication.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":230,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":231,"author":{"gitId":"Charles1026"},"content":"                + INVALID_NEXT_OF_KIN_DESC + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":232,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":233,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_IBUPROFEN + MEDICATION_DESC_PARACETAMOL, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":236,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":237,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_AMY + HOSPITAL_WING_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":238,"author":{"gitId":"Charles1026"},"content":"                + FLOOR_NUMBER_DESC_AMY + WARD_NUMBER_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":239,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_IBUPROFEN + MEDICATION_DESC_PARACETAMOL,","lastModifiedDate":"2022-10-06"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Charles1026":155,"PeiYee88":8,"-":79}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FLOOR_NUMBER_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_HOSPITAL_WING_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MEDICATION_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NEXT_OF_KIN_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PATIENT_TYPE_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_WARD_NUMBER_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEDICATION_DESC_IBUPROFEN;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEDICATION_DESC_PARACETAMOL;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NEXT_OF_KIN_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NEXT_OF_KIN_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PATIENT_TYPE_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICATION_IBUPROFEN;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICATION_PARACETAMOL;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_TYPE_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICATION;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.FloorNumber;","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.HospitalWing;","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType.PatientTypes;","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.WardNumber;","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"Charles1026"},"content":"    private static final String MEDICATION_EMPTY \u003d \" \" + PREFIX_MEDICATION;","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"Charles1026"},"content":"                + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"Charles1026"},"content":"                + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"Charles1026"},"content":"                + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"Charles1026"},"content":"                + INVALID_NEXT_OF_KIN_DESC, NextOfKin.MESSAGE_CONSTRAINTS); // invalid nok","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"Charles1026"},"content":"                + INVALID_PATIENT_TYPE_DESC, PatientType.MESSAGE_CONSTRAINTS); // invalid type","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"Charles1026"},"content":"                + INVALID_HOSPITAL_WING_DESC, HospitalWing.MESSAGE_CONSTRAINTS); // invalid wing","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"Charles1026"},"content":"                + INVALID_FLOOR_NUMBER_DESC, FloorNumber.MESSAGE_CONSTRAINTS); // invalid floor","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"Charles1026"},"content":"                + INVALID_WARD_NUMBER_DESC, WardNumber.MESSAGE_CONSTRAINTS); // invalid ward","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"Charles1026"},"content":"                + INVALID_MEDICATION_DESC, Medication.MESSAGE_CONSTRAINTS); // invalid med","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"Charles1026"},"content":"        // while parsing {@code PREFIX_MEDICATION} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, \"1\" + MEDICATION_DESC_IBUPROFEN + MEDICATION_DESC_PARACETAMOL","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_EMPTY, Medication.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, \"1\" + MEDICATION_DESC_IBUPROFEN + MEDICATION_EMPTY","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_PARACETAMOL, Medication.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, \"1\" + MEDICATION_EMPTY + MEDICATION_DESC_IBUPROFEN","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_PARACETAMOL, Medication.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"Charles1026"},"content":"                + VALID_PHONE_AMY + VALID_NEXT_OF_KIN_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"Charles1026"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"Charles1026"},"content":"                + NEXT_OF_KIN_DESC_AMY + PATIENT_TYPE_DESC_BOB + MEDICATION_DESC_PARACETAMOL;","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"Charles1026"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withNextOfKin(VALID_NEXT_OF_KIN_AMY)","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"Charles1026"},"content":"                .withPatientType(PatientTypes.parsePatientType(VALID_PATIENT_TYPE_BOB))","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"Charles1026"},"content":"                .withMedication(VALID_MEDICATION_PARACETAMOL).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"Charles1026"},"content":"        // next of kin","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"Charles1026"},"content":"        userInput \u003d targetIndex.getOneBased() + NEXT_OF_KIN_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"Charles1026"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withNextOfKin(VALID_NEXT_OF_KIN_AMY).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"Charles1026"},"content":"        userInput \u003d targetIndex.getOneBased() + MEDICATION_DESC_IBUPROFEN;","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"Charles1026"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withMedication(VALID_MEDICATION_IBUPROFEN).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":199,"author":{"gitId":"Charles1026"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + NEXT_OF_KIN_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_IBUPROFEN + PHONE_DESC_AMY + NEXT_OF_KIN_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"Charles1026"},"content":"                + MEDICATION_DESC_IBUPROFEN + PHONE_DESC_BOB + NEXT_OF_KIN_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"Charles1026"},"content":"                + EMAIL_DESC_BOB + MEDICATION_DESC_PARACETAMOL;","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"Charles1026"},"content":"                .withEmail(VALID_EMAIL_BOB).withNextOfKin(VALID_NEXT_OF_KIN_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":206,"author":{"gitId":"Charles1026"},"content":"                .withMedication(VALID_MEDICATION_IBUPROFEN, VALID_MEDICATION_PARACETAMOL).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"Charles1026"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + NEXT_OF_KIN_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"Charles1026"},"content":"                .withNextOfKin(VALID_NEXT_OF_KIN_BOB).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":233,"author":{"gitId":"Charles1026"},"content":"        String userInput \u003d targetIndex.getOneBased() + MEDICATION_EMPTY;","lastModifiedDate":"2022-10-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"Charles1026"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withMedication().build();","lastModifiedDate":"2022-10-06"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Charles1026":72,"-":168}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.FloorNumber;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.HospitalWing;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType.PatientTypes;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.WardNumber;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"    private static final String INVALID_NEXT_OF_KIN \u003d \" \";","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"    private static final String INVALID_PATIENT_TYPE \u003d \"b1\";","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"    private static final String INVALID_HOSPITAL_WING \u003d \" \";","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"    private static final String INVALID_FLOOR_NUMBER \u003d \"-1\";","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"    private static final String INVALID_WARD_NUMBER \u003d \"bravo1\";","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"    private static final String INVALID_MEDICATION \u003d \" \";","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_PHONE \u003d \"12345678\";","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_EMAIL \u003d \"rachelw@example.com\";","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_NEXT_OF_KIN \u003d \"John Walker, Husband, 81858493\";","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_PATIENT_TYPE \u003d \"i\";","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_HOSPITAL_WING \u003d \"South\";","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_FLOOR_NUMBER \u003d \"1\";","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"nehcuy"},"content":"    private static final String VALID_WARD_NUMBER \u003d \"A123\";","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_MEDICATION_1 \u003d \"Ibuprofen\";","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_MEDICATION_2 \u003d \"Xanax\";","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"Charles1026"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"Charles1026"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"Charles1026"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"Charles1026"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"Charles1026"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"Charles1026"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"Charles1026"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"Charles1026"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"Charles1026"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"Charles1026"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"Charles1026"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"Charles1026"},"content":"    public void parseNextOfKin_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"Charles1026"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNextOfKin((String) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"Charles1026"},"content":"    public void parseNextOfKin_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"Charles1026"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNextOfKin(INVALID_NEXT_OF_KIN));","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"Charles1026"},"content":"    public void parseNextOfKin_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"Charles1026"},"content":"        NextOfKin expectedNextOfKin \u003d new NextOfKin(VALID_NEXT_OF_KIN);","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"Charles1026"},"content":"        assertEquals(expectedNextOfKin, ParserUtil.parseNextOfKin(VALID_NEXT_OF_KIN));","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"Charles1026"},"content":"    public void parseNextOfKin_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"Charles1026"},"content":"        String nextOfKinWithWhitespace \u003d WHITESPACE + VALID_NEXT_OF_KIN + WHITESPACE;","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"Charles1026"},"content":"        NextOfKin expectedNextOfKin \u003d new NextOfKin(VALID_NEXT_OF_KIN);","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"Charles1026"},"content":"        assertEquals(expectedNextOfKin, ParserUtil.parseNextOfKin(nextOfKinWithWhitespace));","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"Charles1026"},"content":"    public void parsePatientType_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"Charles1026"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePatientType((String) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":169,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"Charles1026"},"content":"    public void parsePatientType_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"Charles1026"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePatientType(INVALID_PATIENT_TYPE));","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"Charles1026"},"content":"    public void parsePatientType_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"Charles1026"},"content":"        PatientType expectedPatientType \u003d new PatientType(PatientTypes.parsePatientType(VALID_PATIENT_TYPE));","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"Charles1026"},"content":"        assertEquals(expectedPatientType, ParserUtil.parsePatientType(VALID_PATIENT_TYPE));","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"Charles1026"},"content":"    public void parsePatientType_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"Charles1026"},"content":"        String patientTypeWithWhitespace \u003d WHITESPACE + VALID_PATIENT_TYPE + WHITESPACE;","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"Charles1026"},"content":"        PatientType expectedPatientType \u003d new PatientType(PatientTypes.parsePatientType(VALID_PATIENT_TYPE));","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"Charles1026"},"content":"        assertEquals(expectedPatientType, ParserUtil.parsePatientType(patientTypeWithWhitespace));","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"Charles1026"},"content":"    public void parseHospitalWing_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":189,"author":{"gitId":"Charles1026"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseHospitalWing((String) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"PeiYee88"},"content":"    public void parseHospitalWing_invalidValue_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"PeiYee88"},"content":"        assertThrows(IllegalArgumentException.class, (","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"PeiYee88"},"content":"                ) -\u003e ParserUtil.parseHospitalWing(INVALID_HOSPITAL_WING));","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":197,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":198,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":199,"author":{"gitId":"Charles1026"},"content":"    public void parseHospitalWing_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"Charles1026"},"content":"        HospitalWing expectedHospitalWing \u003d new HospitalWing(VALID_HOSPITAL_WING);","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"Charles1026"},"content":"        assertEquals(expectedHospitalWing, ParserUtil.parseHospitalWing(VALID_HOSPITAL_WING));","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":204,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":205,"author":{"gitId":"Charles1026"},"content":"    public void parseHospitalWing_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":206,"author":{"gitId":"Charles1026"},"content":"        String hospitalWingWithWhitespace \u003d WHITESPACE + VALID_HOSPITAL_WING + WHITESPACE;","lastModifiedDate":"2022-10-06"},{"lineNumber":207,"author":{"gitId":"Charles1026"},"content":"        HospitalWing expectedHospitalWing \u003d new HospitalWing(VALID_HOSPITAL_WING);","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"Charles1026"},"content":"        assertEquals(expectedHospitalWing, ParserUtil.parseHospitalWing(hospitalWingWithWhitespace));","lastModifiedDate":"2022-10-06"},{"lineNumber":209,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":210,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":211,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":212,"author":{"gitId":"Charles1026"},"content":"    public void parseFloorNumber_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":213,"author":{"gitId":"Charles1026"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseFloorNumber((String) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":214,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":215,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":216,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":217,"author":{"gitId":"Charles1026"},"content":"    public void parseFloorNumber_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":218,"author":{"gitId":"Charles1026"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFloorNumber(INVALID_FLOOR_NUMBER));","lastModifiedDate":"2022-10-06"},{"lineNumber":219,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":220,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":221,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":222,"author":{"gitId":"Charles1026"},"content":"    public void parseFloorNumber_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":223,"author":{"gitId":"Charles1026"},"content":"        FloorNumber expectedFloorNumber \u003d new FloorNumber(Integer.valueOf(VALID_FLOOR_NUMBER));","lastModifiedDate":"2022-10-06"},{"lineNumber":224,"author":{"gitId":"Charles1026"},"content":"        assertEquals(expectedFloorNumber, ParserUtil.parseFloorNumber(VALID_FLOOR_NUMBER));","lastModifiedDate":"2022-10-06"},{"lineNumber":225,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":226,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":227,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":228,"author":{"gitId":"Charles1026"},"content":"    public void parseFloorNumber_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":229,"author":{"gitId":"Charles1026"},"content":"        String floorNumberWithWhitespace \u003d WHITESPACE + VALID_FLOOR_NUMBER + WHITESPACE;","lastModifiedDate":"2022-10-06"},{"lineNumber":230,"author":{"gitId":"Charles1026"},"content":"        FloorNumber expectedFloorNumber \u003d new FloorNumber(Integer.valueOf(VALID_FLOOR_NUMBER));","lastModifiedDate":"2022-10-06"},{"lineNumber":231,"author":{"gitId":"Charles1026"},"content":"        assertEquals(expectedFloorNumber, ParserUtil.parseFloorNumber(floorNumberWithWhitespace));","lastModifiedDate":"2022-10-06"},{"lineNumber":232,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":233,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":234,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":235,"author":{"gitId":"Charles1026"},"content":"    public void parseWardNumber_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":236,"author":{"gitId":"Charles1026"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseWardNumber((String) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":237,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":238,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":239,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":240,"author":{"gitId":"Charles1026"},"content":"    public void parseWardNumber_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":241,"author":{"gitId":"Charles1026"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseWardNumber(INVALID_WARD_NUMBER));","lastModifiedDate":"2022-10-06"},{"lineNumber":242,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":243,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":244,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":245,"author":{"gitId":"Charles1026"},"content":"    public void parseWardNumber_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":246,"author":{"gitId":"nehcuy"},"content":"        WardNumber expectedWardNumber \u003d new WardNumber(VALID_WARD_NUMBER);","lastModifiedDate":"2022-10-16"},{"lineNumber":247,"author":{"gitId":"Charles1026"},"content":"        assertEquals(expectedWardNumber, ParserUtil.parseWardNumber(VALID_WARD_NUMBER));","lastModifiedDate":"2022-10-06"},{"lineNumber":248,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":249,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":250,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":251,"author":{"gitId":"Charles1026"},"content":"    public void parseWardNumber_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":252,"author":{"gitId":"nehcuy"},"content":"        String wardNumberWithWhitespace \u003d WHITESPACE + VALID_WARD_NUMBER + WHITESPACE;","lastModifiedDate":"2022-10-18"},{"lineNumber":253,"author":{"gitId":"nehcuy"},"content":"        WardNumber expectedWardNumber \u003d new WardNumber(VALID_WARD_NUMBER);","lastModifiedDate":"2022-10-16"},{"lineNumber":254,"author":{"gitId":"nehcuy"},"content":"        assertEquals(expectedWardNumber, ParserUtil.parseWardNumber(wardNumberWithWhitespace));","lastModifiedDate":"2022-10-18"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":258,"author":{"gitId":"Charles1026"},"content":"    public void parseMedication_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":259,"author":{"gitId":"Charles1026"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMedication(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":263,"author":{"gitId":"Charles1026"},"content":"    public void parseMedications_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":264,"author":{"gitId":"Charles1026"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMedication(INVALID_MEDICATION));","lastModifiedDate":"2022-10-06"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":268,"author":{"gitId":"Charles1026"},"content":"    public void parseMedications_validValueWithoutWhitespace_returnsMedication() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":269,"author":{"gitId":"Charles1026"},"content":"        Medication expectedMedication \u003d new Medication(VALID_MEDICATION_1);","lastModifiedDate":"2022-10-06"},{"lineNumber":270,"author":{"gitId":"Charles1026"},"content":"        assertEquals(expectedMedication, ParserUtil.parseMedication(VALID_MEDICATION_1));","lastModifiedDate":"2022-10-06"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":274,"author":{"gitId":"Charles1026"},"content":"    public void parseMedications_validValueWithWhitespace_returnsTrimmedMedication() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":275,"author":{"gitId":"nehcuy"},"content":"        String medicationWithWhitespace \u003d WHITESPACE + VALID_MEDICATION_1 + WHITESPACE;","lastModifiedDate":"2022-10-18"},{"lineNumber":276,"author":{"gitId":"Charles1026"},"content":"        Medication expectedMedication \u003d new Medication(VALID_MEDICATION_1);","lastModifiedDate":"2022-10-06"},{"lineNumber":277,"author":{"gitId":"nehcuy"},"content":"        assertEquals(expectedMedication, ParserUtil.parseMedication(medicationWithWhitespace));","lastModifiedDate":"2022-10-18"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":281,"author":{"gitId":"Charles1026"},"content":"    public void parseMedications_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":282,"author":{"gitId":"Charles1026"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMedications(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":286,"author":{"gitId":"Charles1026"},"content":"    public void parseMedications_collectionWithInvalidMedications_throwsParseException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":287,"author":{"gitId":"Charles1026"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":288,"author":{"gitId":"Charles1026"},"content":"                ParserUtil.parseMedications(Arrays.asList(VALID_MEDICATION_1, INVALID_MEDICATION)));","lastModifiedDate":"2022-10-06"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":292,"author":{"gitId":"Charles1026"},"content":"    public void parseMedications_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":293,"author":{"gitId":"Charles1026"},"content":"        assertTrue(ParserUtil.parseMedications(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-10-06"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":297,"author":{"gitId":"Charles1026"},"content":"    public void parseMedications_collectionWithValidMedications_returnsMedicationSet() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":298,"author":{"gitId":"Charles1026"},"content":"        Set\u003cMedication\u003e actualMedicationSet \u003d ParserUtil.parseMedications(","lastModifiedDate":"2022-10-06"},{"lineNumber":299,"author":{"gitId":"Charles1026"},"content":"                Arrays.asList(VALID_MEDICATION_1, VALID_MEDICATION_2));","lastModifiedDate":"2022-10-06"},{"lineNumber":300,"author":{"gitId":"Charles1026"},"content":"        Set\u003cMedication\u003e expectedMedicationSet \u003d new HashSet\u003cMedication\u003e(","lastModifiedDate":"2022-10-06"},{"lineNumber":301,"author":{"gitId":"Charles1026"},"content":"                Arrays.asList(new Medication(VALID_MEDICATION_1), new Medication(VALID_MEDICATION_2)));","lastModifiedDate":"2022-10-06"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":303,"author":{"gitId":"Charles1026"},"content":"        assertEquals(expectedMedicationSet, actualMedicationSet);","lastModifiedDate":"2022-10-06"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"nehcuy":7,"Charles1026":151,"PeiYee88":3,"-":144}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"class ViewCommandParserTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"        assertParseSuccess(parser, \"1\", new ViewCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"Charles1026":26}},{"path":"src/test/java/seedu/address/logic/parser/getparsers/GetAppointmentByDateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.logic.parser.getparsers;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"import java.time.Month;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.commands.getcommands.GetAppointmentByDateCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.AppointmentByDatePredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"public class GetAppointmentByDateCommandParserTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"    private GetAppointmentByDateCommandParser parser \u003d new GetAppointmentByDateCommandParser();","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetAppointmentByDateCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"    public void parse_validArgs_returnsGetAppointmentByDateCommand() {","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"        GetAppointmentByDateCommand expectedGetAppointmentByDateCommand \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"                new GetAppointmentByDateCommand(","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"                        new AppointmentByDatePredicate(Arrays.asList(LocalDate.of(2000, Month.APRIL, 12))));","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"        assertParseSuccess(parser, \"12-04-2000\", expectedGetAppointmentByDateCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"        // allows multiple inputs","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"        GetAppointmentByDateCommand multipleGetAppointmentByDateCommand \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"                new GetAppointmentByDateCommand(new AppointmentByDatePredicate(","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"                        Arrays.asList(LocalDate.of(","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"                                2000, Month.APRIL, 12), LocalDate.of(2013, Month.APRIL, 13))));","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"        assertParseSuccess(parser, \"12-04-2000 13-04-2013\", multipleGetAppointmentByDateCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"PeiYee88":40}},{"path":"src/test/java/seedu/address/logic/parser/getparsers/GetHospitalWingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.logic.parser.getparsers;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.commands.getcommands.GetHospitalWingCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.HospitalWingContainsKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"public class GetHospitalWingCommandParserTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"    private GetHospitalWingCommandParser parser \u003d new GetHospitalWingCommandParser();","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetHospitalWingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"    public void parse_validArgs_returnsGetHospitalWingCommand() {","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"        GetHospitalWingCommand expectedGetHospitalWingCommand \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"                new GetHospitalWingCommand(new HospitalWingContainsKeywordsPredicate(Arrays.asList(\"south\")));","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"        assertParseSuccess(parser, \"south\", expectedGetHospitalWingCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"        // mixed cases","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"        expectedGetHospitalWingCommand \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"                new GetHospitalWingCommand(new HospitalWingContainsKeywordsPredicate(Arrays.asList(\"souTh\")));","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"        assertParseSuccess(parser, \"south\", expectedGetHospitalWingCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"PeiYee88":35}},{"path":"src/test/java/seedu/address/logic/parser/getparsers/GetNextOfKinCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.logic.parser.getparsers;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.logic.commands.getcommands.GetNextOfKinCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.NextOfKinPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"public class GetNextOfKinCommandParserTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"    private GetNextOfKinCommandParser parser \u003d new GetNextOfKinCommandParser();","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetNextOfKinCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"    public void parse_validArgs_returnsGetNextOfKinCommand() {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"        GetNextOfKinCommand expectedGetNextOfKinCommand \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"                new GetNextOfKinCommand(new NextOfKinPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedGetNextOfKinCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedGetNextOfKinCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"PeiYee88":35}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICATION_PARACETAMOL;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_TYPE_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"kxrt"},"content":"import static seedu.address.logic.commands.CountCommand.MESSAGE_COUNT;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType.PatientTypes;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":26,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.tag.MedicationMap;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withNextOfKin(VALID_NEXT_OF_KIN_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"                .withPatientType(PatientTypes.parsePatientType(VALID_PATIENT_TYPE_BOB))","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"                .withMedication(VALID_MEDICATION_PARACETAMOL).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"Charles1026"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withNextOfKin(VALID_NEXT_OF_KIN_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"Charles1026"},"content":"                .withPatientType(PatientTypes.parsePatientType(VALID_PATIENT_TYPE_BOB))","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"Charles1026"},"content":"                .withMedication(VALID_MEDICATION_PARACETAMOL).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"kxrt"},"content":"        private final MedicationMap medicationMap \u003d new MedicationMap();","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"kxrt"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"kxrt"},"content":"        public String getMedicationMap() {","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"kxrt"},"content":"            return medicationMap.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"kxrt"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"kxrt"},"content":"        public String getCensus(Model model) {","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"kxrt"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"kxrt"},"content":"            sb.append(String.format(MESSAGE_COUNT, model.getPersonCount()));","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"kxrt"},"content":"            sb.append(getMedicationMap());","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"kxrt"},"content":"            return sb.toString();","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"kxrt"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"kxrt"},"content":"        public String getStringifiedMedicationMap() {","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"kxrt"},"content":"            return medicationMap.getStringifiedMedicationMap();","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Charles1026":10,"-":96,"kxrt":21}},{"path":"src/test/java/seedu/address/model/person/AppointmentByDatePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import java.time.Month;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"public class AppointmentByDatePredicateTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"    public void equals() {","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"        List\u003cLocalDate\u003e firstPredicateKeywordList \u003d Collections.singletonList(LocalDate.of(2006, Month.AUGUST, 12));","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"        List\u003cLocalDate\u003e secondPredicateKeywordList \u003d Arrays.asList(LocalDate.of(2012, Month.APRIL, 20),","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"                LocalDate.of(2001, Month.APRIL, 24));","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"        AppointmentByDatePredicate firstPredicate \u003d new AppointmentByDatePredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"        AppointmentByDatePredicate secondPredicate \u003d new AppointmentByDatePredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"        AppointmentByDatePredicate firstPredicateCopy \u003d new AppointmentByDatePredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"    public void test_appointmentByDateContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"        AppointmentByDatePredicate predicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"                new AppointmentByDatePredicate(Collections.singletonList(LocalDate.of(2006, Month.AUGUST, 12)));","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"        //test upcoming appointments","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withUpcomingAppointment(\"12-08-2006\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"        //test past appointments","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"        predicate \u003d new AppointmentByDatePredicate(Collections.singletonList(LocalDate.of(2006, Month.AUGUST, 12)));","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"        String[] pastAppointmentsDetails \u003d {\"12-08-2006\", \"ibuprofen\", \"headache\"};","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPastAppointment(pastAppointmentsDetails).build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"        AppointmentByDatePredicate predicate \u003d new AppointmentByDatePredicate(Collections.emptyList());","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(predicate.test(new PersonBuilder().withUpcomingAppointment(\"12-12-1212\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"        predicate \u003d new AppointmentByDatePredicate(Arrays.asList(LocalDate.of(2012, Month.APRIL, 20),","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"                LocalDate.of(2001, Month.APRIL, 24)));","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(predicate.test(new PersonBuilder().withUpcomingAppointment(\"12-12-1220\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"PeiYee88":67}},{"path":"src/test/java/seedu/address/model/person/HospitalWingContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"public class HospitalWingContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"    public void equals() {","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"south\");","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"north\", \"east\");","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"        HospitalWingContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"                new HospitalWingContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"        HospitalWingContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"                new HospitalWingContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"        HospitalWingContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"                new HospitalWingContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"    public void test_hospitalWingContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"        // One keyword with all lower-case input","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"        HospitalWingContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"                new HospitalWingContainsKeywordsPredicate(Collections.singletonList(\"south\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withHospitalWing(\"south\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"        // one keyword with mixed lower and upper case input","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"        predicate \u003d new HospitalWingContainsKeywordsPredicate(Collections.singletonList(\"norTH\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withHospitalWing(\"north\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"        // one keyword with all upper case input","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"        predicate \u003d new HospitalWingContainsKeywordsPredicate(Collections.singletonList(\"NORTH\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withHospitalWing(\"north\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"    public void test_hospitalWingDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"        HospitalWingContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"                new HospitalWingContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(predicate.test(new PersonBuilder().withHospitalWing(\"east\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"PeiYee88"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"PeiYee88"},"content":"        predicate \u003d new HospitalWingContainsKeywordsPredicate(Arrays.asList(\"east\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(predicate.test(new PersonBuilder().withHospitalWing(\"north\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"PeiYee88"},"content":"        // Keywords match name, email and address, but does not match hospital wing","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"PeiYee88"},"content":"        predicate \u003d new HospitalWingContainsKeywordsPredicate(","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"PeiYee88"},"content":"                Arrays.asList(\"12345678\", \"alice@email.com\", \"Alice\", \"east\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"PeiYee88"},"content":"                .withEmail(\"alice@email.com\").withHospitalWing(\"south\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"PeiYee88":78}},{"path":"src/test/java/seedu/address/model/person/HospitalWingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"public class HospitalWingTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"        assertThrows(NullPointerException.class, () -\u003e new HospitalWing(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"    public void constructor_invalidHospitalWing_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new HospitalWing(\"\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new HospitalWing(\" \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new HospitalWing(\"1\")); // numbers","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new HospitalWing(\"@@\")); //symbols","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"        // strings which is not part of the enum","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new HospitalWing(\"me\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"        // invalid inputs","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new HospitalWing(\"NORTH--\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"        // strings with spaces in between","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new HospitalWing(\"SOU TH\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"        // combination of two enum strings","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new HospitalWing(\"WESTNORTH\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"        // combination of two enum strings with spaces in between","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new HospitalWing(\"west north\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"    public void isValidHospitalWing() {","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"        // null HospitalWing","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"        assertThrows(NullPointerException.class, () -\u003e HospitalWing.isValidHospitalWing(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"        // valid HospitalWing","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(HospitalWing.isValidHospitalWing(\"north\")); // north in all lower-case","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(HospitalWing.isValidHospitalWing(\"south\")); // south in all lower-case","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(HospitalWing.isValidHospitalWing(\"east\")); // east in all lower-case","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(HospitalWing.isValidHospitalWing(\"west\")); // west in all lower-case","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(HospitalWing.isValidHospitalWing(\"NORTH\")); // north in all upper-case","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(HospitalWing.isValidHospitalWing(\"SOUTH\")); // south in all upper-case","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(HospitalWing.isValidHospitalWing(\"EAST\")); // east in all upper-case","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(HospitalWing.isValidHospitalWing(\"WEST\")); // west in all upper-case","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(HospitalWing.isValidHospitalWing(\"NOrth\")); // north in mix of upper and lower cases","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(HospitalWing.isValidHospitalWing(\"SOuth\")); // south in mix of upper and lower cases","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(HospitalWing.isValidHospitalWing(\"EAst\")); // east in mix of upper and lower cases","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(HospitalWing.isValidHospitalWing(\"weST\")); // west in mix of upper and lower cases","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"    public void isValidEnum() {","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"        assertAll(() -\u003e assertEquals(\"EAST\", HospitalWing.HospitalWingTypes.EAST.name()), (","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"                ) -\u003e assertEquals(\"WEST\", HospitalWing.HospitalWingTypes.WEST.name()), (","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"                        ) -\u003e assertEquals(\"NORTH\", HospitalWing.HospitalWingTypes.NORTH.name()), (","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"                                ) -\u003e assertEquals(\"SOUTH\", HospitalWing.HospitalWingTypes.SOUTH.name()));","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"PeiYee88":61}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345678\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"Charles1026"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"Charles1026"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Charles1026":3,"-":72}},{"path":"src/test/java/seedu/address/model/person/NextOfKinPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PeiYee88"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"PeiYee88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"PeiYee88"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"PeiYee88"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"PeiYee88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"public class NextOfKinPredicateTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"PeiYee88"},"content":"    public void equals() {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"PeiYee88"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"PeiYee88"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"PeiYee88"},"content":"        NextOfKinPredicate firstPredicate \u003d new NextOfKinPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"PeiYee88"},"content":"        NextOfKinPredicate secondPredicate \u003d new NextOfKinPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"PeiYee88"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"PeiYee88"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"PeiYee88"},"content":"        NextOfKinPredicate firstPredicateCopy \u003d new NextOfKinPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"PeiYee88"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"PeiYee88"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"PeiYee88"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"PeiYee88"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"PeiYee88"},"content":"        // One keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"PeiYee88"},"content":"        NextOfKinPredicate predicate \u003d new NextOfKinPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"PeiYee88"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"PeiYee88"},"content":"        predicate \u003d new NextOfKinPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"PeiYee88"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"PeiYee88"},"content":"        predicate \u003d new NextOfKinPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"PeiYee88"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"PeiYee88"},"content":"        predicate \u003d new NextOfKinPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"PeiYee88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"PeiYee88"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"PeiYee88"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"PeiYee88"},"content":"        NextOfKinPredicate predicate \u003d new NextOfKinPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"        predicate \u003d new NextOfKinPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"PeiYee88"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"PeiYee88"},"content":"        predicate \u003d new NextOfKinPredicate(Arrays.asList(\"12345678\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"PeiYee88"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"PeiYee88"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"PeiYee88"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"PeiYee88":74}},{"path":"src/test/java/seedu/address/model/person/NextOfKinTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"public class NextOfKinTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NextOfKin(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"    public void constructor_invalidNextOfKin_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"        String invalidNextOfKin \u003d \"\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new NextOfKin(invalidNextOfKin));","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"    public void isValidNextOfKin() {","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"        // null NextOfKin","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"        assertThrows(NullPointerException.class, () -\u003e NextOfKin.isValidNextOfKin(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"        // invalid NextOfKines","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"        assertFalse(NextOfKin.isValidNextOfKin(\"\")); // empty string","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"        assertFalse(NextOfKin.isValidNextOfKin(\" \")); // spaces only","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"        assertFalse(NextOfKin.isValidNextOfKin(\"-\")); // one character","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"        // valid NextOfKines","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"        assertTrue(NextOfKin.isValidNextOfKin(\"a, a, 81283745\")); // short NextOfKin","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"        assertTrue(NextOfKin.isValidNextOfKin(\"Charles, Husband, 81283745\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"        assertTrue(NextOfKin","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"                .isValidNextOfKin(\"King Kong the Fifth, King of Swazililand, 23234923492304\")); // long NextOfKin","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"Charles1026":38}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FLOOR_NUMBER_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOSPITAL_WING_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICATION_PARACETAMOL;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICATION_XANAX;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_TYPE_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_TYPE_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WARD_NUMBER_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getMedications().remove(0));","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"                .withNextOfKin(VALID_NEXT_OF_KIN_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"                .withPatientType(PatientType.PatientTypes.parsePatientType(VALID_PATIENT_TYPE_BOB))","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"                .withMedication(VALID_MEDICATION_PARACETAMOL).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"Charles1026"},"content":"        // different nok -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"Charles1026"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNextOfKin(VALID_NEXT_OF_KIN_BOB).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"Charles1026"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"Charles1026"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"Charles1026"},"content":"        editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"Charles1026"},"content":"                .withPatientType(PatientType.PatientTypes.parsePatientType(VALID_PATIENT_TYPE_AMY))","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"Charles1026"},"content":"                .withHospitalWing(VALID_HOSPITAL_WING_AMY).withFloorNumber(Integer.valueOf(VALID_FLOOR_NUMBER_AMY))","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"nehcuy"},"content":"                .withWardNumber(VALID_WARD_NUMBER_AMY).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":103,"author":{"gitId":"Charles1026"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withMedication(VALID_MEDICATION_XANAX).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"nehcuy":1,"Charles1026":21,"-":84}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICATION_XANAX;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withNextOfKin(VALID_NEXT_OF_KIN_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"                .withMedication(VALID_MEDICATION_XANAX).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"Charles1026"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"Charles1026"},"content":"                .withNextOfKin(VALID_NEXT_OF_KIN_BOB).withMedication(VALID_MEDICATION_XANAX).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Charles1026":6,"-":164}},{"path":"src/test/java/seedu/address/model/tag/MedicationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"public class MedicationTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Medication(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Medication(invalidTagName));","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"        assertThrows(NullPointerException.class, () -\u003e Medication.isValidMedicationName(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"Charles1026":4,"-":22}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"PeiYee88"},"content":"    private static final String INVALID_HOSPITAL_WING \u003d \" \";","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"    private static final String INVALID_NEXT_OF_KIN \u003d \" \";","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"    private static final String INVALID_PATIENT_TYPE \u003d \"b\";","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"    private static final String INVALID_FLOOR_NUMBER \u003d \"-1\";","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"    private static final String INVALID_WARD_NUMBER \u003d \"bense\";","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"    private static final String INVALID_MEDICATION \u003d \" \";","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"kxrt"},"content":"    private static final String[] INVALID_PAST_APPOINTMENT \u003d {\".\", \".\", \".\"};","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"kxrt"},"content":"    private static final String INVALID_UPCOMING_APPOINTMENT \u003d \"12345678\";","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().fullName;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().value;","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().value;","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_NEXT_OF_KIN \u003d BENSON.getNextOfKin().value;","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_PATIENT_TYPE \u003d BENSON.getPatientType().value.name();","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_HOSPITAL_WING \u003d BENSON.getHospitalWing().get().value;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_FLOOR_NUMBER \u003d BENSON.getFloorNumber().get().value.toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"    private static final String VALID_WARD_NUMBER \u003d BENSON.getWardNumber().get().value.toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"    private static final List\u003cJsonAdaptedMedication\u003e VALID_MEDICATIONS \u003d BENSON.getMedications().stream()","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"            .map(JsonAdaptedMedication::new)","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"kxrt"},"content":"    private static final List\u003cJsonAdaptedPastAppointment\u003e VALID_PAST_APPOINTMENTS \u003d BENSON.getPastAppointments()","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"kxrt"},"content":"            .stream().map(JsonAdaptedPastAppointment::new)","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"kxrt"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"kxrt"},"content":"    private static final String VALID_UPCOMING_APPOINTMENT \u003d BENSON.getUpcomingAppointment().get().value;","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_NEXT_OF_KIN, VALID_PATIENT_TYPE,","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"kxrt"},"content":"                        VALID_HOSPITAL_WING, VALID_FLOOR_NUMBER, VALID_WARD_NUMBER, VALID_MEDICATIONS,","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"kxrt"},"content":"                        VALID_PAST_APPOINTMENTS, VALID_UPCOMING_APPOINTMENT);","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Charles1026"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_NEXT_OF_KIN,","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"kxrt"},"content":"                VALID_PATIENT_TYPE, VALID_HOSPITAL_WING, VALID_FLOOR_NUMBER, VALID_WARD_NUMBER, VALID_MEDICATIONS,","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"kxrt"},"content":"                VALID_PAST_APPOINTMENTS, VALID_UPCOMING_APPOINTMENT);","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"Charles1026"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_NEXT_OF_KIN, VALID_PATIENT_TYPE,","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"kxrt"},"content":"                        VALID_HOSPITAL_WING, VALID_FLOOR_NUMBER, VALID_WARD_NUMBER, VALID_MEDICATIONS,","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"kxrt"},"content":"                        VALID_PAST_APPOINTMENTS, VALID_UPCOMING_APPOINTMENT);","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"Charles1026"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_NEXT_OF_KIN,","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"kxrt"},"content":"                VALID_PATIENT_TYPE, VALID_HOSPITAL_WING, VALID_FLOOR_NUMBER, VALID_WARD_NUMBER, VALID_MEDICATIONS,","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"kxrt"},"content":"                VALID_PAST_APPOINTMENTS, VALID_UPCOMING_APPOINTMENT);","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"Charles1026"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_NEXT_OF_KIN, VALID_PATIENT_TYPE,","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"kxrt"},"content":"                        VALID_HOSPITAL_WING, VALID_FLOOR_NUMBER, VALID_WARD_NUMBER, VALID_MEDICATIONS,","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"kxrt"},"content":"                        VALID_PAST_APPOINTMENTS, VALID_UPCOMING_APPOINTMENT);","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"Charles1026"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_NEXT_OF_KIN,","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"kxrt"},"content":"                VALID_PATIENT_TYPE, VALID_HOSPITAL_WING, VALID_FLOOR_NUMBER, VALID_WARD_NUMBER, VALID_MEDICATIONS,","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"kxrt"},"content":"                VALID_PAST_APPOINTMENTS, VALID_UPCOMING_APPOINTMENT);","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"Charles1026"},"content":"    public void toModelType_invalidNextOfKin_throwsIllegalValueException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"Charles1026"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_NEXT_OF_KIN, VALID_PATIENT_TYPE,","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"kxrt"},"content":"                        VALID_HOSPITAL_WING, VALID_FLOOR_NUMBER, VALID_WARD_NUMBER, VALID_MEDICATIONS,","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"kxrt"},"content":"                        VALID_PAST_APPOINTMENTS, VALID_UPCOMING_APPOINTMENT);","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"Charles1026"},"content":"        String expectedMessage \u003d NextOfKin.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"Charles1026"},"content":"    public void toModelType_nullNextOfKin_throwsIllegalValueException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"Charles1026"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"kxrt"},"content":"                VALID_PATIENT_TYPE, VALID_HOSPITAL_WING, VALID_FLOOR_NUMBER, VALID_WARD_NUMBER, VALID_MEDICATIONS,","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"kxrt"},"content":"                VALID_PAST_APPOINTMENTS, VALID_UPCOMING_APPOINTMENT);","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"Charles1026"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, NextOfKin.class.getSimpleName());","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"Charles1026"},"content":"    public void toModelType_invalidMedications_throwsIllegalValueException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"Charles1026"},"content":"        List\u003cJsonAdaptedMedication\u003e invalidMedications \u003d new ArrayList\u003c\u003e(VALID_MEDICATIONS);","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"Charles1026"},"content":"        invalidMedications.add(new JsonAdaptedMedication(INVALID_MEDICATION));","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"Charles1026"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_NEXT_OF_KIN, VALID_PATIENT_TYPE,","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"kxrt"},"content":"                        VALID_HOSPITAL_WING, VALID_FLOOR_NUMBER, VALID_WARD_NUMBER, invalidMedications,","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"kxrt"},"content":"                        VALID_PAST_APPOINTMENTS, VALID_UPCOMING_APPOINTMENT);","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"kxrt"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"kxrt"},"content":"    public void toModelType_invalidPastAppointments_throwsIllegalValueException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"kxrt"},"content":"        List\u003cJsonAdaptedMedication\u003e validMedications \u003d new ArrayList\u003c\u003e(VALID_MEDICATIONS);","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"kxrt"},"content":"        List\u003cJsonAdaptedPastAppointment\u003e invalidPastAppointments \u003d new ArrayList\u003c\u003e(VALID_PAST_APPOINTMENTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"kxrt"},"content":"        invalidPastAppointments.add(new JsonAdaptedPastAppointment(\"\", \"\", validMedications));","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"kxrt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_NEXT_OF_KIN, VALID_PATIENT_TYPE,","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"kxrt"},"content":"                        VALID_HOSPITAL_WING, VALID_FLOOR_NUMBER, VALID_WARD_NUMBER, VALID_MEDICATIONS,","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"kxrt"},"content":"                        invalidPastAppointments, VALID_UPCOMING_APPOINTMENT);","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":154,"author":{"gitId":"kxrt"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"kxrt"},"content":"    public void toModelType_invalidUpcomingAppointment_throwsIllegalValueException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"kxrt"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"kxrt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_NEXT_OF_KIN, VALID_PATIENT_TYPE,","lastModifiedDate":"2022-10-14"},{"lineNumber":158,"author":{"gitId":"kxrt"},"content":"                        VALID_HOSPITAL_WING, VALID_FLOOR_NUMBER, VALID_WARD_NUMBER, VALID_MEDICATIONS,","lastModifiedDate":"2022-10-14"},{"lineNumber":159,"author":{"gitId":"kxrt"},"content":"                        VALID_PAST_APPOINTMENTS, INVALID_UPCOMING_APPOINTMENT);","lastModifiedDate":"2022-10-14"},{"lineNumber":160,"author":{"gitId":"kxrt"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Charles1026":32,"PeiYee88":1,"-":89,"kxrt":40}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.PastAppointment;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.UpcomingAppointment;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.FloorNumber;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.HospitalWing;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType.PatientTypes;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.WardNumber;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"        descriptor.setNextOfKin(person.getNextOfKin());","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"        descriptor.setPatientType(person.getPatientType());","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"        descriptor.setHospitalWing(person.getHospitalWing().orElse(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"        descriptor.setFloorNumber(person.getFloorNumber().orElse(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"        descriptor.setWardNumber(person.getWardNumber().orElse(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"        descriptor.setMedications(person.getMedications());","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"kxrt"},"content":"        descriptor.setPastAppointments(person.getPastAppointments());","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"kxrt"},"content":"        descriptor.setUpcomingAppointment(person.getUpcomingAppointment().orElse(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"Charles1026"},"content":"     * Sets the {@code NextOfKin} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"Charles1026"},"content":"    public EditPersonDescriptorBuilder withNextOfKin(String nextOfKin) {","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"Charles1026"},"content":"        descriptor.setNextOfKin(new NextOfKin(nextOfKin));","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"Charles1026"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"Charles1026"},"content":"     * Sets the {@code PatientType} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"Charles1026"},"content":"    public EditPersonDescriptorBuilder withPatientType(PatientTypes patientType) {","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"Charles1026"},"content":"        descriptor.setPatientType(new PatientType(patientType));","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"PeiYee88"},"content":"     * Sets the {@code HospitalWing} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"PeiYee88"},"content":"    public EditPersonDescriptorBuilder withHospitalWing(String hospitalWing) {","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"PeiYee88"},"content":"        descriptor.setHospitalWing(new HospitalWing(hospitalWing));","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"PeiYee88"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"Charles1026"},"content":"     * Sets the {@code Floor Number} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"Charles1026"},"content":"    public EditPersonDescriptorBuilder withFloorNumber(Integer floorNumber) {","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"Charles1026"},"content":"        descriptor.setFloorNumber(new FloorNumber(floorNumber));","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"Charles1026"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"Charles1026"},"content":"     * Sets the {@code Ward Number} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"nehcuy"},"content":"    public EditPersonDescriptorBuilder withWardNumber(String wardNumber) {","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"Charles1026"},"content":"        descriptor.setWardNumber(new WardNumber(wardNumber));","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":126,"author":{"gitId":"Charles1026"},"content":"    public EditPersonDescriptorBuilder withMedication(String... tags) {","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"Charles1026"},"content":"        Set\u003cMedication\u003e tagSet \u003d Stream.of(tags).map(Medication::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"Charles1026"},"content":"        descriptor.setMedications(tagSet);","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":132,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"kxrt"},"content":"     * Sets the {@code PastAppointments} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":135,"author":{"gitId":"kxrt"},"content":"    public EditPersonDescriptorBuilder withPastAppointments(List\u003cPastAppointment\u003e pastAppointments) {","lastModifiedDate":"2022-10-25"},{"lineNumber":136,"author":{"gitId":"kxrt"},"content":"        descriptor.setPastAppointments(pastAppointments);","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"kxrt"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":138,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":139,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":141,"author":{"gitId":"kxrt"},"content":"     * Parses the {@code dateString} into a {@code UpcomingAppointment}","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"kxrt"},"content":"     * and sets it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":144,"author":{"gitId":"kxrt"},"content":"    public EditPersonDescriptorBuilder withUpcomingAppointment(String dateString) {","lastModifiedDate":"2022-10-25"},{"lineNumber":145,"author":{"gitId":"kxrt"},"content":"        if (dateString \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":146,"author":{"gitId":"kxrt"},"content":"            descriptor.setUpcomingAppointment(new UpcomingAppointment((LocalDate) null));","lastModifiedDate":"2022-10-25"},{"lineNumber":147,"author":{"gitId":"kxrt"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":148,"author":{"gitId":"kxrt"},"content":"            descriptor.setUpcomingAppointment(new UpcomingAppointment(LocalDate.parse(dateString,","lastModifiedDate":"2022-10-25"},{"lineNumber":149,"author":{"gitId":"kxrt"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2022-10-25"},{"lineNumber":150,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"nehcuy":1,"Charles1026":38,"PeiYee88":9,"-":83,"kxrt":26}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"kxrt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kxrt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kxrt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":7,"author":{"gitId":"kxrt"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.PastAppointment;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"kxrt"},"content":"import seedu.address.model.appointment.UpcomingAppointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.FloorNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"PeiYee88"},"content":"import seedu.address.model.person.HospitalWing;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType.PatientTypes;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.WardNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"    public static final String DEFAULT_NEXT_OF_KIN \u003d \"Sugon Bee, Father, 92873764\";","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"    public static final PatientTypes DEFAULT_PATIENT_TYPE \u003d PatientTypes.INPATIENT;","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"PeiYee88"},"content":"    public static final String DEFAULT_HOSPITAL_WING \u003d \"south\";","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"    public static final Integer DEFAULT_FLOOR_NUMBER \u003d 3;","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"nehcuy"},"content":"    public static final String DEFAULT_WARD_NUMBER \u003d \"D312\";","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"    private NextOfKin nextOfKin;","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"    private PatientType patientType;","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"PeiYee88"},"content":"    private HospitalWing hospitalWing;","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"    private FloorNumber floorNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"    private WardNumber wardNumber;","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"    private Set\u003cMedication\u003e medications;","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"kxrt"},"content":"    private List\u003cPastAppointment\u003e pastAppointments;","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"kxrt"},"content":"    private UpcomingAppointment upcomingAppointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"        nextOfKin \u003d new NextOfKin(DEFAULT_NEXT_OF_KIN);","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Charles1026"},"content":"        patientType \u003d new PatientType(DEFAULT_PATIENT_TYPE);","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"PeiYee88"},"content":"        hospitalWing \u003d new HospitalWing(DEFAULT_HOSPITAL_WING);","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"        floorNumber \u003d new FloorNumber(DEFAULT_FLOOR_NUMBER);","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Charles1026"},"content":"        wardNumber \u003d new WardNumber(DEFAULT_WARD_NUMBER);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"Charles1026"},"content":"        medications \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"kxrt"},"content":"        pastAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"kxrt"},"content":"        upcomingAppointment \u003d new UpcomingAppointment((LocalDate) null);","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"Charles1026"},"content":"        nextOfKin \u003d personToCopy.getNextOfKin();","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Charles1026"},"content":"        patientType \u003d personToCopy.getPatientType();","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"Charles1026"},"content":"        hospitalWing \u003d personToCopy.getHospitalWing().orElse(null);","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"Charles1026"},"content":"        floorNumber \u003d personToCopy.getFloorNumber().orElse(null);","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"Charles1026"},"content":"        wardNumber \u003d personToCopy.getWardNumber().orElse(null);","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"Charles1026"},"content":"        medications \u003d new HashSet\u003c\u003e(personToCopy.getMedications());","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"kxrt"},"content":"        pastAppointments \u003d personToCopy.getPastAppointments();","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"kxrt"},"content":"        upcomingAppointment \u003d personToCopy.getUpcomingAppointment().orElse(null);","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"Charles1026"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"Charles1026"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"Charles1026"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"Charles1026"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"Charles1026"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"Charles1026"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"Charles1026"},"content":"     * Sets the {@code NextOfKin} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"Charles1026"},"content":"    public PersonBuilder withNextOfKin(String nextOfKin) {","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"Charles1026"},"content":"        this.nextOfKin \u003d new NextOfKin(nextOfKin);","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"Charles1026"},"content":"     * Sets the {@code PatientType} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":121,"author":{"gitId":"Charles1026"},"content":"    public PersonBuilder withPatientType(PatientTypes patientType) {","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"Charles1026"},"content":"        this.patientType \u003d new PatientType(patientType);","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"Charles1026"},"content":"        // If inpatient, set default hospital number, floor number and ward number if not present","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"Charles1026"},"content":"        if (this.patientType.isInpatient()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"Charles1026"},"content":"            if (this.hospitalWing \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"Charles1026"},"content":"                this.hospitalWing \u003d new HospitalWing(DEFAULT_HOSPITAL_WING);","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"Charles1026"},"content":"            if (this.floorNumber \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"Charles1026"},"content":"                this.floorNumber \u003d new FloorNumber(DEFAULT_FLOOR_NUMBER);","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"Charles1026"},"content":"            if (this.wardNumber \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"Charles1026"},"content":"                this.wardNumber \u003d new WardNumber(DEFAULT_WARD_NUMBER);","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"Charles1026"},"content":"        // If outpatient, remove hospital number, floor number and ward number if present","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"Charles1026"},"content":"        } else {","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"Charles1026"},"content":"            this.hospitalWing \u003d null;","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"Charles1026"},"content":"            this.floorNumber \u003d null;","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"Charles1026"},"content":"            this.wardNumber \u003d null;","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":144,"author":{"gitId":"PeiYee88"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"Charles1026"},"content":"     * Sets the {@code HospitalWing} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"PeiYee88"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"PeiYee88"},"content":"    public PersonBuilder withHospitalWing(String hospitalWing) {","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"PeiYee88"},"content":"        this.hospitalWing \u003d new HospitalWing(hospitalWing);","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"PeiYee88"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"PeiYee88"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"Charles1026"},"content":"     * Sets the {@code FloorNumber} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"Charles1026"},"content":"    public PersonBuilder withFloorNumber(Integer floorNumber) {","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"Charles1026"},"content":"        this.floorNumber \u003d new FloorNumber(floorNumber);","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"Charles1026"},"content":"     * Sets the {@code WardNumber} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"nehcuy"},"content":"    public PersonBuilder withWardNumber(String wardNumber) {","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"Charles1026"},"content":"        this.wardNumber \u003d new WardNumber(wardNumber);","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"Charles1026"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"Charles1026"},"content":"     * Parses the {@code medications} into a {@code Set\u003cMedication\u003e}","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"Charles1026"},"content":"     * and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"Charles1026"},"content":"    public PersonBuilder withMedication(String ... medications) {","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"Charles1026"},"content":"        this.medications \u003d SampleDataUtil.getMedicationSet(medications);","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"Charles1026"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"kxrt"},"content":"     * Parses the {@code appointmentData} into a {@code PastAppointment}","lastModifiedDate":"2022-10-13"},{"lineNumber":179,"author":{"gitId":"kxrt"},"content":"     * and sets it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":180,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":181,"author":{"gitId":"kxrt"},"content":"    public PersonBuilder withPastAppointment(String ... appointmentData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":182,"author":{"gitId":"kxrt"},"content":"        this.pastAppointments.add(SampleDataUtil.getPastAppointment(appointmentData));","lastModifiedDate":"2022-10-13"},{"lineNumber":183,"author":{"gitId":"kxrt"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":184,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":185,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":186,"author":{"gitId":"kxrt"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":187,"author":{"gitId":"kxrt"},"content":"     * Parses the {@code dateString} into a {@code UpcomingAppointment}","lastModifiedDate":"2022-10-14"},{"lineNumber":188,"author":{"gitId":"kxrt"},"content":"     * and sets it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":189,"author":{"gitId":"kxrt"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":190,"author":{"gitId":"kxrt"},"content":"    public PersonBuilder withUpcomingAppointment(String dateString) {","lastModifiedDate":"2022-10-14"},{"lineNumber":191,"author":{"gitId":"kxrt"},"content":"        if (dateString \u003d\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":192,"author":{"gitId":"kxrt"},"content":"            this.upcomingAppointment \u003d new UpcomingAppointment((LocalDate) null);","lastModifiedDate":"2022-10-14"},{"lineNumber":193,"author":{"gitId":"kxrt"},"content":"        } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":194,"author":{"gitId":"kxrt"},"content":"            this.upcomingAppointment \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":195,"author":{"gitId":"kxrt"},"content":"                    new UpcomingAppointment(LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"kxrt"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":197,"author":{"gitId":"kxrt"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":198,"author":{"gitId":"kxrt"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":199,"author":{"gitId":"kxrt"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":200,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"Charles1026"},"content":"     * Builds the Person.","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":204,"author":{"gitId":"Charles1026"},"content":"        return new Person(name, phone, email, nextOfKin, patientType, hospitalWing,","lastModifiedDate":"2022-10-05"},{"lineNumber":205,"author":{"gitId":"kxrt"},"content":"                floorNumber, wardNumber, medications, pastAppointments, upcomingAppointment);","lastModifiedDate":"2022-10-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"},{"lineNumber":209,"author":{"gitId":"PeiYee88"},"content":"","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"nehcuy":2,"Charles1026":81,"PeiYee88":12,"-":77,"kxrt":37}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FLOOR_NUMBER;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOSPITAL_WING;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICATION;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT_TYPE;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WARD_NUMBER;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.tag.Medication;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"        sb.append(PREFIX_NEXT_OF_KIN + person.getNextOfKin().value + \" \");","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"        sb.append(PREFIX_PATIENT_TYPE + person.getPatientType().value.name() + \" \");","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"        if (person.getPatientType().isInpatient()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"            sb.append(PREFIX_HOSPITAL_WING + person.getHospitalWing().get().value + \" \");","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"            sb.append(PREFIX_FLOOR_NUMBER + person.getFloorNumber().get().value.toString() + \" \");","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"            sb.append(PREFIX_WARD_NUMBER + person.getWardNumber().get().value.toString() + \" \");","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"        person.getMedications().stream().forEach(","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"            s -\u003e sb.append(PREFIX_MEDICATION + s.medicationName + \" \")","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"        descriptor.getNextOfKin()","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"Charles1026"},"content":"                .ifPresent(nextOfKin -\u003e sb.append(PREFIX_NEXT_OF_KIN).append(nextOfKin.value).append(\" \"));","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"Charles1026"},"content":"        descriptor.getPatientType()","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"Charles1026"},"content":"                .ifPresent(patientType -\u003e sb.append(PREFIX_PATIENT_TYPE).append(patientType.value.name()).append(\" \"));","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"PeiYee88"},"content":"        descriptor.getHospitalWing().ifPresent(hospitalWing -\u003e sb.append(PREFIX_HOSPITAL_WING)","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"PeiYee88"},"content":"                .append(hospitalWing.value).append(\" \"));","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"Charles1026"},"content":"        descriptor.getFloorNumber().ifPresent(floorNumber -\u003e sb.append(PREFIX_FLOOR_NUMBER)","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"Charles1026"},"content":"                .append(floorNumber.value).append(\" \"));","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"Charles1026"},"content":"        descriptor.getWardNumber().ifPresent(wardNumber -\u003e sb.append(PREFIX_WARD_NUMBER)","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"Charles1026"},"content":"                .append(wardNumber.value).append(\" \"));","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"        if (descriptor.getMedications().isPresent()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"Charles1026"},"content":"            Set\u003cMedication\u003e tags \u003d descriptor.getMedications().get();","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"Charles1026"},"content":"                sb.append(PREFIX_MEDICATION);","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"Charles1026"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_MEDICATION).append(s.medicationName).append(\" \"));","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Charles1026":27,"PeiYee88":3,"-":51}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FLOOR_NUMBER_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"PeiYee88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOSPITAL_WING_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICATION_IBUPROFEN;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_TYPE_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_TYPE_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WARD_NUMBER_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"import seedu.address.model.person.PatientType.PatientTypes;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withPhone(\"94351253\")","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"            .withEmail(\"alice@example.com\").withNextOfKin(\"Charlie Pauline, Brother, 81273645\")","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"kxrt"},"content":"            .withPatientType(PatientTypes.OUTPATIENT).withMedication(\"Ibuprofen\")","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"kxrt"},"content":"            .withPastAppointment(\"12-06-2022\", \"Paracetamol Ibuprofen\", \"Sick\")","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"kxrt"},"content":"            .withPastAppointment(\"14-06-2022\", \"Chlormine Amoxycillin\", \"Sick\").build();","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withPhone(\"98765432\")","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"            .withEmail(\"johnd@example.com\").withNextOfKin(\"Daniel Meier, Husband, 81273546\")","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"nehcuy"},"content":"            .withPatientType(PatientTypes.INPATIENT).withHospitalWing(\"south\").withFloorNumber(1).withWardNumber(\"B690\")","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"nehcuy"},"content":"            .withMedication(\"Paracetamol\", \"Xanax\").withPastAppointment(\"12-06-2022\", \"Paracetamol Ibuprofen\", \"Sick\")","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"nehcuy"},"content":"            .withPastAppointment(\"14-06-2022\", \"Chlormine Amoxycillin\", \"Sick\")","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"nehcuy"},"content":"            .withUpcomingAppointment(\"12-06-2022\").build();","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"            .withEmail(\"heinz@example.com\").withNextOfKin(\"Charlie Pauline, Brother, 81273645\")","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"            .withPatientType(PatientTypes.OUTPATIENT).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"            .withEmail(\"cornelia@example.com\").withNextOfKin(\"Benson Meier, Husband, 81236848\")","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"            .withPatientType(PatientTypes.INPATIENT).withHospitalWing(\"south\")","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"nehcuy"},"content":"            .withFloorNumber(1).withWardNumber(\"A123\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"94822245\")","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"            .withEmail(\"werner@example.com\").withNextOfKin(\"Charles Meyer, Husband, 83646756\")","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"            .withPatientType(PatientTypes.OUTPATIENT).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"94824275\")","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"nehcuy"},"content":"            .withEmail(\"lydia@example.com\").withNextOfKin(\"Violet Kunz, Daughter, 92725635\")","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"            .withPatientType(PatientTypes.INPATIENT).withHospitalWing(\"north\")","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"nehcuy"},"content":"            .withFloorNumber(2).withWardNumber(\"F528\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"94824424\")","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"            .withEmail(\"anna@example.com\").withNextOfKin(\"Charlie Worst, Son, 92347462\")","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"            .withPatientType(PatientTypes.OUTPATIENT).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"84824245\")","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"Charles1026"},"content":"            .withEmail(\"stefan@example.com\").withNextOfKin(\"Nooh Meier, Sister, 92346127\")","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"Charles1026"},"content":"            .withPatientType(PatientTypes.OUTPATIENT).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"Charles1026"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"84821631\")","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"Charles1026"},"content":"            .withEmail(\"hans@example.com\").withNextOfKin(\"Nooh Meier, Sister, 92346127\")","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"Charles1026"},"content":"            .withPatientType(PatientTypes.INPATIENT).withHospitalWing(\"east\")","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"nehcuy"},"content":"            .withFloorNumber(1).withWardNumber(\"G490\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"            .withEmail(VALID_EMAIL_AMY).withNextOfKin(VALID_NEXT_OF_KIN_AMY)","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"Charles1026"},"content":"            .withPatientType(PatientTypes.parsePatientType(VALID_PATIENT_TYPE_AMY))","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"Charles1026"},"content":"            .withHospitalWing(VALID_HOSPITAL_WING_AMY).withFloorNumber(Integer.valueOf(VALID_FLOOR_NUMBER_AMY))","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"nehcuy"},"content":"            .withWardNumber(VALID_WARD_NUMBER_AMY).withMedication(VALID_MEDICATION_IBUPROFEN).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"Charles1026"},"content":"            .withEmail(VALID_EMAIL_BOB).withNextOfKin(VALID_NEXT_OF_KIN_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"Charles1026"},"content":"            .withPatientType(PatientTypes.parsePatientType(VALID_PATIENT_TYPE_BOB))","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"Charles1026"},"content":"            .withMedication().build();","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"nehcuy":9,"Charles1026":36,"PeiYee88":1,"-":49,"kxrt":3}}]
